{
  "version": 3,
  "sources": ["../../earcut/src/earcut.js", "../../fast-xml-parser/src/util.js", "../../fast-xml-parser/src/validator.js", "../../fast-xml-parser/src/xmlparser/OptionsBuilder.js", "../../fast-xml-parser/src/xmlparser/xmlNode.js", "../../fast-xml-parser/src/xmlparser/DocTypeReader.js", "../../strnum/strnum.js", "../../fast-xml-parser/src/xmlparser/OrderedObjParser.js", "../../fast-xml-parser/src/xmlparser/node2json.js", "../../fast-xml-parser/src/xmlparser/XMLParser.js", "../../fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js", "../../fast-xml-parser/src/xmlbuilder/json2xml.js", "../../fast-xml-parser/src/fxp.js", "../../@deck.gl/geo-layers/node_modules/long/dist/long.js", "../../jszip/dist/jszip.min.js", "../../pako/lib/utils/common.js", "../../pako/lib/zlib/trees.js", "../../pako/lib/zlib/adler32.js", "../../pako/lib/zlib/crc32.js", "../../pako/lib/zlib/messages.js", "../../pako/lib/zlib/deflate.js", "../../pako/lib/utils/strings.js", "../../pako/lib/zlib/zstream.js", "../../pako/lib/deflate.js", "../../pako/lib/zlib/inffast.js", "../../pako/lib/zlib/inftrees.js", "../../pako/lib/zlib/inflate.js", "../../pako/lib/zlib/constants.js", "../../pako/lib/zlib/gzheader.js", "../../pako/lib/inflate.js", "../../pako/index.js", "browser-external:zlib", "../../snappyjs/snappy_decompressor.js", "../../snappyjs/snappy_compressor.js", "../../snappyjs/index.js", "../../ieee754/index.js", "../../pbf/index.js", "../../@deck.gl/layers/dist/arc-layer/arc-layer-vertex.glsl.js", "../../@deck.gl/layers/dist/arc-layer/arc-layer-fragment.glsl.js", "../../@deck.gl/layers/dist/arc-layer/arc-layer.js", "../../@deck.gl/layers/dist/bitmap-layer/create-mesh.js", "../../@deck.gl/layers/dist/bitmap-layer/bitmap-layer-vertex.js", "../../@deck.gl/layers/dist/bitmap-layer/bitmap-layer-fragment.js", "../../@deck.gl/layers/dist/bitmap-layer/bitmap-layer.js", "../../@deck.gl/layers/dist/icon-layer/icon-layer-vertex.glsl.js", "../../@deck.gl/layers/dist/icon-layer/icon-layer-fragment.glsl.js", "../../@deck.gl/layers/dist/icon-layer/icon-manager.js", "../../@deck.gl/layers/dist/icon-layer/icon-layer.js", "../../@deck.gl/layers/dist/line-layer/line-layer-vertex.glsl.js", "../../@deck.gl/layers/dist/line-layer/line-layer-fragment.glsl.js", "../../@deck.gl/layers/dist/line-layer/line-layer.js", "../../@deck.gl/layers/dist/point-cloud-layer/point-cloud-layer-vertex.glsl.js", "../../@deck.gl/layers/dist/point-cloud-layer/point-cloud-layer-fragment.glsl.js", "../../@deck.gl/layers/dist/point-cloud-layer/point-cloud-layer.js", "../../@deck.gl/layers/dist/scatterplot-layer/scatterplot-layer-vertex.glsl.js", "../../@deck.gl/layers/dist/scatterplot-layer/scatterplot-layer-fragment.glsl.js", "../../@deck.gl/layers/dist/scatterplot-layer/scatterplot-layer.js", "../../@math.gl/polygon/dist/polygon-utils.js", "../../@math.gl/polygon/dist/earcut.js", "../../@math.gl/polygon/dist/utils.js", "../../@math.gl/polygon/dist/lineclip.js", "../../@math.gl/polygon/dist/cut-by-grid.js", "../../@math.gl/polygon/dist/cut-by-mercator-bounds.js", "../../@deck.gl/layers/dist/column-layer/column-geometry.js", "../../@deck.gl/layers/dist/column-layer/column-layer-vertex.glsl.js", "../../@deck.gl/layers/dist/column-layer/column-layer-fragment.glsl.js", "../../@deck.gl/layers/dist/column-layer/column-layer.js", "../../@deck.gl/layers/dist/column-layer/grid-cell-layer.js", "../../@deck.gl/layers/dist/path-layer/path.js", "../../@deck.gl/layers/dist/path-layer/path-tesselator.js", "../../@deck.gl/layers/dist/path-layer/path-layer-vertex.glsl.js", "../../@deck.gl/layers/dist/path-layer/path-layer-fragment.glsl.js", "../../@deck.gl/layers/dist/path-layer/path-layer.js", "../../@deck.gl/layers/dist/solid-polygon-layer/polygon.js", "../../@deck.gl/layers/dist/solid-polygon-layer/polygon-tesselator.js", "../../@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.js", "../../@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-vertex-top.glsl.js", "../../@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-vertex-side.glsl.js", "../../@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer-fragment.glsl.js", "../../@deck.gl/layers/dist/solid-polygon-layer/solid-polygon-layer.js", "../../@deck.gl/layers/dist/utils.js", "../../@deck.gl/layers/dist/polygon-layer/polygon-layer.js", "../../@deck.gl/layers/dist/geojson-layer/geojson-binary.js", "../../@deck.gl/layers/dist/text-layer/multi-icon-layer/multi-icon-layer-fragment.glsl.js", "../../@deck.gl/layers/dist/text-layer/multi-icon-layer/multi-icon-layer.js", "../../@mapbox/tiny-sdf/index.js", "../../@deck.gl/layers/dist/text-layer/utils.js", "../../@deck.gl/layers/dist/text-layer/lru-cache.js", "../../@deck.gl/layers/dist/text-layer/font-atlas-manager.js", "../../@deck.gl/layers/dist/text-layer/text-background-layer/text-background-layer-vertex.glsl.js", "../../@deck.gl/layers/dist/text-layer/text-background-layer/text-background-layer-fragment.glsl.js", "../../@deck.gl/layers/dist/text-layer/text-background-layer/text-background-layer.js", "../../@deck.gl/layers/dist/text-layer/text-layer.js", "../../@deck.gl/layers/dist/geojson-layer/sub-layer-map.js", "../../@deck.gl/layers/dist/geojson-layer/geojson.js", "../../@deck.gl/layers/dist/geojson-layer/geojson-layer-props.js", "../../@deck.gl/layers/dist/geojson-layer/geojson-layer.js", "../../@loaders.gl/xml/dist/sax-ts/sax.js", "../../@loaders.gl/xml/dist/lib/xml-utils/uncapitalize.js", "../../@loaders.gl/xml/dist/lib/parsers/parse-xml.js", "../../@loaders.gl/xml/dist/xml-loader.js", "../../@loaders.gl/xml/dist/html-loader.js", "../../@loaders.gl/wms/dist/lib/parsers/wms/parse-wms-error.js", "../../@loaders.gl/wms/dist/wms-error-loader.js", "../../@loaders.gl/wms/dist/lib/parsers/xml/parse-xml-helpers.js", "../../@loaders.gl/wms/dist/lib/parsers/wms/parse-wms-capabilities.js", "../../@loaders.gl/wms/dist/wms-capabilities-loader.js", "../../@loaders.gl/wms/dist/lib/parsers/wms/parse-wms-features.js", "../../@loaders.gl/wms/dist/wip/wms-feature-info-loader.js", "../../@loaders.gl/wms/dist/lib/parsers/wms/parse-wms-layer-description.js", "../../@loaders.gl/wms/dist/wip/wms-layer-description-loader.js", "../../@loaders.gl/wms/dist/lib/parsers/gml/deep-strict-equal.js", "../../@turf/helpers/main.es.js", "../../@loaders.gl/wms/dist/lib/services/create-image-service.js", "../../@loaders.gl/wms/dist/services/ogc/wms-service.js", "../../@loaders.gl/wms/dist/lib/services/image-service.js", "../../@loaders.gl/wms/dist/services/arcgis/arcgis-image-service.js", "../../@loaders.gl/wms/dist/services/create-image-source.js", "../../@deck.gl/geo-layers/dist/wms-layer/utils.js", "../../@deck.gl/geo-layers/dist/wms-layer/wms-layer.js", "../../@deck.gl/geo-layers/dist/great-circle-layer/great-circle-layer.js", "../../@deck.gl/geo-layers/dist/geo-cell-layer/GeoCellLayer.js", "../../@deck.gl/geo-layers/dist/s2-layer/s2-geometry.js", "../../@deck.gl/geo-layers/dist/s2-layer/s2-utils.js", "../../@deck.gl/geo-layers/dist/s2-layer/s2-layer.js", "../../@deck.gl/geo-layers/dist/quadkey-layer/quadkey-utils.js", "../../@deck.gl/geo-layers/dist/quadkey-layer/quadkey-layer.js", "../../@deck.gl/geo-layers/dist/tileset-2d/tile-2d-header.js", "../../@math.gl/culling/dist/constants.js", "../../@math.gl/culling/dist/lib/bounding-volumes/axis-aligned-bounding-box.js", "../../@math.gl/culling/dist/lib/bounding-volumes/bounding-sphere.js", "../../@math.gl/culling/dist/lib/bounding-volumes/oriented-bounding-box.js", "../../@math.gl/culling/dist/lib/plane.js", "../../@math.gl/culling/dist/lib/culling-volume.js", "../../@math.gl/culling/dist/lib/perspective-off-center-frustum.js", "../../@math.gl/culling/dist/lib/algorithms/bounding-sphere-from-points.js", "../../@math.gl/culling/dist/lib/algorithms/compute-eigen-decomposition.js", "../../@math.gl/culling/dist/lib/algorithms/bounding-box-from-points.js", "../../@deck.gl/geo-layers/dist/tileset-2d/tile-2d-traversal.js", "../../@deck.gl/geo-layers/dist/tileset-2d/utils.js", "../../@deck.gl/geo-layers/dist/tileset-2d/memoize.js", "../../@deck.gl/geo-layers/dist/tileset-2d/tileset-2d.js", "../../@deck.gl/geo-layers/dist/tile-layer/tile-layer.js", "../../@deck.gl/geo-layers/dist/trips-layer/trips-layer.js", "../../h3-js/dist/libh3-browser.js", "../../h3-js/lib/bindings.js", "../../h3-js/lib/errors.js", "../../h3-js/lib/h3core.js", "../../@deck.gl/geo-layers/dist/h3-layers/h3-utils.js", "../../@deck.gl/geo-layers/dist/h3-layers/h3-hexagon-layer.js", "../../@deck.gl/geo-layers/dist/h3-layers/h3-cluster-layer.js", "../../@deck.gl/mesh-layers/dist/utils/matrix.js", "../../@deck.gl/mesh-layers/dist/simple-mesh-layer/simple-mesh-layer-vertex.glsl.js", "../../@deck.gl/mesh-layers/dist/simple-mesh-layer/simple-mesh-layer-fragment.glsl.js", "../../@deck.gl/mesh-layers/dist/simple-mesh-layer/simple-mesh-layer.js", "../../@luma.gl/gltf/dist/pbr/parse-pbr-material.js", "../../@loaders.gl/textures/dist/lib/utils/version.js", "../../@loaders.gl/textures/dist/lib/parsers/basis-module-loader.js", "../../@loaders.gl/textures/dist/lib/gl-extensions.js", "../../@loaders.gl/textures/dist/lib/utils/texture-formats.js", "../../ktx-parse/src/constants.ts", "../../ktx-parse/src/container.ts", "../../ktx-parse/src/buffer-reader.ts", "../../ktx-parse/src/util.ts", "../../ktx-parse/src/read.ts", "../../ktx-parse/src/write.ts", "../../@loaders.gl/textures/dist/lib/utils/extract-mipmap-images.js", "../../@loaders.gl/textures/dist/lib/utils/ktx-format-helper.js", "../../@loaders.gl/textures/dist/lib/parsers/parse-ktx.js", "../../@loaders.gl/textures/dist/lib/parsers/parse-basis.js", "../../@loaders.gl/textures/dist/basis-loader.js", "../../@loaders.gl/textures/dist/lib/parsers/parse-dds.js", "../../@loaders.gl/textures/dist/lib/parsers/parse-pvr.js", "../../@loaders.gl/textures/dist/lib/parsers/parse-compressed-texture.js", "../../@loaders.gl/textures/dist/compressed-texture-loader.js", "../../@loaders.gl/textures/dist/lib/parsers/parse-npy.js", "../../@loaders.gl/textures/dist/npy-loader.js", "../../@luma.gl/gltf/dist/gltf/gltf-animator.js", "../../@luma.gl/gltf/dist/gltf/create-gltf-model.js", "../../@luma.gl/gltf/dist/gltf/gltf-instantiator.js", "../../@luma.gl/gltf/dist/gltf/create-gltf-objects.js", "../../@loaders.gl/gltf/dist/lib/extensions/EXT_mesh_features.js", "../../@loaders.gl/gltf/dist/lib/utils/assert.js", "../../@loaders.gl/gltf/dist/lib/gltf-utils/gltf-constants.js", "../../@loaders.gl/gltf/dist/lib/gltf-utils/gltf-utils.js", "../../@loaders.gl/gltf/dist/lib/gltf-utils/get-typed-array.js", "../../@loaders.gl/gltf/dist/lib/api/gltf-scenegraph.js", "../../@loaders.gl/gltf/dist/lib/extensions/utils/3d-tiles-utils.js", "../../@loaders.gl/gltf/dist/lib/extensions/EXT_structural_metadata.js", "../../@loaders.gl/gltf/dist/lib/extensions/deprecated/EXT_feature_metadata.js", "../../@loaders.gl/gltf/dist/lib/utils/version.js", "../../@loaders.gl/gltf/dist/lib/parsers/parse-glb.js", "../../@loaders.gl/gltf/dist/lib/gltf-utils/resolve-url.js", "../../@loaders.gl/gltf/dist/lib/extensions/EXT_meshopt_compression.js", "../../@loaders.gl/gltf/dist/meshopt/meshopt-decoder.js", "../../@loaders.gl/gltf/dist/lib/extensions/EXT_texture_webp.js", "../../@loaders.gl/gltf/dist/lib/extensions/KHR_texture_basisu.js", "../../@loaders.gl/gltf/dist/lib/extensions/KHR_draco_mesh_compression.js", "../../@loaders.gl/draco/dist/lib/utils/version.js", "../../@loaders.gl/draco/dist/draco-loader.js", "../../@loaders.gl/draco/dist/lib/utils/get-draco-schema.js", "../../@loaders.gl/draco/dist/lib/draco-parser.js", "../../@loaders.gl/draco/dist/lib/draco-module-loader.js", "../../@loaders.gl/draco/dist/index.js", "../../@loaders.gl/gltf/dist/lib/gltf-utils/gltf-attribute-utils.js", "../../@loaders.gl/gltf/dist/lib/extensions/KHR_texture_transform.js", "../../@loaders.gl/gltf/dist/lib/extensions/deprecated/KHR_lights_punctual.js", "../../@loaders.gl/gltf/dist/lib/extensions/deprecated/KHR_materials_unlit.js", "../../@loaders.gl/gltf/dist/lib/extensions/deprecated/KHR_techniques_webgl.js", "../../@loaders.gl/gltf/dist/lib/api/gltf-extensions.js", "../../@loaders.gl/gltf/dist/lib/extensions/KHR_binary_gltf.js", "../../@loaders.gl/gltf/dist/lib/api/normalize-gltf-v1.js", "../../@loaders.gl/gltf/dist/lib/parsers/parse-gltf.js", "../../@loaders.gl/gltf/dist/gltf-loader.js", "../../@loaders.gl/gltf/dist/lib/api/post-process-gltf.js", "../../@deck.gl/mesh-layers/dist/scenegraph-layer/gltf-utils.js", "../../@deck.gl/mesh-layers/dist/scenegraph-layer/scenegraph-layer-vertex.glsl.js", "../../@deck.gl/mesh-layers/dist/scenegraph-layer/scenegraph-layer-fragment.glsl.js", "../../@deck.gl/mesh-layers/dist/scenegraph-layer/scenegraph-layer.js", "../../@deck.gl/geo-layers/dist/mesh-layer/mesh-layer-vertex.glsl.js", "../../@deck.gl/geo-layers/dist/mesh-layer/mesh-layer-fragment.glsl.js", "../../@deck.gl/geo-layers/dist/mesh-layer/mesh-layer.js", "../../@math.gl/geospatial/dist/constants.js", "../../@math.gl/geospatial/dist/type-utils.js", "../../@math.gl/geospatial/dist/ellipsoid/helpers/ellipsoid-transform.js", "../../@math.gl/geospatial/dist/ellipsoid/helpers/scale-to-geodetic-surface.js", "../../@math.gl/geospatial/dist/ellipsoid/ellipsoid.js", "../../@loaders.gl/tiles/dist/utils/doubly-linked-list-node.js", "../../@loaders.gl/tiles/dist/utils/doubly-linked-list.js", "../../@loaders.gl/tiles/dist/tileset/tileset-cache.js", "../../@loaders.gl/tiles/dist/tileset/helpers/transform-utils.js", "../../@loaders.gl/tiles/dist/tileset/helpers/frame-state.js", "../../@loaders.gl/tiles/dist/tileset/helpers/zoom.js", "../../@loaders.gl/tiles/dist/constants.js", "../../@loaders.gl/tiles/dist/tileset/helpers/bounding-volume.js", "../../@loaders.gl/tiles/dist/tileset/helpers/tiles-3d-lod.js", "../../@loaders.gl/tiles/dist/tileset/helpers/i3s-lod.js", "../../@loaders.gl/tiles/dist/tileset/helpers/3d-tiles-options.js", "../../@loaders.gl/tiles/dist/utils/managed-array.js", "../../@loaders.gl/tiles/dist/tileset/tileset-traverser.js", "../../@loaders.gl/tiles/dist/tileset/tile-3d.js", "../../@loaders.gl/tiles/dist/tileset/format-3d-tiles/tileset-3d-traverser.js", "../../@loaders.gl/tiles/dist/tileset/format-i3s/i3s-pending-tiles-register.js", "../../@loaders.gl/tiles/dist/tileset/format-i3s/i3s-tile-manager.js", "../../@loaders.gl/tiles/dist/tileset/format-i3s/i3s-tileset-traverser.js", "../../@loaders.gl/tiles/dist/tileset/tileset-3d.js", "../../@loaders.gl/3d-tiles/dist/lib/utils/version.js", "../../@loaders.gl/3d-tiles/dist/lib/constants.js", "../../@loaders.gl/3d-tiles/dist/lib/parsers/helpers/parse-utils.js", "../../@loaders.gl/math/dist/geometry/constants.js", "../../@loaders.gl/math/dist/geometry/gl/gl-type.js", "../../@loaders.gl/math/dist/geometry/utils/assert.js", "../../@loaders.gl/math/dist/geometry/colors/rgb565.js", "../../@loaders.gl/math/dist/geometry/compression/attribute-compression.js", "../../@loaders.gl/3d-tiles/dist/lib/classes/tile-3d-feature-table.js", "../../@loaders.gl/3d-tiles/dist/lib/classes/helpers/tile-3d-accessor-utils.js", "../../@loaders.gl/3d-tiles/dist/lib/classes/tile-3d-batch-table-hierarchy.js", "../../@loaders.gl/3d-tiles/dist/lib/classes/tile-3d-batch-table.js", "../../@loaders.gl/3d-tiles/dist/lib/parsers/helpers/parse-3d-tile-header.js", "../../@loaders.gl/3d-tiles/dist/lib/parsers/helpers/parse-3d-tile-tables.js", "../../@loaders.gl/3d-tiles/dist/lib/parsers/helpers/normalize-3d-tile-colors.js", "../../@loaders.gl/3d-tiles/dist/lib/parsers/helpers/normalize-3d-tile-normals.js", "../../@loaders.gl/3d-tiles/dist/lib/parsers/helpers/normalize-3d-tile-positions.js", "../../@loaders.gl/3d-tiles/dist/lib/parsers/parse-3d-tile-point-cloud.js", "../../@loaders.gl/3d-tiles/dist/lib/parsers/helpers/parse-3d-tile-gltf-view.js", "../../@loaders.gl/3d-tiles/dist/lib/parsers/parse-3d-tile-batched-model.js", "../../@loaders.gl/3d-tiles/dist/lib/parsers/parse-3d-tile-instanced-model.js", "../../@loaders.gl/3d-tiles/dist/lib/parsers/parse-3d-tile-composite.js", "../../@loaders.gl/3d-tiles/dist/lib/parsers/parse-3d-tile-gltf.js", "../../@loaders.gl/3d-tiles/dist/lib/parsers/parse-3d-tile.js", "../../@loaders.gl/3d-tiles/dist/lib/parsers/helpers/parse-3d-tile-subtree.js", "../../@loaders.gl/3d-tiles/dist/tile-3d-subtree-loader.js", "../../long/index.js", "../../@loaders.gl/3d-tiles/dist/lib/utils/s2/s2-token-functions.js", "../../@loaders.gl/3d-tiles/dist/lib/utils/s2/s2geometry/s2-geometry.js", "../../@loaders.gl/3d-tiles/dist/lib/utils/s2/converters/s2-to-boundary.js", "../../@loaders.gl/3d-tiles/dist/lib/utils/s2/s2geometry/s2-cell-utils.js", "../../@loaders.gl/3d-tiles/dist/lib/utils/s2/s2-geometry-functions.js", "../../@loaders.gl/3d-tiles/dist/lib/utils/s2/converters/s2-to-region.js", "../../@loaders.gl/3d-tiles/dist/lib/utils/s2/converters/s2-to-obb-points.js", "../../@loaders.gl/3d-tiles/dist/lib/utils/obb/s2-corners-to-obb.js", "../../@loaders.gl/3d-tiles/dist/lib/parsers/helpers/parse-3d-implicit-tiles.js", "../../@loaders.gl/3d-tiles/dist/lib/parsers/parse-3d-tile-header.js", "../../@loaders.gl/3d-tiles/dist/tiles-3d-loader.js", "../../@loaders.gl/3d-tiles/dist/lib/ion/ion.js", "../../@loaders.gl/3d-tiles/dist/cesium-ion-loader.js", "../../@loaders.gl/zip/dist/zip-loader.js", "../../@loaders.gl/zip/dist/zip-writer.js", "../../@loaders.gl/zip/dist/parse-zip/zip64-info-generation.js", "../../@loaders.gl/zip/dist/parse-zip/end-of-central-directory.js", "../../@loaders.gl/zip/dist/parse-zip/cd-file-header.js", "../../@loaders.gl/zip/dist/parse-zip/local-file-header.js", "../../@loaders.gl/crypto/dist/lib/algorithms/crc32.js", "../../@loaders.gl/crypto/dist/lib/algorithms/crc32c.js", "../../@loaders.gl/crypto/dist/lib/algorithms/md5-wasm.js", "../../@loaders.gl/compression/dist/lib/deflate-compression.js", "../../@loaders.gl/compression/dist/brotli/decode.js", "../../@loaders.gl/compression/dist/lib/brotli-compression.js", "../../@loaders.gl/compression/dist/lib/snappy-compression.js", "../../@deck.gl/geo-layers/dist/tile-3d-layer/tile-3d-layer.js", "../../@loaders.gl/terrain/dist/lib/decode-quantized-mesh.js", "../../@loaders.gl/terrain/dist/lib/helpers/skirt.js", "../../@loaders.gl/terrain/dist/lib/parse-quantized-mesh.js", "../../@mapbox/martini/index.js", "../../@loaders.gl/terrain/dist/lib/delatin/index.js", "../../@loaders.gl/terrain/dist/lib/parse-terrain.js", "../../@loaders.gl/terrain/dist/lib/utils/version.js", "../../@loaders.gl/terrain/dist/terrain-loader.js", "../../@loaders.gl/terrain/dist/quantized-mesh-loader.js", "../../@loaders.gl/terrain/dist/index.js", "../../@deck.gl/geo-layers/dist/terrain-layer/terrain-layer.js", "../../@deck.gl/extensions/dist/brushing/shader-module.js", "../../@deck.gl/extensions/dist/brushing/brushing-extension.js", "../../@deck.gl/extensions/dist/data-filter/shader-module.js", "../../@deck.gl/extensions/dist/data-filter/aggregator.js", "../../@deck.gl/extensions/dist/data-filter/data-filter-extension.js", "../../@deck.gl/extensions/dist/fp64/project64.glsl.js", "../../@deck.gl/extensions/dist/fp64/project64.js", "../../@deck.gl/extensions/dist/fp64/fp64-extension.js", "../../@deck.gl/extensions/dist/path-style/shaders.glsl.js", "../../@deck.gl/extensions/dist/path-style/path-style-extension.js", "../../@deck.gl/extensions/dist/fill-style/shader-module.js", "../../@deck.gl/extensions/dist/fill-style/fill-style-extension.js", "../../@deck.gl/extensions/dist/clip/clip-extension.js", "../../@deck.gl/extensions/dist/collision-filter/shader-module.js", "../../@deck.gl/extensions/dist/collision-filter/collision-filter-pass.js", "../../@deck.gl/extensions/dist/collision-filter/collision-filter-effect.js", "../../@deck.gl/extensions/dist/collision-filter/collision-filter-extension.js", "../../@deck.gl/extensions/dist/mask/shader-module.js", "../../@deck.gl/extensions/dist/mask/mask-pass.js", "../../@deck.gl/extensions/dist/utils/projection-utils.js", "../../@deck.gl/extensions/dist/mask/mask-effect.js", "../../@deck.gl/extensions/dist/mask/mask-extension.js", "../../@deck.gl/extensions/dist/terrain/shader-module.js", "../../@deck.gl/extensions/dist/terrain/utils.js", "../../@deck.gl/extensions/dist/terrain/terrain-cover.js", "../../@deck.gl/extensions/dist/terrain/terrain-pass.js", "../../@deck.gl/extensions/dist/terrain/terrain-picking-pass.js", "../../@deck.gl/extensions/dist/terrain/height-map-builder.js", "../../@deck.gl/extensions/dist/terrain/terrain-effect.js", "../../@deck.gl/extensions/dist/terrain/terrain-extension.js", "../../@loaders.gl/gis/dist/lib/binary-features/flat-geojson-to-binary.js", "../../@loaders.gl/gis/dist/lib/binary-features/binary-to-geojson.js", "../../@loaders.gl/mvt/dist/lib/parse-mvt.js", "../../@loaders.gl/mvt/dist/helpers/mapbox-util-functions.js", "../../@loaders.gl/mvt/dist/lib/mapbox-vector-tile/vector-tile-feature.js", "../../@loaders.gl/mvt/dist/lib/mapbox-vector-tile/vector-tile-layer.js", "../../@loaders.gl/mvt/dist/lib/mapbox-vector-tile/vector-tile.js", "../../@loaders.gl/mvt/dist/helpers/binary-util-functions.js", "../../@loaders.gl/mvt/dist/lib/binary-vector-tile/vector-tile-feature.js", "../../@loaders.gl/mvt/dist/lib/binary-vector-tile/vector-tile-layer.js", "../../@loaders.gl/mvt/dist/lib/binary-vector-tile/vector-tile.js", "../../@loaders.gl/mvt/dist/mvt-loader.js", "../../@loaders.gl/mvt/dist/mvt-source.js", "../../@deck.gl/geo-layers/dist/mvt-layer/coordinate-transform.js", "../../@deck.gl/geo-layers/dist/mvt-layer/find-index-binary.js", "../../@deck.gl/geo-layers/dist/mvt-layer/mvt-layer.js", "../../@deck.gl/geo-layers/dist/geohash-layer/geohash-utils.js", "../../@deck.gl/geo-layers/dist/geohash-layer/geohash-layer.js"],
  "sourcesContent": ["'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n", "'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n", "'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n", "\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;", "'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;", "const util = require('../util');\n\n//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && isEntity(xmlData, i)){\n                    i += 7; \n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ validateEntityName(entityName) ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && isElement(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isAttlist(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isNotation(xmlData, i)) i += 9;//Not supported\n                else if( isComment)                         comment = true;\n                else                                        throw new Error(\"Invalid DOCTYPE\");\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nfunction readEntityExp(xmlData,i){\n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n    \n    //read EntityName\n    let entityName = \"\";\n    for (; i < xmlData.length && (xmlData[i] !== \"'\" && xmlData[i] !== '\"' ); i++) {\n        // if(xmlData[i] === \" \") continue;\n        // else \n        entityName += xmlData[i];\n    }\n    entityName = entityName.trim();\n    if(entityName.indexOf(\" \") !== -1) throw new Error(\"External entites are not supported\");\n\n    //read Entity Value\n    const startChar = xmlData[i++];\n    let val = \"\"\n    for (; i < xmlData.length && xmlData[i] !== startChar ; i++) {\n        val += xmlData[i];\n    }\n    return [entityName, val, i];\n}\n\nfunction isComment(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === '-' &&\n    xmlData[i+3] === '-') return true\n    return false\n}\nfunction isEntity(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'N' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'I' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'Y') return true\n    return false\n}\nfunction isElement(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'L' &&\n    xmlData[i+4] === 'E' &&\n    xmlData[i+5] === 'M' &&\n    xmlData[i+6] === 'E' &&\n    xmlData[i+7] === 'N' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\n\nfunction isAttlist(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'A' &&\n    xmlData[i+3] === 'T' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'L' &&\n    xmlData[i+6] === 'I' &&\n    xmlData[i+7] === 'S' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\nfunction isNotation(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'N' &&\n    xmlData[i+3] === 'O' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'A' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'I' &&\n    xmlData[i+8] === 'O' &&\n    xmlData[i+9] === 'N') return true\n    return false\n}\n\nfunction validateEntityName(name){\n    if (util.isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n\nmodule.exports = readDocType;\n", "const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n", "'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\n// const regx =\n//   '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n//   .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n      \"num_dec\": { regex: /&#([0-9]{1,7});/g, val : (_, str) => String.fromCharCode(Number.parseInt(str, 10)) },\n      \"num_hex\": { regex: /&#x([0-9a-fA-F]{1,6});/g, val : (_, str) => String.fromCharCode(Number.parseInt(str, 16)) },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath)\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);\n        if(val == undefined) val = \"\";\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        const rawTagName = result.rawTagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${rawTagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath)\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath){\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  }else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode);\n  }else{\n    currentNode.addChild(childNode);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substring(0, separatorIndex);\n    tagExp = tagExp.substring(separatorIndex + 1).trimStart();\n  }\n\n  const rawTagName = tagName;\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n    rawTagName: rawTagName,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n", "'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\nexports.prettify = prettify;\n", "const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;", "const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        if(tagName === undefined) continue;\n\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if(!obj.hasOwnProperty(key)) continue;\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            if(!attrMap.hasOwnProperty(attr)) continue;\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\nmodule.exports = toXml;\n", "'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if(!Object.prototype.hasOwnProperty.call(jObj, key)) continue;\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node only if it is not an attribute\n      if (this.isAttribute(key)) {\n        val += '';\n      }\n    } else if (jObj[key] === null) {\n      // null attribute should be ignored by the attribute list, but should not cause the tag closing\n      if (this.isAttribute(key)) {\n        val += '';\n      } else if (key[0] === '?') {\n        val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      } else {\n        val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      }\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          if(this.options.oneListGroup ){\n            listTagVal += this.j2x(item, level + 1).val;\n          }else{\n            listTagVal += this.processTextOrObjNode(item, key, level)\n          }\n        } else {\n          listTagVal += this.buildTextValNode(item, key, '', level);\n        }\n      }\n      if(this.options.oneListGroup){\n        listTagVal = this.buildObjectNode(listTagVal, key, '', level);\n      }\n      val += listTagVal;\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    // attrStr is an empty string in case the attribute came as undefined or null\n    if ((attrStr || attrStr === '') && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n", "'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}", "/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n Copyright 2009 The Closure Library Authors. All Rights Reserved.\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/long.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"Long\"] = factory();\r\n\r\n})(this, function() {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n     *  See the from* functions below for more convenient ways of constructing Longs.\r\n     * @exports Long\r\n     * @class A Long class for representing a 64 bit two's-complement integer value.\r\n     * @param {number} low The low (signed) 32 bits of the long\r\n     * @param {number} high The high (signed) 32 bits of the long\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @constructor\r\n     */\r\n    function Long(low, high, unsigned) {\r\n\r\n        /**\r\n         * The low 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.low = low | 0;\r\n\r\n        /**\r\n         * The high 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.high = high | 0;\r\n\r\n        /**\r\n         * Whether unsigned or not.\r\n         * @type {boolean}\r\n         */\r\n        this.unsigned = !!unsigned;\r\n    }\r\n\r\n    // The internal representation of a long is the two given signed, 32-bit values.\r\n    // We use 32-bit pieces because these are the size of integers on which\r\n    // Javascript performs bit-operations.  For operations like addition and\r\n    // multiplication, we split each number into 16 bit pieces, which can easily be\r\n    // multiplied within Javascript's floating-point representation without overflow\r\n    // or change in sign.\r\n    //\r\n    // In the algorithms below, we frequently reduce the negative case to the\r\n    // positive case by negating the input(s) and then post-processing the result.\r\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n    // a positive number, it overflows back into a negative).  Not handling this\r\n    // case would often result in infinite recursion.\r\n    //\r\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n    // methods on which they depend.\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a Long or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @private\r\n     */\r\n    Long.prototype.__isLong__;\r\n\r\n    Object.defineProperty(Long.prototype, \"__isLong__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    /**\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     * @inner\r\n     */\r\n    function isLong(obj) {\r\n        return (obj && obj[\"__isLong__\"]) === true;\r\n    }\r\n\r\n    /**\r\n     * Tests if the specified object is a Long.\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     */\r\n    Long.isLong = isLong;\r\n\r\n    /**\r\n     * A cache of the Long representations of small integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var INT_CACHE = {};\r\n\r\n    /**\r\n     * A cache of the Long representations of small unsigned integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var UINT_CACHE = {};\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromInt(value, unsigned) {\r\n        var obj, cachedObj, cache;\r\n        if (unsigned) {\r\n            value >>>= 0;\r\n            if (cache = (0 <= value && value < 256)) {\r\n                cachedObj = UINT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n            if (cache)\r\n                UINT_CACHE[value] = obj;\r\n            return obj;\r\n        } else {\r\n            value |= 0;\r\n            if (cache = (-128 <= value && value < 128)) {\r\n                cachedObj = INT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n            if (cache)\r\n                INT_CACHE[value] = obj;\r\n            return obj;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given 32 bit integer value.\r\n     * @function\r\n     * @param {number} value The 32 bit integer in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromInt = fromInt;\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromNumber(value, unsigned) {\r\n        if (isNaN(value) || !isFinite(value))\r\n            return unsigned ? UZERO : ZERO;\r\n        if (unsigned) {\r\n            if (value < 0)\r\n                return UZERO;\r\n            if (value >= TWO_PWR_64_DBL)\r\n                return MAX_UNSIGNED_VALUE;\r\n        } else {\r\n            if (value <= -TWO_PWR_63_DBL)\r\n                return MIN_VALUE;\r\n            if (value + 1 >= TWO_PWR_63_DBL)\r\n                return MAX_VALUE;\r\n        }\r\n        if (value < 0)\r\n            return fromNumber(-value, unsigned).neg();\r\n        return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     * @function\r\n     * @param {number} value The number in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromNumber = fromNumber;\r\n\r\n    /**\r\n     * @param {number} lowBits\r\n     * @param {number} highBits\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromBits(lowBits, highBits, unsigned) {\r\n        return new Long(lowBits, highBits, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n     *  assumed to use 32 bits.\r\n     * @function\r\n     * @param {number} lowBits The low 32 bits\r\n     * @param {number} highBits The high 32 bits\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromBits = fromBits;\r\n\r\n    /**\r\n     * @function\r\n     * @param {number} base\r\n     * @param {number} exponent\r\n     * @returns {number}\r\n     * @inner\r\n     */\r\n    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n    /**\r\n     * @param {string} str\r\n     * @param {(boolean|number)=} unsigned\r\n     * @param {number=} radix\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromString(str, unsigned, radix) {\r\n        if (str.length === 0)\r\n            throw Error('empty string');\r\n        if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n            return ZERO;\r\n        if (typeof unsigned === 'number') {\r\n            // For goog.math.long compatibility\r\n            radix = unsigned,\r\n            unsigned = false;\r\n        } else {\r\n            unsigned = !! unsigned;\r\n        }\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n\r\n        var p;\r\n        if ((p = str.indexOf('-')) > 0)\r\n            throw Error('interior hyphen');\r\n        else if (p === 0) {\r\n            return fromString(str.substring(1), unsigned, radix).neg();\r\n        }\r\n\r\n        // Do several (8) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n        var result = ZERO;\r\n        for (var i = 0; i < str.length; i += 8) {\r\n            var size = Math.min(8, str.length - i),\r\n                value = parseInt(str.substring(i, i + size), radix);\r\n            if (size < 8) {\r\n                var power = fromNumber(pow_dbl(radix, size));\r\n                result = result.mul(power).add(fromNumber(value));\r\n            } else {\r\n                result = result.mul(radixToPower);\r\n                result = result.add(fromNumber(value));\r\n            }\r\n        }\r\n        result.unsigned = unsigned;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representation of the given string, written using the specified radix.\r\n     * @function\r\n     * @param {string} str The textual representation of the Long\r\n     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromString = fromString;\r\n\r\n    /**\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromValue(val) {\r\n        if (val /* is compatible */ instanceof Long)\r\n            return val;\r\n        if (typeof val === 'number')\r\n            return fromNumber(val);\r\n        if (typeof val === 'string')\r\n            return fromString(val);\r\n        // Throws for non-objects, converts non-instanceof Long:\r\n        return fromBits(val.low, val.high, val.unsigned);\r\n    }\r\n\r\n    /**\r\n     * Converts the specified value to a Long.\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n     * @returns {!Long}\r\n     */\r\n    Long.fromValue = fromValue;\r\n\r\n    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n    // no runtime penalty for these.\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_16_DBL = 1 << 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24_DBL = 1 << 24;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ZERO = fromInt(0);\r\n\r\n    /**\r\n     * Signed zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.ZERO = ZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UZERO = fromInt(0, true);\r\n\r\n    /**\r\n     * Unsigned zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.UZERO = UZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ONE = fromInt(1);\r\n\r\n    /**\r\n     * Signed one.\r\n     * @type {!Long}\r\n     */\r\n    Long.ONE = ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UONE = fromInt(1, true);\r\n\r\n    /**\r\n     * Unsigned one.\r\n     * @type {!Long}\r\n     */\r\n    Long.UONE = UONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var NEG_ONE = fromInt(-1);\r\n\r\n    /**\r\n     * Signed negative one.\r\n     * @type {!Long}\r\n     */\r\n    Long.NEG_ONE = NEG_ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n    /**\r\n     * Maximum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_VALUE = MAX_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n    /**\r\n     * Maximum unsigned value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n    /**\r\n     * Minimum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MIN_VALUE = MIN_VALUE;\r\n\r\n    /**\r\n     * @alias Long.prototype\r\n     * @inner\r\n     */\r\n    var LongPrototype = Long.prototype;\r\n\r\n    /**\r\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toInt = function toInt() {\r\n        return this.unsigned ? this.low >>> 0 : this.low;\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toNumber = function toNumber() {\r\n        if (this.unsigned)\r\n            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a string written in the specified radix.\r\n     * @param {number=} radix Radix (2-36), defaults to 10\r\n     * @returns {string}\r\n     * @override\r\n     * @throws {RangeError} If `radix` is out of range\r\n     */\r\n    LongPrototype.toString = function toString(radix) {\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n        if (this.isZero())\r\n            return '0';\r\n        if (this.isNegative()) { // Unsigned Longs are never negative\r\n            if (this.eq(MIN_VALUE)) {\r\n                // We need to change the Long value before it can be negated, so we remove\r\n                // the bottom-most digit in this base and then recurse to do the rest.\r\n                var radixLong = fromNumber(radix),\r\n                    div = this.div(radixLong),\r\n                    rem1 = div.mul(radixLong).sub(this);\r\n                return div.toString(radix) + rem1.toInt().toString(radix);\r\n            } else\r\n                return '-' + this.neg().toString(radix);\r\n        }\r\n\r\n        // Do several (6) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n            rem = this;\r\n        var result = '';\r\n        while (true) {\r\n            var remDiv = rem.div(radixToPower),\r\n                intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n                digits = intval.toString(radix);\r\n            rem = remDiv;\r\n            if (rem.isZero())\r\n                return digits + result;\r\n            else {\r\n                while (digits.length < 6)\r\n                    digits = '0' + digits;\r\n                result = '' + digits + result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as a signed integer.\r\n     * @returns {number} Signed high bits\r\n     */\r\n    LongPrototype.getHighBits = function getHighBits() {\r\n        return this.high;\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned high bits\r\n     */\r\n    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n        return this.high >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as a signed integer.\r\n     * @returns {number} Signed low bits\r\n     */\r\n    LongPrototype.getLowBits = function getLowBits() {\r\n        return this.low;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned low bits\r\n     */\r\n    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n        return this.low >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the number of bits needed to represent the absolute value of this Long.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n        if (this.isNegative()) // Unsigned Longs are never negative\r\n            return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n        var val = this.high != 0 ? this.high : this.low;\r\n        for (var bit = 31; bit > 0; bit--)\r\n            if ((val & (1 << bit)) != 0)\r\n                break;\r\n        return this.high != 0 ? bit + 33 : bit + 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals zero.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isZero = function isZero() {\r\n        return this.high === 0 && this.low === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is negative.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isNegative = function isNegative() {\r\n        return !this.unsigned && this.high < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is positive.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isPositive = function isPositive() {\r\n        return this.unsigned || this.high >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is odd.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isOdd = function isOdd() {\r\n        return (this.low & 1) === 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is even.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isEven = function isEven() {\r\n        return (this.low & 1) === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.equals = function equals(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n            return false;\r\n        return this.high === other.high && this.low === other.low;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.eq = LongPrototype.equals;\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.notEquals = function notEquals(other) {\r\n        return !this.eq(/* validates */ other);\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.neq = LongPrototype.notEquals;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThan = function lessThan(other) {\r\n        return this.comp(/* validates */ other) < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lt = LongPrototype.lessThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) <= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThan = function greaterThan(other) {\r\n        return this.comp(/* validates */ other) > 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.compare = function compare(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.eq(other))\r\n            return 0;\r\n        var thisNeg = this.isNegative(),\r\n            otherNeg = other.isNegative();\r\n        if (thisNeg && !otherNeg)\r\n            return -1;\r\n        if (!thisNeg && otherNeg)\r\n            return 1;\r\n        // At this point the sign bits are the same\r\n        if (!this.unsigned)\r\n            return this.sub(other).isNegative() ? -1 : 1;\r\n        // Both are positive if at least one is unsigned\r\n        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n    };\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.comp = LongPrototype.compare;\r\n\r\n    /**\r\n     * Negates this Long's value.\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.negate = function negate() {\r\n        if (!this.unsigned && this.eq(MIN_VALUE))\r\n            return MIN_VALUE;\r\n        return this.not().add(ONE);\r\n    };\r\n\r\n    /**\r\n     * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n     * @function\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.neg = LongPrototype.negate;\r\n\r\n    /**\r\n     * Returns the sum of this and the specified Long.\r\n     * @param {!Long|number|string} addend Addend\r\n     * @returns {!Long} Sum\r\n     */\r\n    LongPrototype.add = function add(addend) {\r\n        if (!isLong(addend))\r\n            addend = fromValue(addend);\r\n\r\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = addend.high >>> 16;\r\n        var b32 = addend.high & 0xFFFF;\r\n        var b16 = addend.low >>> 16;\r\n        var b00 = addend.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 + b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 + b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 + b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 + b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long.\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.subtract = function subtract(subtrahend) {\r\n        if (!isLong(subtrahend))\r\n            subtrahend = fromValue(subtrahend);\r\n        return this.add(subtrahend.neg());\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n     * @function\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.sub = LongPrototype.subtract;\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long.\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.multiply = function multiply(multiplier) {\r\n        if (this.isZero())\r\n            return ZERO;\r\n        if (!isLong(multiplier))\r\n            multiplier = fromValue(multiplier);\r\n        if (multiplier.isZero())\r\n            return ZERO;\r\n        if (this.eq(MIN_VALUE))\r\n            return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n        if (multiplier.eq(MIN_VALUE))\r\n            return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n        if (this.isNegative()) {\r\n            if (multiplier.isNegative())\r\n                return this.neg().mul(multiplier.neg());\r\n            else\r\n                return this.neg().mul(multiplier).neg();\r\n        } else if (multiplier.isNegative())\r\n            return this.mul(multiplier.neg()).neg();\r\n\r\n        // If both longs are small, use float multiplication\r\n        if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n            return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n        // We can skip products that would overflow.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = multiplier.high >>> 16;\r\n        var b32 = multiplier.high & 0xFFFF;\r\n        var b16 = multiplier.low >>> 16;\r\n        var b00 = multiplier.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 * b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 * b00;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c16 += a00 * b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 * b00;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a16 * b16;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a00 * b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n     * @function\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.mul = LongPrototype.multiply;\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n     *  unsigned if this Long is unsigned.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.divide = function divide(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        if (divisor.isZero())\r\n            throw Error('division by zero');\r\n        if (this.isZero())\r\n            return this.unsigned ? UZERO : ZERO;\r\n        var approx, rem, res;\r\n        if (!this.unsigned) {\r\n            // This section is only relevant for signed longs and is derived from the\r\n            // closure library as a whole.\r\n            if (this.eq(MIN_VALUE)) {\r\n                if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                    return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n                else if (divisor.eq(MIN_VALUE))\r\n                    return ONE;\r\n                else {\r\n                    // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                    var halfThis = this.shr(1);\r\n                    approx = halfThis.div(divisor).shl(1);\r\n                    if (approx.eq(ZERO)) {\r\n                        return divisor.isNegative() ? ONE : NEG_ONE;\r\n                    } else {\r\n                        rem = this.sub(divisor.mul(approx));\r\n                        res = approx.add(rem.div(divisor));\r\n                        return res;\r\n                    }\r\n                }\r\n            } else if (divisor.eq(MIN_VALUE))\r\n                return this.unsigned ? UZERO : ZERO;\r\n            if (this.isNegative()) {\r\n                if (divisor.isNegative())\r\n                    return this.neg().div(divisor.neg());\r\n                return this.neg().div(divisor).neg();\r\n            } else if (divisor.isNegative())\r\n                return this.div(divisor.neg()).neg();\r\n            res = ZERO;\r\n        } else {\r\n            // The algorithm below has not been made for unsigned longs. It's therefore\r\n            // required to take special care of the MSB prior to running it.\r\n            if (!divisor.unsigned)\r\n                divisor = divisor.toUnsigned();\r\n            if (divisor.gt(this))\r\n                return UZERO;\r\n            if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n                return UONE;\r\n            res = UZERO;\r\n        }\r\n\r\n        // Repeat the following until the remainder is less than other:  find a\r\n        // floating-point that approximates remainder / other *from below*, add this\r\n        // into the result, and subtract it from the remainder.  It is critical that\r\n        // the approximate value is less than or equal to the real value so that the\r\n        // remainder never becomes negative.\r\n        rem = this;\r\n        while (rem.gte(divisor)) {\r\n            // Approximate the result of division. This may be a little greater or\r\n            // smaller than the actual value.\r\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n            // We will tweak the approximate result by changing it in the 48-th digit or\r\n            // the smallest non-fractional digit, whichever is larger.\r\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n                delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n            // Decrease the approximation until it is smaller than the remainder.  Note\r\n            // that if it is too large, the product overflows and is negative.\r\n                approxRes = fromNumber(approx),\r\n                approxRem = approxRes.mul(divisor);\r\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n                approx -= delta;\r\n                approxRes = fromNumber(approx, this.unsigned);\r\n                approxRem = approxRes.mul(divisor);\r\n            }\r\n\r\n            // We know the answer can't be zero... and actually, zero would cause\r\n            // infinite recursion since we would make no progress.\r\n            if (approxRes.isZero())\r\n                approxRes = ONE;\r\n\r\n            res = res.add(approxRes);\r\n            rem = rem.sub(approxRem);\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.div = LongPrototype.divide;\r\n\r\n    /**\r\n     * Returns this Long modulo the specified.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.modulo = function modulo(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        return this.sub(this.div(divisor).mul(divisor));\r\n    };\r\n\r\n    /**\r\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.mod = LongPrototype.modulo;\r\n\r\n    /**\r\n     * Returns the bitwise NOT of this Long.\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.not = function not() {\r\n        return fromBits(~this.low, ~this.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise AND of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.and = function and(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise OR of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.or = function or(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise XOR of this Long and the given one.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.xor = function xor(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n        else\r\n            return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRight = function shiftRight(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n        else\r\n            return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits &= 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else {\r\n            var high = this.high;\r\n            if (numBits < 32) {\r\n                var low = this.low;\r\n                return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n            } else if (numBits === 32)\r\n                return fromBits(high, 0, this.unsigned);\r\n            else\r\n                return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n    /**\r\n     * Converts this Long to signed.\r\n     * @returns {!Long} Signed long\r\n     */\r\n    LongPrototype.toSigned = function toSigned() {\r\n        if (!this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, false);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to unsigned.\r\n     * @returns {!Long} Unsigned long\r\n     */\r\n    LongPrototype.toUnsigned = function toUnsigned() {\r\n        if (this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, true);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to its byte representation.\r\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n     * @returns {!Array.<number>} Byte representation\r\n     */\r\n    LongPrototype.toBytes = function(le) {\r\n        return le ? this.toBytesLE() : this.toBytesBE();\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its little endian byte representation.\r\n     * @returns {!Array.<number>} Little endian byte representation\r\n     */\r\n    LongPrototype.toBytesLE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n             lo         & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n             hi         & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>> 24) & 0xff\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its big endian byte representation.\r\n     * @returns {!Array.<number>} Big endian byte representation\r\n     */\r\n    LongPrototype.toBytesBE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n            (hi >>> 24) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n             hi         & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n             lo         & 0xff\r\n        ];\r\n    }\r\n\r\n    return Long;\r\n});\r\n", "/*!\n\nJSZip v3.10.1 - A JavaScript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/main/LICENSE\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).JSZip=e()}}(function(){return function s(a,o,h){function u(r,e){if(!o[r]){if(!a[r]){var t=\"function\"==typeof require&&require;if(!e&&t)return t(r,!0);if(l)return l(r,!0);var n=new Error(\"Cannot find module '\"+r+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}var i=o[r]={exports:{}};a[r][0].call(i.exports,function(e){var t=a[r][1][e];return u(t||e)},i,i.exports,s,a,o,h)}return o[r].exports}for(var l=\"function\"==typeof require&&require,e=0;e<h.length;e++)u(h[e]);return u}({1:[function(e,t,r){\"use strict\";var d=e(\"./utils\"),c=e(\"./support\"),p=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";r.encode=function(e){for(var t,r,n,i,s,a,o,h=[],u=0,l=e.length,f=l,c=\"string\"!==d.getTypeOf(e);u<e.length;)f=l-u,n=c?(t=e[u++],r=u<l?e[u++]:0,u<l?e[u++]:0):(t=e.charCodeAt(u++),r=u<l?e.charCodeAt(u++):0,u<l?e.charCodeAt(u++):0),i=t>>2,s=(3&t)<<4|r>>4,a=1<f?(15&r)<<2|n>>6:64,o=2<f?63&n:64,h.push(p.charAt(i)+p.charAt(s)+p.charAt(a)+p.charAt(o));return h.join(\"\")},r.decode=function(e){var t,r,n,i,s,a,o=0,h=0,u=\"data:\";if(e.substr(0,u.length)===u)throw new Error(\"Invalid base64 input, it looks like a data url.\");var l,f=3*(e=e.replace(/[^A-Za-z0-9+/=]/g,\"\")).length/4;if(e.charAt(e.length-1)===p.charAt(64)&&f--,e.charAt(e.length-2)===p.charAt(64)&&f--,f%1!=0)throw new Error(\"Invalid base64 input, bad content length.\");for(l=c.uint8array?new Uint8Array(0|f):new Array(0|f);o<e.length;)t=p.indexOf(e.charAt(o++))<<2|(i=p.indexOf(e.charAt(o++)))>>4,r=(15&i)<<4|(s=p.indexOf(e.charAt(o++)))>>2,n=(3&s)<<6|(a=p.indexOf(e.charAt(o++))),l[h++]=t,64!==s&&(l[h++]=r),64!==a&&(l[h++]=n);return l}},{\"./support\":30,\"./utils\":32}],2:[function(e,t,r){\"use strict\";var n=e(\"./external\"),i=e(\"./stream/DataWorker\"),s=e(\"./stream/Crc32Probe\"),a=e(\"./stream/DataLengthProbe\");function o(e,t,r,n,i){this.compressedSize=e,this.uncompressedSize=t,this.crc32=r,this.compression=n,this.compressedContent=i}o.prototype={getContentWorker:function(){var e=new i(n.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new a(\"data_length\")),t=this;return e.on(\"end\",function(){if(this.streamInfo.data_length!==t.uncompressedSize)throw new Error(\"Bug : uncompressed data size mismatch\")}),e},getCompressedWorker:function(){return new i(n.Promise.resolve(this.compressedContent)).withStreamInfo(\"compressedSize\",this.compressedSize).withStreamInfo(\"uncompressedSize\",this.uncompressedSize).withStreamInfo(\"crc32\",this.crc32).withStreamInfo(\"compression\",this.compression)}},o.createWorkerFrom=function(e,t,r){return e.pipe(new s).pipe(new a(\"uncompressedSize\")).pipe(t.compressWorker(r)).pipe(new a(\"compressedSize\")).withStreamInfo(\"compression\",t)},t.exports=o},{\"./external\":6,\"./stream/Crc32Probe\":25,\"./stream/DataLengthProbe\":26,\"./stream/DataWorker\":27}],3:[function(e,t,r){\"use strict\";var n=e(\"./stream/GenericWorker\");r.STORE={magic:\"\\0\\0\",compressWorker:function(){return new n(\"STORE compression\")},uncompressWorker:function(){return new n(\"STORE decompression\")}},r.DEFLATE=e(\"./flate\")},{\"./flate\":7,\"./stream/GenericWorker\":28}],4:[function(e,t,r){\"use strict\";var n=e(\"./utils\");var o=function(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e}return t}();t.exports=function(e,t){return void 0!==e&&e.length?\"string\"!==n.getTypeOf(e)?function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t[a])];return-1^e}(0|t,e,e.length,0):function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t.charCodeAt(a))];return-1^e}(0|t,e,e.length,0):0}},{\"./utils\":32}],5:[function(e,t,r){\"use strict\";r.base64=!1,r.binary=!1,r.dir=!1,r.createFolders=!0,r.date=null,r.compression=null,r.compressionOptions=null,r.comment=null,r.unixPermissions=null,r.dosPermissions=null},{}],6:[function(e,t,r){\"use strict\";var n=null;n=\"undefined\"!=typeof Promise?Promise:e(\"lie\"),t.exports={Promise:n}},{lie:37}],7:[function(e,t,r){\"use strict\";var n=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,i=e(\"pako\"),s=e(\"./utils\"),a=e(\"./stream/GenericWorker\"),o=n?\"uint8array\":\"array\";function h(e,t){a.call(this,\"FlateWorker/\"+e),this._pako=null,this._pakoAction=e,this._pakoOptions=t,this.meta={}}r.magic=\"\\b\\0\",s.inherits(h,a),h.prototype.processChunk=function(e){this.meta=e.meta,null===this._pako&&this._createPako(),this._pako.push(s.transformTo(o,e.data),!1)},h.prototype.flush=function(){a.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},h.prototype.cleanUp=function(){a.prototype.cleanUp.call(this),this._pako=null},h.prototype._createPako=function(){this._pako=new i[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var t=this;this._pako.onData=function(e){t.push({data:e,meta:t.meta})}},r.compressWorker=function(e){return new h(\"Deflate\",e)},r.uncompressWorker=function(){return new h(\"Inflate\",{})}},{\"./stream/GenericWorker\":28,\"./utils\":32,pako:38}],8:[function(e,t,r){\"use strict\";function A(e,t){var r,n=\"\";for(r=0;r<t;r++)n+=String.fromCharCode(255&e),e>>>=8;return n}function n(e,t,r,n,i,s){var a,o,h=e.file,u=e.compression,l=s!==O.utf8encode,f=I.transformTo(\"string\",s(h.name)),c=I.transformTo(\"string\",O.utf8encode(h.name)),d=h.comment,p=I.transformTo(\"string\",s(d)),m=I.transformTo(\"string\",O.utf8encode(d)),_=c.length!==h.name.length,g=m.length!==d.length,b=\"\",v=\"\",y=\"\",w=h.dir,k=h.date,x={crc32:0,compressedSize:0,uncompressedSize:0};t&&!r||(x.crc32=e.crc32,x.compressedSize=e.compressedSize,x.uncompressedSize=e.uncompressedSize);var S=0;t&&(S|=8),l||!_&&!g||(S|=2048);var z=0,C=0;w&&(z|=16),\"UNIX\"===i?(C=798,z|=function(e,t){var r=e;return e||(r=t?16893:33204),(65535&r)<<16}(h.unixPermissions,w)):(C=20,z|=function(e){return 63&(e||0)}(h.dosPermissions)),a=k.getUTCHours(),a<<=6,a|=k.getUTCMinutes(),a<<=5,a|=k.getUTCSeconds()/2,o=k.getUTCFullYear()-1980,o<<=4,o|=k.getUTCMonth()+1,o<<=5,o|=k.getUTCDate(),_&&(v=A(1,1)+A(B(f),4)+c,b+=\"up\"+A(v.length,2)+v),g&&(y=A(1,1)+A(B(p),4)+m,b+=\"uc\"+A(y.length,2)+y);var E=\"\";return E+=\"\\n\\0\",E+=A(S,2),E+=u.magic,E+=A(a,2),E+=A(o,2),E+=A(x.crc32,4),E+=A(x.compressedSize,4),E+=A(x.uncompressedSize,4),E+=A(f.length,2),E+=A(b.length,2),{fileRecord:R.LOCAL_FILE_HEADER+E+f+b,dirRecord:R.CENTRAL_FILE_HEADER+A(C,2)+E+A(p.length,2)+\"\\0\\0\\0\\0\"+A(z,4)+A(n,4)+f+b+p}}var I=e(\"../utils\"),i=e(\"../stream/GenericWorker\"),O=e(\"../utf8\"),B=e(\"../crc32\"),R=e(\"../signature\");function s(e,t,r,n){i.call(this,\"ZipFileWorker\"),this.bytesWritten=0,this.zipComment=t,this.zipPlatform=r,this.encodeFileName=n,this.streamFiles=e,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}I.inherits(s,i),s.prototype.push=function(e){var t=e.meta.percent||0,r=this.entriesCount,n=this._sources.length;this.accumulate?this.contentBuffer.push(e):(this.bytesWritten+=e.data.length,i.prototype.push.call(this,{data:e.data,meta:{currentFile:this.currentFile,percent:r?(t+100*(r-n-1))/r:100}}))},s.prototype.openedSource=function(e){this.currentSourceOffset=this.bytesWritten,this.currentFile=e.file.name;var t=this.streamFiles&&!e.file.dir;if(t){var r=n(e,t,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:r.fileRecord,meta:{percent:0}})}else this.accumulate=!0},s.prototype.closedSource=function(e){this.accumulate=!1;var t=this.streamFiles&&!e.file.dir,r=n(e,t,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(r.dirRecord),t)this.push({data:function(e){return R.DATA_DESCRIPTOR+A(e.crc32,4)+A(e.compressedSize,4)+A(e.uncompressedSize,4)}(e),meta:{percent:100}});else for(this.push({data:r.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},s.prototype.flush=function(){for(var e=this.bytesWritten,t=0;t<this.dirRecords.length;t++)this.push({data:this.dirRecords[t],meta:{percent:100}});var r=this.bytesWritten-e,n=function(e,t,r,n,i){var s=I.transformTo(\"string\",i(n));return R.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+A(e,2)+A(e,2)+A(t,4)+A(r,4)+A(s.length,2)+s}(this.dirRecords.length,r,e,this.zipComment,this.encodeFileName);this.push({data:n,meta:{percent:100}})},s.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},s.prototype.registerPrevious=function(e){this._sources.push(e);var t=this;return e.on(\"data\",function(e){t.processChunk(e)}),e.on(\"end\",function(){t.closedSource(t.previous.streamInfo),t._sources.length?t.prepareNextSource():t.end()}),e.on(\"error\",function(e){t.error(e)}),this},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},s.prototype.error=function(e){var t=this._sources;if(!i.prototype.error.call(this,e))return!1;for(var r=0;r<t.length;r++)try{t[r].error(e)}catch(e){}return!0},s.prototype.lock=function(){i.prototype.lock.call(this);for(var e=this._sources,t=0;t<e.length;t++)e[t].lock()},t.exports=s},{\"../crc32\":4,\"../signature\":23,\"../stream/GenericWorker\":28,\"../utf8\":31,\"../utils\":32}],9:[function(e,t,r){\"use strict\";var u=e(\"../compressions\"),n=e(\"./ZipFileWorker\");r.generateWorker=function(e,a,t){var o=new n(a.streamFiles,t,a.platform,a.encodeFileName),h=0;try{e.forEach(function(e,t){h++;var r=function(e,t){var r=e||t,n=u[r];if(!n)throw new Error(r+\" is not a valid compression method !\");return n}(t.options.compression,a.compression),n=t.options.compressionOptions||a.compressionOptions||{},i=t.dir,s=t.date;t._compressWorker(r,n).withStreamInfo(\"file\",{name:e,dir:i,date:s,comment:t.comment||\"\",unixPermissions:t.unixPermissions,dosPermissions:t.dosPermissions}).pipe(o)}),o.entriesCount=h}catch(e){o.error(e)}return o}},{\"../compressions\":3,\"./ZipFileWorker\":8}],10:[function(e,t,r){\"use strict\";function n(){if(!(this instanceof n))return new n;if(arguments.length)throw new Error(\"The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.\");this.files=Object.create(null),this.comment=null,this.root=\"\",this.clone=function(){var e=new n;for(var t in this)\"function\"!=typeof this[t]&&(e[t]=this[t]);return e}}(n.prototype=e(\"./object\")).loadAsync=e(\"./load\"),n.support=e(\"./support\"),n.defaults=e(\"./defaults\"),n.version=\"3.10.1\",n.loadAsync=function(e,t){return(new n).loadAsync(e,t)},n.external=e(\"./external\"),t.exports=n},{\"./defaults\":5,\"./external\":6,\"./load\":11,\"./object\":15,\"./support\":30}],11:[function(e,t,r){\"use strict\";var u=e(\"./utils\"),i=e(\"./external\"),n=e(\"./utf8\"),s=e(\"./zipEntries\"),a=e(\"./stream/Crc32Probe\"),l=e(\"./nodejsUtils\");function f(n){return new i.Promise(function(e,t){var r=n.decompressed.getContentWorker().pipe(new a);r.on(\"error\",function(e){t(e)}).on(\"end\",function(){r.streamInfo.crc32!==n.decompressed.crc32?t(new Error(\"Corrupted zip : CRC32 mismatch\")):e()}).resume()})}t.exports=function(e,o){var h=this;return o=u.extend(o||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:n.utf8decode}),l.isNode&&l.isStream(e)?i.Promise.reject(new Error(\"JSZip can't accept a stream when loading a zip file.\")):u.prepareContent(\"the loaded zip file\",e,!0,o.optimizedBinaryString,o.base64).then(function(e){var t=new s(o);return t.load(e),t}).then(function(e){var t=[i.Promise.resolve(e)],r=e.files;if(o.checkCRC32)for(var n=0;n<r.length;n++)t.push(f(r[n]));return i.Promise.all(t)}).then(function(e){for(var t=e.shift(),r=t.files,n=0;n<r.length;n++){var i=r[n],s=i.fileNameStr,a=u.resolve(i.fileNameStr);h.file(a,i.decompressed,{binary:!0,optimizedBinaryString:!0,date:i.date,dir:i.dir,comment:i.fileCommentStr.length?i.fileCommentStr:null,unixPermissions:i.unixPermissions,dosPermissions:i.dosPermissions,createFolders:o.createFolders}),i.dir||(h.file(a).unsafeOriginalName=s)}return t.zipComment.length&&(h.comment=t.zipComment),h})}},{\"./external\":6,\"./nodejsUtils\":14,\"./stream/Crc32Probe\":25,\"./utf8\":31,\"./utils\":32,\"./zipEntries\":33}],12:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"../stream/GenericWorker\");function s(e,t){i.call(this,\"Nodejs stream input adapter for \"+e),this._upstreamEnded=!1,this._bindStream(t)}n.inherits(s,i),s.prototype._bindStream=function(e){var t=this;(this._stream=e).pause(),e.on(\"data\",function(e){t.push({data:e,meta:{percent:0}})}).on(\"error\",function(e){t.isPaused?this.generatedError=e:t.error(e)}).on(\"end\",function(){t.isPaused?t._upstreamEnded=!0:t.end()})},s.prototype.pause=function(){return!!i.prototype.pause.call(this)&&(this._stream.pause(),!0)},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},t.exports=s},{\"../stream/GenericWorker\":28,\"../utils\":32}],13:[function(e,t,r){\"use strict\";var i=e(\"readable-stream\").Readable;function n(e,t,r){i.call(this,t),this._helper=e;var n=this;e.on(\"data\",function(e,t){n.push(e)||n._helper.pause(),r&&r(t)}).on(\"error\",function(e){n.emit(\"error\",e)}).on(\"end\",function(){n.push(null)})}e(\"../utils\").inherits(n,i),n.prototype._read=function(){this._helper.resume()},t.exports=n},{\"../utils\":32,\"readable-stream\":16}],14:[function(e,t,r){\"use strict\";t.exports={isNode:\"undefined\"!=typeof Buffer,newBufferFrom:function(e,t){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(e,t);if(\"number\"==typeof e)throw new Error('The \"data\" argument must not be a number');return new Buffer(e,t)},allocBuffer:function(e){if(Buffer.alloc)return Buffer.alloc(e);var t=new Buffer(e);return t.fill(0),t},isBuffer:function(e){return Buffer.isBuffer(e)},isStream:function(e){return e&&\"function\"==typeof e.on&&\"function\"==typeof e.pause&&\"function\"==typeof e.resume}}},{}],15:[function(e,t,r){\"use strict\";function s(e,t,r){var n,i=u.getTypeOf(t),s=u.extend(r||{},f);s.date=s.date||new Date,null!==s.compression&&(s.compression=s.compression.toUpperCase()),\"string\"==typeof s.unixPermissions&&(s.unixPermissions=parseInt(s.unixPermissions,8)),s.unixPermissions&&16384&s.unixPermissions&&(s.dir=!0),s.dosPermissions&&16&s.dosPermissions&&(s.dir=!0),s.dir&&(e=g(e)),s.createFolders&&(n=_(e))&&b.call(this,n,!0);var a=\"string\"===i&&!1===s.binary&&!1===s.base64;r&&void 0!==r.binary||(s.binary=!a),(t instanceof c&&0===t.uncompressedSize||s.dir||!t||0===t.length)&&(s.base64=!1,s.binary=!0,t=\"\",s.compression=\"STORE\",i=\"string\");var o=null;o=t instanceof c||t instanceof l?t:p.isNode&&p.isStream(t)?new m(e,t):u.prepareContent(e,t,s.binary,s.optimizedBinaryString,s.base64);var h=new d(e,o,s);this.files[e]=h}var i=e(\"./utf8\"),u=e(\"./utils\"),l=e(\"./stream/GenericWorker\"),a=e(\"./stream/StreamHelper\"),f=e(\"./defaults\"),c=e(\"./compressedObject\"),d=e(\"./zipObject\"),o=e(\"./generate\"),p=e(\"./nodejsUtils\"),m=e(\"./nodejs/NodejsStreamInputAdapter\"),_=function(e){\"/\"===e.slice(-1)&&(e=e.substring(0,e.length-1));var t=e.lastIndexOf(\"/\");return 0<t?e.substring(0,t):\"\"},g=function(e){return\"/\"!==e.slice(-1)&&(e+=\"/\"),e},b=function(e,t){return t=void 0!==t?t:f.createFolders,e=g(e),this.files[e]||s.call(this,e,null,{dir:!0,createFolders:t}),this.files[e]};function h(e){return\"[object RegExp]\"===Object.prototype.toString.call(e)}var n={load:function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},forEach:function(e){var t,r,n;for(t in this.files)n=this.files[t],(r=t.slice(this.root.length,t.length))&&t.slice(0,this.root.length)===this.root&&e(r,n)},filter:function(r){var n=[];return this.forEach(function(e,t){r(e,t)&&n.push(t)}),n},file:function(e,t,r){if(1!==arguments.length)return e=this.root+e,s.call(this,e,t,r),this;if(h(e)){var n=e;return this.filter(function(e,t){return!t.dir&&n.test(e)})}var i=this.files[this.root+e];return i&&!i.dir?i:null},folder:function(r){if(!r)return this;if(h(r))return this.filter(function(e,t){return t.dir&&r.test(e)});var e=this.root+r,t=b.call(this,e),n=this.clone();return n.root=t.name,n},remove:function(r){r=this.root+r;var e=this.files[r];if(e||(\"/\"!==r.slice(-1)&&(r+=\"/\"),e=this.files[r]),e&&!e.dir)delete this.files[r];else for(var t=this.filter(function(e,t){return t.name.slice(0,r.length)===r}),n=0;n<t.length;n++)delete this.files[t[n].name];return this},generate:function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},generateInternalStream:function(e){var t,r={};try{if((r=u.extend(e||{},{streamFiles:!1,compression:\"STORE\",compressionOptions:null,type:\"\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:i.utf8encode})).type=r.type.toLowerCase(),r.compression=r.compression.toUpperCase(),\"binarystring\"===r.type&&(r.type=\"string\"),!r.type)throw new Error(\"No output type specified.\");u.checkSupport(r.type),\"darwin\"!==r.platform&&\"freebsd\"!==r.platform&&\"linux\"!==r.platform&&\"sunos\"!==r.platform||(r.platform=\"UNIX\"),\"win32\"===r.platform&&(r.platform=\"DOS\");var n=r.comment||this.comment||\"\";t=o.generateWorker(this,r,n)}catch(e){(t=new l(\"error\")).error(e)}return new a(t,r.type||\"string\",r.mimeType)},generateAsync:function(e,t){return this.generateInternalStream(e).accumulate(t)},generateNodeStream:function(e,t){return(e=e||{}).type||(e.type=\"nodebuffer\"),this.generateInternalStream(e).toNodejsStream(t)}};t.exports=n},{\"./compressedObject\":2,\"./defaults\":5,\"./generate\":9,\"./nodejs/NodejsStreamInputAdapter\":12,\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31,\"./utils\":32,\"./zipObject\":35}],16:[function(e,t,r){\"use strict\";t.exports=e(\"stream\")},{stream:void 0}],17:[function(e,t,r){\"use strict\";var n=e(\"./DataReader\");function i(e){n.call(this,e);for(var t=0;t<this.data.length;t++)e[t]=255&e[t]}e(\"../utils\").inherits(i,n),i.prototype.byteAt=function(e){return this.data[this.zero+e]},i.prototype.lastIndexOfSignature=function(e){for(var t=e.charCodeAt(0),r=e.charCodeAt(1),n=e.charCodeAt(2),i=e.charCodeAt(3),s=this.length-4;0<=s;--s)if(this.data[s]===t&&this.data[s+1]===r&&this.data[s+2]===n&&this.data[s+3]===i)return s-this.zero;return-1},i.prototype.readAndCheckSignature=function(e){var t=e.charCodeAt(0),r=e.charCodeAt(1),n=e.charCodeAt(2),i=e.charCodeAt(3),s=this.readData(4);return t===s[0]&&r===s[1]&&n===s[2]&&i===s[3]},i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return[];var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./DataReader\":18}],18:[function(e,t,r){\"use strict\";var n=e(\"../utils\");function i(e){this.data=e,this.length=e.length,this.index=0,this.zero=0}i.prototype={checkOffset:function(e){this.checkIndex(this.index+e)},checkIndex:function(e){if(this.length<this.zero+e||e<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+e+\"). Corrupted zip ?\")},setIndex:function(e){this.checkIndex(e),this.index=e},skip:function(e){this.setIndex(this.index+e)},byteAt:function(){},readInt:function(e){var t,r=0;for(this.checkOffset(e),t=this.index+e-1;t>=this.index;t--)r=(r<<8)+this.byteAt(t);return this.index+=e,r},readString:function(e){return n.transformTo(\"string\",this.readData(e))},readData:function(){},lastIndexOfSignature:function(){},readAndCheckSignature:function(){},readDate:function(){var e=this.readInt(4);return new Date(Date.UTC(1980+(e>>25&127),(e>>21&15)-1,e>>16&31,e>>11&31,e>>5&63,(31&e)<<1))}},t.exports=i},{\"../utils\":32}],19:[function(e,t,r){\"use strict\";var n=e(\"./Uint8ArrayReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./Uint8ArrayReader\":21}],20:[function(e,t,r){\"use strict\";var n=e(\"./DataReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.byteAt=function(e){return this.data.charCodeAt(this.zero+e)},i.prototype.lastIndexOfSignature=function(e){return this.data.lastIndexOf(e)-this.zero},i.prototype.readAndCheckSignature=function(e){return e===this.readData(4)},i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./DataReader\":18}],21:[function(e,t,r){\"use strict\";var n=e(\"./ArrayReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return new Uint8Array(0);var t=this.data.subarray(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./ArrayReader\":17}],22:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"../support\"),s=e(\"./ArrayReader\"),a=e(\"./StringReader\"),o=e(\"./NodeBufferReader\"),h=e(\"./Uint8ArrayReader\");t.exports=function(e){var t=n.getTypeOf(e);return n.checkSupport(t),\"string\"!==t||i.uint8array?\"nodebuffer\"===t?new o(e):i.uint8array?new h(n.transformTo(\"uint8array\",e)):new s(n.transformTo(\"array\",e)):new a(e)}},{\"../support\":30,\"../utils\":32,\"./ArrayReader\":17,\"./NodeBufferReader\":19,\"./StringReader\":20,\"./Uint8ArrayReader\":21}],23:[function(e,t,r){\"use strict\";r.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",r.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",r.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",r.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",r.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",r.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],24:[function(e,t,r){\"use strict\";var n=e(\"./GenericWorker\"),i=e(\"../utils\");function s(e){n.call(this,\"ConvertWorker to \"+e),this.destType=e}i.inherits(s,n),s.prototype.processChunk=function(e){this.push({data:i.transformTo(this.destType,e.data),meta:e.meta})},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],25:[function(e,t,r){\"use strict\";var n=e(\"./GenericWorker\"),i=e(\"../crc32\");function s(){n.call(this,\"Crc32Probe\"),this.withStreamInfo(\"crc32\",0)}e(\"../utils\").inherits(s,n),s.prototype.processChunk=function(e){this.streamInfo.crc32=i(e.data,this.streamInfo.crc32||0),this.push(e)},t.exports=s},{\"../crc32\":4,\"../utils\":32,\"./GenericWorker\":28}],26:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"./GenericWorker\");function s(e){i.call(this,\"DataLengthProbe for \"+e),this.propName=e,this.withStreamInfo(e,0)}n.inherits(s,i),s.prototype.processChunk=function(e){if(e){var t=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=t+e.data.length}i.prototype.processChunk.call(this,e)},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],27:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"./GenericWorker\");function s(e){i.call(this,\"DataWorker\");var t=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type=\"\",this._tickScheduled=!1,e.then(function(e){t.dataIsReady=!0,t.data=e,t.max=e&&e.length||0,t.type=n.getTypeOf(e),t.isPaused||t._tickAndRepeat()},function(e){t.error(e)})}n.inherits(s,i),s.prototype.cleanUp=function(){i.prototype.cleanUp.call(this),this.data=null},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,n.delay(this._tickAndRepeat,[],this)),!0)},s.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(n.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},s.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var e=null,t=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case\"string\":e=this.data.substring(this.index,t);break;case\"uint8array\":e=this.data.subarray(this.index,t);break;case\"array\":case\"nodebuffer\":e=this.data.slice(this.index,t)}return this.index=t,this.push({data:e,meta:{percent:this.max?this.index/this.max*100:0}})},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],28:[function(e,t,r){\"use strict\";function n(e){this.name=e||\"default\",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}n.prototype={push:function(e){this.emit(\"data\",e)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit(\"end\"),this.cleanUp(),this.isFinished=!0}catch(e){this.emit(\"error\",e)}return!0},error:function(e){return!this.isFinished&&(this.isPaused?this.generatedError=e:(this.isFinished=!0,this.emit(\"error\",e),this.previous&&this.previous.error(e),this.cleanUp()),!0)},on:function(e,t){return this._listeners[e].push(t),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(e,t){if(this._listeners[e])for(var r=0;r<this._listeners[e].length;r++)this._listeners[e][r].call(this,t)},pipe:function(e){return e.registerPrevious(this)},registerPrevious:function(e){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.streamInfo=e.streamInfo,this.mergeStreamInfo(),this.previous=e;var t=this;return e.on(\"data\",function(e){t.processChunk(e)}),e.on(\"end\",function(){t.end()}),e.on(\"error\",function(e){t.error(e)}),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;var e=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),e=!0),this.previous&&this.previous.resume(),!e},flush:function(){},processChunk:function(e){this.push(e)},withStreamInfo:function(e,t){return this.extraStreamInfo[e]=t,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var e in this.extraStreamInfo)Object.prototype.hasOwnProperty.call(this.extraStreamInfo,e)&&(this.streamInfo[e]=this.extraStreamInfo[e])},lock:function(){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var e=\"Worker \"+this.name;return this.previous?this.previous+\" -> \"+e:e}},t.exports=n},{}],29:[function(e,t,r){\"use strict\";var h=e(\"../utils\"),i=e(\"./ConvertWorker\"),s=e(\"./GenericWorker\"),u=e(\"../base64\"),n=e(\"../support\"),a=e(\"../external\"),o=null;if(n.nodestream)try{o=e(\"../nodejs/NodejsStreamOutputAdapter\")}catch(e){}function l(e,o){return new a.Promise(function(t,r){var n=[],i=e._internalType,s=e._outputType,a=e._mimeType;e.on(\"data\",function(e,t){n.push(e),o&&o(t)}).on(\"error\",function(e){n=[],r(e)}).on(\"end\",function(){try{var e=function(e,t,r){switch(e){case\"blob\":return h.newBlob(h.transformTo(\"arraybuffer\",t),r);case\"base64\":return u.encode(t);default:return h.transformTo(e,t)}}(s,function(e,t){var r,n=0,i=null,s=0;for(r=0;r<t.length;r++)s+=t[r].length;switch(e){case\"string\":return t.join(\"\");case\"array\":return Array.prototype.concat.apply([],t);case\"uint8array\":for(i=new Uint8Array(s),r=0;r<t.length;r++)i.set(t[r],n),n+=t[r].length;return i;case\"nodebuffer\":return Buffer.concat(t);default:throw new Error(\"concat : unsupported type '\"+e+\"'\")}}(i,n),a);t(e)}catch(e){r(e)}n=[]}).resume()})}function f(e,t,r){var n=t;switch(t){case\"blob\":case\"arraybuffer\":n=\"uint8array\";break;case\"base64\":n=\"string\"}try{this._internalType=n,this._outputType=t,this._mimeType=r,h.checkSupport(n),this._worker=e.pipe(new i(n)),e.lock()}catch(e){this._worker=new s(\"error\"),this._worker.error(e)}}f.prototype={accumulate:function(e){return l(this,e)},on:function(e,t){var r=this;return\"data\"===e?this._worker.on(e,function(e){t.call(r,e.data,e.meta)}):this._worker.on(e,function(){h.delay(t,arguments,r)}),this},resume:function(){return h.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(e){if(h.checkSupport(\"nodestream\"),\"nodebuffer\"!==this._outputType)throw new Error(this._outputType+\" is not supported by this method\");return new o(this,{objectMode:\"nodebuffer\"!==this._outputType},e)}},t.exports=f},{\"../base64\":1,\"../external\":6,\"../nodejs/NodejsStreamOutputAdapter\":13,\"../support\":30,\"../utils\":32,\"./ConvertWorker\":24,\"./GenericWorker\":28}],30:[function(e,t,r){\"use strict\";if(r.base64=!0,r.array=!0,r.string=!0,r.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,r.nodebuffer=\"undefined\"!=typeof Buffer,r.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)r.blob=!1;else{var n=new ArrayBuffer(0);try{r.blob=0===new Blob([n],{type:\"application/zip\"}).size}catch(e){try{var i=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);i.append(n),r.blob=0===i.getBlob(\"application/zip\").size}catch(e){r.blob=!1}}}try{r.nodestream=!!e(\"readable-stream\").Readable}catch(e){r.nodestream=!1}},{\"readable-stream\":16}],31:[function(e,t,s){\"use strict\";for(var o=e(\"./utils\"),h=e(\"./support\"),r=e(\"./nodejsUtils\"),n=e(\"./stream/GenericWorker\"),u=new Array(256),i=0;i<256;i++)u[i]=252<=i?6:248<=i?5:240<=i?4:224<=i?3:192<=i?2:1;u[254]=u[254]=1;function a(){n.call(this,\"utf-8 decode\"),this.leftOver=null}function l(){n.call(this,\"utf-8 encode\")}s.utf8encode=function(e){return h.nodebuffer?r.newBufferFrom(e,\"utf-8\"):function(e){var t,r,n,i,s,a=e.length,o=0;for(i=0;i<a;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),o+=r<128?1:r<2048?2:r<65536?3:4;for(t=h.uint8array?new Uint8Array(o):new Array(o),i=s=0;s<o;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),r<128?t[s++]=r:(r<2048?t[s++]=192|r>>>6:(r<65536?t[s++]=224|r>>>12:(t[s++]=240|r>>>18,t[s++]=128|r>>>12&63),t[s++]=128|r>>>6&63),t[s++]=128|63&r);return t}(e)},s.utf8decode=function(e){return h.nodebuffer?o.transformTo(\"nodebuffer\",e).toString(\"utf-8\"):function(e){var t,r,n,i,s=e.length,a=new Array(2*s);for(t=r=0;t<s;)if((n=e[t++])<128)a[r++]=n;else if(4<(i=u[n]))a[r++]=65533,t+=i-1;else{for(n&=2===i?31:3===i?15:7;1<i&&t<s;)n=n<<6|63&e[t++],i--;1<i?a[r++]=65533:n<65536?a[r++]=n:(n-=65536,a[r++]=55296|n>>10&1023,a[r++]=56320|1023&n)}return a.length!==r&&(a.subarray?a=a.subarray(0,r):a.length=r),o.applyFromCharCode(a)}(e=o.transformTo(h.uint8array?\"uint8array\":\"array\",e))},o.inherits(a,n),a.prototype.processChunk=function(e){var t=o.transformTo(h.uint8array?\"uint8array\":\"array\",e.data);if(this.leftOver&&this.leftOver.length){if(h.uint8array){var r=t;(t=new Uint8Array(r.length+this.leftOver.length)).set(this.leftOver,0),t.set(r,this.leftOver.length)}else t=this.leftOver.concat(t);this.leftOver=null}var n=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;0<=r&&128==(192&e[r]);)r--;return r<0?t:0===r?t:r+u[e[r]]>t?r:t}(t),i=t;n!==t.length&&(h.uint8array?(i=t.subarray(0,n),this.leftOver=t.subarray(n,t.length)):(i=t.slice(0,n),this.leftOver=t.slice(n,t.length))),this.push({data:s.utf8decode(i),meta:e.meta})},a.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:s.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},s.Utf8DecodeWorker=a,o.inherits(l,n),l.prototype.processChunk=function(e){this.push({data:s.utf8encode(e.data),meta:e.meta})},s.Utf8EncodeWorker=l},{\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./support\":30,\"./utils\":32}],32:[function(e,t,a){\"use strict\";var o=e(\"./support\"),h=e(\"./base64\"),r=e(\"./nodejsUtils\"),u=e(\"./external\");function n(e){return e}function l(e,t){for(var r=0;r<e.length;++r)t[r]=255&e.charCodeAt(r);return t}e(\"setimmediate\"),a.newBlob=function(t,r){a.checkSupport(\"blob\");try{return new Blob([t],{type:r})}catch(e){try{var n=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return n.append(t),n.getBlob(r)}catch(e){throw new Error(\"Bug : can't construct the Blob.\")}}};var i={stringifyByChunk:function(e,t,r){var n=[],i=0,s=e.length;if(s<=r)return String.fromCharCode.apply(null,e);for(;i<s;)\"array\"===t||\"nodebuffer\"===t?n.push(String.fromCharCode.apply(null,e.slice(i,Math.min(i+r,s)))):n.push(String.fromCharCode.apply(null,e.subarray(i,Math.min(i+r,s)))),i+=r;return n.join(\"\")},stringifyByChar:function(e){for(var t=\"\",r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return t},applyCanBeUsed:{uint8array:function(){try{return o.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(e){return!1}}(),nodebuffer:function(){try{return o.nodebuffer&&1===String.fromCharCode.apply(null,r.allocBuffer(1)).length}catch(e){return!1}}()}};function s(e){var t=65536,r=a.getTypeOf(e),n=!0;if(\"uint8array\"===r?n=i.applyCanBeUsed.uint8array:\"nodebuffer\"===r&&(n=i.applyCanBeUsed.nodebuffer),n)for(;1<t;)try{return i.stringifyByChunk(e,r,t)}catch(e){t=Math.floor(t/2)}return i.stringifyByChar(e)}function f(e,t){for(var r=0;r<e.length;r++)t[r]=e[r];return t}a.applyFromCharCode=s;var c={};c.string={string:n,array:function(e){return l(e,new Array(e.length))},arraybuffer:function(e){return c.string.uint8array(e).buffer},uint8array:function(e){return l(e,new Uint8Array(e.length))},nodebuffer:function(e){return l(e,r.allocBuffer(e.length))}},c.array={string:s,array:n,arraybuffer:function(e){return new Uint8Array(e).buffer},uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return r.newBufferFrom(e)}},c.arraybuffer={string:function(e){return s(new Uint8Array(e))},array:function(e){return f(new Uint8Array(e),new Array(e.byteLength))},arraybuffer:n,uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return r.newBufferFrom(new Uint8Array(e))}},c.uint8array={string:s,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return e.buffer},uint8array:n,nodebuffer:function(e){return r.newBufferFrom(e)}},c.nodebuffer={string:s,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return c.nodebuffer.uint8array(e).buffer},uint8array:function(e){return f(e,new Uint8Array(e.length))},nodebuffer:n},a.transformTo=function(e,t){if(t=t||\"\",!e)return t;a.checkSupport(e);var r=a.getTypeOf(t);return c[r][e](t)},a.resolve=function(e){for(var t=e.split(\"/\"),r=[],n=0;n<t.length;n++){var i=t[n];\".\"===i||\"\"===i&&0!==n&&n!==t.length-1||(\"..\"===i?r.pop():r.push(i))}return r.join(\"/\")},a.getTypeOf=function(e){return\"string\"==typeof e?\"string\":\"[object Array]\"===Object.prototype.toString.call(e)?\"array\":o.nodebuffer&&r.isBuffer(e)?\"nodebuffer\":o.uint8array&&e instanceof Uint8Array?\"uint8array\":o.arraybuffer&&e instanceof ArrayBuffer?\"arraybuffer\":void 0},a.checkSupport=function(e){if(!o[e.toLowerCase()])throw new Error(e+\" is not supported by this platform\")},a.MAX_VALUE_16BITS=65535,a.MAX_VALUE_32BITS=-1,a.pretty=function(e){var t,r,n=\"\";for(r=0;r<(e||\"\").length;r++)n+=\"\\\\x\"+((t=e.charCodeAt(r))<16?\"0\":\"\")+t.toString(16).toUpperCase();return n},a.delay=function(e,t,r){setImmediate(function(){e.apply(r||null,t||[])})},a.inherits=function(e,t){function r(){}r.prototype=t.prototype,e.prototype=new r},a.extend=function(){var e,t,r={};for(e=0;e<arguments.length;e++)for(t in arguments[e])Object.prototype.hasOwnProperty.call(arguments[e],t)&&void 0===r[t]&&(r[t]=arguments[e][t]);return r},a.prepareContent=function(r,e,n,i,s){return u.Promise.resolve(e).then(function(n){return o.blob&&(n instanceof Blob||-1!==[\"[object File]\",\"[object Blob]\"].indexOf(Object.prototype.toString.call(n)))&&\"undefined\"!=typeof FileReader?new u.Promise(function(t,r){var e=new FileReader;e.onload=function(e){t(e.target.result)},e.onerror=function(e){r(e.target.error)},e.readAsArrayBuffer(n)}):n}).then(function(e){var t=a.getTypeOf(e);return t?(\"arraybuffer\"===t?e=a.transformTo(\"uint8array\",e):\"string\"===t&&(s?e=h.decode(e):n&&!0!==i&&(e=function(e){return l(e,o.uint8array?new Uint8Array(e.length):new Array(e.length))}(e))),e):u.Promise.reject(new Error(\"Can't read the data of '\"+r+\"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?\"))})}},{\"./base64\":1,\"./external\":6,\"./nodejsUtils\":14,\"./support\":30,setimmediate:54}],33:[function(e,t,r){\"use strict\";var n=e(\"./reader/readerFor\"),i=e(\"./utils\"),s=e(\"./signature\"),a=e(\"./zipEntry\"),o=e(\"./support\");function h(e){this.files=[],this.loadOptions=e}h.prototype={checkSignature:function(e){if(!this.reader.readAndCheckSignature(e)){this.reader.index-=4;var t=this.reader.readString(4);throw new Error(\"Corrupted zip or bug: unexpected signature (\"+i.pretty(t)+\", expected \"+i.pretty(e)+\")\")}},isSignature:function(e,t){var r=this.reader.index;this.reader.setIndex(e);var n=this.reader.readString(4)===t;return this.reader.setIndex(r),n},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var e=this.reader.readData(this.zipCommentLength),t=o.uint8array?\"uint8array\":\"array\",r=i.transformTo(t,e);this.zipComment=this.loadOptions.decodeFileName(r)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var e,t,r,n=this.zip64EndOfCentralSize-44;0<n;)e=this.reader.readInt(2),t=this.reader.readInt(4),r=this.reader.readData(t),this.zip64ExtensibleData[e]={id:e,length:t,value:r}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var e,t;for(e=0;e<this.files.length;e++)t=this.files[e],this.reader.setIndex(t.localHeaderOffset),this.checkSignature(s.LOCAL_FILE_HEADER),t.readLocalPart(this.reader),t.handleUTF8(),t.processAttributes()},readCentralDir:function(){var e;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER);)(e=new a({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(e);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var e=this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);if(e<0)throw!this.isSignature(0,s.LOCAL_FILE_HEADER)?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip: can't find end of central directory\");this.reader.setIndex(e);var t=e;if(this.checkSignature(s.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,(e=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(e),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,s.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var r=this.centralDirOffset+this.centralDirSize;this.zip64&&(r+=20,r+=12+this.zip64EndOfCentralSize);var n=t-r;if(0<n)this.isSignature(t,s.CENTRAL_FILE_HEADER)||(this.reader.zero=n);else if(n<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(n)+\" bytes.\")},prepareReader:function(e){this.reader=n(e)},load:function(e){this.prepareReader(e),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},t.exports=h},{\"./reader/readerFor\":22,\"./signature\":23,\"./support\":30,\"./utils\":32,\"./zipEntry\":34}],34:[function(e,t,r){\"use strict\";var n=e(\"./reader/readerFor\"),s=e(\"./utils\"),i=e(\"./compressedObject\"),a=e(\"./crc32\"),o=e(\"./utf8\"),h=e(\"./compressions\"),u=e(\"./support\");function l(e,t){this.options=e,this.loadOptions=t}l.prototype={isEncrypted:function(){return 1==(1&this.bitFlag)},useUTF8:function(){return 2048==(2048&this.bitFlag)},readLocalPart:function(e){var t,r;if(e.skip(22),this.fileNameLength=e.readInt(2),r=e.readInt(2),this.fileName=e.readData(this.fileNameLength),e.skip(r),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error(\"Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)\");if(null===(t=function(e){for(var t in h)if(Object.prototype.hasOwnProperty.call(h,t)&&h[t].magic===e)return h[t];return null}(this.compressionMethod)))throw new Error(\"Corrupted zip : compression \"+s.pretty(this.compressionMethod)+\" unknown (inner file : \"+s.transformTo(\"string\",this.fileName)+\")\");this.decompressed=new i(this.compressedSize,this.uncompressedSize,this.crc32,t,e.readData(this.compressedSize))},readCentralPart:function(e){this.versionMadeBy=e.readInt(2),e.skip(2),this.bitFlag=e.readInt(2),this.compressionMethod=e.readString(2),this.date=e.readDate(),this.crc32=e.readInt(4),this.compressedSize=e.readInt(4),this.uncompressedSize=e.readInt(4);var t=e.readInt(2);if(this.extraFieldsLength=e.readInt(2),this.fileCommentLength=e.readInt(2),this.diskNumberStart=e.readInt(2),this.internalFileAttributes=e.readInt(2),this.externalFileAttributes=e.readInt(4),this.localHeaderOffset=e.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");e.skip(t),this.readExtraFields(e),this.parseZIP64ExtraField(e),this.fileComment=e.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var e=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0==e&&(this.dosPermissions=63&this.externalFileAttributes),3==e&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(){if(this.extraFields[1]){var e=n(this.extraFields[1].value);this.uncompressedSize===s.MAX_VALUE_32BITS&&(this.uncompressedSize=e.readInt(8)),this.compressedSize===s.MAX_VALUE_32BITS&&(this.compressedSize=e.readInt(8)),this.localHeaderOffset===s.MAX_VALUE_32BITS&&(this.localHeaderOffset=e.readInt(8)),this.diskNumberStart===s.MAX_VALUE_32BITS&&(this.diskNumberStart=e.readInt(4))}},readExtraFields:function(e){var t,r,n,i=e.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});e.index+4<i;)t=e.readInt(2),r=e.readInt(2),n=e.readData(r),this.extraFields[t]={id:t,length:r,value:n};e.setIndex(i)},handleUTF8:function(){var e=u.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=o.utf8decode(this.fileName),this.fileCommentStr=o.utf8decode(this.fileComment);else{var t=this.findExtraFieldUnicodePath();if(null!==t)this.fileNameStr=t;else{var r=s.transformTo(e,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(r)}var n=this.findExtraFieldUnicodeComment();if(null!==n)this.fileCommentStr=n;else{var i=s.transformTo(e,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(i)}}},findExtraFieldUnicodePath:function(){var e=this.extraFields[28789];if(e){var t=n(e.value);return 1!==t.readInt(1)?null:a(this.fileName)!==t.readInt(4)?null:o.utf8decode(t.readData(e.length-5))}return null},findExtraFieldUnicodeComment:function(){var e=this.extraFields[25461];if(e){var t=n(e.value);return 1!==t.readInt(1)?null:a(this.fileComment)!==t.readInt(4)?null:o.utf8decode(t.readData(e.length-5))}return null}},t.exports=l},{\"./compressedObject\":2,\"./compressions\":3,\"./crc32\":4,\"./reader/readerFor\":22,\"./support\":30,\"./utf8\":31,\"./utils\":32}],35:[function(e,t,r){\"use strict\";function n(e,t,r){this.name=e,this.dir=r.dir,this.date=r.date,this.comment=r.comment,this.unixPermissions=r.unixPermissions,this.dosPermissions=r.dosPermissions,this._data=t,this._dataBinary=r.binary,this.options={compression:r.compression,compressionOptions:r.compressionOptions}}var s=e(\"./stream/StreamHelper\"),i=e(\"./stream/DataWorker\"),a=e(\"./utf8\"),o=e(\"./compressedObject\"),h=e(\"./stream/GenericWorker\");n.prototype={internalStream:function(e){var t=null,r=\"string\";try{if(!e)throw new Error(\"No output type specified.\");var n=\"string\"===(r=e.toLowerCase())||\"text\"===r;\"binarystring\"!==r&&\"text\"!==r||(r=\"string\"),t=this._decompressWorker();var i=!this._dataBinary;i&&!n&&(t=t.pipe(new a.Utf8EncodeWorker)),!i&&n&&(t=t.pipe(new a.Utf8DecodeWorker))}catch(e){(t=new h(\"error\")).error(e)}return new s(t,r,\"\")},async:function(e,t){return this.internalStream(e).accumulate(t)},nodeStream:function(e,t){return this.internalStream(e||\"nodebuffer\").toNodejsStream(t)},_compressWorker:function(e,t){if(this._data instanceof o&&this._data.compression.magic===e.magic)return this._data.getCompressedWorker();var r=this._decompressWorker();return this._dataBinary||(r=r.pipe(new a.Utf8EncodeWorker)),o.createWorkerFrom(r,e,t)},_decompressWorker:function(){return this._data instanceof o?this._data.getContentWorker():this._data instanceof h?this._data:new i(this._data)}};for(var u=[\"asText\",\"asBinary\",\"asNodeBuffer\",\"asUint8Array\",\"asArrayBuffer\"],l=function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},f=0;f<u.length;f++)n.prototype[u[f]]=l;t.exports=n},{\"./compressedObject\":2,\"./stream/DataWorker\":27,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31}],36:[function(e,l,t){(function(t){\"use strict\";var r,n,e=t.MutationObserver||t.WebKitMutationObserver;if(e){var i=0,s=new e(u),a=t.document.createTextNode(\"\");s.observe(a,{characterData:!0}),r=function(){a.data=i=++i%2}}else if(t.setImmediate||void 0===t.MessageChannel)r=\"document\"in t&&\"onreadystatechange\"in t.document.createElement(\"script\")?function(){var e=t.document.createElement(\"script\");e.onreadystatechange=function(){u(),e.onreadystatechange=null,e.parentNode.removeChild(e),e=null},t.document.documentElement.appendChild(e)}:function(){setTimeout(u,0)};else{var o=new t.MessageChannel;o.port1.onmessage=u,r=function(){o.port2.postMessage(0)}}var h=[];function u(){var e,t;n=!0;for(var r=h.length;r;){for(t=h,h=[],e=-1;++e<r;)t[e]();r=h.length}n=!1}l.exports=function(e){1!==h.push(e)||n||r()}}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}],37:[function(e,t,r){\"use strict\";var i=e(\"immediate\");function u(){}var l={},s=[\"REJECTED\"],a=[\"FULFILLED\"],n=[\"PENDING\"];function o(e){if(\"function\"!=typeof e)throw new TypeError(\"resolver must be a function\");this.state=n,this.queue=[],this.outcome=void 0,e!==u&&d(this,e)}function h(e,t,r){this.promise=e,\"function\"==typeof t&&(this.onFulfilled=t,this.callFulfilled=this.otherCallFulfilled),\"function\"==typeof r&&(this.onRejected=r,this.callRejected=this.otherCallRejected)}function f(t,r,n){i(function(){var e;try{e=r(n)}catch(e){return l.reject(t,e)}e===t?l.reject(t,new TypeError(\"Cannot resolve promise with itself\")):l.resolve(t,e)})}function c(e){var t=e&&e.then;if(e&&(\"object\"==typeof e||\"function\"==typeof e)&&\"function\"==typeof t)return function(){t.apply(e,arguments)}}function d(t,e){var r=!1;function n(e){r||(r=!0,l.reject(t,e))}function i(e){r||(r=!0,l.resolve(t,e))}var s=p(function(){e(i,n)});\"error\"===s.status&&n(s.value)}function p(e,t){var r={};try{r.value=e(t),r.status=\"success\"}catch(e){r.status=\"error\",r.value=e}return r}(t.exports=o).prototype.finally=function(t){if(\"function\"!=typeof t)return this;var r=this.constructor;return this.then(function(e){return r.resolve(t()).then(function(){return e})},function(e){return r.resolve(t()).then(function(){throw e})})},o.prototype.catch=function(e){return this.then(null,e)},o.prototype.then=function(e,t){if(\"function\"!=typeof e&&this.state===a||\"function\"!=typeof t&&this.state===s)return this;var r=new this.constructor(u);this.state!==n?f(r,this.state===a?e:t,this.outcome):this.queue.push(new h(r,e,t));return r},h.prototype.callFulfilled=function(e){l.resolve(this.promise,e)},h.prototype.otherCallFulfilled=function(e){f(this.promise,this.onFulfilled,e)},h.prototype.callRejected=function(e){l.reject(this.promise,e)},h.prototype.otherCallRejected=function(e){f(this.promise,this.onRejected,e)},l.resolve=function(e,t){var r=p(c,t);if(\"error\"===r.status)return l.reject(e,r.value);var n=r.value;if(n)d(e,n);else{e.state=a,e.outcome=t;for(var i=-1,s=e.queue.length;++i<s;)e.queue[i].callFulfilled(t)}return e},l.reject=function(e,t){e.state=s,e.outcome=t;for(var r=-1,n=e.queue.length;++r<n;)e.queue[r].callRejected(t);return e},o.resolve=function(e){if(e instanceof this)return e;return l.resolve(new this(u),e)},o.reject=function(e){var t=new this(u);return l.reject(t,e)},o.all=function(e){var r=this;if(\"[object Array]\"!==Object.prototype.toString.call(e))return this.reject(new TypeError(\"must be an array\"));var n=e.length,i=!1;if(!n)return this.resolve([]);var s=new Array(n),a=0,t=-1,o=new this(u);for(;++t<n;)h(e[t],t);return o;function h(e,t){r.resolve(e).then(function(e){s[t]=e,++a!==n||i||(i=!0,l.resolve(o,s))},function(e){i||(i=!0,l.reject(o,e))})}},o.race=function(e){var t=this;if(\"[object Array]\"!==Object.prototype.toString.call(e))return this.reject(new TypeError(\"must be an array\"));var r=e.length,n=!1;if(!r)return this.resolve([]);var i=-1,s=new this(u);for(;++i<r;)a=e[i],t.resolve(a).then(function(e){n||(n=!0,l.resolve(s,e))},function(e){n||(n=!0,l.reject(s,e))});var a;return s}},{immediate:36}],38:[function(e,t,r){\"use strict\";var n={};(0,e(\"./lib/utils/common\").assign)(n,e(\"./lib/deflate\"),e(\"./lib/inflate\"),e(\"./lib/zlib/constants\")),t.exports=n},{\"./lib/deflate\":39,\"./lib/inflate\":40,\"./lib/utils/common\":41,\"./lib/zlib/constants\":44}],39:[function(e,t,r){\"use strict\";var a=e(\"./zlib/deflate\"),o=e(\"./utils/common\"),h=e(\"./utils/strings\"),i=e(\"./zlib/messages\"),s=e(\"./zlib/zstream\"),u=Object.prototype.toString,l=0,f=-1,c=0,d=8;function p(e){if(!(this instanceof p))return new p(e);this.options=o.assign({level:f,method:d,chunkSize:16384,windowBits:15,memLevel:8,strategy:c,to:\"\"},e||{});var t=this.options;t.raw&&0<t.windowBits?t.windowBits=-t.windowBits:t.gzip&&0<t.windowBits&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new s,this.strm.avail_out=0;var r=a.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(r!==l)throw new Error(i[r]);if(t.header&&a.deflateSetHeader(this.strm,t.header),t.dictionary){var n;if(n=\"string\"==typeof t.dictionary?h.string2buf(t.dictionary):\"[object ArrayBuffer]\"===u.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,(r=a.deflateSetDictionary(this.strm,n))!==l)throw new Error(i[r]);this._dict_set=!0}}function n(e,t){var r=new p(t);if(r.push(e,!0),r.err)throw r.msg||i[r.err];return r.result}p.prototype.push=function(e,t){var r,n,i=this.strm,s=this.options.chunkSize;if(this.ended)return!1;n=t===~~t?t:!0===t?4:0,\"string\"==typeof e?i.input=h.string2buf(e):\"[object ArrayBuffer]\"===u.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;do{if(0===i.avail_out&&(i.output=new o.Buf8(s),i.next_out=0,i.avail_out=s),1!==(r=a.deflate(i,n))&&r!==l)return this.onEnd(r),!(this.ended=!0);0!==i.avail_out&&(0!==i.avail_in||4!==n&&2!==n)||(\"string\"===this.options.to?this.onData(h.buf2binstring(o.shrinkBuf(i.output,i.next_out))):this.onData(o.shrinkBuf(i.output,i.next_out)))}while((0<i.avail_in||0===i.avail_out)&&1!==r);return 4===n?(r=a.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===l):2!==n||(this.onEnd(l),!(i.avail_out=0))},p.prototype.onData=function(e){this.chunks.push(e)},p.prototype.onEnd=function(e){e===l&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},r.Deflate=p,r.deflate=n,r.deflateRaw=function(e,t){return(t=t||{}).raw=!0,n(e,t)},r.gzip=function(e,t){return(t=t||{}).gzip=!0,n(e,t)}},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/deflate\":46,\"./zlib/messages\":51,\"./zlib/zstream\":53}],40:[function(e,t,r){\"use strict\";var c=e(\"./zlib/inflate\"),d=e(\"./utils/common\"),p=e(\"./utils/strings\"),m=e(\"./zlib/constants\"),n=e(\"./zlib/messages\"),i=e(\"./zlib/zstream\"),s=e(\"./zlib/gzheader\"),_=Object.prototype.toString;function a(e){if(!(this instanceof a))return new a(e);this.options=d.assign({chunkSize:16384,windowBits:0,to:\"\"},e||{});var t=this.options;t.raw&&0<=t.windowBits&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(0<=t.windowBits&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),15<t.windowBits&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new i,this.strm.avail_out=0;var r=c.inflateInit2(this.strm,t.windowBits);if(r!==m.Z_OK)throw new Error(n[r]);this.header=new s,c.inflateGetHeader(this.strm,this.header)}function o(e,t){var r=new a(t);if(r.push(e,!0),r.err)throw r.msg||n[r.err];return r.result}a.prototype.push=function(e,t){var r,n,i,s,a,o,h=this.strm,u=this.options.chunkSize,l=this.options.dictionary,f=!1;if(this.ended)return!1;n=t===~~t?t:!0===t?m.Z_FINISH:m.Z_NO_FLUSH,\"string\"==typeof e?h.input=p.binstring2buf(e):\"[object ArrayBuffer]\"===_.call(e)?h.input=new Uint8Array(e):h.input=e,h.next_in=0,h.avail_in=h.input.length;do{if(0===h.avail_out&&(h.output=new d.Buf8(u),h.next_out=0,h.avail_out=u),(r=c.inflate(h,m.Z_NO_FLUSH))===m.Z_NEED_DICT&&l&&(o=\"string\"==typeof l?p.string2buf(l):\"[object ArrayBuffer]\"===_.call(l)?new Uint8Array(l):l,r=c.inflateSetDictionary(this.strm,o)),r===m.Z_BUF_ERROR&&!0===f&&(r=m.Z_OK,f=!1),r!==m.Z_STREAM_END&&r!==m.Z_OK)return this.onEnd(r),!(this.ended=!0);h.next_out&&(0!==h.avail_out&&r!==m.Z_STREAM_END&&(0!==h.avail_in||n!==m.Z_FINISH&&n!==m.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(i=p.utf8border(h.output,h.next_out),s=h.next_out-i,a=p.buf2string(h.output,i),h.next_out=s,h.avail_out=u-s,s&&d.arraySet(h.output,h.output,i,s,0),this.onData(a)):this.onData(d.shrinkBuf(h.output,h.next_out)))),0===h.avail_in&&0===h.avail_out&&(f=!0)}while((0<h.avail_in||0===h.avail_out)&&r!==m.Z_STREAM_END);return r===m.Z_STREAM_END&&(n=m.Z_FINISH),n===m.Z_FINISH?(r=c.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===m.Z_OK):n!==m.Z_SYNC_FLUSH||(this.onEnd(m.Z_OK),!(h.avail_out=0))},a.prototype.onData=function(e){this.chunks.push(e)},a.prototype.onEnd=function(e){e===m.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=d.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},r.Inflate=a,r.inflate=o,r.inflateRaw=function(e,t){return(t=t||{}).raw=!0,o(e,t)},r.ungzip=o},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/constants\":44,\"./zlib/gzheader\":47,\"./zlib/inflate\":49,\"./zlib/messages\":51,\"./zlib/zstream\":53}],41:[function(e,t,r){\"use strict\";var n=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;r.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var r=t.shift();if(r){if(\"object\"!=typeof r)throw new TypeError(r+\"must be non-object\");for(var n in r)r.hasOwnProperty(n)&&(e[n]=r[n])}}return e},r.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var i={arraySet:function(e,t,r,n,i){if(t.subarray&&e.subarray)e.set(t.subarray(r,r+n),i);else for(var s=0;s<n;s++)e[i+s]=t[r+s]},flattenChunks:function(e){var t,r,n,i,s,a;for(t=n=0,r=e.length;t<r;t++)n+=e[t].length;for(a=new Uint8Array(n),t=i=0,r=e.length;t<r;t++)s=e[t],a.set(s,i),i+=s.length;return a}},s={arraySet:function(e,t,r,n,i){for(var s=0;s<n;s++)e[i+s]=t[r+s]},flattenChunks:function(e){return[].concat.apply([],e)}};r.setTyped=function(e){e?(r.Buf8=Uint8Array,r.Buf16=Uint16Array,r.Buf32=Int32Array,r.assign(r,i)):(r.Buf8=Array,r.Buf16=Array,r.Buf32=Array,r.assign(r,s))},r.setTyped(n)},{}],42:[function(e,t,r){\"use strict\";var h=e(\"./common\"),i=!0,s=!0;try{String.fromCharCode.apply(null,[0])}catch(e){i=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){s=!1}for(var u=new h.Buf8(256),n=0;n<256;n++)u[n]=252<=n?6:248<=n?5:240<=n?4:224<=n?3:192<=n?2:1;function l(e,t){if(t<65537&&(e.subarray&&s||!e.subarray&&i))return String.fromCharCode.apply(null,h.shrinkBuf(e,t));for(var r=\"\",n=0;n<t;n++)r+=String.fromCharCode(e[n]);return r}u[254]=u[254]=1,r.string2buf=function(e){var t,r,n,i,s,a=e.length,o=0;for(i=0;i<a;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),o+=r<128?1:r<2048?2:r<65536?3:4;for(t=new h.Buf8(o),i=s=0;s<o;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),r<128?t[s++]=r:(r<2048?t[s++]=192|r>>>6:(r<65536?t[s++]=224|r>>>12:(t[s++]=240|r>>>18,t[s++]=128|r>>>12&63),t[s++]=128|r>>>6&63),t[s++]=128|63&r);return t},r.buf2binstring=function(e){return l(e,e.length)},r.binstring2buf=function(e){for(var t=new h.Buf8(e.length),r=0,n=t.length;r<n;r++)t[r]=e.charCodeAt(r);return t},r.buf2string=function(e,t){var r,n,i,s,a=t||e.length,o=new Array(2*a);for(r=n=0;r<a;)if((i=e[r++])<128)o[n++]=i;else if(4<(s=u[i]))o[n++]=65533,r+=s-1;else{for(i&=2===s?31:3===s?15:7;1<s&&r<a;)i=i<<6|63&e[r++],s--;1<s?o[n++]=65533:i<65536?o[n++]=i:(i-=65536,o[n++]=55296|i>>10&1023,o[n++]=56320|1023&i)}return l(o,n)},r.utf8border=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;0<=r&&128==(192&e[r]);)r--;return r<0?t:0===r?t:r+u[e[r]]>t?r:t}},{\"./common\":41}],43:[function(e,t,r){\"use strict\";t.exports=function(e,t,r,n){for(var i=65535&e|0,s=e>>>16&65535|0,a=0;0!==r;){for(r-=a=2e3<r?2e3:r;s=s+(i=i+t[n++]|0)|0,--a;);i%=65521,s%=65521}return i|s<<16|0}},{}],44:[function(e,t,r){\"use strict\";t.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(e,t,r){\"use strict\";var o=function(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e}return t}();t.exports=function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t[a])];return-1^e}},{}],46:[function(e,t,r){\"use strict\";var h,c=e(\"../utils/common\"),u=e(\"./trees\"),d=e(\"./adler32\"),p=e(\"./crc32\"),n=e(\"./messages\"),l=0,f=4,m=0,_=-2,g=-1,b=4,i=2,v=8,y=9,s=286,a=30,o=19,w=2*s+1,k=15,x=3,S=258,z=S+x+1,C=42,E=113,A=1,I=2,O=3,B=4;function R(e,t){return e.msg=n[t],t}function T(e){return(e<<1)-(4<e?9:0)}function D(e){for(var t=e.length;0<=--t;)e[t]=0}function F(e){var t=e.state,r=t.pending;r>e.avail_out&&(r=e.avail_out),0!==r&&(c.arraySet(e.output,t.pending_buf,t.pending_out,r,e.next_out),e.next_out+=r,t.pending_out+=r,e.total_out+=r,e.avail_out-=r,t.pending-=r,0===t.pending&&(t.pending_out=0))}function N(e,t){u._tr_flush_block(e,0<=e.block_start?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,F(e.strm)}function U(e,t){e.pending_buf[e.pending++]=t}function P(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t}function L(e,t){var r,n,i=e.max_chain_length,s=e.strstart,a=e.prev_length,o=e.nice_match,h=e.strstart>e.w_size-z?e.strstart-(e.w_size-z):0,u=e.window,l=e.w_mask,f=e.prev,c=e.strstart+S,d=u[s+a-1],p=u[s+a];e.prev_length>=e.good_match&&(i>>=2),o>e.lookahead&&(o=e.lookahead);do{if(u[(r=t)+a]===p&&u[r+a-1]===d&&u[r]===u[s]&&u[++r]===u[s+1]){s+=2,r++;do{}while(u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&s<c);if(n=S-(c-s),s=c-S,a<n){if(e.match_start=t,o<=(a=n))break;d=u[s+a-1],p=u[s+a]}}}while((t=f[t&l])>h&&0!=--i);return a<=e.lookahead?a:e.lookahead}function j(e){var t,r,n,i,s,a,o,h,u,l,f=e.w_size;do{if(i=e.window_size-e.lookahead-e.strstart,e.strstart>=f+(f-z)){for(c.arraySet(e.window,e.window,f,f,0),e.match_start-=f,e.strstart-=f,e.block_start-=f,t=r=e.hash_size;n=e.head[--t],e.head[t]=f<=n?n-f:0,--r;);for(t=r=f;n=e.prev[--t],e.prev[t]=f<=n?n-f:0,--r;);i+=f}if(0===e.strm.avail_in)break;if(a=e.strm,o=e.window,h=e.strstart+e.lookahead,u=i,l=void 0,l=a.avail_in,u<l&&(l=u),r=0===l?0:(a.avail_in-=l,c.arraySet(o,a.input,a.next_in,l,h),1===a.state.wrap?a.adler=d(a.adler,o,l,h):2===a.state.wrap&&(a.adler=p(a.adler,o,l,h)),a.next_in+=l,a.total_in+=l,l),e.lookahead+=r,e.lookahead+e.insert>=x)for(s=e.strstart-e.insert,e.ins_h=e.window[s],e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+x-1])&e.hash_mask,e.prev[s&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=s,s++,e.insert--,!(e.lookahead+e.insert<x)););}while(e.lookahead<z&&0!==e.strm.avail_in)}function Z(e,t){for(var r,n;;){if(e.lookahead<z){if(j(e),e.lookahead<z&&t===l)return A;if(0===e.lookahead)break}if(r=0,e.lookahead>=x&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==r&&e.strstart-r<=e.w_size-z&&(e.match_length=L(e,r)),e.match_length>=x)if(n=u._tr_tally(e,e.strstart-e.match_start,e.match_length-x),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=x){for(e.match_length--;e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart,0!=--e.match_length;);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else n=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=e.strstart<x-1?e.strstart:x-1,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}function W(e,t){for(var r,n,i;;){if(e.lookahead<z){if(j(e),e.lookahead<z&&t===l)return A;if(0===e.lookahead)break}if(r=0,e.lookahead>=x&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=x-1,0!==r&&e.prev_length<e.max_lazy_match&&e.strstart-r<=e.w_size-z&&(e.match_length=L(e,r),e.match_length<=5&&(1===e.strategy||e.match_length===x&&4096<e.strstart-e.match_start)&&(e.match_length=x-1)),e.prev_length>=x&&e.match_length<=e.prev_length){for(i=e.strstart+e.lookahead-x,n=u._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-x),e.lookahead-=e.prev_length-1,e.prev_length-=2;++e.strstart<=i&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!=--e.prev_length;);if(e.match_available=0,e.match_length=x-1,e.strstart++,n&&(N(e,!1),0===e.strm.avail_out))return A}else if(e.match_available){if((n=u._tr_tally(e,0,e.window[e.strstart-1]))&&N(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return A}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(n=u._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<x-1?e.strstart:x-1,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}function M(e,t,r,n,i){this.good_length=e,this.max_lazy=t,this.nice_length=r,this.max_chain=n,this.func=i}function H(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=v,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new c.Buf16(2*w),this.dyn_dtree=new c.Buf16(2*(2*a+1)),this.bl_tree=new c.Buf16(2*(2*o+1)),D(this.dyn_ltree),D(this.dyn_dtree),D(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new c.Buf16(k+1),this.heap=new c.Buf16(2*s+1),D(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new c.Buf16(2*s+1),D(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function G(e){var t;return e&&e.state?(e.total_in=e.total_out=0,e.data_type=i,(t=e.state).pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?C:E,e.adler=2===t.wrap?0:1,t.last_flush=l,u._tr_init(t),m):R(e,_)}function K(e){var t=G(e);return t===m&&function(e){e.window_size=2*e.w_size,D(e.head),e.max_lazy_match=h[e.level].max_lazy,e.good_match=h[e.level].good_length,e.nice_match=h[e.level].nice_length,e.max_chain_length=h[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=x-1,e.match_available=0,e.ins_h=0}(e.state),t}function Y(e,t,r,n,i,s){if(!e)return _;var a=1;if(t===g&&(t=6),n<0?(a=0,n=-n):15<n&&(a=2,n-=16),i<1||y<i||r!==v||n<8||15<n||t<0||9<t||s<0||b<s)return R(e,_);8===n&&(n=9);var o=new H;return(e.state=o).strm=e,o.wrap=a,o.gzhead=null,o.w_bits=n,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=i+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+x-1)/x),o.window=new c.Buf8(2*o.w_size),o.head=new c.Buf16(o.hash_size),o.prev=new c.Buf16(o.w_size),o.lit_bufsize=1<<i+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new c.Buf8(o.pending_buf_size),o.d_buf=1*o.lit_bufsize,o.l_buf=3*o.lit_bufsize,o.level=t,o.strategy=s,o.method=r,K(e)}h=[new M(0,0,0,0,function(e,t){var r=65535;for(r>e.pending_buf_size-5&&(r=e.pending_buf_size-5);;){if(e.lookahead<=1){if(j(e),0===e.lookahead&&t===l)return A;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;var n=e.block_start+r;if((0===e.strstart||e.strstart>=n)&&(e.lookahead=e.strstart-n,e.strstart=n,N(e,!1),0===e.strm.avail_out))return A;if(e.strstart-e.block_start>=e.w_size-z&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):(e.strstart>e.block_start&&(N(e,!1),e.strm.avail_out),A)}),new M(4,4,8,4,Z),new M(4,5,16,8,Z),new M(4,6,32,32,Z),new M(4,4,16,16,W),new M(8,16,32,32,W),new M(8,16,128,128,W),new M(8,32,128,256,W),new M(32,128,258,1024,W),new M(32,258,258,4096,W)],r.deflateInit=function(e,t){return Y(e,t,v,15,8,0)},r.deflateInit2=Y,r.deflateReset=K,r.deflateResetKeep=G,r.deflateSetHeader=function(e,t){return e&&e.state?2!==e.state.wrap?_:(e.state.gzhead=t,m):_},r.deflate=function(e,t){var r,n,i,s;if(!e||!e.state||5<t||t<0)return e?R(e,_):_;if(n=e.state,!e.output||!e.input&&0!==e.avail_in||666===n.status&&t!==f)return R(e,0===e.avail_out?-5:_);if(n.strm=e,r=n.last_flush,n.last_flush=t,n.status===C)if(2===n.wrap)e.adler=0,U(n,31),U(n,139),U(n,8),n.gzhead?(U(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),U(n,255&n.gzhead.time),U(n,n.gzhead.time>>8&255),U(n,n.gzhead.time>>16&255),U(n,n.gzhead.time>>24&255),U(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),U(n,255&n.gzhead.os),n.gzhead.extra&&n.gzhead.extra.length&&(U(n,255&n.gzhead.extra.length),U(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(e.adler=p(e.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=69):(U(n,0),U(n,0),U(n,0),U(n,0),U(n,0),U(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),U(n,3),n.status=E);else{var a=v+(n.w_bits-8<<4)<<8;a|=(2<=n.strategy||n.level<2?0:n.level<6?1:6===n.level?2:3)<<6,0!==n.strstart&&(a|=32),a+=31-a%31,n.status=E,P(n,a),0!==n.strstart&&(P(n,e.adler>>>16),P(n,65535&e.adler)),e.adler=1}if(69===n.status)if(n.gzhead.extra){for(i=n.pending;n.gzindex<(65535&n.gzhead.extra.length)&&(n.pending!==n.pending_buf_size||(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending!==n.pending_buf_size));)U(n,255&n.gzhead.extra[n.gzindex]),n.gzindex++;n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),n.gzindex===n.gzhead.extra.length&&(n.gzindex=0,n.status=73)}else n.status=73;if(73===n.status)if(n.gzhead.name){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending===n.pending_buf_size)){s=1;break}s=n.gzindex<n.gzhead.name.length?255&n.gzhead.name.charCodeAt(n.gzindex++):0,U(n,s)}while(0!==s);n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),0===s&&(n.gzindex=0,n.status=91)}else n.status=91;if(91===n.status)if(n.gzhead.comment){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending===n.pending_buf_size)){s=1;break}s=n.gzindex<n.gzhead.comment.length?255&n.gzhead.comment.charCodeAt(n.gzindex++):0,U(n,s)}while(0!==s);n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),0===s&&(n.status=103)}else n.status=103;if(103===n.status&&(n.gzhead.hcrc?(n.pending+2>n.pending_buf_size&&F(e),n.pending+2<=n.pending_buf_size&&(U(n,255&e.adler),U(n,e.adler>>8&255),e.adler=0,n.status=E)):n.status=E),0!==n.pending){if(F(e),0===e.avail_out)return n.last_flush=-1,m}else if(0===e.avail_in&&T(t)<=T(r)&&t!==f)return R(e,-5);if(666===n.status&&0!==e.avail_in)return R(e,-5);if(0!==e.avail_in||0!==n.lookahead||t!==l&&666!==n.status){var o=2===n.strategy?function(e,t){for(var r;;){if(0===e.lookahead&&(j(e),0===e.lookahead)){if(t===l)return A;break}if(e.match_length=0,r=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,r&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}(n,t):3===n.strategy?function(e,t){for(var r,n,i,s,a=e.window;;){if(e.lookahead<=S){if(j(e),e.lookahead<=S&&t===l)return A;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=x&&0<e.strstart&&(n=a[i=e.strstart-1])===a[++i]&&n===a[++i]&&n===a[++i]){s=e.strstart+S;do{}while(n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&i<s);e.match_length=S-(s-i),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=x?(r=u._tr_tally(e,1,e.match_length-x),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(r=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),r&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}(n,t):h[n.level].func(n,t);if(o!==O&&o!==B||(n.status=666),o===A||o===O)return 0===e.avail_out&&(n.last_flush=-1),m;if(o===I&&(1===t?u._tr_align(n):5!==t&&(u._tr_stored_block(n,0,0,!1),3===t&&(D(n.head),0===n.lookahead&&(n.strstart=0,n.block_start=0,n.insert=0))),F(e),0===e.avail_out))return n.last_flush=-1,m}return t!==f?m:n.wrap<=0?1:(2===n.wrap?(U(n,255&e.adler),U(n,e.adler>>8&255),U(n,e.adler>>16&255),U(n,e.adler>>24&255),U(n,255&e.total_in),U(n,e.total_in>>8&255),U(n,e.total_in>>16&255),U(n,e.total_in>>24&255)):(P(n,e.adler>>>16),P(n,65535&e.adler)),F(e),0<n.wrap&&(n.wrap=-n.wrap),0!==n.pending?m:1)},r.deflateEnd=function(e){var t;return e&&e.state?(t=e.state.status)!==C&&69!==t&&73!==t&&91!==t&&103!==t&&t!==E&&666!==t?R(e,_):(e.state=null,t===E?R(e,-3):m):_},r.deflateSetDictionary=function(e,t){var r,n,i,s,a,o,h,u,l=t.length;if(!e||!e.state)return _;if(2===(s=(r=e.state).wrap)||1===s&&r.status!==C||r.lookahead)return _;for(1===s&&(e.adler=d(e.adler,t,l,0)),r.wrap=0,l>=r.w_size&&(0===s&&(D(r.head),r.strstart=0,r.block_start=0,r.insert=0),u=new c.Buf8(r.w_size),c.arraySet(u,t,l-r.w_size,r.w_size,0),t=u,l=r.w_size),a=e.avail_in,o=e.next_in,h=e.input,e.avail_in=l,e.next_in=0,e.input=t,j(r);r.lookahead>=x;){for(n=r.strstart,i=r.lookahead-(x-1);r.ins_h=(r.ins_h<<r.hash_shift^r.window[n+x-1])&r.hash_mask,r.prev[n&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=n,n++,--i;);r.strstart=n,r.lookahead=x-1,j(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=x-1,r.match_available=0,e.next_in=o,e.input=h,e.avail_in=a,r.wrap=s,m},r.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./messages\":51,\"./trees\":52}],47:[function(e,t,r){\"use strict\";t.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}},{}],48:[function(e,t,r){\"use strict\";t.exports=function(e,t){var r,n,i,s,a,o,h,u,l,f,c,d,p,m,_,g,b,v,y,w,k,x,S,z,C;r=e.state,n=e.next_in,z=e.input,i=n+(e.avail_in-5),s=e.next_out,C=e.output,a=s-(t-e.avail_out),o=s+(e.avail_out-257),h=r.dmax,u=r.wsize,l=r.whave,f=r.wnext,c=r.window,d=r.hold,p=r.bits,m=r.lencode,_=r.distcode,g=(1<<r.lenbits)-1,b=(1<<r.distbits)-1;e:do{p<15&&(d+=z[n++]<<p,p+=8,d+=z[n++]<<p,p+=8),v=m[d&g];t:for(;;){if(d>>>=y=v>>>24,p-=y,0===(y=v>>>16&255))C[s++]=65535&v;else{if(!(16&y)){if(0==(64&y)){v=m[(65535&v)+(d&(1<<y)-1)];continue t}if(32&y){r.mode=12;break e}e.msg=\"invalid literal/length code\",r.mode=30;break e}w=65535&v,(y&=15)&&(p<y&&(d+=z[n++]<<p,p+=8),w+=d&(1<<y)-1,d>>>=y,p-=y),p<15&&(d+=z[n++]<<p,p+=8,d+=z[n++]<<p,p+=8),v=_[d&b];r:for(;;){if(d>>>=y=v>>>24,p-=y,!(16&(y=v>>>16&255))){if(0==(64&y)){v=_[(65535&v)+(d&(1<<y)-1)];continue r}e.msg=\"invalid distance code\",r.mode=30;break e}if(k=65535&v,p<(y&=15)&&(d+=z[n++]<<p,(p+=8)<y&&(d+=z[n++]<<p,p+=8)),h<(k+=d&(1<<y)-1)){e.msg=\"invalid distance too far back\",r.mode=30;break e}if(d>>>=y,p-=y,(y=s-a)<k){if(l<(y=k-y)&&r.sane){e.msg=\"invalid distance too far back\",r.mode=30;break e}if(S=c,(x=0)===f){if(x+=u-y,y<w){for(w-=y;C[s++]=c[x++],--y;);x=s-k,S=C}}else if(f<y){if(x+=u+f-y,(y-=f)<w){for(w-=y;C[s++]=c[x++],--y;);if(x=0,f<w){for(w-=y=f;C[s++]=c[x++],--y;);x=s-k,S=C}}}else if(x+=f-y,y<w){for(w-=y;C[s++]=c[x++],--y;);x=s-k,S=C}for(;2<w;)C[s++]=S[x++],C[s++]=S[x++],C[s++]=S[x++],w-=3;w&&(C[s++]=S[x++],1<w&&(C[s++]=S[x++]))}else{for(x=s-k;C[s++]=C[x++],C[s++]=C[x++],C[s++]=C[x++],2<(w-=3););w&&(C[s++]=C[x++],1<w&&(C[s++]=C[x++]))}break}}break}}while(n<i&&s<o);n-=w=p>>3,d&=(1<<(p-=w<<3))-1,e.next_in=n,e.next_out=s,e.avail_in=n<i?i-n+5:5-(n-i),e.avail_out=s<o?o-s+257:257-(s-o),r.hold=d,r.bits=p}},{}],49:[function(e,t,r){\"use strict\";var I=e(\"../utils/common\"),O=e(\"./adler32\"),B=e(\"./crc32\"),R=e(\"./inffast\"),T=e(\"./inftrees\"),D=1,F=2,N=0,U=-2,P=1,n=852,i=592;function L(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function s(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new I.Buf16(320),this.work=new I.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function a(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg=\"\",t.wrap&&(e.adler=1&t.wrap),t.mode=P,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new I.Buf32(n),t.distcode=t.distdyn=new I.Buf32(i),t.sane=1,t.back=-1,N):U}function o(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,a(e)):U}function h(e,t){var r,n;return e&&e.state?(n=e.state,t<0?(r=0,t=-t):(r=1+(t>>4),t<48&&(t&=15)),t&&(t<8||15<t)?U:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=r,n.wbits=t,o(e))):U}function u(e,t){var r,n;return e?(n=new s,(e.state=n).window=null,(r=h(e,t))!==N&&(e.state=null),r):U}var l,f,c=!0;function j(e){if(c){var t;for(l=new I.Buf32(512),f=new I.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(T(D,e.lens,0,288,l,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;T(F,e.lens,0,32,f,0,e.work,{bits:5}),c=!1}e.lencode=l,e.lenbits=9,e.distcode=f,e.distbits=5}function Z(e,t,r,n){var i,s=e.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new I.Buf8(s.wsize)),n>=s.wsize?(I.arraySet(s.window,t,r-s.wsize,s.wsize,0),s.wnext=0,s.whave=s.wsize):(n<(i=s.wsize-s.wnext)&&(i=n),I.arraySet(s.window,t,r-n,i,s.wnext),(n-=i)?(I.arraySet(s.window,t,r-n,n,0),s.wnext=n,s.whave=s.wsize):(s.wnext+=i,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=i))),0}r.inflateReset=o,r.inflateReset2=h,r.inflateResetKeep=a,r.inflateInit=function(e){return u(e,15)},r.inflateInit2=u,r.inflate=function(e,t){var r,n,i,s,a,o,h,u,l,f,c,d,p,m,_,g,b,v,y,w,k,x,S,z,C=0,E=new I.Buf8(4),A=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return U;12===(r=e.state).mode&&(r.mode=13),a=e.next_out,i=e.output,h=e.avail_out,s=e.next_in,n=e.input,o=e.avail_in,u=r.hold,l=r.bits,f=o,c=h,x=N;e:for(;;)switch(r.mode){case P:if(0===r.wrap){r.mode=13;break}for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(2&r.wrap&&35615===u){E[r.check=0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0),l=u=0,r.mode=2;break}if(r.flags=0,r.head&&(r.head.done=!1),!(1&r.wrap)||(((255&u)<<8)+(u>>8))%31){e.msg=\"incorrect header check\",r.mode=30;break}if(8!=(15&u)){e.msg=\"unknown compression method\",r.mode=30;break}if(l-=4,k=8+(15&(u>>>=4)),0===r.wbits)r.wbits=k;else if(k>r.wbits){e.msg=\"invalid window size\",r.mode=30;break}r.dmax=1<<k,e.adler=r.check=1,r.mode=512&u?10:12,l=u=0;break;case 2:for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(r.flags=u,8!=(255&r.flags)){e.msg=\"unknown compression method\",r.mode=30;break}if(57344&r.flags){e.msg=\"unknown header flags set\",r.mode=30;break}r.head&&(r.head.text=u>>8&1),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=3;case 3:for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.head&&(r.head.time=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,E[2]=u>>>16&255,E[3]=u>>>24&255,r.check=B(r.check,E,4,0)),l=u=0,r.mode=4;case 4:for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.head&&(r.head.xflags=255&u,r.head.os=u>>8),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=5;case 5:if(1024&r.flags){for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.length=u,r.head&&(r.head.extra_len=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0}else r.head&&(r.head.extra=null);r.mode=6;case 6:if(1024&r.flags&&(o<(d=r.length)&&(d=o),d&&(r.head&&(k=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Array(r.head.extra_len)),I.arraySet(r.head.extra,n,s,d,k)),512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,r.length-=d),r.length))break e;r.length=0,r.mode=7;case 7:if(2048&r.flags){if(0===o)break e;for(d=0;k=n[s+d++],r.head&&k&&r.length<65536&&(r.head.name+=String.fromCharCode(k)),k&&d<o;);if(512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,k)break e}else r.head&&(r.head.name=null);r.length=0,r.mode=8;case 8:if(4096&r.flags){if(0===o)break e;for(d=0;k=n[s+d++],r.head&&k&&r.length<65536&&(r.head.comment+=String.fromCharCode(k)),k&&d<o;);if(512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,k)break e}else r.head&&(r.head.comment=null);r.mode=9;case 9:if(512&r.flags){for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u!==(65535&r.check)){e.msg=\"header crc mismatch\",r.mode=30;break}l=u=0}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),e.adler=r.check=0,r.mode=12;break;case 10:for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}e.adler=r.check=L(u),l=u=0,r.mode=11;case 11:if(0===r.havedict)return e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,2;e.adler=r.check=1,r.mode=12;case 12:if(5===t||6===t)break e;case 13:if(r.last){u>>>=7&l,l-=7&l,r.mode=27;break}for(;l<3;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}switch(r.last=1&u,l-=1,3&(u>>>=1)){case 0:r.mode=14;break;case 1:if(j(r),r.mode=20,6!==t)break;u>>>=2,l-=2;break e;case 2:r.mode=17;break;case 3:e.msg=\"invalid block type\",r.mode=30}u>>>=2,l-=2;break;case 14:for(u>>>=7&l,l-=7&l;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if((65535&u)!=(u>>>16^65535)){e.msg=\"invalid stored block lengths\",r.mode=30;break}if(r.length=65535&u,l=u=0,r.mode=15,6===t)break e;case 15:r.mode=16;case 16:if(d=r.length){if(o<d&&(d=o),h<d&&(d=h),0===d)break e;I.arraySet(i,n,s,d,a),o-=d,s+=d,h-=d,a+=d,r.length-=d;break}r.mode=12;break;case 17:for(;l<14;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(r.nlen=257+(31&u),u>>>=5,l-=5,r.ndist=1+(31&u),u>>>=5,l-=5,r.ncode=4+(15&u),u>>>=4,l-=4,286<r.nlen||30<r.ndist){e.msg=\"too many length or distance symbols\",r.mode=30;break}r.have=0,r.mode=18;case 18:for(;r.have<r.ncode;){for(;l<3;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.lens[A[r.have++]]=7&u,u>>>=3,l-=3}for(;r.have<19;)r.lens[A[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,S={bits:r.lenbits},x=T(0,r.lens,0,19,r.lencode,0,r.work,S),r.lenbits=S.bits,x){e.msg=\"invalid code lengths set\",r.mode=30;break}r.have=0,r.mode=19;case 19:for(;r.have<r.nlen+r.ndist;){for(;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(b<16)u>>>=_,l-=_,r.lens[r.have++]=b;else{if(16===b){for(z=_+2;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u>>>=_,l-=_,0===r.have){e.msg=\"invalid bit length repeat\",r.mode=30;break}k=r.lens[r.have-1],d=3+(3&u),u>>>=2,l-=2}else if(17===b){for(z=_+3;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}l-=_,k=0,d=3+(7&(u>>>=_)),u>>>=3,l-=3}else{for(z=_+7;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}l-=_,k=0,d=11+(127&(u>>>=_)),u>>>=7,l-=7}if(r.have+d>r.nlen+r.ndist){e.msg=\"invalid bit length repeat\",r.mode=30;break}for(;d--;)r.lens[r.have++]=k}}if(30===r.mode)break;if(0===r.lens[256]){e.msg=\"invalid code -- missing end-of-block\",r.mode=30;break}if(r.lenbits=9,S={bits:r.lenbits},x=T(D,r.lens,0,r.nlen,r.lencode,0,r.work,S),r.lenbits=S.bits,x){e.msg=\"invalid literal/lengths set\",r.mode=30;break}if(r.distbits=6,r.distcode=r.distdyn,S={bits:r.distbits},x=T(F,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,S),r.distbits=S.bits,x){e.msg=\"invalid distances set\",r.mode=30;break}if(r.mode=20,6===t)break e;case 20:r.mode=21;case 21:if(6<=o&&258<=h){e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,R(e,c),a=e.next_out,i=e.output,h=e.avail_out,s=e.next_in,n=e.input,o=e.avail_in,u=r.hold,l=r.bits,12===r.mode&&(r.back=-1);break}for(r.back=0;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(g&&0==(240&g)){for(v=_,y=g,w=b;g=(C=r.lencode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,r.length=b,0===g){r.mode=26;break}if(32&g){r.back=-1,r.mode=12;break}if(64&g){e.msg=\"invalid literal/length code\",r.mode=30;break}r.extra=15&g,r.mode=22;case 22:if(r.extra){for(z=r.extra;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.length+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}r.was=r.length,r.mode=23;case 23:for(;g=(C=r.distcode[u&(1<<r.distbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(0==(240&g)){for(v=_,y=g,w=b;g=(C=r.distcode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,64&g){e.msg=\"invalid distance code\",r.mode=30;break}r.offset=b,r.extra=15&g,r.mode=24;case 24:if(r.extra){for(z=r.extra;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.offset+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}if(r.offset>r.dmax){e.msg=\"invalid distance too far back\",r.mode=30;break}r.mode=25;case 25:if(0===h)break e;if(d=c-h,r.offset>d){if((d=r.offset-d)>r.whave&&r.sane){e.msg=\"invalid distance too far back\",r.mode=30;break}p=d>r.wnext?(d-=r.wnext,r.wsize-d):r.wnext-d,d>r.length&&(d=r.length),m=r.window}else m=i,p=a-r.offset,d=r.length;for(h<d&&(d=h),h-=d,r.length-=d;i[a++]=m[p++],--d;);0===r.length&&(r.mode=21);break;case 26:if(0===h)break e;i[a++]=r.length,h--,r.mode=21;break;case 27:if(r.wrap){for(;l<32;){if(0===o)break e;o--,u|=n[s++]<<l,l+=8}if(c-=h,e.total_out+=c,r.total+=c,c&&(e.adler=r.check=r.flags?B(r.check,i,c,a-c):O(r.check,i,c,a-c)),c=h,(r.flags?u:L(u))!==r.check){e.msg=\"incorrect data check\",r.mode=30;break}l=u=0}r.mode=28;case 28:if(r.wrap&&r.flags){for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u!==(4294967295&r.total)){e.msg=\"incorrect length check\",r.mode=30;break}l=u=0}r.mode=29;case 29:x=1;break e;case 30:x=-3;break e;case 31:return-4;case 32:default:return U}return e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,(r.wsize||c!==e.avail_out&&r.mode<30&&(r.mode<27||4!==t))&&Z(e,e.output,e.next_out,c-e.avail_out)?(r.mode=31,-4):(f-=e.avail_in,c-=e.avail_out,e.total_in+=f,e.total_out+=c,r.total+=c,r.wrap&&c&&(e.adler=r.check=r.flags?B(r.check,i,c,e.next_out-c):O(r.check,i,c,e.next_out-c)),e.data_type=r.bits+(r.last?64:0)+(12===r.mode?128:0)+(20===r.mode||15===r.mode?256:0),(0==f&&0===c||4===t)&&x===N&&(x=-5),x)},r.inflateEnd=function(e){if(!e||!e.state)return U;var t=e.state;return t.window&&(t.window=null),e.state=null,N},r.inflateGetHeader=function(e,t){var r;return e&&e.state?0==(2&(r=e.state).wrap)?U:((r.head=t).done=!1,N):U},r.inflateSetDictionary=function(e,t){var r,n=t.length;return e&&e.state?0!==(r=e.state).wrap&&11!==r.mode?U:11===r.mode&&O(1,t,n,0)!==r.check?-3:Z(e,t,n,n)?(r.mode=31,-4):(r.havedict=1,N):U},r.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./inffast\":48,\"./inftrees\":50}],50:[function(e,t,r){\"use strict\";var D=e(\"../utils/common\"),F=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],N=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],U=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],P=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];t.exports=function(e,t,r,n,i,s,a,o){var h,u,l,f,c,d,p,m,_,g=o.bits,b=0,v=0,y=0,w=0,k=0,x=0,S=0,z=0,C=0,E=0,A=null,I=0,O=new D.Buf16(16),B=new D.Buf16(16),R=null,T=0;for(b=0;b<=15;b++)O[b]=0;for(v=0;v<n;v++)O[t[r+v]]++;for(k=g,w=15;1<=w&&0===O[w];w--);if(w<k&&(k=w),0===w)return i[s++]=20971520,i[s++]=20971520,o.bits=1,0;for(y=1;y<w&&0===O[y];y++);for(k<y&&(k=y),b=z=1;b<=15;b++)if(z<<=1,(z-=O[b])<0)return-1;if(0<z&&(0===e||1!==w))return-1;for(B[1]=0,b=1;b<15;b++)B[b+1]=B[b]+O[b];for(v=0;v<n;v++)0!==t[r+v]&&(a[B[t[r+v]]++]=v);if(d=0===e?(A=R=a,19):1===e?(A=F,I-=257,R=N,T-=257,256):(A=U,R=P,-1),b=y,c=s,S=v=E=0,l=-1,f=(C=1<<(x=k))-1,1===e&&852<C||2===e&&592<C)return 1;for(;;){for(p=b-S,_=a[v]<d?(m=0,a[v]):a[v]>d?(m=R[T+a[v]],A[I+a[v]]):(m=96,0),h=1<<b-S,y=u=1<<x;i[c+(E>>S)+(u-=h)]=p<<24|m<<16|_|0,0!==u;);for(h=1<<b-1;E&h;)h>>=1;if(0!==h?(E&=h-1,E+=h):E=0,v++,0==--O[b]){if(b===w)break;b=t[r+a[v]]}if(k<b&&(E&f)!==l){for(0===S&&(S=k),c+=y,z=1<<(x=b-S);x+S<w&&!((z-=O[x+S])<=0);)x++,z<<=1;if(C+=1<<x,1===e&&852<C||2===e&&592<C)return 1;i[l=E&f]=k<<24|x<<16|c-s|0}}return 0!==E&&(i[c+E]=b-S<<24|64<<16|0),o.bits=k,0}},{\"../utils/common\":41}],51:[function(e,t,r){\"use strict\";t.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],52:[function(e,t,r){\"use strict\";var i=e(\"../utils/common\"),o=0,h=1;function n(e){for(var t=e.length;0<=--t;)e[t]=0}var s=0,a=29,u=256,l=u+1+a,f=30,c=19,_=2*l+1,g=15,d=16,p=7,m=256,b=16,v=17,y=18,w=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],k=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],x=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],S=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],z=new Array(2*(l+2));n(z);var C=new Array(2*f);n(C);var E=new Array(512);n(E);var A=new Array(256);n(A);var I=new Array(a);n(I);var O,B,R,T=new Array(f);function D(e,t,r,n,i){this.static_tree=e,this.extra_bits=t,this.extra_base=r,this.elems=n,this.max_length=i,this.has_stree=e&&e.length}function F(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function N(e){return e<256?E[e]:E[256+(e>>>7)]}function U(e,t){e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255}function P(e,t,r){e.bi_valid>d-r?(e.bi_buf|=t<<e.bi_valid&65535,U(e,e.bi_buf),e.bi_buf=t>>d-e.bi_valid,e.bi_valid+=r-d):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=r)}function L(e,t,r){P(e,r[2*t],r[2*t+1])}function j(e,t){for(var r=0;r|=1&e,e>>>=1,r<<=1,0<--t;);return r>>>1}function Z(e,t,r){var n,i,s=new Array(g+1),a=0;for(n=1;n<=g;n++)s[n]=a=a+r[n-1]<<1;for(i=0;i<=t;i++){var o=e[2*i+1];0!==o&&(e[2*i]=j(s[o]++,o))}}function W(e){var t;for(t=0;t<l;t++)e.dyn_ltree[2*t]=0;for(t=0;t<f;t++)e.dyn_dtree[2*t]=0;for(t=0;t<c;t++)e.bl_tree[2*t]=0;e.dyn_ltree[2*m]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function M(e){8<e.bi_valid?U(e,e.bi_buf):0<e.bi_valid&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function H(e,t,r,n){var i=2*t,s=2*r;return e[i]<e[s]||e[i]===e[s]&&n[t]<=n[r]}function G(e,t,r){for(var n=e.heap[r],i=r<<1;i<=e.heap_len&&(i<e.heap_len&&H(t,e.heap[i+1],e.heap[i],e.depth)&&i++,!H(t,n,e.heap[i],e.depth));)e.heap[r]=e.heap[i],r=i,i<<=1;e.heap[r]=n}function K(e,t,r){var n,i,s,a,o=0;if(0!==e.last_lit)for(;n=e.pending_buf[e.d_buf+2*o]<<8|e.pending_buf[e.d_buf+2*o+1],i=e.pending_buf[e.l_buf+o],o++,0===n?L(e,i,t):(L(e,(s=A[i])+u+1,t),0!==(a=w[s])&&P(e,i-=I[s],a),L(e,s=N(--n),r),0!==(a=k[s])&&P(e,n-=T[s],a)),o<e.last_lit;);L(e,m,t)}function Y(e,t){var r,n,i,s=t.dyn_tree,a=t.stat_desc.static_tree,o=t.stat_desc.has_stree,h=t.stat_desc.elems,u=-1;for(e.heap_len=0,e.heap_max=_,r=0;r<h;r++)0!==s[2*r]?(e.heap[++e.heap_len]=u=r,e.depth[r]=0):s[2*r+1]=0;for(;e.heap_len<2;)s[2*(i=e.heap[++e.heap_len]=u<2?++u:0)]=1,e.depth[i]=0,e.opt_len--,o&&(e.static_len-=a[2*i+1]);for(t.max_code=u,r=e.heap_len>>1;1<=r;r--)G(e,s,r);for(i=h;r=e.heap[1],e.heap[1]=e.heap[e.heap_len--],G(e,s,1),n=e.heap[1],e.heap[--e.heap_max]=r,e.heap[--e.heap_max]=n,s[2*i]=s[2*r]+s[2*n],e.depth[i]=(e.depth[r]>=e.depth[n]?e.depth[r]:e.depth[n])+1,s[2*r+1]=s[2*n+1]=i,e.heap[1]=i++,G(e,s,1),2<=e.heap_len;);e.heap[--e.heap_max]=e.heap[1],function(e,t){var r,n,i,s,a,o,h=t.dyn_tree,u=t.max_code,l=t.stat_desc.static_tree,f=t.stat_desc.has_stree,c=t.stat_desc.extra_bits,d=t.stat_desc.extra_base,p=t.stat_desc.max_length,m=0;for(s=0;s<=g;s++)e.bl_count[s]=0;for(h[2*e.heap[e.heap_max]+1]=0,r=e.heap_max+1;r<_;r++)p<(s=h[2*h[2*(n=e.heap[r])+1]+1]+1)&&(s=p,m++),h[2*n+1]=s,u<n||(e.bl_count[s]++,a=0,d<=n&&(a=c[n-d]),o=h[2*n],e.opt_len+=o*(s+a),f&&(e.static_len+=o*(l[2*n+1]+a)));if(0!==m){do{for(s=p-1;0===e.bl_count[s];)s--;e.bl_count[s]--,e.bl_count[s+1]+=2,e.bl_count[p]--,m-=2}while(0<m);for(s=p;0!==s;s--)for(n=e.bl_count[s];0!==n;)u<(i=e.heap[--r])||(h[2*i+1]!==s&&(e.opt_len+=(s-h[2*i+1])*h[2*i],h[2*i+1]=s),n--)}}(e,t),Z(s,u,e.bl_count)}function X(e,t,r){var n,i,s=-1,a=t[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),t[2*(r+1)+1]=65535,n=0;n<=r;n++)i=a,a=t[2*(n+1)+1],++o<h&&i===a||(o<u?e.bl_tree[2*i]+=o:0!==i?(i!==s&&e.bl_tree[2*i]++,e.bl_tree[2*b]++):o<=10?e.bl_tree[2*v]++:e.bl_tree[2*y]++,s=i,u=(o=0)===a?(h=138,3):i===a?(h=6,3):(h=7,4))}function V(e,t,r){var n,i,s=-1,a=t[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),n=0;n<=r;n++)if(i=a,a=t[2*(n+1)+1],!(++o<h&&i===a)){if(o<u)for(;L(e,i,e.bl_tree),0!=--o;);else 0!==i?(i!==s&&(L(e,i,e.bl_tree),o--),L(e,b,e.bl_tree),P(e,o-3,2)):o<=10?(L(e,v,e.bl_tree),P(e,o-3,3)):(L(e,y,e.bl_tree),P(e,o-11,7));s=i,u=(o=0)===a?(h=138,3):i===a?(h=6,3):(h=7,4)}}n(T);var q=!1;function J(e,t,r,n){P(e,(s<<1)+(n?1:0),3),function(e,t,r,n){M(e),n&&(U(e,r),U(e,~r)),i.arraySet(e.pending_buf,e.window,t,r,e.pending),e.pending+=r}(e,t,r,!0)}r._tr_init=function(e){q||(function(){var e,t,r,n,i,s=new Array(g+1);for(n=r=0;n<a-1;n++)for(I[n]=r,e=0;e<1<<w[n];e++)A[r++]=n;for(A[r-1]=n,n=i=0;n<16;n++)for(T[n]=i,e=0;e<1<<k[n];e++)E[i++]=n;for(i>>=7;n<f;n++)for(T[n]=i<<7,e=0;e<1<<k[n]-7;e++)E[256+i++]=n;for(t=0;t<=g;t++)s[t]=0;for(e=0;e<=143;)z[2*e+1]=8,e++,s[8]++;for(;e<=255;)z[2*e+1]=9,e++,s[9]++;for(;e<=279;)z[2*e+1]=7,e++,s[7]++;for(;e<=287;)z[2*e+1]=8,e++,s[8]++;for(Z(z,l+1,s),e=0;e<f;e++)C[2*e+1]=5,C[2*e]=j(e,5);O=new D(z,w,u+1,l,g),B=new D(C,k,0,f,g),R=new D(new Array(0),x,0,c,p)}(),q=!0),e.l_desc=new F(e.dyn_ltree,O),e.d_desc=new F(e.dyn_dtree,B),e.bl_desc=new F(e.bl_tree,R),e.bi_buf=0,e.bi_valid=0,W(e)},r._tr_stored_block=J,r._tr_flush_block=function(e,t,r,n){var i,s,a=0;0<e.level?(2===e.strm.data_type&&(e.strm.data_type=function(e){var t,r=4093624447;for(t=0;t<=31;t++,r>>>=1)if(1&r&&0!==e.dyn_ltree[2*t])return o;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return h;for(t=32;t<u;t++)if(0!==e.dyn_ltree[2*t])return h;return o}(e)),Y(e,e.l_desc),Y(e,e.d_desc),a=function(e){var t;for(X(e,e.dyn_ltree,e.l_desc.max_code),X(e,e.dyn_dtree,e.d_desc.max_code),Y(e,e.bl_desc),t=c-1;3<=t&&0===e.bl_tree[2*S[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(e),i=e.opt_len+3+7>>>3,(s=e.static_len+3+7>>>3)<=i&&(i=s)):i=s=r+5,r+4<=i&&-1!==t?J(e,t,r,n):4===e.strategy||s===i?(P(e,2+(n?1:0),3),K(e,z,C)):(P(e,4+(n?1:0),3),function(e,t,r,n){var i;for(P(e,t-257,5),P(e,r-1,5),P(e,n-4,4),i=0;i<n;i++)P(e,e.bl_tree[2*S[i]+1],3);V(e,e.dyn_ltree,t-1),V(e,e.dyn_dtree,r-1)}(e,e.l_desc.max_code+1,e.d_desc.max_code+1,a+1),K(e,e.dyn_ltree,e.dyn_dtree)),W(e),n&&M(e)},r._tr_tally=function(e,t,r){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&r,e.last_lit++,0===t?e.dyn_ltree[2*r]++:(e.matches++,t--,e.dyn_ltree[2*(A[r]+u+1)]++,e.dyn_dtree[2*N(t)]++),e.last_lit===e.lit_bufsize-1},r._tr_align=function(e){P(e,2,3),L(e,m,z),function(e){16===e.bi_valid?(U(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):8<=e.bi_valid&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}(e)}},{\"../utils/common\":41}],53:[function(e,t,r){\"use strict\";t.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(e,t,r){(function(e){!function(r,n){\"use strict\";if(!r.setImmediate){var i,s,t,a,o=1,h={},u=!1,l=r.document,e=Object.getPrototypeOf&&Object.getPrototypeOf(r);e=e&&e.setTimeout?e:r,i=\"[object process]\"==={}.toString.call(r.process)?function(e){process.nextTick(function(){c(e)})}:function(){if(r.postMessage&&!r.importScripts){var e=!0,t=r.onmessage;return r.onmessage=function(){e=!1},r.postMessage(\"\",\"*\"),r.onmessage=t,e}}()?(a=\"setImmediate$\"+Math.random()+\"$\",r.addEventListener?r.addEventListener(\"message\",d,!1):r.attachEvent(\"onmessage\",d),function(e){r.postMessage(a+e,\"*\")}):r.MessageChannel?((t=new MessageChannel).port1.onmessage=function(e){c(e.data)},function(e){t.port2.postMessage(e)}):l&&\"onreadystatechange\"in l.createElement(\"script\")?(s=l.documentElement,function(e){var t=l.createElement(\"script\");t.onreadystatechange=function(){c(e),t.onreadystatechange=null,s.removeChild(t),t=null},s.appendChild(t)}):function(e){setTimeout(c,0,e)},e.setImmediate=function(e){\"function\"!=typeof e&&(e=new Function(\"\"+e));for(var t=new Array(arguments.length-1),r=0;r<t.length;r++)t[r]=arguments[r+1];var n={callback:e,args:t};return h[o]=n,i(o),o++},e.clearImmediate=f}function f(e){delete h[e]}function c(e){if(u)setTimeout(c,0,e);else{var t=h[e];if(t){u=!0;try{!function(e){var t=e.callback,r=e.args;switch(r.length){case 0:t();break;case 1:t(r[0]);break;case 2:t(r[0],r[1]);break;case 3:t(r[0],r[1],r[2]);break;default:t.apply(n,r)}}(t)}finally{f(e),u=!1}}}}function d(e){e.source===r&&\"string\"==typeof e.data&&0===e.data.indexOf(a)&&c(+e.data.slice(a.length))}}(\"undefined\"==typeof self?void 0===e?this:e:self)}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}]},{},[10])(10)});", "'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n", "'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n", "'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n", "// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n", "'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n", "'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n", "'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n", "// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"zlib\" has been externalized for browser compatibility. Cannot access \"zlib.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "// The MIT License (MIT)\n//\n// Copyright (c) 2016 Zhipeng Jia\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n'use strict'\n\nvar WORD_MASK = [0, 0xff, 0xffff, 0xffffff, 0xffffffff]\n\nfunction copyBytes (fromArray, fromPos, toArray, toPos, length) {\n  var i\n  for (i = 0; i < length; i++) {\n    toArray[toPos + i] = fromArray[fromPos + i]\n  }\n}\n\nfunction selfCopyBytes (array, pos, offset, length) {\n  var i\n  for (i = 0; i < length; i++) {\n    array[pos + i] = array[pos - offset + i]\n  }\n}\n\nfunction SnappyDecompressor (compressed) {\n  this.array = compressed\n  this.pos = 0\n}\n\nSnappyDecompressor.prototype.readUncompressedLength = function () {\n  var result = 0\n  var shift = 0\n  var c, val\n  while (shift < 32 && this.pos < this.array.length) {\n    c = this.array[this.pos]\n    this.pos += 1\n    val = c & 0x7f\n    if (((val << shift) >>> shift) !== val) {\n      return -1\n    }\n    result |= val << shift\n    if (c < 128) {\n      return result\n    }\n    shift += 7\n  }\n  return -1\n}\n\nSnappyDecompressor.prototype.uncompressToBuffer = function (outBuffer) {\n  var array = this.array\n  var arrayLength = array.length\n  var pos = this.pos\n  var outPos = 0\n\n  var c, len, smallLen\n  var offset\n\n  while (pos < array.length) {\n    c = array[pos]\n    pos += 1\n    if ((c & 0x3) === 0) {\n      // Literal\n      len = (c >>> 2) + 1\n      if (len > 60) {\n        if (pos + 3 >= arrayLength) {\n          return false\n        }\n        smallLen = len - 60\n        len = array[pos] + (array[pos + 1] << 8) + (array[pos + 2] << 16) + (array[pos + 3] << 24)\n        len = (len & WORD_MASK[smallLen]) + 1\n        pos += smallLen\n      }\n      if (pos + len > arrayLength) {\n        return false\n      }\n      copyBytes(array, pos, outBuffer, outPos, len)\n      pos += len\n      outPos += len\n    } else {\n      switch (c & 0x3) {\n        case 1:\n          len = ((c >>> 2) & 0x7) + 4\n          offset = array[pos] + ((c >>> 5) << 8)\n          pos += 1\n          break\n        case 2:\n          if (pos + 1 >= arrayLength) {\n            return false\n          }\n          len = (c >>> 2) + 1\n          offset = array[pos] + (array[pos + 1] << 8)\n          pos += 2\n          break\n        case 3:\n          if (pos + 3 >= arrayLength) {\n            return false\n          }\n          len = (c >>> 2) + 1\n          offset = array[pos] + (array[pos + 1] << 8) + (array[pos + 2] << 16) + (array[pos + 3] << 24)\n          pos += 4\n          break\n        default:\n          break\n      }\n      if (offset === 0 || offset > outPos) {\n        return false\n      }\n      selfCopyBytes(outBuffer, outPos, offset, len)\n      outPos += len\n    }\n  }\n  return true\n}\n\nexports.SnappyDecompressor = SnappyDecompressor\n", "// The MIT License (MIT)\n//\n// Copyright (c) 2016 Zhipeng Jia\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n'use strict'\n\nvar BLOCK_LOG = 16\nvar BLOCK_SIZE = 1 << BLOCK_LOG\n\nvar MAX_HASH_TABLE_BITS = 14\nvar globalHashTables = new Array(MAX_HASH_TABLE_BITS + 1)\n\nfunction hashFunc (key, hashFuncShift) {\n  return (key * 0x1e35a7bd) >>> hashFuncShift\n}\n\nfunction load32 (array, pos) {\n  return array[pos] + (array[pos + 1] << 8) + (array[pos + 2] << 16) + (array[pos + 3] << 24)\n}\n\nfunction equals32 (array, pos1, pos2) {\n  return array[pos1] === array[pos2] &&\n         array[pos1 + 1] === array[pos2 + 1] &&\n         array[pos1 + 2] === array[pos2 + 2] &&\n         array[pos1 + 3] === array[pos2 + 3]\n}\n\nfunction copyBytes (fromArray, fromPos, toArray, toPos, length) {\n  var i\n  for (i = 0; i < length; i++) {\n    toArray[toPos + i] = fromArray[fromPos + i]\n  }\n}\n\nfunction emitLiteral (input, ip, len, output, op) {\n  if (len <= 60) {\n    output[op] = (len - 1) << 2\n    op += 1\n  } else if (len < 256) {\n    output[op] = 60 << 2\n    output[op + 1] = len - 1\n    op += 2\n  } else {\n    output[op] = 61 << 2\n    output[op + 1] = (len - 1) & 0xff\n    output[op + 2] = (len - 1) >>> 8\n    op += 3\n  }\n  copyBytes(input, ip, output, op, len)\n  return op + len\n}\n\nfunction emitCopyLessThan64 (output, op, offset, len) {\n  if (len < 12 && offset < 2048) {\n    output[op] = 1 + ((len - 4) << 2) + ((offset >>> 8) << 5)\n    output[op + 1] = offset & 0xff\n    return op + 2\n  } else {\n    output[op] = 2 + ((len - 1) << 2)\n    output[op + 1] = offset & 0xff\n    output[op + 2] = offset >>> 8\n    return op + 3\n  }\n}\n\nfunction emitCopy (output, op, offset, len) {\n  while (len >= 68) {\n    op = emitCopyLessThan64(output, op, offset, 64)\n    len -= 64\n  }\n  if (len > 64) {\n    op = emitCopyLessThan64(output, op, offset, 60)\n    len -= 60\n  }\n  return emitCopyLessThan64(output, op, offset, len)\n}\n\nfunction compressFragment (input, ip, inputSize, output, op) {\n  var hashTableBits = 1\n  while ((1 << hashTableBits) <= inputSize &&\n         hashTableBits <= MAX_HASH_TABLE_BITS) {\n    hashTableBits += 1\n  }\n  hashTableBits -= 1\n  var hashFuncShift = 32 - hashTableBits\n\n  if (typeof globalHashTables[hashTableBits] === 'undefined') {\n    globalHashTables[hashTableBits] = new Uint16Array(1 << hashTableBits)\n  }\n  var hashTable = globalHashTables[hashTableBits]\n  var i\n  for (i = 0; i < hashTable.length; i++) {\n    hashTable[i] = 0\n  }\n\n  var ipEnd = ip + inputSize\n  var ipLimit\n  var baseIp = ip\n  var nextEmit = ip\n\n  var hash, nextHash\n  var nextIp, candidate, skip\n  var bytesBetweenHashLookups\n  var base, matched, offset\n  var prevHash, curHash\n  var flag = true\n\n  var INPUT_MARGIN = 15\n  if (inputSize >= INPUT_MARGIN) {\n    ipLimit = ipEnd - INPUT_MARGIN\n\n    ip += 1\n    nextHash = hashFunc(load32(input, ip), hashFuncShift)\n\n    while (flag) {\n      skip = 32\n      nextIp = ip\n      do {\n        ip = nextIp\n        hash = nextHash\n        bytesBetweenHashLookups = skip >>> 5\n        skip += 1\n        nextIp = ip + bytesBetweenHashLookups\n        if (ip > ipLimit) {\n          flag = false\n          break\n        }\n        nextHash = hashFunc(load32(input, nextIp), hashFuncShift)\n        candidate = baseIp + hashTable[hash]\n        hashTable[hash] = ip - baseIp\n      } while (!equals32(input, ip, candidate))\n\n      if (!flag) {\n        break\n      }\n\n      op = emitLiteral(input, nextEmit, ip - nextEmit, output, op)\n\n      do {\n        base = ip\n        matched = 4\n        while (ip + matched < ipEnd && input[ip + matched] === input[candidate + matched]) {\n          matched += 1\n        }\n        ip += matched\n        offset = base - candidate\n        op = emitCopy(output, op, offset, matched)\n\n        nextEmit = ip\n        if (ip >= ipLimit) {\n          flag = false\n          break\n        }\n        prevHash = hashFunc(load32(input, ip - 1), hashFuncShift)\n        hashTable[prevHash] = ip - 1 - baseIp\n        curHash = hashFunc(load32(input, ip), hashFuncShift)\n        candidate = baseIp + hashTable[curHash]\n        hashTable[curHash] = ip - baseIp\n      } while (equals32(input, ip, candidate))\n\n      if (!flag) {\n        break\n      }\n\n      ip += 1\n      nextHash = hashFunc(load32(input, ip), hashFuncShift)\n    }\n  }\n\n  if (nextEmit < ipEnd) {\n    op = emitLiteral(input, nextEmit, ipEnd - nextEmit, output, op)\n  }\n\n  return op\n}\n\nfunction putVarint (value, output, op) {\n  do {\n    output[op] = value & 0x7f\n    value = value >>> 7\n    if (value > 0) {\n      output[op] += 0x80\n    }\n    op += 1\n  } while (value > 0)\n  return op\n}\n\nfunction SnappyCompressor (uncompressed) {\n  this.array = uncompressed\n}\n\nSnappyCompressor.prototype.maxCompressedLength = function () {\n  var sourceLen = this.array.length\n  return 32 + sourceLen + Math.floor(sourceLen / 6)\n}\n\nSnappyCompressor.prototype.compressToBuffer = function (outBuffer) {\n  var array = this.array\n  var length = array.length\n  var pos = 0\n  var outPos = 0\n\n  var fragmentSize\n\n  outPos = putVarint(length, outBuffer, outPos)\n  while (pos < length) {\n    fragmentSize = Math.min(length - pos, BLOCK_SIZE)\n    outPos = compressFragment(array, pos, fragmentSize, outBuffer, outPos)\n    pos += fragmentSize\n  }\n\n  return outPos\n}\n\nexports.SnappyCompressor = SnappyCompressor\n", "// The MIT License (MIT)\n//\n// Copyright (c) 2016 Zhipeng Jia\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n'use strict'\n\nfunction isNode () {\n  if (typeof process === 'object') {\n    if (typeof process.versions === 'object') {\n      if (typeof process.versions.node !== 'undefined') {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction isUint8Array (object) {\n  return object instanceof Uint8Array && (!isNode() || !Buffer.isBuffer(object))\n}\n\nfunction isArrayBuffer (object) {\n  return object instanceof ArrayBuffer\n}\n\nfunction isBuffer (object) {\n  if (!isNode()) {\n    return false\n  }\n  return Buffer.isBuffer(object)\n}\n\nvar SnappyDecompressor = require('./snappy_decompressor').SnappyDecompressor\nvar SnappyCompressor = require('./snappy_compressor').SnappyCompressor\n\nvar TYPE_ERROR_MSG = 'Argument compressed must be type of ArrayBuffer, Buffer, or Uint8Array'\n\nfunction uncompress (compressed) {\n  if (!isUint8Array(compressed) && !isArrayBuffer(compressed) && !isBuffer(compressed)) {\n    throw new TypeError(TYPE_ERROR_MSG)\n  }\n  var uint8Mode = false\n  var arrayBufferMode = false\n  if (isUint8Array(compressed)) {\n    uint8Mode = true\n  } else if (isArrayBuffer(compressed)) {\n    arrayBufferMode = true\n    compressed = new Uint8Array(compressed)\n  }\n  var decompressor = new SnappyDecompressor(compressed)\n  var length = decompressor.readUncompressedLength()\n  if (length === -1) {\n    throw new Error('Invalid Snappy bitstream')\n  }\n  var uncompressed, uncompressedView\n  if (uint8Mode) {\n    uncompressed = new Uint8Array(length)\n    if (!decompressor.uncompressToBuffer(uncompressed)) {\n      throw new Error('Invalid Snappy bitstream')\n    }\n  } else if (arrayBufferMode) {\n    uncompressed = new ArrayBuffer(length)\n    uncompressedView = new Uint8Array(uncompressed)\n    if (!decompressor.uncompressToBuffer(uncompressedView)) {\n      throw new Error('Invalid Snappy bitstream')\n    }\n  } else {\n    uncompressed = Buffer.alloc(length)\n    if (!decompressor.uncompressToBuffer(uncompressed)) {\n      throw new Error('Invalid Snappy bitstream')\n    }\n  }\n  return uncompressed\n}\n\nfunction compress (uncompressed) {\n  if (!isUint8Array(uncompressed) && !isArrayBuffer(uncompressed) && !isBuffer(uncompressed)) {\n    throw new TypeError(TYPE_ERROR_MSG)\n  }\n  var uint8Mode = false\n  var arrayBufferMode = false\n  if (isUint8Array(uncompressed)) {\n    uint8Mode = true\n  } else if (isArrayBuffer(uncompressed)) {\n    arrayBufferMode = true\n    uncompressed = new Uint8Array(uncompressed)\n  }\n  var compressor = new SnappyCompressor(uncompressed)\n  var maxLength = compressor.maxCompressedLength()\n  var compressed, compressedView\n  var length\n  if (uint8Mode) {\n    compressed = new Uint8Array(maxLength)\n    length = compressor.compressToBuffer(compressed)\n  } else if (arrayBufferMode) {\n    compressed = new ArrayBuffer(maxLength)\n    compressedView = new Uint8Array(compressed)\n    length = compressor.compressToBuffer(compressedView)\n  } else {\n    compressed = Buffer.alloc(maxLength)\n    length = compressor.compressToBuffer(compressed)\n  }\n  if (!compressed.slice) { // ie11\n    var compressedArray = new Uint8Array(Array.prototype.slice.call(compressed, 0, length))\n    if (uint8Mode) {\n      return compressedArray\n    } else if (arrayBufferMode) {\n      return compressedArray.buffer\n    } else {\n      throw new Error('Not implemented')\n    }\n  }\n\n  return compressed.slice(0, length)\n}\n\nexports.uncompress = uncompress\nexports.compress = compress\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `\\\n#version 300 es\n#define SHADER_NAME arc-layer-vertex-shader\nin vec3 positions;\nin vec4 instanceSourceColors;\nin vec4 instanceTargetColors;\nin vec3 instanceSourcePositions;\nin vec3 instanceSourcePositions64Low;\nin vec3 instanceTargetPositions;\nin vec3 instanceTargetPositions64Low;\nin vec3 instancePickingColors;\nin float instanceWidths;\nin float instanceHeights;\nin float instanceTilts;\nuniform bool greatCircle;\nuniform bool useShortestPath;\nuniform float numSegments;\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform int widthUnits;\nout vec4 vColor;\nout vec2 uv;\nout float isValid;\nfloat paraboloid(float distance, float sourceZ, float targetZ, float ratio) {\nfloat deltaZ = targetZ - sourceZ;\nfloat dh = distance * instanceHeights;\nif (dh == 0.0) {\nreturn sourceZ + deltaZ * ratio;\n}\nfloat unitZ = deltaZ / dh;\nfloat p2 = unitZ * unitZ + 1.0;\nfloat dir = step(deltaZ, 0.0);\nfloat z0 = mix(sourceZ, targetZ, dir);\nfloat r = mix(ratio, 1.0 - ratio, dir);\nreturn sqrt(r * (p2 - r)) * dh + z0;\n}\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\nvec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\ndir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\nreturn dir_screenspace * offset_direction * width / 2.0;\n}\nfloat getSegmentRatio(float index) {\nreturn smoothstep(0.0, 1.0, index / (numSegments - 1.0));\n}\nvec3 interpolateFlat(vec3 source, vec3 target, float segmentRatio) {\nfloat distance = length(source.xy - target.xy);\nfloat z = paraboloid(distance, source.z, target.z, segmentRatio);\nfloat tiltAngle = radians(instanceTilts);\nvec2 tiltDirection = normalize(target.xy - source.xy);\nvec2 tilt = vec2(-tiltDirection.y, tiltDirection.x) * z * sin(tiltAngle);\nreturn vec3(\nmix(source.xy, target.xy, segmentRatio) + tilt,\nz * cos(tiltAngle)\n);\n}\nfloat getAngularDist (vec2 source, vec2 target) {\nvec2 sourceRadians = radians(source);\nvec2 targetRadians = radians(target);\nvec2 sin_half_delta = sin((sourceRadians - targetRadians) / 2.0);\nvec2 shd_sq = sin_half_delta * sin_half_delta;\nfloat a = shd_sq.y + cos(sourceRadians.y) * cos(targetRadians.y) * shd_sq.x;\nreturn 2.0 * asin(sqrt(a));\n}\nvec3 interpolateGreatCircle(vec3 source, vec3 target, vec3 source3D, vec3 target3D, float angularDist, float t) {\nvec2 lngLat;\nif(abs(angularDist - PI) < 0.001) {\nlngLat = (1.0 - t) * source.xy + t * target.xy;\n} else {\nfloat a = sin((1.0 - t) * angularDist);\nfloat b = sin(t * angularDist);\nvec3 p = source3D.yxz * a + target3D.yxz * b;\nlngLat = degrees(vec2(atan(p.y, -p.x), atan(p.z, length(p.xy))));\n}\nfloat z = paraboloid(angularDist * EARTH_RADIUS, source.z, target.z, t);\nreturn vec3(lngLat, z);\n}\nvoid main(void) {\ngeometry.worldPosition = instanceSourcePositions;\ngeometry.worldPositionAlt = instanceTargetPositions;\nfloat segmentIndex = positions.x;\nfloat segmentRatio = getSegmentRatio(segmentIndex);\nfloat prevSegmentRatio = getSegmentRatio(max(0.0, segmentIndex - 1.0));\nfloat nextSegmentRatio = getSegmentRatio(min(numSegments - 1.0, segmentIndex + 1.0));\nfloat indexDir = mix(-1.0, 1.0, step(segmentIndex, 0.0));\nisValid = 1.0;\nuv = vec2(segmentRatio, positions.y);\ngeometry.uv = uv;\ngeometry.pickingColor = instancePickingColors;\nvec4 curr;\nvec4 next;\nvec3 source;\nvec3 target;\nif ((greatCircle || project_uProjectionMode == PROJECTION_MODE_GLOBE) && project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nsource = project_globe_(vec3(instanceSourcePositions.xy, 0.0));\ntarget = project_globe_(vec3(instanceTargetPositions.xy, 0.0));\nfloat angularDist = getAngularDist(instanceSourcePositions.xy, instanceTargetPositions.xy);\nvec3 prevPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, prevSegmentRatio);\nvec3 currPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, segmentRatio);\nvec3 nextPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, nextSegmentRatio);\nif (abs(currPos.x - prevPos.x) > 180.0) {\nindexDir = -1.0;\nisValid = 0.0;\n} else if (abs(currPos.x - nextPos.x) > 180.0) {\nindexDir = 1.0;\nisValid = 0.0;\n}\nnextPos = indexDir < 0.0 ? prevPos : nextPos;\nnextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\nif (isValid == 0.0) {\nnextPos.x += nextPos.x > 0.0 ? -360.0 : 360.0;\nfloat t = ((currPos.x > 0.0 ? 180.0 : -180.0) - currPos.x) / (nextPos.x - currPos.x);\ncurrPos = mix(currPos, nextPos, t);\nsegmentRatio = mix(segmentRatio, nextSegmentRatio, t);\n}\nvec3 currPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, segmentRatio);\nvec3 nextPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, nextSegmentRatio);\ncurr = project_position_to_clipspace(currPos, currPos64Low, vec3(0.0), geometry.position);\nnext = project_position_to_clipspace(nextPos, nextPos64Low, vec3(0.0));\n} else {\nvec3 source_world = instanceSourcePositions;\nvec3 target_world = instanceTargetPositions;\nif (useShortestPath) {\nsource_world.x = mod(source_world.x + 180., 360.0) - 180.;\ntarget_world.x = mod(target_world.x + 180., 360.0) - 180.;\nfloat deltaLng = target_world.x - source_world.x;\nif (deltaLng > 180.) target_world.x -= 360.;\nif (deltaLng < -180.) source_world.x -= 360.;\n}\nsource = project_position(source_world, instanceSourcePositions64Low);\ntarget = project_position(target_world, instanceTargetPositions64Low);\nfloat antiMeridianX = 0.0;\nif (useShortestPath) {\nif (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\nantiMeridianX = -(project_uCoordinateOrigin.x + 180.) / 360. * TILE_SIZE;\n}\nfloat thresholdRatio = (antiMeridianX - source.x) / (target.x - source.x);\nif (prevSegmentRatio <= thresholdRatio && nextSegmentRatio > thresholdRatio) {\nisValid = 0.0;\nindexDir = sign(segmentRatio - thresholdRatio);\nsegmentRatio = thresholdRatio;\n}\n}\nnextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\nvec3 currPos = interpolateFlat(source, target, segmentRatio);\nvec3 nextPos = interpolateFlat(source, target, nextSegmentRatio);\nif (useShortestPath) {\nif (nextPos.x < antiMeridianX) {\ncurrPos.x += TILE_SIZE;\nnextPos.x += TILE_SIZE;\n}\n}\ncurr = project_common_position_to_clipspace(vec4(currPos, 1.0));\nnext = project_common_position_to_clipspace(vec4(nextPos, 1.0));\ngeometry.position = vec4(currPos, 1.0);\n}\nfloat widthPixels = clamp(\nproject_size_to_pixel(instanceWidths * widthScale, widthUnits),\nwidthMinPixels, widthMaxPixels\n);\nvec3 offset = vec3(\ngetExtrusionOffset((next.xy - curr.xy) * indexDir, positions.y, widthPixels),\n0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\nDECKGL_FILTER_GL_POSITION(curr, geometry);\ngl_Position = curr + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\nvec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio);\nvColor = vec4(color.rgb, color.a * opacity);\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `\\\n#version 300 es\n#define SHADER_NAME arc-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nin vec2 uv;\nin float isValid;\nout vec4 fragColor;\nvoid main(void) {\nif (isValid == 0.0) {\ndiscard;\n}\nfragColor = vColor;\ngeometry.uv = uv;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { Layer, project32, picking, UNIT } from '@deck.gl/core';\nimport { Geometry } from '@luma.gl/engine';\nimport { Model } from '@luma.gl/engine';\nimport vs from \"./arc-layer-vertex.glsl.js\";\nimport fs from \"./arc-layer-fragment.glsl.js\";\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n    getSourcePosition: { type: 'accessor', value: (x) => x.sourcePosition },\n    getTargetPosition: { type: 'accessor', value: (x) => x.targetPosition },\n    getSourceColor: { type: 'accessor', value: DEFAULT_COLOR },\n    getTargetColor: { type: 'accessor', value: DEFAULT_COLOR },\n    getWidth: { type: 'accessor', value: 1 },\n    getHeight: { type: 'accessor', value: 1 },\n    getTilt: { type: 'accessor', value: 0 },\n    greatCircle: false,\n    numSegments: { type: 'number', value: 50, min: 1 },\n    widthUnits: 'pixels',\n    widthScale: { type: 'number', value: 1, min: 0 },\n    widthMinPixels: { type: 'number', value: 0, min: 0 },\n    widthMaxPixels: { type: 'number', value: Number.MAX_SAFE_INTEGER, min: 0 }\n};\n/** Render raised arcs joining pairs of source and target coordinates. */\nexport default class ArcLayer extends Layer {\n    static { this.layerName = 'ArcLayer'; }\n    static { this.defaultProps = defaultProps; }\n    getBounds() {\n        return this.getAttributeManager()?.getBounds([\n            'instanceSourcePositions',\n            'instanceTargetPositions'\n        ]);\n    }\n    getShaders() {\n        return super.getShaders({ vs, fs, modules: [project32, picking] }); // 'project' module added by default.\n    }\n    // This layer has its own wrapLongitude logic\n    get wrapLongitude() {\n        return false;\n    }\n    initializeState() {\n        const attributeManager = this.getAttributeManager();\n        /* eslint-disable max-len */\n        attributeManager.addInstanced({\n            instanceSourcePositions: {\n                size: 3,\n                type: 'float64',\n                fp64: this.use64bitPositions(),\n                transition: true,\n                accessor: 'getSourcePosition'\n            },\n            instanceTargetPositions: {\n                size: 3,\n                type: 'float64',\n                fp64: this.use64bitPositions(),\n                transition: true,\n                accessor: 'getTargetPosition'\n            },\n            instanceSourceColors: {\n                size: this.props.colorFormat.length,\n                type: 'unorm8',\n                transition: true,\n                accessor: 'getSourceColor',\n                defaultValue: DEFAULT_COLOR\n            },\n            instanceTargetColors: {\n                size: this.props.colorFormat.length,\n                type: 'unorm8',\n                transition: true,\n                accessor: 'getTargetColor',\n                defaultValue: DEFAULT_COLOR\n            },\n            instanceWidths: {\n                size: 1,\n                transition: true,\n                accessor: 'getWidth',\n                defaultValue: 1\n            },\n            instanceHeights: {\n                size: 1,\n                transition: true,\n                accessor: 'getHeight',\n                defaultValue: 1\n            },\n            instanceTilts: {\n                size: 1,\n                transition: true,\n                accessor: 'getTilt',\n                defaultValue: 0\n            }\n        });\n        /* eslint-enable max-len */\n    }\n    updateState(opts) {\n        super.updateState(opts);\n        const { props, oldProps, changeFlags } = opts;\n        // Re-generate model if geometry changed\n        if (changeFlags.extensionsChanged || props.numSegments !== oldProps.numSegments) {\n            this.state.model?.destroy();\n            this.state.model = this._getModel();\n            this.getAttributeManager().invalidateAll();\n        }\n    }\n    draw({ uniforms }) {\n        const { widthUnits, widthScale, widthMinPixels, widthMaxPixels, greatCircle, wrapLongitude } = this.props;\n        const model = this.state.model;\n        model.setUniforms(uniforms);\n        model.setUniforms({\n            greatCircle,\n            widthUnits: UNIT[widthUnits],\n            widthScale,\n            widthMinPixels,\n            widthMaxPixels,\n            useShortestPath: wrapLongitude\n        });\n        model.draw(this.context.renderPass);\n    }\n    _getModel() {\n        const { numSegments } = this.props;\n        let positions = [];\n        /*\n         *  (0, -1)-------------_(1, -1)\n         *       |          _,-\"  |\n         *       o      _,-\"      o\n         *       |  _,-\"          |\n         *   (0, 1)\"-------------(1, 1)\n         */\n        for (let i = 0; i < numSegments; i++) {\n            positions = positions.concat([i, 1, 0, i, -1, 0]);\n        }\n        const model = new Model(this.context.device, {\n            ...this.getShaders(),\n            id: this.props.id,\n            bufferLayout: this.getAttributeManager().getBufferLayouts(),\n            geometry: new Geometry({\n                topology: 'triangle-strip',\n                attributes: {\n                    positions: { size: 3, value: new Float32Array(positions) }\n                }\n            }),\n            isInstanced: true\n        });\n        model.setUniforms({ numSegments });\n        return model;\n    }\n}\n", "import { lerp } from '@math.gl/core';\nconst DEFAULT_INDICES = new Uint32Array([0, 2, 1, 0, 3, 2]);\nconst DEFAULT_TEX_COORDS = new Float32Array([0, 1, 0, 0, 1, 0, 1, 1]);\n/*\n  1 ---- 2\n  |      |\n  |      |\n  0 ---- 3\n*/\n/* eslint-disable max-statements */\nexport default function createMesh(bounds, resolution) {\n    if (!resolution) {\n        return createQuad(bounds);\n    }\n    const maxXSpan = Math.max(Math.abs(bounds[0][0] - bounds[3][0]), Math.abs(bounds[1][0] - bounds[2][0]));\n    const maxYSpan = Math.max(Math.abs(bounds[1][1] - bounds[0][1]), Math.abs(bounds[2][1] - bounds[3][1]));\n    const uCount = Math.ceil(maxXSpan / resolution) + 1;\n    const vCount = Math.ceil(maxYSpan / resolution) + 1;\n    const vertexCount = (uCount - 1) * (vCount - 1) * 6;\n    const indices = new Uint32Array(vertexCount);\n    const texCoords = new Float32Array(uCount * vCount * 2);\n    const positions = new Float64Array(uCount * vCount * 3);\n    // Tesselate\n    let vertex = 0;\n    let index = 0;\n    for (let u = 0; u < uCount; u++) {\n        const ut = u / (uCount - 1);\n        for (let v = 0; v < vCount; v++) {\n            const vt = v / (vCount - 1);\n            const p = interpolateQuad(bounds, ut, vt);\n            positions[vertex * 3 + 0] = p[0];\n            positions[vertex * 3 + 1] = p[1];\n            positions[vertex * 3 + 2] = p[2] || 0;\n            texCoords[vertex * 2 + 0] = ut;\n            texCoords[vertex * 2 + 1] = 1 - vt;\n            if (u > 0 && v > 0) {\n                indices[index++] = vertex - vCount;\n                indices[index++] = vertex - vCount - 1;\n                indices[index++] = vertex - 1;\n                indices[index++] = vertex - vCount;\n                indices[index++] = vertex - 1;\n                indices[index++] = vertex;\n            }\n            vertex++;\n        }\n    }\n    return {\n        vertexCount,\n        positions,\n        indices,\n        texCoords\n    };\n}\nfunction createQuad(bounds) {\n    const positions = new Float64Array(12);\n    // [[minX, minY], [minX, maxY], [maxX, maxY], [maxX, minY]]\n    for (let i = 0; i < bounds.length; i++) {\n        positions[i * 3 + 0] = bounds[i][0];\n        positions[i * 3 + 1] = bounds[i][1];\n        positions[i * 3 + 2] = bounds[i][2] || 0;\n    }\n    return {\n        vertexCount: 6,\n        positions,\n        indices: DEFAULT_INDICES,\n        texCoords: DEFAULT_TEX_COORDS\n    };\n}\nfunction interpolateQuad(quad, ut, vt) {\n    return lerp(lerp(quad[0], quad[1], vt), lerp(quad[3], quad[2], vt), ut);\n}\n", "export default `\\\n#version 300 es\n#define SHADER_NAME bitmap-layer-vertex-shader\n\nin vec2 texCoords;\nin vec3 positions;\nin vec3 positions64Low;\n\nout vec2 vTexCoord;\nout vec2 vTexPos;\n\nuniform float coordinateConversion;\n\nconst vec3 pickingColor = vec3(1.0, 0.0, 0.0);\n\nvoid main(void) {\n  geometry.worldPosition = positions;\n  geometry.uv = texCoords;\n  geometry.pickingColor = pickingColor;\n\n  gl_Position = project_position_to_clipspace(positions, positions64Low, vec3(0.0), geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  vTexCoord = texCoords;\n\n  if (coordinateConversion < -0.5) {\n    vTexPos = geometry.position.xy + project_uCommonOrigin.xy;\n  } else if (coordinateConversion > 0.5) {\n    vTexPos = geometry.worldPosition.xy;\n  }\n\n  vec4 color = vec4(0.0);\n  DECKGL_FILTER_COLOR(color, geometry);\n}\n`;\n", "/**\n * Pack the top 12 bits of two normalized floats into 3 8-bit (rgb) values\n * This enables addressing 4096x4096 individual pixels\n *\n * returns vec3 encoded RGB colors\n *  result.r - top 8 bits of u\n *  result.g - top 8 bits of v\n *  result.b - next 4 bits of u and v: (u + v * 16)\n */\nconst packUVsIntoRGB = `\nvec3 packUVsIntoRGB(vec2 uv) {\n  // Extract the top 8 bits. We want values to be truncated down so we can add a fraction\n  vec2 uv8bit = floor(uv * 256.);\n\n  // Calculate the normalized remainders of u and v parts that do not fit into 8 bits\n  // Scale and clamp to 0-1 range\n  vec2 uvFraction = fract(uv * 256.);\n  vec2 uvFraction4bit = floor(uvFraction * 16.);\n\n  // Remainder can be encoded in blue channel, encode as 4 bits for pixel coordinates\n  float fractions = uvFraction4bit.x + uvFraction4bit.y * 16.;\n\n  return vec3(uv8bit, fractions) / 255.;\n}\n`;\nexport default `\\\n#version 300 es\n#define SHADER_NAME bitmap-layer-fragment-shader\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform sampler2D bitmapTexture;\n\nin vec2 vTexCoord;\nin vec2 vTexPos;\n\nout vec4 fragColor;\n\nuniform float desaturate;\nuniform vec4 transparentColor;\nuniform vec3 tintColor;\nuniform float opacity;\n\nuniform float coordinateConversion;\nuniform vec4 bounds;\n\n/* projection utils */\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / PI / 2.0;\n\n// from degrees to Web Mercator\nvec2 lnglat_to_mercator(vec2 lnglat) {\n  float x = lnglat.x;\n  float y = clamp(lnglat.y, -89.9, 89.9);\n  return vec2(\n    radians(x) + PI,\n    PI + log(tan(PI * 0.25 + radians(y) * 0.5))\n  ) * WORLD_SCALE;\n}\n\n// from Web Mercator to degrees\nvec2 mercator_to_lnglat(vec2 xy) {\n  xy /= WORLD_SCALE;\n  return degrees(vec2(\n    xy.x - PI,\n    atan(exp(xy.y - PI)) * 2.0 - PI * 0.5\n  ));\n}\n/* End projection utils */\n\n// apply desaturation\nvec3 color_desaturate(vec3 color) {\n  float luminance = (color.r + color.g + color.b) * 0.333333333;\n  return mix(color, vec3(luminance), desaturate);\n}\n\n// apply tint\nvec3 color_tint(vec3 color) {\n  return color * tintColor;\n}\n\n// blend with background color\nvec4 apply_opacity(vec3 color, float alpha) {\n  if (transparentColor.a == 0.0) {\n    return vec4(color, alpha);\n  }\n  float blendedAlpha = alpha + transparentColor.a * (1.0 - alpha);\n  float highLightRatio = alpha / blendedAlpha;\n  vec3 blendedRGB = mix(transparentColor.rgb, color, highLightRatio);\n  return vec4(blendedRGB, blendedAlpha);\n}\n\nvec2 getUV(vec2 pos) {\n  return vec2(\n    (pos.x - bounds[0]) / (bounds[2] - bounds[0]),\n    (pos.y - bounds[3]) / (bounds[1] - bounds[3])\n  );\n}\n\n${packUVsIntoRGB}\n\nvoid main(void) {\n  vec2 uv = vTexCoord;\n  if (coordinateConversion < -0.5) {\n    vec2 lnglat = mercator_to_lnglat(vTexPos);\n    uv = getUV(lnglat);\n  } else if (coordinateConversion > 0.5) {\n    vec2 commonPos = lnglat_to_mercator(vTexPos);\n    uv = getUV(commonPos);\n  }\n  vec4 bitmapColor = texture(bitmapTexture, uv);\n\n  fragColor = apply_opacity(color_tint(color_desaturate(bitmapColor.rgb)), bitmapColor.a * opacity);\n\n  geometry.uv = uv;\n  DECKGL_FILTER_COLOR(fragColor, geometry);\n\n  if (bool(picking.isActive) && !bool(picking.isAttribute)) {\n    // Since instance information is not used, we can use picking color for pixel index\n    fragColor.rgb = packUVsIntoRGB(uv);\n  }\n}\n`;\n", "// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { Layer, project32, picking, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { Model } from '@luma.gl/engine';\nimport { lngLatToWorld } from '@math.gl/web-mercator';\nimport createMesh from \"./create-mesh.js\";\nimport vs from \"./bitmap-layer-vertex.js\";\nimport fs from \"./bitmap-layer-fragment.js\";\nconst defaultProps = {\n    image: { type: 'image', value: null, async: true },\n    bounds: { type: 'array', value: [1, 0, 0, 1], compare: true },\n    _imageCoordinateSystem: COORDINATE_SYSTEM.DEFAULT,\n    desaturate: { type: 'number', min: 0, max: 1, value: 0 },\n    // More context: because of the blending mode we're using for ground imagery,\n    // alpha is not effective when blending the bitmap layers with the base map.\n    // Instead we need to manually dim/blend rgb values with a background color.\n    transparentColor: { type: 'color', value: [0, 0, 0, 0] },\n    tintColor: { type: 'color', value: [255, 255, 255] },\n    textureParameters: { type: 'object', ignore: true, value: null }\n};\n/** Render a bitmap at specified boundaries. */\nexport default class BitmapLayer extends Layer {\n    static { this.layerName = 'BitmapLayer'; }\n    static { this.defaultProps = defaultProps; }\n    getShaders() {\n        return super.getShaders({ vs, fs, modules: [project32, picking] });\n    }\n    initializeState() {\n        const attributeManager = this.getAttributeManager();\n        attributeManager.remove(['instancePickingColors']);\n        const noAlloc = true;\n        attributeManager.add({\n            indices: {\n                size: 1,\n                isIndexed: true,\n                update: attribute => (attribute.value = this.state.mesh.indices),\n                noAlloc\n            },\n            positions: {\n                size: 3,\n                type: 'float64',\n                fp64: this.use64bitPositions(),\n                update: attribute => (attribute.value = this.state.mesh.positions),\n                noAlloc\n            },\n            texCoords: {\n                size: 2,\n                update: attribute => (attribute.value = this.state.mesh.texCoords),\n                noAlloc\n            }\n        });\n    }\n    updateState({ props, oldProps, changeFlags }) {\n        // setup model first\n        const attributeManager = this.getAttributeManager();\n        if (changeFlags.extensionsChanged) {\n            this.state.model?.destroy();\n            this.state.model = this._getModel();\n            attributeManager.invalidateAll();\n        }\n        if (props.bounds !== oldProps.bounds) {\n            const oldMesh = this.state.mesh;\n            const mesh = this._createMesh();\n            this.state.model.setVertexCount(mesh.vertexCount);\n            for (const key in mesh) {\n                if (oldMesh && oldMesh[key] !== mesh[key]) {\n                    attributeManager.invalidate(key);\n                }\n            }\n            this.setState({ mesh, ...this._getCoordinateUniforms() });\n        }\n        else if (props._imageCoordinateSystem !== oldProps._imageCoordinateSystem) {\n            this.setState(this._getCoordinateUniforms());\n        }\n    }\n    getPickingInfo(params) {\n        const { image } = this.props;\n        const info = params.info;\n        if (!info.color || !image) {\n            info.bitmap = null;\n            return info;\n        }\n        const { width, height } = image;\n        // Picking color doesn't represent object index in this layer\n        info.index = 0;\n        // Calculate uv and pixel in bitmap\n        const uv = unpackUVsFromRGB(info.color);\n        info.bitmap = {\n            size: { width, height },\n            uv,\n            pixel: [Math.floor(uv[0] * width), Math.floor(uv[1] * height)]\n        };\n        return info;\n    }\n    // Override base Layer multi-depth picking logic\n    disablePickingIndex() {\n        this.setState({ disablePicking: true });\n    }\n    restorePickingColors() {\n        this.setState({ disablePicking: false });\n    }\n    _updateAutoHighlight(info) {\n        super._updateAutoHighlight({\n            ...info,\n            color: this.encodePickingColor(0)\n        });\n    }\n    _createMesh() {\n        const { bounds } = this.props;\n        let normalizedBounds = bounds;\n        // bounds as [minX, minY, maxX, maxY]\n        if (isRectangularBounds(bounds)) {\n            /*\n              (minX0, maxY3) ---- (maxX2, maxY3)\n                     |                  |\n                     |                  |\n                     |                  |\n              (minX0, minY1) ---- (maxX2, minY1)\n           */\n            normalizedBounds = [\n                [bounds[0], bounds[1]],\n                [bounds[0], bounds[3]],\n                [bounds[2], bounds[3]],\n                [bounds[2], bounds[1]]\n            ];\n        }\n        return createMesh(normalizedBounds, this.context.viewport.resolution);\n    }\n    _getModel() {\n        /*\n          0,0 --- 1,0\n           |       |\n          0,1 --- 1,1\n        */\n        return new Model(this.context.device, {\n            ...this.getShaders(),\n            id: this.props.id,\n            bufferLayout: this.getAttributeManager().getBufferLayouts(),\n            topology: 'triangle-list',\n            isInstanced: false\n        });\n    }\n    draw(opts) {\n        const { uniforms, moduleParameters } = opts;\n        const { model, coordinateConversion, bounds, disablePicking } = this.state;\n        const { image, desaturate, transparentColor, tintColor } = this.props;\n        if (moduleParameters.picking.isActive && disablePicking) {\n            return;\n        }\n        // // TODO fix zFighting\n        // Render the image\n        if (image && model) {\n            model.setUniforms(uniforms);\n            model.setBindings({ bitmapTexture: image });\n            model.setUniforms({\n                desaturate,\n                transparentColor: transparentColor.map(x => x / 255),\n                tintColor: tintColor.slice(0, 3).map(x => x / 255),\n                coordinateConversion,\n                bounds\n            });\n            model.draw(this.context.renderPass);\n        }\n    }\n    _getCoordinateUniforms() {\n        const { LNGLAT, CARTESIAN, DEFAULT } = COORDINATE_SYSTEM;\n        let { _imageCoordinateSystem: imageCoordinateSystem } = this.props;\n        if (imageCoordinateSystem !== DEFAULT) {\n            const { bounds } = this.props;\n            if (!isRectangularBounds(bounds)) {\n                throw new Error('_imageCoordinateSystem only supports rectangular bounds');\n            }\n            // The default behavior (linearly interpolated tex coords)\n            const defaultImageCoordinateSystem = this.context.viewport.resolution ? LNGLAT : CARTESIAN;\n            imageCoordinateSystem = imageCoordinateSystem === LNGLAT ? LNGLAT : CARTESIAN;\n            if (imageCoordinateSystem === LNGLAT && defaultImageCoordinateSystem === CARTESIAN) {\n                // LNGLAT in Mercator, e.g. display LNGLAT-encoded image in WebMercator projection\n                return { coordinateConversion: -1, bounds };\n            }\n            if (imageCoordinateSystem === CARTESIAN && defaultImageCoordinateSystem === LNGLAT) {\n                // Mercator in LNGLAT, e.g. display WebMercator encoded image in Globe projection\n                const bottomLeft = lngLatToWorld([bounds[0], bounds[1]]);\n                const topRight = lngLatToWorld([bounds[2], bounds[3]]);\n                return {\n                    coordinateConversion: 1,\n                    bounds: [bottomLeft[0], bottomLeft[1], topRight[0], topRight[1]]\n                };\n            }\n        }\n        return {\n            coordinateConversion: 0,\n            bounds: [0, 0, 0, 0]\n        };\n    }\n}\n/**\n * Decode uv floats from rgb bytes where b contains 4-bit fractions of uv\n * @param {number[]} color\n * @returns {number[]} uvs\n * https://stackoverflow.com/questions/30242013/glsl-compressing-packing-multiple-0-1-colours-var4-into-a-single-var4-variab\n */\nfunction unpackUVsFromRGB(color) {\n    const [u, v, fracUV] = color;\n    const vFrac = (fracUV & 0xf0) / 256;\n    const uFrac = (fracUV & 0x0f) / 16;\n    return [(u + uFrac) / 256, (v + vFrac) / 256];\n}\nfunction isRectangularBounds(bounds) {\n    return Number.isFinite(bounds[0]);\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `\\\n#version 300 es\n#define SHADER_NAME icon-layer-vertex-shader\nin vec2 positions;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin float instanceSizes;\nin float instanceAngles;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin vec4 instanceIconFrames;\nin float instanceColorModes;\nin vec2 instanceOffsets;\nin vec2 instancePixelOffset;\nuniform float sizeScale;\nuniform vec2 iconsTextureDim;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform bool billboard;\nuniform int sizeUnits;\nout float vColorMode;\nout vec4 vColor;\nout vec2 vTextureCoords;\nout vec2 uv;\nvec2 rotate_by_angle(vec2 vertex, float angle) {\nfloat angle_radian = angle * PI / 180.0;\nfloat cos_angle = cos(angle_radian);\nfloat sin_angle = sin(angle_radian);\nmat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\nreturn rotationMatrix * vertex;\n}\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\ngeometry.uv = positions;\ngeometry.pickingColor = instancePickingColors;\nuv = positions;\nvec2 iconSize = instanceIconFrames.zw;\nfloat sizePixels = clamp(\nproject_size_to_pixel(instanceSizes * sizeScale, sizeUnits),\nsizeMinPixels, sizeMaxPixels\n);\nfloat instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;\nvec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;\npixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;\npixelOffset += instancePixelOffset;\npixelOffset.y *= -1.0;\nif (billboard)  {\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvec3 offset = vec3(pixelOffset, 0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\ngl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n} else {\nvec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\nDECKGL_FILTER_SIZE(offset_common, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n}\nvTextureCoords = mix(\ninstanceIconFrames.xy,\ninstanceIconFrames.xy + iconSize,\n(positions.xy + 1.0) / 2.0\n) / iconsTextureDim;\nvColor = instanceColors;\nDECKGL_FILTER_COLOR(vColor, geometry);\nvColorMode = instanceColorModes;\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `\\\n#version 300 es\n#define SHADER_NAME icon-layer-fragment-shader\nprecision highp float;\nuniform float opacity;\nuniform sampler2D iconsTexture;\nuniform float alphaCutoff;\nin float vColorMode;\nin vec4 vColor;\nin vec2 vTextureCoords;\nin vec2 uv;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = uv;\nvec4 texColor = texture(iconsTexture, vTextureCoords);\nvec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);\nfloat a = texColor.a * opacity * vColor.a;\nif (a < alphaCutoff) {\ndiscard;\n}\nfragColor = vec4(color, a);\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n`;\n", "import { load } from '@loaders.gl/core';\nimport { createIterable } from '@deck.gl/core';\nconst DEFAULT_CANVAS_WIDTH = 1024;\nconst DEFAULT_BUFFER = 4;\nconst noop = () => { };\nconst DEFAULT_SAMPLER_PARAMETERS = {\n    minFilter: 'linear',\n    mipmapFilter: 'linear',\n    // LINEAR is the default value but explicitly set it here\n    magFilter: 'linear',\n    // minimize texture boundary artifacts\n    addressModeU: 'clamp-to-edge',\n    addressModeV: 'clamp-to-edge'\n};\nconst MISSING_ICON = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n};\nfunction nextPowOfTwo(number) {\n    return Math.pow(2, Math.ceil(Math.log2(number)));\n}\n// update comment to create a new texture and copy original data.\nfunction resizeImage(ctx, imageData, maxWidth, maxHeight) {\n    const resizeRatio = Math.min(maxWidth / imageData.width, maxHeight / imageData.height);\n    const width = Math.floor(imageData.width * resizeRatio);\n    const height = Math.floor(imageData.height * resizeRatio);\n    if (resizeRatio === 1) {\n        // No resizing required\n        return { data: imageData, width, height };\n    }\n    ctx.canvas.height = height;\n    ctx.canvas.width = width;\n    ctx.clearRect(0, 0, width, height);\n    // image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight\n    ctx.drawImage(imageData, 0, 0, imageData.width, imageData.height, 0, 0, width, height);\n    return { data: ctx.canvas, width, height };\n}\nfunction getIconId(icon) {\n    return icon && (icon.id || icon.url);\n}\n// resize texture without losing original data\nfunction resizeTexture(texture, width, height, sampler) {\n    const { width: oldWidth, height: oldHeight, device } = texture;\n    const newTexture = device.createTexture({ format: 'rgba8unorm', width, height, sampler });\n    const commandEncoder = device.createCommandEncoder();\n    commandEncoder.copyTextureToTexture({\n        source: texture,\n        destination: newTexture,\n        width: oldWidth,\n        height: oldHeight\n    });\n    commandEncoder.finish();\n    texture.destroy();\n    return newTexture;\n}\n// traverse icons in a row of icon atlas\n// extend each icon with left-top coordinates\nfunction buildRowMapping(mapping, columns, yOffset) {\n    for (let i = 0; i < columns.length; i++) {\n        const { icon, xOffset } = columns[i];\n        const id = getIconId(icon);\n        mapping[id] = {\n            ...icon,\n            x: xOffset,\n            y: yOffset\n        };\n    }\n}\n/**\n * Generate coordinate mapping to retrieve icon left-top position from an icon atlas\n */\nexport function buildMapping({ icons, buffer, mapping = {}, xOffset = 0, yOffset = 0, rowHeight = 0, canvasWidth }) {\n    let columns = [];\n    // Strategy to layout all the icons into a texture:\n    // traverse the icons sequentially, layout the icons from left to right, top to bottom\n    // when the sum of the icons width is equal or larger than canvasWidth,\n    // move to next row starting from total height so far plus max height of the icons in previous row\n    // row width is equal to canvasWidth\n    // row height is decided by the max height of the icons in that row\n    // mapping coordinates of each icon is its left-top position in the texture\n    for (let i = 0; i < icons.length; i++) {\n        const icon = icons[i];\n        const id = getIconId(icon);\n        if (!mapping[id]) {\n            const { height, width } = icon;\n            // fill one row\n            if (xOffset + width + buffer > canvasWidth) {\n                buildRowMapping(mapping, columns, yOffset);\n                xOffset = 0;\n                yOffset = rowHeight + yOffset + buffer;\n                rowHeight = 0;\n                columns = [];\n            }\n            columns.push({\n                icon,\n                xOffset\n            });\n            xOffset = xOffset + width + buffer;\n            rowHeight = Math.max(rowHeight, height);\n        }\n    }\n    if (columns.length > 0) {\n        buildRowMapping(mapping, columns, yOffset);\n    }\n    return {\n        mapping,\n        rowHeight,\n        xOffset,\n        yOffset,\n        canvasWidth,\n        canvasHeight: nextPowOfTwo(rowHeight + yOffset + buffer)\n    };\n}\n// extract icons from data\n// return icons should be unique, and not cached or cached but url changed\nexport function getDiffIcons(data, getIcon, cachedIcons) {\n    if (!data || !getIcon) {\n        return null;\n    }\n    cachedIcons = cachedIcons || {};\n    const icons = {};\n    const { iterable, objectInfo } = createIterable(data);\n    for (const object of iterable) {\n        objectInfo.index++;\n        const icon = getIcon(object, objectInfo);\n        const id = getIconId(icon);\n        if (!icon) {\n            throw new Error('Icon is missing.');\n        }\n        if (!icon.url) {\n            throw new Error('Icon url is missing.');\n        }\n        if (!icons[id] && (!cachedIcons[id] || icon.url !== cachedIcons[id].url)) {\n            icons[id] = { ...icon, source: object, sourceIndex: objectInfo.index };\n        }\n    }\n    return icons;\n}\nexport default class IconManager {\n    constructor(device, { onUpdate = noop, onError = noop }) {\n        this._loadOptions = null;\n        this._texture = null;\n        this._externalTexture = null;\n        this._mapping = {};\n        this._textureParameters = null;\n        /** count of pending requests to fetch icons */\n        this._pendingCount = 0;\n        this._autoPacking = false;\n        // / internal state used for autoPacking\n        this._xOffset = 0;\n        this._yOffset = 0;\n        this._rowHeight = 0;\n        this._buffer = DEFAULT_BUFFER;\n        this._canvasWidth = DEFAULT_CANVAS_WIDTH;\n        this._canvasHeight = 0;\n        this._canvas = null;\n        this.device = device;\n        this.onUpdate = onUpdate;\n        this.onError = onError;\n    }\n    finalize() {\n        this._texture?.delete();\n    }\n    getTexture() {\n        return this._texture || this._externalTexture;\n    }\n    getIconMapping(icon) {\n        const id = this._autoPacking ? getIconId(icon) : icon;\n        return this._mapping[id] || MISSING_ICON;\n    }\n    setProps({ loadOptions, autoPacking, iconAtlas, iconMapping, textureParameters }) {\n        if (loadOptions) {\n            this._loadOptions = loadOptions;\n        }\n        if (autoPacking !== undefined) {\n            this._autoPacking = autoPacking;\n        }\n        if (iconMapping) {\n            this._mapping = iconMapping;\n        }\n        if (iconAtlas) {\n            this._texture?.delete();\n            this._texture = null;\n            this._externalTexture = iconAtlas;\n        }\n        if (textureParameters) {\n            this._textureParameters = textureParameters;\n        }\n    }\n    get isLoaded() {\n        return this._pendingCount === 0;\n    }\n    packIcons(data, getIcon) {\n        if (!this._autoPacking || typeof document === 'undefined') {\n            return;\n        }\n        const icons = Object.values(getDiffIcons(data, getIcon, this._mapping) || {});\n        if (icons.length > 0) {\n            // generate icon mapping\n            const { mapping, xOffset, yOffset, rowHeight, canvasHeight } = buildMapping({\n                icons,\n                buffer: this._buffer,\n                canvasWidth: this._canvasWidth,\n                mapping: this._mapping,\n                rowHeight: this._rowHeight,\n                xOffset: this._xOffset,\n                yOffset: this._yOffset\n            });\n            this._rowHeight = rowHeight;\n            this._mapping = mapping;\n            this._xOffset = xOffset;\n            this._yOffset = yOffset;\n            this._canvasHeight = canvasHeight;\n            // create new texture\n            if (!this._texture) {\n                this._texture = this.device.createTexture({\n                    format: 'rgba8unorm',\n                    width: this._canvasWidth,\n                    height: this._canvasHeight,\n                    sampler: this._textureParameters || DEFAULT_SAMPLER_PARAMETERS\n                });\n            }\n            if (this._texture.height !== this._canvasHeight) {\n                this._texture = resizeTexture(this._texture, this._canvasWidth, this._canvasHeight, this._textureParameters || DEFAULT_SAMPLER_PARAMETERS);\n            }\n            this.onUpdate();\n            // load images\n            this._canvas = this._canvas || document.createElement('canvas');\n            this._loadIcons(icons);\n        }\n    }\n    _loadIcons(icons) {\n        // This method is only called in the auto packing case, where _canvas is defined\n        const ctx = this._canvas.getContext('2d', {\n            willReadFrequently: true\n        });\n        for (const icon of icons) {\n            this._pendingCount++;\n            load(icon.url, this._loadOptions)\n                .then(imageData => {\n                const id = getIconId(icon);\n                const iconDef = this._mapping[id];\n                const { x, y, width: maxWidth, height: maxHeight } = iconDef;\n                const { data, width, height } = resizeImage(ctx, imageData, maxWidth, maxHeight);\n                // @ts-expect-error TODO v9 API not yet clear\n                this._texture.setSubImageData({\n                    data,\n                    x: x + (maxWidth - width) / 2,\n                    y: y + (maxHeight - height) / 2,\n                    width,\n                    height\n                });\n                iconDef.width = width;\n                iconDef.height = height;\n                // Call to regenerate mipmaps after modifying texture(s)\n                // @ts-expect-error TODO v9 API not yet clear\n                this._texture.generateMipmap();\n                this.onUpdate();\n            })\n                .catch(error => {\n                this.onError({\n                    url: icon.url,\n                    source: icon.source,\n                    sourceIndex: icon.sourceIndex,\n                    loadOptions: this._loadOptions,\n                    error\n                });\n            })\n                .finally(() => {\n                this._pendingCount--;\n            });\n        }\n    }\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { Layer, project32, picking, log, UNIT } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/engine';\nimport vs from \"./icon-layer-vertex.glsl.js\";\nimport fs from \"./icon-layer-fragment.glsl.js\";\nimport IconManager from \"./icon-manager.js\";\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n    iconAtlas: { type: 'image', value: null, async: true },\n    iconMapping: { type: 'object', value: {}, async: true },\n    sizeScale: { type: 'number', value: 1, min: 0 },\n    billboard: true,\n    sizeUnits: 'pixels',\n    sizeMinPixels: { type: 'number', min: 0, value: 0 }, //  min point radius in pixels\n    sizeMaxPixels: { type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER }, // max point radius in pixels\n    alphaCutoff: { type: 'number', value: 0.05, min: 0, max: 1 },\n    getPosition: { type: 'accessor', value: (x) => x.position },\n    getIcon: { type: 'accessor', value: (x) => x.icon },\n    getColor: { type: 'accessor', value: DEFAULT_COLOR },\n    getSize: { type: 'accessor', value: 1 },\n    getAngle: { type: 'accessor', value: 0 },\n    getPixelOffset: { type: 'accessor', value: [0, 0] },\n    onIconError: { type: 'function', value: null, optional: true },\n    textureParameters: { type: 'object', ignore: true, value: null }\n};\n/** Render raster icons at given coordinates. */\nexport default class IconLayer extends Layer {\n    static { this.defaultProps = defaultProps; }\n    static { this.layerName = 'IconLayer'; }\n    getShaders() {\n        return super.getShaders({ vs, fs, modules: [project32, picking] });\n    }\n    initializeState() {\n        this.state = {\n            iconManager: new IconManager(this.context.device, {\n                onUpdate: this._onUpdate.bind(this),\n                onError: this._onError.bind(this)\n            })\n        };\n        const attributeManager = this.getAttributeManager();\n        /* eslint-disable max-len */\n        attributeManager.addInstanced({\n            instancePositions: {\n                size: 3,\n                type: 'float64',\n                fp64: this.use64bitPositions(),\n                transition: true,\n                accessor: 'getPosition'\n            },\n            instanceSizes: {\n                size: 1,\n                transition: true,\n                accessor: 'getSize',\n                defaultValue: 1\n            },\n            instanceOffsets: {\n                size: 2,\n                accessor: 'getIcon',\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                transform: this.getInstanceOffset\n            },\n            instanceIconFrames: {\n                size: 4,\n                accessor: 'getIcon',\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                transform: this.getInstanceIconFrame\n            },\n            instanceColorModes: {\n                size: 1,\n                type: 'uint8',\n                accessor: 'getIcon',\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                transform: this.getInstanceColorMode\n            },\n            instanceColors: {\n                size: this.props.colorFormat.length,\n                type: 'unorm8',\n                transition: true,\n                accessor: 'getColor',\n                defaultValue: DEFAULT_COLOR\n            },\n            instanceAngles: {\n                size: 1,\n                transition: true,\n                accessor: 'getAngle'\n            },\n            instancePixelOffset: {\n                size: 2,\n                transition: true,\n                accessor: 'getPixelOffset'\n            }\n        });\n        /* eslint-enable max-len */\n    }\n    /* eslint-disable max-statements, complexity */\n    updateState(params) {\n        super.updateState(params);\n        const { props, oldProps, changeFlags } = params;\n        const attributeManager = this.getAttributeManager();\n        const { iconAtlas, iconMapping, data, getIcon, textureParameters } = props;\n        const { iconManager } = this.state;\n        if (typeof iconAtlas === 'string') {\n            return;\n        }\n        // internalState is always defined during updateState\n        const prePacked = iconAtlas || this.internalState.isAsyncPropLoading('iconAtlas');\n        iconManager.setProps({\n            loadOptions: props.loadOptions,\n            autoPacking: !prePacked,\n            iconAtlas,\n            iconMapping: prePacked ? iconMapping : null,\n            textureParameters\n        });\n        // prepacked iconAtlas from user\n        if (prePacked) {\n            if (oldProps.iconMapping !== props.iconMapping) {\n                attributeManager.invalidate('getIcon');\n            }\n        }\n        else if (changeFlags.dataChanged ||\n            (changeFlags.updateTriggersChanged &&\n                (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getIcon))) {\n            // Auto packing - getIcon is expected to return an object\n            iconManager.packIcons(data, getIcon);\n        }\n        if (changeFlags.extensionsChanged) {\n            this.state.model?.destroy();\n            this.state.model = this._getModel();\n            attributeManager.invalidateAll();\n        }\n    }\n    /* eslint-enable max-statements, complexity */\n    get isLoaded() {\n        return super.isLoaded && this.state.iconManager.isLoaded;\n    }\n    finalizeState(context) {\n        super.finalizeState(context);\n        // Release resources held by the icon manager\n        this.state.iconManager.finalize();\n    }\n    draw({ uniforms }) {\n        const { sizeScale, sizeMinPixels, sizeMaxPixels, sizeUnits, billboard, alphaCutoff } = this.props;\n        const { iconManager } = this.state;\n        const iconsTexture = iconManager.getTexture();\n        if (iconsTexture) {\n            const model = this.state.model;\n            model.setBindings({ iconsTexture });\n            model.setUniforms(uniforms);\n            model.setUniforms({\n                iconsTextureDim: [iconsTexture.width, iconsTexture.height],\n                sizeUnits: UNIT[sizeUnits],\n                sizeScale,\n                sizeMinPixels,\n                sizeMaxPixels,\n                billboard,\n                alphaCutoff\n            });\n            model.draw(this.context.renderPass);\n        }\n    }\n    _getModel() {\n        // The icon-layer vertex shader uses 2d positions\n        // specifed via: in vec2 positions;\n        const positions = [-1, -1, 1, -1, -1, 1, 1, 1];\n        return new Model(this.context.device, {\n            ...this.getShaders(),\n            id: this.props.id,\n            bufferLayout: this.getAttributeManager().getBufferLayouts(),\n            geometry: new Geometry({\n                topology: 'triangle-strip',\n                attributes: {\n                    // The size must be explicitly passed here otherwise luma.gl\n                    // will default to assuming that positions are 3D (x,y,z)\n                    positions: {\n                        size: 2,\n                        value: new Float32Array(positions)\n                    }\n                }\n            }),\n            isInstanced: true\n        });\n    }\n    _onUpdate() {\n        this.setNeedsRedraw();\n    }\n    _onError(evt) {\n        const onIconError = this.getCurrentLayer()?.props.onIconError;\n        if (onIconError) {\n            onIconError(evt);\n        }\n        else {\n            log.error(evt.error.message)();\n        }\n    }\n    getInstanceOffset(icon) {\n        const { width, height, anchorX = width / 2, anchorY = height / 2 } = this.state.iconManager.getIconMapping(icon);\n        return [width / 2 - anchorX, height / 2 - anchorY];\n    }\n    getInstanceColorMode(icon) {\n        const mapping = this.state.iconManager.getIconMapping(icon);\n        return mapping.mask ? 1 : 0;\n    }\n    getInstanceIconFrame(icon) {\n        const { x, y, width, height } = this.state.iconManager.getIconMapping(icon);\n        return [x, y, width, height];\n    }\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `\\\n#version 300 es\n#define SHADER_NAME line-layer-vertex-shader\nin vec3 positions;\nin vec3 instanceSourcePositions;\nin vec3 instanceTargetPositions;\nin vec3 instanceSourcePositions64Low;\nin vec3 instanceTargetPositions64Low;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin float instanceWidths;\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform float useShortestPath;\nuniform int widthUnits;\nout vec4 vColor;\nout vec2 uv;\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\nvec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\ndir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\nreturn dir_screenspace * offset_direction * width / 2.0;\n}\nvec3 splitLine(vec3 a, vec3 b, float x) {\nfloat t = (x - a.x) / (b.x - a.x);\nreturn vec3(x, mix(a.yz, b.yz, t));\n}\nvoid main(void) {\ngeometry.worldPosition = instanceSourcePositions;\ngeometry.worldPositionAlt = instanceTargetPositions;\nvec3 source_world = instanceSourcePositions;\nvec3 target_world = instanceTargetPositions;\nvec3 source_world_64low = instanceSourcePositions64Low;\nvec3 target_world_64low = instanceTargetPositions64Low;\nif (useShortestPath > 0.5 || useShortestPath < -0.5) {\nsource_world.x = mod(source_world.x + 180., 360.0) - 180.;\ntarget_world.x = mod(target_world.x + 180., 360.0) - 180.;\nfloat deltaLng = target_world.x - source_world.x;\nif (deltaLng * useShortestPath > 180.) {\nsource_world.x += 360. * useShortestPath;\nsource_world = splitLine(source_world, target_world, 180. * useShortestPath);\nsource_world_64low = vec3(0.0);\n} else if (deltaLng * useShortestPath < -180.) {\ntarget_world.x += 360. * useShortestPath;\ntarget_world = splitLine(source_world, target_world, 180. * useShortestPath);\ntarget_world_64low = vec3(0.0);\n} else if (useShortestPath < 0.) {\ngl_Position = vec4(0.);\nreturn;\n}\n}\nvec4 source_commonspace;\nvec4 target_commonspace;\nvec4 source = project_position_to_clipspace(source_world, source_world_64low, vec3(0.), source_commonspace);\nvec4 target = project_position_to_clipspace(target_world, target_world_64low, vec3(0.), target_commonspace);\nfloat segmentIndex = positions.x;\nvec4 p = mix(source, target, segmentIndex);\ngeometry.position = mix(source_commonspace, target_commonspace, segmentIndex);\nuv = positions.xy;\ngeometry.uv = uv;\ngeometry.pickingColor = instancePickingColors;\nfloat widthPixels = clamp(\nproject_size_to_pixel(instanceWidths * widthScale, widthUnits),\nwidthMinPixels, widthMaxPixels\n);\nvec3 offset = vec3(\ngetExtrusionOffset(target.xy - source.xy, positions.y, widthPixels),\n0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\nDECKGL_FILTER_GL_POSITION(p, geometry);\ngl_Position = p + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\nvColor = vec4(instanceColors.rgb, instanceColors.a * opacity);\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `\\\n#version 300 es\n#define SHADER_NAME line-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nin vec2 uv;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = uv;\nfragColor = vColor;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { Layer, project32, picking, UNIT } from '@deck.gl/core';\nimport { Geometry } from '@luma.gl/engine';\nimport { Model } from '@luma.gl/engine';\nimport vs from \"./line-layer-vertex.glsl.js\";\nimport fs from \"./line-layer-fragment.glsl.js\";\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n    getSourcePosition: { type: 'accessor', value: (x) => x.sourcePosition },\n    getTargetPosition: { type: 'accessor', value: (x) => x.targetPosition },\n    getColor: { type: 'accessor', value: DEFAULT_COLOR },\n    getWidth: { type: 'accessor', value: 1 },\n    widthUnits: 'pixels',\n    widthScale: { type: 'number', value: 1, min: 0 },\n    widthMinPixels: { type: 'number', value: 0, min: 0 },\n    widthMaxPixels: { type: 'number', value: Number.MAX_SAFE_INTEGER, min: 0 }\n};\n/**\n * A layer that renders straight lines joining pairs of source and target coordinates.\n */\nexport default class LineLayer extends Layer {\n    static { this.layerName = 'LineLayer'; }\n    static { this.defaultProps = defaultProps; }\n    getBounds() {\n        return this.getAttributeManager()?.getBounds([\n            'instanceSourcePositions',\n            'instanceTargetPositions'\n        ]);\n    }\n    getShaders() {\n        return super.getShaders({ vs, fs, modules: [project32, picking] });\n    }\n    // This layer has its own wrapLongitude logic\n    get wrapLongitude() {\n        return false;\n    }\n    initializeState() {\n        const attributeManager = this.getAttributeManager();\n        /* eslint-disable max-len */\n        attributeManager.addInstanced({\n            instanceSourcePositions: {\n                size: 3,\n                type: 'float64',\n                fp64: this.use64bitPositions(),\n                transition: true,\n                accessor: 'getSourcePosition'\n            },\n            instanceTargetPositions: {\n                size: 3,\n                type: 'float64',\n                fp64: this.use64bitPositions(),\n                transition: true,\n                accessor: 'getTargetPosition'\n            },\n            instanceColors: {\n                size: this.props.colorFormat.length,\n                type: 'unorm8',\n                transition: true,\n                accessor: 'getColor',\n                defaultValue: [0, 0, 0, 255]\n            },\n            instanceWidths: {\n                size: 1,\n                transition: true,\n                accessor: 'getWidth',\n                defaultValue: 1\n            }\n        });\n        /* eslint-enable max-len */\n    }\n    updateState(params) {\n        super.updateState(params);\n        if (params.changeFlags.extensionsChanged) {\n            this.state.model?.destroy();\n            this.state.model = this._getModel();\n            this.getAttributeManager().invalidateAll();\n        }\n    }\n    draw({ uniforms }) {\n        const { widthUnits, widthScale, widthMinPixels, widthMaxPixels, wrapLongitude } = this.props;\n        const model = this.state.model;\n        model.setUniforms(uniforms);\n        model.setUniforms({\n            widthUnits: UNIT[widthUnits],\n            widthScale,\n            widthMinPixels,\n            widthMaxPixels,\n            useShortestPath: wrapLongitude ? 1 : 0\n        });\n        model.draw(this.context.renderPass);\n        if (wrapLongitude) {\n            // Render a second copy for the clipped lines at the 180th meridian\n            model.setUniforms({\n                useShortestPath: -1\n            });\n            model.draw(this.context.renderPass);\n        }\n    }\n    _getModel() {\n        /*\n         *  (0, -1)-------------_(1, -1)\n         *       |          _,-\"  |\n         *       o      _,-\"      o\n         *       |  _,-\"          |\n         *   (0, 1)\"-------------(1, 1)\n         */\n        const positions = [0, -1, 0, 0, 1, 0, 1, -1, 0, 1, 1, 0];\n        return new Model(this.context.device, {\n            ...this.getShaders(),\n            id: this.props.id,\n            bufferLayout: this.getAttributeManager().getBufferLayouts(),\n            geometry: new Geometry({\n                topology: 'triangle-strip',\n                attributes: {\n                    positions: { size: 3, value: new Float32Array(positions) }\n                }\n            }),\n            isInstanced: true\n        });\n    }\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `\\\n#version 300 es\n#define SHADER_NAME point-cloud-layer-vertex-shader\nin vec3 positions;\nin vec3 instanceNormals;\nin vec4 instanceColors;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec3 instancePickingColors;\nuniform float opacity;\nuniform float radiusPixels;\nuniform int sizeUnits;\nout vec4 vColor;\nout vec2 unitPosition;\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\ngeometry.normal = project_normal(instanceNormals);\nunitPosition = positions.xy;\ngeometry.uv = unitPosition;\ngeometry.pickingColor = instancePickingColors;\nvec3 offset = vec3(positions.xy * project_size_to_pixel(radiusPixels, sizeUnits), 0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\ngl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\nvec3 lightColor = lighting_getLightColor(instanceColors.rgb, project_uCameraPosition, geometry.position.xyz, geometry.normal);\nvColor = vec4(lightColor, instanceColors.a * opacity);\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `\\\n#version 300 es\n#define SHADER_NAME point-cloud-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nin vec2 unitPosition;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = unitPosition;\nfloat distToCenter = length(unitPosition);\nif (distToCenter > 1.0) {\ndiscard;\n}\nfragColor = vColor;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { Layer, project32, gouraudLighting, picking, UNIT } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/engine';\nimport vs from \"./point-cloud-layer-vertex.glsl.js\";\nimport fs from \"./point-cloud-layer-fragment.glsl.js\";\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst DEFAULT_NORMAL = [0, 0, 1];\nconst defaultProps = {\n    sizeUnits: 'pixels',\n    pointSize: { type: 'number', min: 0, value: 10 }, //  point radius in pixels\n    getPosition: { type: 'accessor', value: (x) => x.position },\n    getNormal: { type: 'accessor', value: DEFAULT_NORMAL },\n    getColor: { type: 'accessor', value: DEFAULT_COLOR },\n    material: true,\n    // Depreated\n    radiusPixels: { deprecatedFor: 'pointSize' }\n};\n// support loaders.gl point cloud format\nfunction normalizeData(data) {\n    const { header, attributes } = data;\n    if (!header || !attributes) {\n        return;\n    }\n    data.length = header.vertexCount;\n    if (attributes.POSITION) {\n        attributes.instancePositions = attributes.POSITION;\n    }\n    if (attributes.NORMAL) {\n        attributes.instanceNormals = attributes.NORMAL;\n    }\n    if (attributes.COLOR_0) {\n        const { size, value } = attributes.COLOR_0;\n        attributes.instanceColors = { size, type: 'unorm8', value };\n    }\n}\n/** Render a point cloud with 3D positions, normals and colors. */\nexport default class PointCloudLayer extends Layer {\n    static { this.layerName = 'PointCloudLayer'; }\n    static { this.defaultProps = defaultProps; }\n    getShaders() {\n        return super.getShaders({ vs, fs, modules: [project32, gouraudLighting, picking] });\n    }\n    initializeState() {\n        this.getAttributeManager().addInstanced({\n            instancePositions: {\n                size: 3,\n                type: 'float64',\n                fp64: this.use64bitPositions(),\n                transition: true,\n                accessor: 'getPosition'\n            },\n            instanceNormals: {\n                size: 3,\n                transition: true,\n                accessor: 'getNormal',\n                defaultValue: DEFAULT_NORMAL\n            },\n            instanceColors: {\n                size: this.props.colorFormat.length,\n                type: 'unorm8',\n                transition: true,\n                accessor: 'getColor',\n                defaultValue: DEFAULT_COLOR\n            }\n        });\n    }\n    updateState(params) {\n        const { changeFlags, props } = params;\n        super.updateState(params);\n        if (changeFlags.extensionsChanged) {\n            this.state.model?.destroy();\n            this.state.model = this._getModel();\n            this.getAttributeManager().invalidateAll();\n        }\n        if (changeFlags.dataChanged) {\n            normalizeData(props.data);\n        }\n    }\n    draw({ uniforms }) {\n        const { pointSize, sizeUnits } = this.props;\n        const model = this.state.model;\n        model.setUniforms(uniforms);\n        model.setUniforms({\n            sizeUnits: UNIT[sizeUnits],\n            radiusPixels: pointSize\n        });\n        model.draw(this.context.renderPass);\n    }\n    _getModel() {\n        // a triangle that minimally cover the unit circle\n        const positions = [];\n        for (let i = 0; i < 3; i++) {\n            const angle = (i / 3) * Math.PI * 2;\n            positions.push(Math.cos(angle) * 2, Math.sin(angle) * 2, 0);\n        }\n        return new Model(this.context.device, {\n            ...this.getShaders(),\n            id: this.props.id,\n            bufferLayout: this.getAttributeManager().getBufferLayouts(),\n            geometry: new Geometry({\n                topology: 'triangle-list',\n                attributes: {\n                    positions: new Float32Array(positions)\n                }\n            }),\n            isInstanced: true\n        });\n    }\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `\\\n#version 300 es\n#define SHADER_NAME scatterplot-layer-vertex-shader\nin vec3 positions;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin float instanceRadius;\nin float instanceLineWidths;\nin vec4 instanceFillColors;\nin vec4 instanceLineColors;\nin vec3 instancePickingColors;\nuniform float opacity;\nuniform float radiusScale;\nuniform float radiusMinPixels;\nuniform float radiusMaxPixels;\nuniform float lineWidthScale;\nuniform float lineWidthMinPixels;\nuniform float lineWidthMaxPixels;\nuniform float stroked;\nuniform bool filled;\nuniform bool antialiasing;\nuniform bool billboard;\nuniform int radiusUnits;\nuniform int lineWidthUnits;\nout vec4 vFillColor;\nout vec4 vLineColor;\nout vec2 unitPosition;\nout float innerUnitRadius;\nout float outerRadiusPixels;\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\nouterRadiusPixels = clamp(\nproject_size_to_pixel(radiusScale * instanceRadius, radiusUnits),\nradiusMinPixels, radiusMaxPixels\n);\nfloat lineWidthPixels = clamp(\nproject_size_to_pixel(lineWidthScale * instanceLineWidths, lineWidthUnits),\nlineWidthMinPixels, lineWidthMaxPixels\n);\nouterRadiusPixels += stroked * lineWidthPixels / 2.0;\nfloat edgePadding = antialiasing ? (outerRadiusPixels + SMOOTH_EDGE_RADIUS) / outerRadiusPixels : 1.0;\nunitPosition = edgePadding * positions.xy;\ngeometry.uv = unitPosition;\ngeometry.pickingColor = instancePickingColors;\ninnerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\nif (billboard) {\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvec3 offset = edgePadding * positions * outerRadiusPixels;\nDECKGL_FILTER_SIZE(offset, geometry);\ngl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n} else {\nvec3 offset = edgePadding * positions * project_pixel_size(outerRadiusPixels);\nDECKGL_FILTER_SIZE(offset, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n}\nvFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\nDECKGL_FILTER_COLOR(vFillColor, geometry);\nvLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\nDECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `\\\n#version 300 es\n#define SHADER_NAME scatterplot-layer-fragment-shader\nprecision highp float;\nuniform bool filled;\nuniform float stroked;\nuniform bool antialiasing;\nin vec4 vFillColor;\nin vec4 vLineColor;\nin vec2 unitPosition;\nin float innerUnitRadius;\nin float outerRadiusPixels;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = unitPosition;\nfloat distToCenter = length(unitPosition) * outerRadiusPixels;\nfloat inCircle = antialiasing ?\nsmoothedge(distToCenter, outerRadiusPixels) :\nstep(distToCenter, outerRadiusPixels);\nif (inCircle == 0.0) {\ndiscard;\n}\nif (stroked > 0.5) {\nfloat isLine = antialiasing ?\nsmoothedge(innerUnitRadius * outerRadiusPixels, distToCenter) :\nstep(innerUnitRadius * outerRadiusPixels, distToCenter);\nif (filled) {\nfragColor = mix(vFillColor, vLineColor, isLine);\n} else {\nif (isLine == 0.0) {\ndiscard;\n}\nfragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);\n}\n} else if (!filled) {\ndiscard;\n} else {\nfragColor = vFillColor;\n}\nfragColor.a *= inCircle;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { Layer, project32, picking, UNIT } from '@deck.gl/core';\nimport { Geometry } from '@luma.gl/engine';\nimport { Model } from '@luma.gl/engine';\nimport vs from \"./scatterplot-layer-vertex.glsl.js\";\nimport fs from \"./scatterplot-layer-fragment.glsl.js\";\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n    radiusUnits: 'meters',\n    radiusScale: { type: 'number', min: 0, value: 1 },\n    radiusMinPixels: { type: 'number', min: 0, value: 0 }, //  min point radius in pixels\n    radiusMaxPixels: { type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER }, // max point radius in pixels\n    lineWidthUnits: 'meters',\n    lineWidthScale: { type: 'number', min: 0, value: 1 },\n    lineWidthMinPixels: { type: 'number', min: 0, value: 0 },\n    lineWidthMaxPixels: { type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER },\n    stroked: false,\n    filled: true,\n    billboard: false,\n    antialiasing: true,\n    getPosition: { type: 'accessor', value: (x) => x.position },\n    getRadius: { type: 'accessor', value: 1 },\n    getFillColor: { type: 'accessor', value: DEFAULT_COLOR },\n    getLineColor: { type: 'accessor', value: DEFAULT_COLOR },\n    getLineWidth: { type: 'accessor', value: 1 },\n    // deprecated\n    strokeWidth: { deprecatedFor: 'getLineWidth' },\n    outline: { deprecatedFor: 'stroked' },\n    getColor: { deprecatedFor: ['getFillColor', 'getLineColor'] }\n};\n/** Render circles at given coordinates. */\nexport default class ScatterplotLayer extends Layer {\n    static { this.defaultProps = defaultProps; }\n    static { this.layerName = 'ScatterplotLayer'; }\n    getShaders() {\n        return super.getShaders({ vs, fs, modules: [project32, picking] });\n    }\n    initializeState() {\n        this.getAttributeManager().addInstanced({\n            instancePositions: {\n                size: 3,\n                type: 'float64',\n                fp64: this.use64bitPositions(),\n                transition: true,\n                accessor: 'getPosition'\n            },\n            instanceRadius: {\n                size: 1,\n                transition: true,\n                accessor: 'getRadius',\n                defaultValue: 1\n            },\n            instanceFillColors: {\n                size: this.props.colorFormat.length,\n                transition: true,\n                type: 'unorm8',\n                accessor: 'getFillColor',\n                defaultValue: [0, 0, 0, 255]\n            },\n            instanceLineColors: {\n                size: this.props.colorFormat.length,\n                transition: true,\n                type: 'unorm8',\n                accessor: 'getLineColor',\n                defaultValue: [0, 0, 0, 255]\n            },\n            instanceLineWidths: {\n                size: 1,\n                transition: true,\n                accessor: 'getLineWidth',\n                defaultValue: 1\n            }\n        });\n    }\n    updateState(params) {\n        super.updateState(params);\n        if (params.changeFlags.extensionsChanged) {\n            this.state.model?.destroy();\n            this.state.model = this._getModel();\n            this.getAttributeManager().invalidateAll();\n        }\n    }\n    draw({ uniforms }) {\n        const { radiusUnits, radiusScale, radiusMinPixels, radiusMaxPixels, stroked, filled, billboard, antialiasing, lineWidthUnits, lineWidthScale, lineWidthMinPixels, lineWidthMaxPixels } = this.props;\n        const model = this.state.model;\n        model.setUniforms(uniforms);\n        model.setUniforms({\n            stroked: stroked ? 1 : 0,\n            filled,\n            billboard,\n            antialiasing,\n            radiusUnits: UNIT[radiusUnits],\n            radiusScale,\n            radiusMinPixels,\n            radiusMaxPixels,\n            lineWidthUnits: UNIT[lineWidthUnits],\n            lineWidthScale,\n            lineWidthMinPixels,\n            lineWidthMaxPixels\n        });\n        model.draw(this.context.renderPass);\n    }\n    _getModel() {\n        // a square that minimally cover the unit circle\n        const positions = [-1, -1, 0, 1, -1, 0, -1, 1, 0, 1, 1, 0];\n        return new Model(this.context.device, {\n            ...this.getShaders(),\n            id: this.props.id,\n            bufferLayout: this.getAttributeManager().getBufferLayouts(),\n            geometry: new Geometry({\n                topology: 'triangle-strip',\n                attributes: {\n                    positions: { size: 3, value: new Float32Array(positions) }\n                }\n            }),\n            isInstanced: true\n        });\n    }\n}\n", "/* eslint-disable max-statements, max-depth, complexity, no-unused-expressions */\nimport { equals } from '@math.gl/core';\nexport const WINDING = {\n    CLOCKWISE: 1,\n    COUNTER_CLOCKWISE: -1\n};\n/**\n * Checks winding direction of the polygon and reverses the polygon in case of opposite winding direction.\n * Note: points are modified in-place.\n * @param points An array that represents points of the polygon.\n * @param direction Requested winding direction. 1 is for clockwise, -1 for counterclockwise winding direction.\n * @param options Parameters of the polygon.\n * @return Returns true if the winding direction was changed.\n */\nexport function modifyPolygonWindingDirection(points, direction, options = {}) {\n    const windingDirection = getPolygonWindingDirection(points, options);\n    if (windingDirection !== direction) {\n        reversePolygon(points, options);\n        return true;\n    }\n    return false;\n}\n/**\n * Returns winding direction of the polygon.\n * @param points An array that represents points of the polygon.\n * @param options Parameters of the polygon.\n * @returns Winding direction of the polygon.\n */\nexport function getPolygonWindingDirection(points, options = {}) {\n    return Math.sign(getPolygonSignedArea(points, options));\n}\nexport const DimIndex = {\n    x: 0,\n    y: 1,\n    z: 2\n};\n/**\n * Returns signed area of the polygon.\n * @param points An array that represents points of the polygon.\n * @param options Parameters of the polygon.\n * @returns Signed area of the polygon.\n * https://en.wikipedia.org/wiki/Shoelace_formula\n */\nexport function getPolygonSignedArea(points, options = {}) {\n    const { start = 0, end = points.length, plane = 'xy' } = options;\n    const dim = options.size || 2;\n    let area = 0;\n    const i0 = DimIndex[plane[0]];\n    const i1 = DimIndex[plane[1]];\n    for (let i = start, j = end - dim; i < end; i += dim) {\n        area += (points[i + i0] - points[j + i0]) * (points[i + i1] + points[j + i1]);\n        j = i;\n    }\n    return area / 2;\n}\n/**\n * Calls the visitor callback for each segment in the polygon.\n * @param points An array that represents points of the polygon\n * @param visitor A callback to call for each segment.\n * @param options Parameters of the polygon.\n */\nexport function forEachSegmentInPolygon(points, visitor, options = {}) {\n    const { start = 0, end = points.length, size = 2, isClosed } = options;\n    const numPoints = (end - start) / size;\n    for (let i = 0; i < numPoints - 1; ++i) {\n        visitor(points[start + i * size], points[start + i * size + 1], points[start + (i + 1) * size], points[start + (i + 1) * size + 1], i, i + 1);\n    }\n    const endPointIndex = start + (numPoints - 1) * size;\n    const isClosedEx = isClosed ||\n        (equals(points[start], points[endPointIndex]) &&\n            equals(points[start + 1], points[endPointIndex + 1]));\n    if (!isClosedEx) {\n        visitor(points[endPointIndex], points[endPointIndex + 1], points[start], points[start + 1], numPoints - 1, 0);\n    }\n}\nfunction reversePolygon(points, options) {\n    const { start = 0, end = points.length, size = 2 } = options;\n    const numPoints = (end - start) / size;\n    const numSwaps = Math.floor(numPoints / 2);\n    for (let i = 0; i < numSwaps; ++i) {\n        const b1 = start + i * size;\n        const b2 = start + (numPoints - 1 - i) * size;\n        for (let j = 0; j < size; ++j) {\n            const tmp = points[b1 + j];\n            points[b1 + j] = points[b2 + j];\n            points[b2 + j] = tmp;\n        }\n    }\n}\n/**\n * Checks winding direction of the polygon and reverses the polygon in case of opposite winding direction.\n * Note: points are modified in-place.\n * @param points Array of points that represent the polygon.\n * @param direction Requested winding direction. 1 is for clockwise, -1 for counterclockwise winding direction.\n * @param options Parameters of the polygon.\n * @return Returns true if the winding direction was changed.\n */\nexport function modifyPolygonWindingDirectionPoints(points, direction, options = {}) {\n    const currentDirection = getPolygonWindingDirectionPoints(points, options);\n    if (currentDirection !== direction) {\n        points.reverse();\n        return true;\n    }\n    return false;\n}\n/**\n * Returns winding direction of the polygon.\n * @param points Array of points that represent the polygon.\n * @param options Parameters of the polygon.\n * @returns Winding direction of the polygon.\n */\nexport function getPolygonWindingDirectionPoints(points, options = {}) {\n    return Math.sign(getPolygonSignedAreaPoints(points, options));\n}\n/**\n * Returns signed area of the polygon.\n * @param points Array of points that represent the polygon.\n * @param options Parameters of the polygon.\n * @returns Signed area of the polygon.\n */\nexport function getPolygonSignedAreaPoints(points, options = {}) {\n    // https://en.wikipedia.org/wiki/Shoelace_formula\n    const { start = 0, end = points.length, plane = 'xy' } = options;\n    let area = 0;\n    const i0 = DimIndex[plane[0]];\n    const i1 = DimIndex[plane[1]];\n    for (let i = start, j = end - 1; i < end; ++i) {\n        area += (points[i][i0] - points[j][i0]) * (points[i][i1] + points[j][i1]);\n        j = i;\n    }\n    return area / 2;\n}\n/**\n * Calls visitor callback for each segment in the polygon.\n * @param points Array of points that represent the polygon.\n * @param visitor A callback to call for each segment.\n * @param options Parameters of the polygon.\n */\nexport function forEachSegmentInPolygonPoints(points, visitor, options = {}) {\n    const { start = 0, end = points.length, isClosed } = options;\n    for (let i = start; i < end - 1; ++i) {\n        visitor(points[i], points[i + 1], i, i + 1);\n    }\n    const isClosedEx = isClosed || equals(points[end - 1], points[0]);\n    if (!isClosedEx) {\n        visitor(points[end - 1], points[0], end - 1, 0);\n    }\n}\n", "/*\n  Adapted from https://github.com/mapbox/earcut to allow passing in\n  of outline and hole areas using the `areas` parameter. As the\n  areas are calcuted as part of classifying the polygon rings\n  we can pass them in again to avoid recomputation\n\n  ISC License\n\n  Copyright (c) 2016, Mapbox\n\n  Permission to use, copy, modify, and/or distribute this software for any purpose\n  with or without fee is hereby granted, provided that the above copyright notice\n  and this permission notice appear in all copies.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n  FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\n  OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\n  THIS SOFTWARE.\n\n */\nimport { getPolygonSignedArea, DimIndex } from \"./polygon-utils.js\";\n/**\n * Computes a triangulation of a polygon\n * @param positions a flat array of the vertex positions that define the polygon.\n * @param holeIndices an array of hole indices if any (e.g. [5, 8] for a 12-vertex input would mean one hole with vertices 5–7 and another with 8–11).\n * @param dim the number of elements in each vertex. Size `2` will interpret `positions` as `[x0, y0, x1, y1, ...]` and size `3` will interpret `positions` as `[x0, y0, z0, x1, y1, z1, ...]`. Default `2`.\n * @param areas areas of outer polygon and holes as computed by `getPolygonSignedArea()`. Can be optionally supplied to speed up triangulation\n * @returns array of indices into the `positions` array that describes the triangulation of the polygon\n * Adapted from https://github.com/mapbox/earcut\n */\nexport function earcut(positions, holeIndices, dim = 2, areas, plane = 'xy') {\n    const hasHoles = holeIndices && holeIndices.length;\n    const outerLen = hasHoles ? holeIndices[0] * dim : positions.length;\n    let outerNode = linkedList(positions, 0, outerLen, dim, true, areas && areas[0], plane);\n    const triangles = [];\n    if (!outerNode || outerNode.next === outerNode.prev)\n        return triangles;\n    let invSize;\n    let maxX;\n    let maxY;\n    let minX;\n    let minY;\n    let x;\n    let y;\n    if (hasHoles)\n        outerNode = eliminateHoles(positions, holeIndices, outerNode, dim, areas, plane);\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (positions.length > 80 * dim) {\n        minX = maxX = positions[0];\n        minY = maxY = positions[1];\n        for (let i = dim; i < outerLen; i += dim) {\n            x = positions[i];\n            y = positions[i + 1];\n            if (x < minX)\n                minX = x;\n            if (y < minY)\n                minY = y;\n            if (x > maxX)\n                maxX = x;\n            if (y > maxY)\n                maxY = y;\n        }\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n    return triangles;\n}\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise, area, plane) {\n    let i;\n    let last;\n    if (area === undefined) {\n        area = getPolygonSignedArea(data, { start, end, size: dim, plane });\n    }\n    let i0 = DimIndex[plane[0]];\n    let i1 = DimIndex[plane[1]];\n    // Note that the signed area calculation in math.gl\n    // has the opposite sign to that which was originally\n    // present in earcut, thus the `< 0` is reversed\n    if (clockwise === area < 0) {\n        for (i = start; i < end; i += dim)\n            last = insertNode(i, data[i + i0], data[i + i1], last);\n    }\n    else {\n        for (i = end - dim; i >= start; i -= dim)\n            last = insertNode(i, data[i + i0], data[i + i1], last);\n    }\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n    return last;\n}\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start)\n        return start;\n    if (!end)\n        end = start;\n    let p = start;\n    let again;\n    do {\n        again = false;\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next)\n                break;\n            again = true;\n        }\n        else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n    return end;\n}\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear)\n        return;\n    // interlink polygon nodes in z-order\n    if (!pass && invSize)\n        indexCurve(ear, minX, minY, invSize);\n    let stop = ear;\n    let prev;\n    let next;\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push((prev.i / dim) | 0);\n            triangles.push((ear.i / dim) | 0);\n            triangles.push((next.i / dim) | 0);\n            removeNode(ear);\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n            continue;\n        }\n        ear = next;\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n                // if this didn't work, try curing all small self-intersections locally\n            }\n            else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n                // as a last resort, try splitting the remaining polygon into two\n            }\n            else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n            break;\n        }\n    }\n}\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    const a = ear.prev;\n    const b = ear;\n    const c = ear.next;\n    if (area(a, b, c) >= 0)\n        return false; // reflex, can't be an ear\n    // now make sure we don't have other points inside the potential ear\n    const ax = a.x;\n    const bx = b.x;\n    const cx = c.x;\n    const ay = a.y;\n    const by = b.y;\n    const cy = c.y;\n    // triangle bbox; min & max are calculated like this for speed\n    const x0 = ax < bx ? (ax < cx ? ax : cx) : bx < cx ? bx : cx;\n    const y0 = ay < by ? (ay < cy ? ay : cy) : by < cy ? by : cy;\n    const x1 = ax > bx ? (ax > cx ? ax : cx) : bx > cx ? bx : cx;\n    const y1 = ay > by ? (ay > cy ? ay : cy) : by > cy ? by : cy;\n    let p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 &&\n            p.x <= x1 &&\n            p.y >= y0 &&\n            p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0)\n            return false;\n        p = p.next;\n    }\n    return true;\n}\nfunction isEarHashed(ear, minX, minY, invSize) {\n    const a = ear.prev;\n    const b = ear;\n    const c = ear.next;\n    if (area(a, b, c) >= 0)\n        return false; // reflex, can't be an ear\n    const ax = a.x;\n    const bx = b.x;\n    const cx = c.x;\n    const ay = a.y;\n    const by = b.y;\n    const cy = c.y;\n    // triangle bbox; min & max are calculated like this for speed\n    const x0 = ax < bx ? (ax < cx ? ax : cx) : bx < cx ? bx : cx;\n    const y0 = ay < by ? (ay < cy ? ay : cy) : by < cy ? by : cy;\n    const x1 = ax > bx ? (ax > cx ? ax : cx) : bx > cx ? bx : cx;\n    const y1 = ay > by ? (ay > cy ? ay : cy) : by > cy ? by : cy;\n    // z-order range for the current triangle bbox;\n    const minZ = zOrder(x0, y0, minX, minY, invSize);\n    const maxZ = zOrder(x1, y1, minX, minY, invSize);\n    let p = ear.prevZ;\n    let n = ear.nextZ;\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 &&\n            p.x <= x1 &&\n            p.y >= y0 &&\n            p.y <= y1 &&\n            p !== a &&\n            p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0)\n            return false;\n        p = p.prevZ;\n        if (n.x >= x0 &&\n            n.x <= x1 &&\n            n.y >= y0 &&\n            n.y <= y1 &&\n            n !== a &&\n            n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0)\n            return false;\n        n = n.nextZ;\n    }\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 &&\n            p.x <= x1 &&\n            p.y >= y0 &&\n            p.y <= y1 &&\n            p !== a &&\n            p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0)\n            return false;\n        p = p.prevZ;\n    }\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 &&\n            n.x <= x1 &&\n            n.y >= y0 &&\n            n.y <= y1 &&\n            n !== a &&\n            n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0)\n            return false;\n        n = n.nextZ;\n    }\n    return true;\n}\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    let p = start;\n    do {\n        const a = p.prev;\n        const b = p.next.next;\n        if (!equals(a, b) &&\n            intersects(a, p, p.next, b) &&\n            locallyInside(a, b) &&\n            locallyInside(b, a)) {\n            triangles.push((a.i / dim) | 0);\n            triangles.push((p.i / dim) | 0);\n            triangles.push((b.i / dim) | 0);\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n    return filterPoints(p);\n}\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    let a = start;\n    do {\n        let b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                let c = splitPolygon(a, b);\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim, areas, plane) {\n    const queue = [];\n    let i;\n    let len;\n    let start;\n    let end;\n    let list;\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false, areas && areas[i + 1], plane);\n        if (list === list.next)\n            list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n    queue.sort(compareX);\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n    return outerNode;\n}\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    const bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n    const bridgeReverse = splitPolygon(bridge, hole);\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    let p = outerNode;\n    const hx = hole.x;\n    const hy = hole.y;\n    let qx = -Infinity;\n    let m;\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            const x = p.x + ((hy - p.y) * (p.next.x - p.x)) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx)\n                    return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n    if (!m)\n        return null;\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n    const stop = m;\n    const mx = m.x;\n    const my = m.y;\n    let tanMin = Infinity;\n    let tan;\n    p = m;\n    do {\n        if (hx >= p.x &&\n            p.x >= mx &&\n            hx !== p.x &&\n            pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n            if (locallyInside(p, hole) &&\n                (tan < tanMin ||\n                    (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n        p = p.next;\n    } while (p !== stop);\n    return m;\n}\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    let p = start;\n    do {\n        if (p.z === 0)\n            p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n    sortLinked(p);\n}\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    let e;\n    let i;\n    let inSize = 1;\n    let numMerges;\n    let p;\n    let pSize;\n    let q;\n    let qSize;\n    let tail;\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q)\n                    break;\n            }\n            qSize = inSize;\n            while (pSize > 0 || (qSize > 0 && q)) {\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                }\n                else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n                if (tail)\n                    tail.nextZ = e;\n                else\n                    list = e;\n                e.prevZ = tail;\n                tail = e;\n            }\n            p = q;\n        }\n        tail.nextZ = null;\n        inSize *= 2;\n    } while (numMerges > 1);\n    return list;\n}\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = ((x - minX) * invSize) | 0;\n    y = ((y - minY) * invSize) | 0;\n    x = (x | (x << 8)) & 0x00ff00ff;\n    x = (x | (x << 4)) & 0x0f0f0f0f;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n    y = (y | (y << 8)) & 0x00ff00ff;\n    y = (y | (y << 4)) & 0x0f0f0f0f;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n    return x | (y << 1);\n}\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    let p = start;\n    let leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y))\n            leftmost = p;\n        p = p.next;\n    } while (p !== start);\n    return leftmost;\n}\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return ((cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n        (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n        (bx - px) * (cy - py) >= (cx - px) * (by - py));\n}\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return (a.next.i !== b.i &&\n        a.prev.i !== b.i &&\n        !intersectsPolygon(a, b) && // dones't intersect other edges\n        ((locallyInside(a, b) &&\n            locallyInside(b, a) &&\n            middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b))) || // does not create opposite-facing sectors\n            (equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0))); // special zero-length case\n}\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    const o1 = sign(area(p1, q1, p2));\n    const o2 = sign(area(p1, q1, q2));\n    const o3 = sign(area(p2, q2, p1));\n    const o4 = sign(area(p2, q2, q1));\n    if (o1 !== o2 && o3 !== o4)\n        return true; // general case\n    if (o1 === 0 && onSegment(p1, p2, q1))\n        return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1))\n        return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2))\n        return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2))\n        return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n    return false;\n}\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return (q.x <= Math.max(p.x, r.x) &&\n        q.x >= Math.min(p.x, r.x) &&\n        q.y <= Math.max(p.y, r.y) &&\n        q.y >= Math.min(p.y, r.y));\n}\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    let p = a;\n    do {\n        if (p.i !== a.i &&\n            p.next.i !== a.i &&\n            p.i !== b.i &&\n            p.next.i !== b.i &&\n            intersects(p, p.next, a, b))\n            return true;\n        p = p.next;\n    } while (p !== a);\n    return false;\n}\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0\n        ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0\n        : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    let p = a;\n    let inside = false;\n    const px = (a.x + b.x) / 2;\n    const py = (a.y + b.y) / 2;\n    do {\n        if (p.y > py !== p.next.y > py &&\n            p.next.y !== p.y &&\n            px < ((p.next.x - p.x) * (py - p.y)) / (p.next.y - p.y) + p.x)\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n    return inside;\n}\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    const a2 = new Vertex(a.i, a.x, a.y);\n    const b2 = new Vertex(b.i, b.x, b.y);\n    const an = a.next;\n    const bp = b.prev;\n    a.next = b;\n    b.prev = a;\n    a2.next = an;\n    an.prev = a2;\n    b2.next = a2;\n    a2.prev = b2;\n    bp.next = b2;\n    b2.prev = bp;\n    return b2;\n}\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    const p = new Vertex(i, x, y);\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n    }\n    else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n    if (p.prevZ)\n        p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ)\n        p.nextZ.prevZ = p.prevZ;\n}\nclass Vertex {\n    constructor(i, x, y) {\n        // previous and next vertex nodes in a polygon ring\n        this.prev = null;\n        this.next = null;\n        // z-order curve value\n        this.z = 0;\n        // previous and next nodes in z-order\n        this.prevZ = null;\n        this.nextZ = null;\n        // indicates whether this is a steiner point\n        this.steiner = false;\n        this.i = i;\n        this.x = x;\n        this.y = y;\n    }\n}\n", "export function push(target, source) {\n    const size = source.length;\n    const startIndex = target.length;\n    // dedupe, if source is the same point as the last vertex\n    if (startIndex > 0) {\n        let isDuplicate = true;\n        for (let i = 0; i < size; i++) {\n            if (target[startIndex - size + i] !== source[i]) {\n                isDuplicate = false;\n                break;\n            }\n        }\n        if (isDuplicate) {\n            return false;\n        }\n    }\n    for (let i = 0; i < size; i++) {\n        target[startIndex + i] = source[i];\n    }\n    return true;\n}\nexport function copy(target, source) {\n    const size = source.length;\n    for (let i = 0; i < size; i++) {\n        target[i] = source[i];\n    }\n}\nexport function getPointAtIndex(positions, index, size, offset, out = []) {\n    const startI = offset + index * size;\n    for (let i = 0; i < size; i++) {\n        out[i] = positions[startI + i];\n    }\n    return out;\n}\n", "/*\n  Adapted from https://github.com/mapbox/lineclip to work with flat arrays\n  and 3d positions\n\n  ISC License\n\n  Copyright (c) 2015, Mapbox\n\n  Permission to use, copy, modify, and/or distribute this software for any purpose\n  with or without fee is hereby granted, provided that the above copyright notice\n  and this permission notice appear in all copies.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n  FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\n  OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\n  THIS SOFTWARE.\n\n */\n/* eslint-disable max-statements, max-depth, complexity */\nimport { push, copy, getPointAtIndex } from \"./utils.js\";\n/**\n * Cohen-Sutherland line clipping algorithm, adapted to efficiently\n * handle polylines rather than just segments\n */\nexport function clipPolyline(positions, bbox, options) {\n    const { size = 2, startIndex = 0, endIndex = positions.length } = options || {};\n    const numPoints = (endIndex - startIndex) / size;\n    const result = [];\n    let part = [];\n    let a;\n    let b;\n    let codeA = -1;\n    let codeB;\n    let lastCode;\n    for (let i = 1; i < numPoints; i++) {\n        a = getPointAtIndex(positions, i - 1, size, startIndex, a);\n        b = getPointAtIndex(positions, i, size, startIndex, b);\n        if (codeA < 0) {\n            codeA = bitCode(a, bbox);\n        }\n        codeB = lastCode = bitCode(b, bbox);\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            if (!(codeA | codeB)) {\n                // accept\n                push(part, a);\n                if (codeB !== lastCode) {\n                    // segment went outside\n                    push(part, b);\n                    if (i < numPoints - 1) {\n                        // start a new line\n                        result.push(part);\n                        part = [];\n                    }\n                }\n                else if (i === numPoints - 1) {\n                    push(part, b);\n                }\n                break;\n            }\n            else if (codeA & codeB) {\n                // trivial reject\n                break;\n            }\n            else if (codeA) {\n                // a outside, intersect with clip edge\n                intersect(a, b, codeA, bbox, a);\n                codeA = bitCode(a, bbox);\n            }\n            else {\n                // b outside\n                intersect(a, b, codeB, bbox, b);\n                codeB = bitCode(b, bbox);\n            }\n        }\n        codeA = lastCode;\n    }\n    if (part.length)\n        result.push(part);\n    return result;\n}\n/**\n * Sutherland-Hodgeman polygon clipping algorithm\n * polygon must be closed (first vertex == last vertex)\n */\nexport function clipPolygon(positions, bbox, options) {\n    const { size = 2, endIndex = positions.length } = options || {};\n    let { startIndex = 0 } = options || {};\n    let numPoints = (endIndex - startIndex) / size;\n    let result;\n    let p;\n    let prev;\n    let inside;\n    let prevInside;\n    // clip against each side of the clip rectangle\n    for (let edge = 1; edge <= 8; edge *= 2) {\n        result = [];\n        prev = getPointAtIndex(positions, numPoints - 1, size, startIndex, prev);\n        prevInside = !(bitCode(prev, bbox) & edge);\n        for (let i = 0; i < numPoints; i++) {\n            p = getPointAtIndex(positions, i, size, startIndex, p);\n            inside = !(bitCode(p, bbox) & edge);\n            // if segment goes through the clip window, add an intersection\n            if (inside !== prevInside)\n                push(result, intersect(prev, p, edge, bbox));\n            if (inside)\n                push(result, p); // add a point if it's inside\n            copy(prev, p);\n            prevInside = inside;\n        }\n        // close loop\n        positions = result;\n        startIndex = 0;\n        numPoints = result.length / size;\n        if (!numPoints)\n            break;\n    }\n    return result;\n}\n/** intersect a segment against one of the 4 lines that make up the bbox */\nexport function intersect(a, b, edge, bbox, out = []) {\n    let t;\n    // Forces out[snapI] to be on the bbox edge\n    // Interpolation introduces precision issue which may cause lineclip to be\n    // stuck in an infinite loop\n    let snap;\n    if (edge & 8) {\n        // top\n        t = (bbox[3] - a[1]) / (b[1] - a[1]);\n        snap = 3;\n    }\n    else if (edge & 4) {\n        // bottom\n        t = (bbox[1] - a[1]) / (b[1] - a[1]);\n        snap = 1;\n    }\n    else if (edge & 2) {\n        // right\n        t = (bbox[2] - a[0]) / (b[0] - a[0]);\n        snap = 2;\n    }\n    else if (edge & 1) {\n        // left\n        t = (bbox[0] - a[0]) / (b[0] - a[0]);\n        snap = 0;\n    }\n    else {\n        return null;\n    }\n    for (let i = 0; i < a.length; i++) {\n        out[i] = (snap & 1) === i ? bbox[snap] : t * (b[i] - a[i]) + a[i];\n    }\n    return out;\n}\n/**\n * bit code reflects the point position relative to the bbox:\n *         left  mid  right\n *    top  1001  1000  1010\n *    mid  0001  0000  0010\n * bottom  0101  0100  0110\n */\nexport function bitCode(p, bbox) {\n    let code = 0;\n    if (p[0] < bbox[0])\n        code |= 1;\n    // left\n    else if (p[0] > bbox[2])\n        code |= 2; // right\n    if (p[1] < bbox[1])\n        code |= 4;\n    // bottom\n    else if (p[1] > bbox[3])\n        code |= 8; // top\n    return code;\n}\n", "/* eslint-disable max-statements, max-depth, complexity, no-unused-expressions */\nimport { bitCode, intersect } from \"./lineclip.js\";\nimport { getPointAtIndex, copy, push } from \"./utils.js\";\nexport function cutPolylineByGrid(positions, options) {\n    const { size = 2, broken = false, gridResolution = 10, gridOffset = [0, 0], startIndex = 0, endIndex = positions.length } = options || {};\n    const numPoints = (endIndex - startIndex) / size;\n    let part = [];\n    const result = [part];\n    const a = getPointAtIndex(positions, 0, size, startIndex);\n    let b;\n    let codeB;\n    const cell = getGridCell(a, gridResolution, gridOffset, []);\n    const scratchPoint = [];\n    push(part, a);\n    for (let i = 1; i < numPoints; i++) {\n        b = getPointAtIndex(positions, i, size, startIndex, b);\n        codeB = bitCode(b, cell);\n        while (codeB) {\n            // find the intersection with the current cell\n            intersect(a, b, codeB, cell, scratchPoint);\n            const codeAlt = bitCode(scratchPoint, cell);\n            if (codeAlt) {\n                intersect(a, scratchPoint, codeAlt, cell, scratchPoint);\n                codeB = codeAlt;\n            }\n            push(part, scratchPoint);\n            // move to the next cell\n            copy(a, scratchPoint);\n            moveToNeighborCell(cell, gridResolution, codeB);\n            if (broken && part.length > size) {\n                part = [];\n                result.push(part);\n                push(part, a);\n            }\n            codeB = bitCode(b, cell);\n        }\n        push(part, b);\n        copy(a, b);\n    }\n    return broken ? result : result[0];\n}\nconst TYPE_INSIDE = 0;\nconst TYPE_BORDER = 1;\n/**\n * Cuts a polygon by a pre-defined grid\n */\nexport function cutPolygonByGrid(positions, holeIndices = null, options) {\n    if (!positions.length) {\n        // input is empty\n        return [];\n    }\n    const { size = 2, gridResolution = 10, gridOffset = [0, 0], edgeTypes = false } = options || {};\n    const result = [];\n    const queue = [\n        {\n            pos: positions,\n            types: edgeTypes ? new Array(positions.length / size).fill(TYPE_BORDER) : null,\n            holes: holeIndices || []\n        }\n    ];\n    const bbox = [[], []];\n    // @ts-ignore\n    let cell = [];\n    // Recursively bisect polygon until every part fit in a single grid cell\n    while (queue.length) {\n        const { pos, types, holes } = queue.shift();\n        // Get the bounding box of the outer polygon\n        getBoundingBox(pos, size, holes[0] || pos.length, bbox);\n        cell = getGridCell(bbox[0], gridResolution, gridOffset, cell);\n        const code = bitCode(bbox[1], cell);\n        if (code) {\n            // Split the outer ring at the boundary\n            let parts = bisectPolygon(pos, types, size, 0, holes[0] || pos.length, cell, code);\n            const polygonLow = { pos: parts[0].pos, types: parts[0].types, holes: [] };\n            const polygonHigh = { pos: parts[1].pos, types: parts[1].types, holes: [] };\n            queue.push(polygonLow, polygonHigh);\n            // Split each hole at the boundary\n            for (let i = 0; i < holes.length; i++) {\n                parts = bisectPolygon(pos, types, size, holes[i], holes[i + 1] || pos.length, cell, code);\n                if (parts[0]) {\n                    polygonLow.holes.push(polygonLow.pos.length);\n                    polygonLow.pos = concatInPlace(polygonLow.pos, parts[0].pos);\n                    if (edgeTypes) {\n                        polygonLow.types = concatInPlace(polygonLow.types, parts[0].types);\n                    }\n                }\n                if (parts[1]) {\n                    polygonHigh.holes.push(polygonHigh.pos.length);\n                    polygonHigh.pos = concatInPlace(polygonHigh.pos, parts[1].pos);\n                    if (edgeTypes) {\n                        polygonHigh.types = concatInPlace(polygonHigh.types, parts[1].types);\n                    }\n                }\n            }\n        }\n        else {\n            // Polygon fits in a single cell, no more processing required\n            const polygon = { positions: pos };\n            if (edgeTypes) {\n                polygon.edgeTypes = types;\n            }\n            if (holes.length) {\n                polygon.holeIndices = holes;\n            }\n            result.push(polygon);\n        }\n    }\n    return result;\n}\n// edgeTypes:\n// TYPE_BORDER - edge from the original polygon\n// TYPE_INSIDE - inside the original polygon\n// eslint-disable-next-line max-params\nfunction bisectPolygon(positions, edgeTypes, size, startIndex, endIndex, bbox, edge) {\n    const numPoints = (endIndex - startIndex) / size;\n    const resultLow = [];\n    const resultHigh = [];\n    const typesLow = [];\n    const typesHigh = [];\n    const scratchPoint = [];\n    let p;\n    let side;\n    let type;\n    const prev = getPointAtIndex(positions, numPoints - 1, size, startIndex);\n    let prevSide = Math.sign(edge & 8 ? prev[1] - bbox[3] : prev[0] - bbox[2]);\n    let prevType = edgeTypes && edgeTypes[numPoints - 1];\n    let lowPointCount = 0;\n    let highPointCount = 0;\n    for (let i = 0; i < numPoints; i++) {\n        p = getPointAtIndex(positions, i, size, startIndex, p);\n        side = Math.sign(edge & 8 ? p[1] - bbox[3] : p[0] - bbox[2]);\n        type = edgeTypes && edgeTypes[startIndex / size + i];\n        // if segment goes through the boundary, add an intersection\n        if (side && prevSide && prevSide !== side) {\n            intersect(prev, p, edge, bbox, scratchPoint);\n            push(resultLow, scratchPoint) && typesLow.push(prevType);\n            push(resultHigh, scratchPoint) && typesHigh.push(prevType);\n        }\n        if (side <= 0) {\n            push(resultLow, p) && typesLow.push(type);\n            lowPointCount -= side;\n        }\n        else if (typesLow.length) {\n            typesLow[typesLow.length - 1] = TYPE_INSIDE;\n        }\n        if (side >= 0) {\n            push(resultHigh, p) && typesHigh.push(type);\n            highPointCount += side;\n        }\n        else if (typesHigh.length) {\n            typesHigh[typesHigh.length - 1] = TYPE_INSIDE;\n        }\n        copy(prev, p);\n        prevSide = side;\n        prevType = type;\n    }\n    return [\n        lowPointCount ? { pos: resultLow, types: edgeTypes && typesLow } : null,\n        highPointCount ? { pos: resultHigh, types: edgeTypes && typesHigh } : null\n    ];\n}\nfunction getGridCell(p, gridResolution, gridOffset, out) {\n    const left = Math.floor((p[0] - gridOffset[0]) / gridResolution) * gridResolution + gridOffset[0];\n    const bottom = Math.floor((p[1] - gridOffset[1]) / gridResolution) * gridResolution + gridOffset[1];\n    out[0] = left;\n    out[1] = bottom;\n    out[2] = left + gridResolution;\n    out[3] = bottom + gridResolution;\n    return out;\n}\nfunction moveToNeighborCell(cell, gridResolution, edge) {\n    if (edge & 8) {\n        // top\n        cell[1] += gridResolution;\n        cell[3] += gridResolution;\n    }\n    else if (edge & 4) {\n        // bottom\n        cell[1] -= gridResolution;\n        cell[3] -= gridResolution;\n    }\n    else if (edge & 2) {\n        // right\n        cell[0] += gridResolution;\n        cell[2] += gridResolution;\n    }\n    else if (edge & 1) {\n        // left\n        cell[0] -= gridResolution;\n        cell[2] -= gridResolution;\n    }\n}\nfunction getBoundingBox(positions, size, endIndex, out) {\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n    for (let i = 0; i < endIndex; i += size) {\n        const x = positions[i];\n        const y = positions[i + 1];\n        minX = x < minX ? x : minX;\n        maxX = x > maxX ? x : maxX;\n        minY = y < minY ? y : minY;\n        maxY = y > maxY ? y : maxY;\n    }\n    out[0][0] = minX;\n    out[0][1] = minY;\n    out[1][0] = maxX;\n    out[1][1] = maxY;\n    return out;\n}\nfunction concatInPlace(arr1, arr2) {\n    for (let i = 0; i < arr2.length; i++) {\n        arr1.push(arr2[i]);\n    }\n    return arr1;\n}\n", "import { cutPolylineByGrid, cutPolygonByGrid } from \"./cut-by-grid.js\";\nimport { getPointAtIndex, push } from \"./utils.js\";\n// https://en.wikipedia.org/wiki/Web_Mercator_projection\nconst DEFAULT_MAX_LATITUDE = 85.051129;\n/** https://user-images.githubusercontent.com/2059298/78465769-938b7a00-76ae-11ea-9b95-1f4c26425ab9.png */\nexport function cutPolylineByMercatorBounds(positions, options) {\n    const { size = 2, startIndex = 0, endIndex = positions.length, normalize = true } = options || {};\n    // Remap longitudes so that each segment takes the shorter path\n    const newPositions = positions.slice(startIndex, endIndex);\n    wrapLongitudesForShortestPath(newPositions, size, 0, endIndex - startIndex);\n    const parts = cutPolylineByGrid(newPositions, {\n        size,\n        broken: true,\n        gridResolution: 360,\n        gridOffset: [-180, -180]\n    });\n    if (normalize) {\n        // Each part is guaranteed to be in a single copy of the world\n        // Map longitudes back to [-180, 180]\n        for (const part of parts) {\n            shiftLongitudesIntoRange(part, size);\n        }\n    }\n    return parts;\n}\n/** https://user-images.githubusercontent.com/2059298/78465770-94241080-76ae-11ea-809a-6a8534dac1d9.png */\nexport function cutPolygonByMercatorBounds(positions, holeIndices = null, options) {\n    const { size = 2, normalize = true, edgeTypes = false } = options || {};\n    holeIndices = holeIndices || [];\n    const newPositions = [];\n    const newHoleIndices = [];\n    let srcStartIndex = 0;\n    let targetIndex = 0;\n    for (let ringIndex = 0; ringIndex <= holeIndices.length; ringIndex++) {\n        // srcStartIndex/srcEndIndex define the ring in the original positions\n        const srcEndIndex = holeIndices[ringIndex] || positions.length;\n        // targetStartIndex/targetIndex define the ring in newPositions\n        const targetStartIndex = targetIndex;\n        // In case the ring contains a pole (e.g. Antarctica), we'll have to insert vertices\n        // The insertion point is defined by the vertex closest to the pole\n        // Split the the ring by the insertion point when copying to newPositions\n        const splitIndex = findSplitIndex(positions, size, srcStartIndex, srcEndIndex);\n        for (let i = splitIndex; i < srcEndIndex; i++) {\n            newPositions[targetIndex++] = positions[i];\n        }\n        for (let i = srcStartIndex; i < splitIndex; i++) {\n            newPositions[targetIndex++] = positions[i];\n        }\n        // Remap longitudes so that each segment takes the shorter path\n        wrapLongitudesForShortestPath(newPositions, size, targetStartIndex, targetIndex);\n        // Handle the case when the ring contains a pole\n        insertPoleVertices(newPositions, size, targetStartIndex, targetIndex, options?.maxLatitude);\n        srcStartIndex = srcEndIndex;\n        newHoleIndices[ringIndex] = targetIndex;\n    }\n    newHoleIndices.pop();\n    const parts = cutPolygonByGrid(newPositions, newHoleIndices, {\n        size,\n        gridResolution: 360,\n        gridOffset: [-180, -180],\n        edgeTypes\n    });\n    if (normalize) {\n        // Each part is guaranteed to be in a single copy of the world\n        // Map longitudes back to [-180, 180]\n        for (const part of parts) {\n            // @ts-expect-error (mutates readonly array) May mutate newPositions, which is created by us\n            shiftLongitudesIntoRange(part.positions, size);\n        }\n    }\n    return parts;\n}\n/* Helpers */\n// See comments for insertPoleVertices\nfunction findSplitIndex(positions, size, startIndex, endIndex) {\n    let maxLat = -1;\n    let pointIndex = -1;\n    for (let i = startIndex + 1; i < endIndex; i += size) {\n        const lat = Math.abs(positions[i]);\n        if (lat > maxLat) {\n            maxLat = lat;\n            pointIndex = i - 1;\n        }\n    }\n    return pointIndex;\n}\n// https://user-images.githubusercontent.com/2059298/78857483-5987e400-79de-11ea-98fc-0631287a8431.png\n//\n// If the polygon contains a pole, to tesselate it correctly, we need to insert the edge\n// of map into the polygon. This requires adding two vertices that represent the pole, by\n// drawing a perpendicular line to the Mercator map edge from a selected vertex on the ring.\n//\n// We select the insertion position carefully so that the inserted line segments do not\n// intersect with the ring itself. This is ensured by findSplitIndex, which returns the\n// vertex closest to the pole.\nfunction insertPoleVertices(positions, size, startIndex, endIndex, maxLatitude = DEFAULT_MAX_LATITUDE) {\n    // Check if the ring contains a pole\n    const firstLng = positions[startIndex];\n    const lastLng = positions[endIndex - size];\n    if (Math.abs(firstLng - lastLng) > 180) {\n        // The ring does not make a round trip\n        // Add the nearest pole to the vertices so that the polygon tesselates correctly\n        const p = getPointAtIndex(positions, 0, size, startIndex);\n        // Copy the first vertex to the world of the last vertex\n        p[0] += Math.round((lastLng - firstLng) / 360) * 360;\n        push(positions, p);\n        // Project the copied vertex to the edge of the map\n        p[1] = Math.sign(p[1]) * maxLatitude;\n        push(positions, p);\n        // Project the first vertex to the edge of the map\n        p[0] = firstLng;\n        push(positions, p);\n    }\n}\nfunction wrapLongitudesForShortestPath(positions, size, startIndex, endIndex) {\n    let prevLng = positions[0];\n    let lng;\n    for (let i = startIndex; i < endIndex; i += size) {\n        lng = positions[i];\n        const delta = lng - prevLng;\n        if (delta > 180 || delta < -180) {\n            lng -= Math.round(delta / 360) * 360;\n        }\n        positions[i] = prevLng = lng;\n    }\n}\nfunction shiftLongitudesIntoRange(positions, size) {\n    let refLng;\n    const pointCount = positions.length / size;\n    // Find a longitude that is not on the edge of a world\n    // Which we will use to determine which world copy it is\n    for (let i = 0; i < pointCount; i++) {\n        refLng = positions[i * size];\n        if ((refLng + 180) % 360 !== 0) {\n            break;\n        }\n    }\n    const delta = -Math.round(refLng / 360) * 360;\n    if (delta === 0) {\n        return;\n    }\n    for (let i = 0; i < pointCount; i++) {\n        positions[i * size] += delta;\n    }\n}\n", "import { log } from '@deck.gl/core';\nimport { Geometry } from '@luma.gl/engine';\nimport { modifyPolygonWindingDirection, WINDING } from '@math.gl/polygon';\nexport default class ColumnGeometry extends Geometry {\n    constructor(props) {\n        const { indices, attributes } = tesselateColumn(props);\n        super({\n            ...props,\n            indices,\n            // @ts-expect-error\n            attributes\n        });\n    }\n}\n/* eslint-disable max-statements, complexity */\nfunction tesselateColumn(props) {\n    const { radius, height = 1, nradial = 10 } = props;\n    let { vertices } = props;\n    if (vertices) {\n        log.assert(vertices.length >= nradial); // `vertices` must contain at least `diskResolution` points\n        vertices = vertices.flatMap(v => [v[0], v[1]]);\n        modifyPolygonWindingDirection(vertices, WINDING.COUNTER_CLOCKWISE);\n    }\n    const isExtruded = height > 0;\n    const vertsAroundEdge = nradial + 1; // loop\n    const numVertices = isExtruded\n        ? vertsAroundEdge * 3 + 1 // top, side top edge, side bottom edge, one additional degenerage vertex\n        : nradial; // top\n    const stepAngle = (Math.PI * 2) / nradial;\n    // Used for wireframe\n    const indices = new Uint16Array(isExtruded ? nradial * 3 * 2 : 0); // top loop, side vertical, bottom loop\n    const positions = new Float32Array(numVertices * 3);\n    const normals = new Float32Array(numVertices * 3);\n    let i = 0;\n    // side tesselation: 0, 1, 2, 3, 4, 5, ...\n    //\n    // 0 - 2 - 4  ... top\n    // | / | / |\n    // 1 - 3 - 5  ... bottom\n    //\n    if (isExtruded) {\n        for (let j = 0; j < vertsAroundEdge; j++) {\n            const a = j * stepAngle;\n            const vertexIndex = j % nradial;\n            const sin = Math.sin(a);\n            const cos = Math.cos(a);\n            for (let k = 0; k < 2; k++) {\n                positions[i + 0] = vertices ? vertices[vertexIndex * 2] : cos * radius;\n                positions[i + 1] = vertices ? vertices[vertexIndex * 2 + 1] : sin * radius;\n                positions[i + 2] = (1 / 2 - k) * height;\n                normals[i + 0] = vertices ? vertices[vertexIndex * 2] : cos;\n                normals[i + 1] = vertices ? vertices[vertexIndex * 2 + 1] : sin;\n                i += 3;\n            }\n        }\n        // duplicate the last vertex to create proper degenerate triangle.\n        positions[i + 0] = positions[i - 3];\n        positions[i + 1] = positions[i - 2];\n        positions[i + 2] = positions[i - 1];\n        i += 3;\n    }\n    // The column geometry is rendered as a triangle strip, so\n    // in order to render sides and top in one go we need to use degenerate triangles.\n    // Duplicate last vertex of side trinagles and first vertex of the top cap to preserve winding order.\n    // top tesselation: 0, -1, 1, -2, 2, -3, 3, ...\n    //\n    //    0 -- 1\n    //   /      \\\n    // -1        2\n    //  |        |\n    // -2        3\n    //   \\      /\n    //   -3 -- 4\n    //\n    for (let j = isExtruded ? 0 : 1; j < vertsAroundEdge; j++) {\n        const v = Math.floor(j / 2) * Math.sign(0.5 - (j % 2));\n        const a = v * stepAngle;\n        const vertexIndex = (v + nradial) % nradial;\n        const sin = Math.sin(a);\n        const cos = Math.cos(a);\n        positions[i + 0] = vertices ? vertices[vertexIndex * 2] : cos * radius;\n        positions[i + 1] = vertices ? vertices[vertexIndex * 2 + 1] : sin * radius;\n        positions[i + 2] = height / 2;\n        normals[i + 2] = 1;\n        i += 3;\n    }\n    if (isExtruded) {\n        let index = 0;\n        for (let j = 0; j < nradial; j++) {\n            // top loop\n            indices[index++] = j * 2 + 0;\n            indices[index++] = j * 2 + 2;\n            // side vertical\n            indices[index++] = j * 2 + 0;\n            indices[index++] = j * 2 + 1;\n            // bottom loop\n            indices[index++] = j * 2 + 1;\n            indices[index++] = j * 2 + 3;\n        }\n    }\n    return {\n        indices,\n        attributes: {\n            POSITION: { size: 3, value: positions },\n            NORMAL: { size: 3, value: normals }\n        }\n    };\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `#version 300 es\n#define SHADER_NAME column-layer-vertex-shader\nin vec3 positions;\nin vec3 normals;\nin vec3 instancePositions;\nin float instanceElevations;\nin vec3 instancePositions64Low;\nin vec4 instanceFillColors;\nin vec4 instanceLineColors;\nin float instanceStrokeWidths;\nin vec3 instancePickingColors;\nuniform float opacity;\nuniform float radius;\nuniform float angle;\nuniform vec2 offset;\nuniform bool extruded;\nuniform bool stroked;\nuniform bool isStroke;\nuniform float coverage;\nuniform float elevationScale;\nuniform float edgeDistance;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform int radiusUnits;\nuniform int widthUnits;\nout vec4 vColor;\n#ifdef FLAT_SHADING\nout vec4 position_commonspace;\n#endif\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\nvec4 color = isStroke ? instanceLineColors : instanceFillColors;\nmat2 rotationMatrix = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\nfloat elevation = 0.0;\nfloat strokeOffsetRatio = 1.0;\nif (extruded) {\nelevation = instanceElevations * (positions.z + 1.0) / 2.0 * elevationScale;\n} else if (stroked) {\nfloat widthPixels = clamp(\nproject_size_to_pixel(instanceStrokeWidths * widthScale, widthUnits),\nwidthMinPixels, widthMaxPixels) / 2.0;\nfloat halfOffset = project_pixel_size(widthPixels) / project_size(edgeDistance * coverage * radius);\nif (isStroke) {\nstrokeOffsetRatio -= sign(positions.z) * halfOffset;\n} else {\nstrokeOffsetRatio -= halfOffset;\n}\n}\nfloat shouldRender = float(color.a > 0.0 && instanceElevations >= 0.0);\nfloat dotRadius = radius * coverage * shouldRender;\ngeometry.pickingColor = instancePickingColors;\nvec3 centroidPosition = vec3(instancePositions.xy, instancePositions.z + elevation);\nvec3 centroidPosition64Low = instancePositions64Low;\nvec2 offset = (rotationMatrix * positions.xy * strokeOffsetRatio + offset) * dotRadius;\nif (radiusUnits == UNIT_METERS) {\noffset = project_size(offset);\n}\nvec3 pos = vec3(offset, 0.);\nDECKGL_FILTER_SIZE(pos, geometry);\ngl_Position = project_position_to_clipspace(centroidPosition, centroidPosition64Low, pos, geometry.position);\ngeometry.normal = project_normal(vec3(rotationMatrix * normals.xy, normals.z));\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nif (extruded && !isStroke) {\n#ifdef FLAT_SHADING\nposition_commonspace = geometry.position;\nvColor = vec4(color.rgb, color.a * opacity);\n#else\nvec3 lightColor = lighting_getLightColor(color.rgb, project_uCameraPosition, geometry.position.xyz, geometry.normal);\nvColor = vec4(lightColor, color.a * opacity);\n#endif\n} else {\nvColor = vec4(color.rgb, color.a * opacity);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `#version 300 es\n#define SHADER_NAME column-layer-fragment-shader\nprecision highp float;\nuniform vec3 project_uCameraPosition;\nuniform bool extruded;\nuniform bool isStroke;\nout vec4 fragColor;\nin vec4 vColor;\n#ifdef FLAT_SHADING\nin vec4 position_commonspace;\n#endif\nvoid main(void) {\nfragColor = vColor;\n#ifdef FLAT_SHADING\nif (extruded && !isStroke && !bool(picking.isActive)) {\nvec3 normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\nfragColor.rgb = lighting_getLightColor(vColor.rgb, project_uCameraPosition, position_commonspace.xyz, normal);\n}\n#endif\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { Layer, project32, gouraudLighting, phongLighting, picking, UNIT } from '@deck.gl/core';\nimport { Model } from '@luma.gl/engine';\nimport ColumnGeometry from \"./column-geometry.js\";\nimport vs from \"./column-layer-vertex.glsl.js\";\nimport fs from \"./column-layer-fragment.glsl.js\";\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n    diskResolution: { type: 'number', min: 4, value: 20 },\n    vertices: null,\n    radius: { type: 'number', min: 0, value: 1000 },\n    angle: { type: 'number', value: 0 },\n    offset: { type: 'array', value: [0, 0] },\n    coverage: { type: 'number', min: 0, max: 1, value: 1 },\n    elevationScale: { type: 'number', min: 0, value: 1 },\n    radiusUnits: 'meters',\n    lineWidthUnits: 'meters',\n    lineWidthScale: 1,\n    lineWidthMinPixels: 0,\n    lineWidthMaxPixels: Number.MAX_SAFE_INTEGER,\n    extruded: true,\n    wireframe: false,\n    filled: true,\n    stroked: false,\n    flatShading: false,\n    getPosition: { type: 'accessor', value: (x) => x.position },\n    getFillColor: { type: 'accessor', value: DEFAULT_COLOR },\n    getLineColor: { type: 'accessor', value: DEFAULT_COLOR },\n    getLineWidth: { type: 'accessor', value: 1 },\n    getElevation: { type: 'accessor', value: 1000 },\n    material: true,\n    getColor: { deprecatedFor: ['getFillColor', 'getLineColor'] }\n};\n/** Render extruded cylinders (tessellated regular polygons) at given coordinates. */\nexport default class ColumnLayer extends Layer {\n    static { this.layerName = 'ColumnLayer'; }\n    static { this.defaultProps = defaultProps; }\n    getShaders() {\n        const defines = {};\n        const { flatShading } = this.props;\n        if (flatShading) {\n            defines.FLAT_SHADING = 1;\n        }\n        return super.getShaders({\n            vs,\n            fs,\n            defines,\n            modules: [project32, flatShading ? phongLighting : gouraudLighting, picking]\n        });\n    }\n    /**\n     * DeckGL calls initializeState when GL context is available\n     * Essentially a deferred constructor\n     */\n    initializeState() {\n        const attributeManager = this.getAttributeManager();\n        /* eslint-disable max-len */\n        attributeManager.addInstanced({\n            instancePositions: {\n                size: 3,\n                type: 'float64',\n                fp64: this.use64bitPositions(),\n                transition: true,\n                accessor: 'getPosition'\n            },\n            instanceElevations: {\n                size: 1,\n                transition: true,\n                accessor: 'getElevation'\n            },\n            instanceFillColors: {\n                size: this.props.colorFormat.length,\n                type: 'unorm8',\n                transition: true,\n                accessor: 'getFillColor',\n                defaultValue: DEFAULT_COLOR\n            },\n            instanceLineColors: {\n                size: this.props.colorFormat.length,\n                type: 'unorm8',\n                transition: true,\n                accessor: 'getLineColor',\n                defaultValue: DEFAULT_COLOR\n            },\n            instanceStrokeWidths: {\n                size: 1,\n                accessor: 'getLineWidth',\n                transition: true\n            }\n        });\n        /* eslint-enable max-len */\n    }\n    updateState(params) {\n        super.updateState(params);\n        const { props, oldProps, changeFlags } = params;\n        const regenerateModels = changeFlags.extensionsChanged || props.flatShading !== oldProps.flatShading;\n        if (regenerateModels) {\n            this.state.models?.forEach(model => model.destroy());\n            this.setState(this._getModels());\n            this.getAttributeManager().invalidateAll();\n        }\n        const instanceCount = this.getNumInstances();\n        this.state.fillModel.setInstanceCount(instanceCount);\n        this.state.wireframeModel.setInstanceCount(instanceCount);\n        if (regenerateModels ||\n            props.diskResolution !== oldProps.diskResolution ||\n            props.vertices !== oldProps.vertices ||\n            (props.extruded || props.stroked) !== (oldProps.extruded || oldProps.stroked)) {\n            this._updateGeometry(props);\n        }\n    }\n    getGeometry(diskResolution, vertices, hasThinkness) {\n        const geometry = new ColumnGeometry({\n            radius: 1,\n            height: hasThinkness ? 2 : 0,\n            vertices,\n            nradial: diskResolution\n        });\n        let meanVertexDistance = 0;\n        if (vertices) {\n            for (let i = 0; i < diskResolution; i++) {\n                const p = vertices[i];\n                const d = Math.sqrt(p[0] * p[0] + p[1] * p[1]);\n                meanVertexDistance += d / diskResolution;\n            }\n        }\n        else {\n            meanVertexDistance = 1;\n        }\n        this.setState({\n            edgeDistance: Math.cos(Math.PI / diskResolution) * meanVertexDistance\n        });\n        return geometry;\n    }\n    _getModels() {\n        const shaders = this.getShaders();\n        const bufferLayout = this.getAttributeManager().getBufferLayouts();\n        const fillModel = new Model(this.context.device, {\n            ...shaders,\n            id: `${this.props.id}-fill`,\n            bufferLayout,\n            isInstanced: true\n        });\n        const wireframeModel = new Model(this.context.device, {\n            ...shaders,\n            id: `${this.props.id}-wireframe`,\n            bufferLayout,\n            isInstanced: true\n        });\n        return {\n            fillModel,\n            wireframeModel,\n            models: [wireframeModel, fillModel]\n        };\n    }\n    _updateGeometry({ diskResolution, vertices, extruded, stroked }) {\n        const geometry = this.getGeometry(diskResolution, vertices, extruded || stroked);\n        this.setState({\n            fillVertexCount: geometry.attributes.POSITION.value.length / 3\n        });\n        const fillModel = this.state.fillModel;\n        const wireframeModel = this.state.wireframeModel;\n        fillModel.setGeometry(geometry);\n        fillModel.setTopology('triangle-strip');\n        // Disable indices\n        fillModel.setIndexBuffer(null);\n        wireframeModel.setGeometry(geometry);\n        wireframeModel.setTopology('line-list');\n    }\n    draw({ uniforms }) {\n        const { lineWidthUnits, lineWidthScale, lineWidthMinPixels, lineWidthMaxPixels, radiusUnits, elevationScale, extruded, filled, stroked, wireframe, offset, coverage, radius, angle } = this.props;\n        const fillModel = this.state.fillModel;\n        const wireframeModel = this.state.wireframeModel;\n        const { fillVertexCount, edgeDistance } = this.state;\n        const renderUniforms = {\n            ...uniforms,\n            radius,\n            angle: (angle / 180) * Math.PI,\n            offset,\n            extruded,\n            stroked,\n            coverage,\n            elevationScale,\n            edgeDistance,\n            radiusUnits: UNIT[radiusUnits],\n            widthUnits: UNIT[lineWidthUnits],\n            widthScale: lineWidthScale,\n            widthMinPixels: lineWidthMinPixels,\n            widthMaxPixels: lineWidthMaxPixels\n        };\n        // When drawing 3d: draw wireframe first so it doesn't get occluded by depth test\n        if (extruded && wireframe) {\n            wireframeModel.setUniforms(renderUniforms);\n            wireframeModel.setUniforms({ isStroke: true });\n            wireframeModel.draw(this.context.renderPass);\n        }\n        fillModel.setUniforms(renderUniforms);\n        if (filled) {\n            // model.setProps({isIndexed: false});\n            fillModel.setVertexCount(fillVertexCount);\n            fillModel.setUniforms({ isStroke: false });\n            fillModel.draw(this.context.renderPass);\n        }\n        // When drawing 2d: draw fill before stroke so that the outline is always on top\n        if (!extruded && stroked) {\n            // model.setProps({isIndexed: false});\n            // The width of the stroke is achieved by flattening the side of the cylinder.\n            // Skip the last 1/3 of the vertices which is the top.\n            fillModel.setVertexCount((fillVertexCount * 2) / 3);\n            fillModel.setUniforms({ isStroke: true });\n            fillModel.draw(this.context.renderPass);\n        }\n    }\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { UNIT } from '@deck.gl/core';\nimport { CubeGeometry } from '@luma.gl/engine';\nimport ColumnLayer from \"./column-layer.js\";\nconst defaultProps = {\n    cellSize: { type: 'number', min: 0, value: 1000 },\n    offset: { type: 'array', value: [1, 1] }\n};\nexport default class GridCellLayer extends ColumnLayer {\n    static { this.layerName = 'GridCellLayer'; }\n    static { this.defaultProps = defaultProps; }\n    _updateGeometry() {\n        const geometry = new CubeGeometry();\n        this.state.fillModel.setGeometry(geometry);\n    }\n    draw({ uniforms }) {\n        const { elevationScale, extruded, offset, coverage, cellSize, angle, radiusUnits } = this.props;\n        const fillModel = this.state.fillModel;\n        fillModel.setUniforms(uniforms);\n        fillModel.setUniforms({\n            radius: cellSize / 2,\n            radiusUnits: UNIT[radiusUnits],\n            angle,\n            offset,\n            extruded,\n            coverage,\n            elevationScale,\n            edgeDistance: 1,\n            isStroke: false\n        });\n        fillModel.draw(this.context.renderPass);\n    }\n}\n", "import { cutPolylineByGrid, cutPolylineByMercatorBounds } from '@math.gl/polygon';\n/**\n * Flattens a nested path object\n * Cut the feature if needed (globe projection, wrap longitude, etc.)\n * Returns a flat array of path positions, or a list of flat arrays representing multiple paths\n */\nexport function normalizePath(path, size, gridResolution, wrapLongitude) {\n    let flatPath;\n    if (Array.isArray(path[0])) {\n        const length = path.length * size;\n        flatPath = new Array(length);\n        for (let i = 0; i < path.length; i++) {\n            for (let j = 0; j < size; j++) {\n                flatPath[i * size + j] = path[i][j] || 0;\n            }\n        }\n    }\n    else {\n        flatPath = path;\n    }\n    if (gridResolution) {\n        return cutPolylineByGrid(flatPath, { size, gridResolution });\n    }\n    if (wrapLongitude) {\n        return cutPolylineByMercatorBounds(flatPath, { size });\n    }\n    return flatPath;\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { Tesselator } from '@deck.gl/core';\nimport { normalizePath } from \"./path.js\";\nconst START_CAP = 1;\nconst END_CAP = 2;\nconst INVALID = 4;\n// This class is set up to allow querying one attribute at a time\n// the way the AttributeManager expects it\nexport default class PathTesselator extends Tesselator {\n    constructor(opts) {\n        super({\n            ...opts,\n            attributes: {\n                // Padding covers shaderAttributes for last segment in largest case fp64\n                // additional vertex + hi & low parts, 3 * 6\n                positions: {\n                    size: 3,\n                    padding: 18,\n                    initialize: true,\n                    type: opts.fp64 ? Float64Array : Float32Array\n                },\n                segmentTypes: { size: 1, type: Uint8ClampedArray }\n            }\n        });\n    }\n    /** Get packed attribute by name */\n    get(attributeName) {\n        return this.attributes[attributeName];\n    }\n    /* Implement base Tesselator interface */\n    getGeometryFromBuffer(buffer) {\n        if (this.normalize) {\n            return super.getGeometryFromBuffer(buffer);\n        }\n        // we don't need to read the positions if no normalization\n        return null;\n    }\n    /* Implement base Tesselator interface */\n    normalizeGeometry(path) {\n        if (this.normalize) {\n            return normalizePath(path, this.positionSize, this.opts.resolution, this.opts.wrapLongitude);\n        }\n        return path;\n    }\n    /* Implement base Tesselator interface */\n    getGeometrySize(path) {\n        if (isCut(path)) {\n            let size = 0;\n            for (const subPath of path) {\n                size += this.getGeometrySize(subPath);\n            }\n            return size;\n        }\n        const numPoints = this.getPathLength(path);\n        if (numPoints < 2) {\n            // invalid path\n            return 0;\n        }\n        if (this.isClosed(path)) {\n            // minimum 3 vertices\n            return numPoints < 3 ? 0 : numPoints + 2;\n        }\n        return numPoints;\n    }\n    /* Implement base Tesselator interface */\n    updateGeometryAttributes(path, context) {\n        if (context.geometrySize === 0) {\n            return;\n        }\n        if (path && isCut(path)) {\n            for (const subPath of path) {\n                const geometrySize = this.getGeometrySize(subPath);\n                context.geometrySize = geometrySize;\n                this.updateGeometryAttributes(subPath, context);\n                context.vertexStart += geometrySize;\n            }\n        }\n        else {\n            this._updateSegmentTypes(path, context);\n            this._updatePositions(path, context);\n        }\n    }\n    _updateSegmentTypes(path, context) {\n        const segmentTypes = this.attributes.segmentTypes;\n        const isPathClosed = path ? this.isClosed(path) : false;\n        const { vertexStart, geometrySize } = context;\n        // positions   --  A0 A1 B0 B1 B2 B3 B0 B1 B2 --\n        // segmentTypes     3  4  4  0  0  0  0  4  4\n        segmentTypes.fill(0, vertexStart, vertexStart + geometrySize);\n        if (isPathClosed) {\n            segmentTypes[vertexStart] = INVALID;\n            segmentTypes[vertexStart + geometrySize - 2] = INVALID;\n        }\n        else {\n            segmentTypes[vertexStart] += START_CAP;\n            segmentTypes[vertexStart + geometrySize - 2] += END_CAP;\n        }\n        segmentTypes[vertexStart + geometrySize - 1] = INVALID;\n    }\n    _updatePositions(path, context) {\n        const { positions } = this.attributes;\n        if (!positions || !path) {\n            return;\n        }\n        const { vertexStart, geometrySize } = context;\n        const p = new Array(3);\n        // positions   --  A0 A1 B0 B1 B2 B3 B0 B1 B2 --\n        // segmentTypes     3  4  4  0  0  0  0  4  4\n        for (let i = vertexStart, ptIndex = 0; ptIndex < geometrySize; i++, ptIndex++) {\n            this.getPointOnPath(path, ptIndex, p);\n            positions[i * 3] = p[0];\n            positions[i * 3 + 1] = p[1];\n            positions[i * 3 + 2] = p[2];\n        }\n    }\n    // Utilities\n    /** Returns the number of points in the path */\n    getPathLength(path) {\n        return path.length / this.positionSize;\n    }\n    /** Returns a point on the path at the specified index */\n    getPointOnPath(path, index, target = []) {\n        const { positionSize } = this;\n        if (index * positionSize >= path.length) {\n            // loop\n            index += 1 - path.length / positionSize;\n        }\n        const i = index * positionSize;\n        target[0] = path[i];\n        target[1] = path[i + 1];\n        target[2] = (positionSize === 3 && path[i + 2]) || 0;\n        return target;\n    }\n    // Returns true if the first and last points are identical\n    isClosed(path) {\n        if (!this.normalize) {\n            return Boolean(this.opts.loop);\n        }\n        const { positionSize } = this;\n        const lastPointIndex = path.length - positionSize;\n        return (path[0] === path[lastPointIndex] &&\n            path[1] === path[lastPointIndex + 1] &&\n            (positionSize === 2 || path[2] === path[lastPointIndex + 2]));\n    }\n}\nfunction isCut(path) {\n    return Array.isArray(path[0]);\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `\\\n#version 300 es\n#define SHADER_NAME path-layer-vertex-shader\nin vec2 positions;\nin float instanceTypes;\nin vec3 instanceStartPositions;\nin vec3 instanceEndPositions;\nin vec3 instanceLeftPositions;\nin vec3 instanceRightPositions;\nin vec3 instanceLeftPositions64Low;\nin vec3 instanceStartPositions64Low;\nin vec3 instanceEndPositions64Low;\nin vec3 instanceRightPositions64Low;\nin float instanceStrokeWidths;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform float jointType;\nuniform float capType;\nuniform float miterLimit;\nuniform bool billboard;\nuniform int widthUnits;\nuniform float opacity;\nout vec4 vColor;\nout vec2 vCornerOffset;\nout float vMiterLength;\nout vec2 vPathPosition;\nout float vPathLength;\nout float vJointType;\nconst float EPSILON = 0.001;\nconst vec3 ZERO_OFFSET = vec3(0.0);\nfloat flipIfTrue(bool flag) {\nreturn -(float(flag) * 2. - 1.);\n}\nvec3 getLineJoinOffset(\nvec3 prevPoint, vec3 currPoint, vec3 nextPoint,\nvec2 width\n) {\nbool isEnd = positions.x > 0.0;\nfloat sideOfPath = positions.y;\nfloat isJoint = float(sideOfPath == 0.0);\nvec3 deltaA3 = (currPoint - prevPoint);\nvec3 deltaB3 = (nextPoint - currPoint);\nmat3 rotationMatrix;\nbool needsRotation = !billboard && project_needs_rotation(currPoint, rotationMatrix);\nif (needsRotation) {\ndeltaA3 = deltaA3 * rotationMatrix;\ndeltaB3 = deltaB3 * rotationMatrix;\n}\nvec2 deltaA = deltaA3.xy / width;\nvec2 deltaB = deltaB3.xy / width;\nfloat lenA = length(deltaA);\nfloat lenB = length(deltaB);\nvec2 dirA = lenA > 0. ? normalize(deltaA) : vec2(0.0, 0.0);\nvec2 dirB = lenB > 0. ? normalize(deltaB) : vec2(0.0, 0.0);\nvec2 perpA = vec2(-dirA.y, dirA.x);\nvec2 perpB = vec2(-dirB.y, dirB.x);\nvec2 tangent = dirA + dirB;\ntangent = length(tangent) > 0. ? normalize(tangent) : perpA;\nvec2 miterVec = vec2(-tangent.y, tangent.x);\nvec2 dir = isEnd ? dirA : dirB;\nvec2 perp = isEnd ? perpA : perpB;\nfloat L = isEnd ? lenA : lenB;\nfloat sinHalfA = abs(dot(miterVec, perp));\nfloat cosHalfA = abs(dot(dirA, miterVec));\nfloat turnDirection = flipIfTrue(dirA.x * dirB.y >= dirA.y * dirB.x);\nfloat cornerPosition = sideOfPath * turnDirection;\nfloat miterSize = 1.0 / max(sinHalfA, EPSILON);\nmiterSize = mix(\nmin(miterSize, max(lenA, lenB) / max(cosHalfA, EPSILON)),\nmiterSize,\nstep(0.0, cornerPosition)\n);\nvec2 offsetVec = mix(miterVec * miterSize, perp, step(0.5, cornerPosition))\n* (sideOfPath + isJoint * turnDirection);\nbool isStartCap = lenA == 0.0 || (!isEnd && (instanceTypes == 1.0 || instanceTypes == 3.0));\nbool isEndCap = lenB == 0.0 || (isEnd && (instanceTypes == 2.0 || instanceTypes == 3.0));\nbool isCap = isStartCap || isEndCap;\nif (isCap) {\noffsetVec = mix(perp * sideOfPath, dir * capType * 4.0 * flipIfTrue(isStartCap), isJoint);\nvJointType = capType;\n} else {\nvJointType = jointType;\n}\nvPathLength = L;\nvCornerOffset = offsetVec;\nvMiterLength = dot(vCornerOffset, miterVec * turnDirection);\nvMiterLength = isCap ? isJoint : vMiterLength;\nvec2 offsetFromStartOfPath = vCornerOffset + deltaA * float(isEnd);\nvPathPosition = vec2(\ndot(offsetFromStartOfPath, perp),\ndot(offsetFromStartOfPath, dir)\n);\ngeometry.uv = vPathPosition;\nfloat isValid = step(instanceTypes, 3.5);\nvec3 offset = vec3(offsetVec * width * isValid, 0.0);\nif (needsRotation) {\noffset = rotationMatrix * offset;\n}\nreturn offset;\n}\nvoid clipLine(inout vec4 position, vec4 refPosition) {\nif (position.w < EPSILON) {\nfloat r = (EPSILON - refPosition.w) / (position.w - refPosition.w);\nposition = refPosition + (position - refPosition) * r;\n}\n}\nvoid main() {\ngeometry.pickingColor = instancePickingColors;\nvColor = vec4(instanceColors.rgb, instanceColors.a * opacity);\nfloat isEnd = positions.x;\nvec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);\nvec3 prevPosition64Low = mix(instanceLeftPositions64Low, instanceStartPositions64Low, isEnd);\nvec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);\nvec3 currPosition64Low = mix(instanceStartPositions64Low, instanceEndPositions64Low, isEnd);\nvec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);\nvec3 nextPosition64Low = mix(instanceEndPositions64Low, instanceRightPositions64Low, isEnd);\ngeometry.worldPosition = currPosition;\nvec2 widthPixels = vec2(clamp(\nproject_size_to_pixel(instanceStrokeWidths * widthScale, widthUnits),\nwidthMinPixels, widthMaxPixels) / 2.0);\nvec3 width;\nif (billboard) {\nvec4 prevPositionScreen = project_position_to_clipspace(prevPosition, prevPosition64Low, ZERO_OFFSET);\nvec4 currPositionScreen = project_position_to_clipspace(currPosition, currPosition64Low, ZERO_OFFSET, geometry.position);\nvec4 nextPositionScreen = project_position_to_clipspace(nextPosition, nextPosition64Low, ZERO_OFFSET);\nclipLine(prevPositionScreen, currPositionScreen);\nclipLine(nextPositionScreen, currPositionScreen);\nclipLine(currPositionScreen, mix(nextPositionScreen, prevPositionScreen, isEnd));\nwidth = vec3(widthPixels, 0.0);\nDECKGL_FILTER_SIZE(width, geometry);\nvec3 offset = getLineJoinOffset(\nprevPositionScreen.xyz / prevPositionScreen.w,\ncurrPositionScreen.xyz / currPositionScreen.w,\nnextPositionScreen.xyz / nextPositionScreen.w,\nproject_pixel_size_to_clipspace(width.xy)\n);\nDECKGL_FILTER_GL_POSITION(currPositionScreen, geometry);\ngl_Position = vec4(currPositionScreen.xyz + offset * currPositionScreen.w, currPositionScreen.w);\n} else {\nprevPosition = project_position(prevPosition, prevPosition64Low);\ncurrPosition = project_position(currPosition, currPosition64Low);\nnextPosition = project_position(nextPosition, nextPosition64Low);\nwidth = vec3(project_pixel_size(widthPixels), 0.0);\nDECKGL_FILTER_SIZE(width, geometry);\nvec3 offset = getLineJoinOffset(prevPosition, currPosition, nextPosition, width.xy);\ngeometry.position = vec4(currPosition + offset, 1.0);\ngl_Position = project_common_position_to_clipspace(geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `\\\n#version 300 es\n#define SHADER_NAME path-layer-fragment-shader\nprecision highp float;\nuniform float miterLimit;\nin vec4 vColor;\nin vec2 vCornerOffset;\nin float vMiterLength;\nin vec2 vPathPosition;\nin float vPathLength;\nin float vJointType;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = vPathPosition;\nif (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {\nif (vJointType > 0.5 && length(vCornerOffset) > 1.0) {\ndiscard;\n}\nif (vJointType < 0.5 && vMiterLength > miterLimit + 1.0) {\ndiscard;\n}\n}\nfragColor = vColor;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { Layer, project32, picking, UNIT } from '@deck.gl/core';\nimport { Geometry } from '@luma.gl/engine';\nimport { Model } from '@luma.gl/engine';\nimport PathTesselator from \"./path-tesselator.js\";\nimport vs from \"./path-layer-vertex.glsl.js\";\nimport fs from \"./path-layer-fragment.glsl.js\";\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n    widthUnits: 'meters',\n    widthScale: { type: 'number', min: 0, value: 1 },\n    widthMinPixels: { type: 'number', min: 0, value: 0 },\n    widthMaxPixels: { type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER },\n    jointRounded: false,\n    capRounded: false,\n    miterLimit: { type: 'number', min: 0, value: 4 },\n    billboard: false,\n    _pathType: null,\n    getPath: { type: 'accessor', value: (object) => object.path },\n    getColor: { type: 'accessor', value: DEFAULT_COLOR },\n    getWidth: { type: 'accessor', value: 1 },\n    // deprecated props\n    rounded: { deprecatedFor: ['jointRounded', 'capRounded'] }\n};\nconst ATTRIBUTE_TRANSITION = {\n    enter: (value, chunk) => {\n        return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n    }\n};\n/** Render lists of coordinate points as extruded polylines with mitering. */\nexport default class PathLayer extends Layer {\n    static { this.defaultProps = defaultProps; }\n    static { this.layerName = 'PathLayer'; }\n    getShaders() {\n        return super.getShaders({ vs, fs, modules: [project32, picking] }); // 'project' module added by default.\n    }\n    get wrapLongitude() {\n        return false;\n    }\n    getBounds() {\n        return this.getAttributeManager()?.getBounds(['vertexPositions']);\n    }\n    initializeState() {\n        const noAlloc = true;\n        const attributeManager = this.getAttributeManager();\n        /* eslint-disable max-len */\n        attributeManager.addInstanced({\n            vertexPositions: {\n                size: 3,\n                // Start filling buffer from 1 vertex in\n                vertexOffset: 1,\n                type: 'float64',\n                fp64: this.use64bitPositions(),\n                transition: ATTRIBUTE_TRANSITION,\n                accessor: 'getPath',\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                update: this.calculatePositions,\n                noAlloc,\n                shaderAttributes: {\n                    instanceLeftPositions: {\n                        vertexOffset: 0\n                    },\n                    instanceStartPositions: {\n                        vertexOffset: 1\n                    },\n                    instanceEndPositions: {\n                        vertexOffset: 2\n                    },\n                    instanceRightPositions: {\n                        vertexOffset: 3\n                    }\n                }\n            },\n            instanceTypes: {\n                size: 1,\n                type: 'uint8',\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                update: this.calculateSegmentTypes,\n                noAlloc\n            },\n            instanceStrokeWidths: {\n                size: 1,\n                accessor: 'getWidth',\n                transition: ATTRIBUTE_TRANSITION,\n                defaultValue: 1\n            },\n            instanceColors: {\n                size: this.props.colorFormat.length,\n                type: 'unorm8',\n                accessor: 'getColor',\n                transition: ATTRIBUTE_TRANSITION,\n                defaultValue: DEFAULT_COLOR\n            },\n            instancePickingColors: {\n                size: 4,\n                type: 'uint8',\n                accessor: (object, { index, target: value }) => this.encodePickingColor(object && object.__source ? object.__source.index : index, value)\n            }\n        });\n        /* eslint-enable max-len */\n        this.setState({\n            pathTesselator: new PathTesselator({\n                fp64: this.use64bitPositions()\n            })\n        });\n    }\n    updateState(params) {\n        super.updateState(params);\n        const { props, changeFlags } = params;\n        const attributeManager = this.getAttributeManager();\n        const geometryChanged = changeFlags.dataChanged ||\n            (changeFlags.updateTriggersChanged &&\n                (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPath));\n        if (geometryChanged) {\n            const { pathTesselator } = this.state;\n            const buffers = props.data.attributes || {};\n            pathTesselator.updateGeometry({\n                data: props.data,\n                geometryBuffer: buffers.getPath,\n                buffers,\n                normalize: !props._pathType,\n                loop: props._pathType === 'loop',\n                getGeometry: props.getPath,\n                positionFormat: props.positionFormat,\n                wrapLongitude: props.wrapLongitude,\n                // TODO - move the flag out of the viewport\n                resolution: this.context.viewport.resolution,\n                dataChanged: changeFlags.dataChanged\n            });\n            this.setState({\n                numInstances: pathTesselator.instanceCount,\n                startIndices: pathTesselator.vertexStarts\n            });\n            if (!changeFlags.dataChanged) {\n                // Base `layer.updateState` only invalidates all attributes on data change\n                // Cover the rest of the scenarios here\n                attributeManager.invalidateAll();\n            }\n        }\n        if (changeFlags.extensionsChanged) {\n            this.state.model?.destroy();\n            this.state.model = this._getModel();\n            attributeManager.invalidateAll();\n        }\n    }\n    getPickingInfo(params) {\n        const info = super.getPickingInfo(params);\n        const { index } = info;\n        const data = this.props.data;\n        // Check if data comes from a composite layer, wrapped with getSubLayerRow\n        if (data[0] && data[0].__source) {\n            // index decoded from picking color refers to the source index\n            info.object = data.find(d => d.__source.index === index);\n        }\n        return info;\n    }\n    /** Override base Layer method */\n    disablePickingIndex(objectIndex) {\n        const data = this.props.data;\n        // Check if data comes from a composite layer, wrapped with getSubLayerRow\n        if (data[0] && data[0].__source) {\n            // index decoded from picking color refers to the source index\n            for (let i = 0; i < data.length; i++) {\n                if (data[i].__source.index === objectIndex) {\n                    this._disablePickingIndex(i);\n                }\n            }\n        }\n        else {\n            super.disablePickingIndex(objectIndex);\n        }\n    }\n    draw({ uniforms }) {\n        const { jointRounded, capRounded, billboard, miterLimit, widthUnits, widthScale, widthMinPixels, widthMaxPixels } = this.props;\n        const model = this.state.model;\n        model.setUniforms(uniforms);\n        model.setUniforms({\n            jointType: Number(jointRounded),\n            capType: Number(capRounded),\n            billboard,\n            widthUnits: UNIT[widthUnits],\n            widthScale,\n            miterLimit,\n            widthMinPixels,\n            widthMaxPixels\n        });\n        model.draw(this.context.renderPass);\n    }\n    _getModel() {\n        /*\n         *       _\n         *        \"-_ 1                   3                       5\n         *     _     \"o---------------------o-------------------_-o\n         *       -   / \"\"--..__              '.             _.-' /\n         *   _     \"@- - - - - \"\"--..__- - - - x - - - -_.@'    /\n         *    \"-_  /                   \"\"--..__ '.  _,-` :     /\n         *       \"o----------------------------\"\"-o'    :     /\n         *      0,2                            4 / '.  :     /\n         *                                      /   '.:     /\n         *                                     /     :'.   /\n         *                                    /     :  ', /\n         *                                   /     :     o\n         */\n        // prettier-ignore\n        const SEGMENT_INDICES = [\n            // start corner\n            0, 1, 2,\n            // body\n            1, 4, 2,\n            1, 3, 4,\n            // end corner\n            3, 5, 4\n        ];\n        // [0] position on segment - 0: start, 1: end\n        // [1] side of path - -1: left, 0: center (joint), 1: right\n        // prettier-ignore\n        const SEGMENT_POSITIONS = [\n            // bevel start corner\n            0, 0,\n            // start inner corner\n            0, -1,\n            // start outer corner\n            0, 1,\n            // end inner corner\n            1, -1,\n            // end outer corner\n            1, 1,\n            // bevel end corner\n            1, 0\n        ];\n        return new Model(this.context.device, {\n            ...this.getShaders(),\n            id: this.props.id,\n            bufferLayout: this.getAttributeManager().getBufferLayouts(),\n            geometry: new Geometry({\n                topology: 'triangle-list',\n                attributes: {\n                    indices: new Uint16Array(SEGMENT_INDICES),\n                    positions: { value: new Float32Array(SEGMENT_POSITIONS), size: 2 }\n                }\n            }),\n            isInstanced: true\n        });\n    }\n    calculatePositions(attribute) {\n        const { pathTesselator } = this.state;\n        attribute.startIndices = pathTesselator.vertexStarts;\n        attribute.value = pathTesselator.get('positions');\n    }\n    calculateSegmentTypes(attribute) {\n        const { pathTesselator } = this.state;\n        attribute.startIndices = pathTesselator.vertexStarts;\n        attribute.value = pathTesselator.get('segmentTypes');\n    }\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* eslint-disable max-params */\nimport earcut from 'earcut';\nimport { modifyPolygonWindingDirection, WINDING } from '@math.gl/polygon';\nconst OUTER_POLYGON_WINDING = WINDING.CLOCKWISE;\nconst HOLE_POLYGON_WINDING = WINDING.COUNTER_CLOCKWISE;\n/** A scratch object for sending winding options */\nconst windingOptions = {\n    isClosed: true\n};\n/**\n * Ensure a polygon is valid format\n */\nfunction validate(polygon) {\n    polygon = (polygon && polygon.positions) || polygon;\n    if (!Array.isArray(polygon) && !ArrayBuffer.isView(polygon)) {\n        throw new Error('invalid polygon');\n    }\n}\n/** Get the positions from a normalized polygon */\nexport function getPositions(polygon) {\n    return 'positions' in polygon ? polygon.positions : polygon;\n}\n/** Get the hole indices from a normalized polygon */\nexport function getHoleIndices(polygon) {\n    return 'holeIndices' in polygon ? polygon.holeIndices : null;\n}\n/**\n * Check if a polygon is nested or flat\n * Returns true if the polygon is a flat polygon (i.e. not an array of polygons)\n */\nfunction isNested(polygon) {\n    return Array.isArray(polygon[0]);\n}\n/**\n * Check if a polygon is simple or complex\n * Returns true if the polygon is a simple polygon (i.e. not an array of polygons)\n */\nfunction isSimple(polygon) {\n    return polygon.length >= 1 && polygon[0].length >= 2 && Number.isFinite(polygon[0][0]);\n}\n/**\n * Check if a simple polygon is a closed ring\n * Returns true if the simple polygon is a closed ring\n */\nfunction isNestedRingClosed(simplePolygon) {\n    // check if first and last vertex are the same\n    const p0 = simplePolygon[0];\n    const p1 = simplePolygon[simplePolygon.length - 1];\n    return p0[0] === p1[0] && p0[1] === p1[1] && p0[2] === p1[2];\n}\n/**\n * Check if a simple flat array is a closed ring\n * Returns true if the simple flat array is a closed ring\n */\nfunction isFlatRingClosed(positions, \n/** size of a position, 2 (xy) or 3 (xyz) */\nsize, \n/** start index of the path in the positions array */\nstartIndex, \n/** end index of the path in the positions array */\nendIndex) {\n    for (let i = 0; i < size; i++) {\n        if (positions[startIndex + i] !== positions[endIndex - size + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Copy a simple polygon coordinates into a flat array, closes the ring if needed.\n * Returns the index of the write head in the destination\n */\nfunction copyNestedRing(\n/** destination */\ntarget, \n/** index in the destination to start copying into */\ntargetStartIndex, \n/** the source polygon */\nsimplePolygon, \n/** size of a position, 2 (xy) or 3 (xyz) */\nsize, \n/** modify polygon to be of the specified winding direction */\nwindingDirection) {\n    let targetIndex = targetStartIndex;\n    const len = simplePolygon.length;\n    for (let i = 0; i < len; i++) {\n        for (let j = 0; j < size; j++) {\n            target[targetIndex++] = simplePolygon[i][j] || 0;\n        }\n    }\n    if (!isNestedRingClosed(simplePolygon)) {\n        for (let j = 0; j < size; j++) {\n            target[targetIndex++] = simplePolygon[0][j] || 0;\n        }\n    }\n    windingOptions.start = targetStartIndex;\n    windingOptions.end = targetIndex;\n    windingOptions.size = size;\n    modifyPolygonWindingDirection(target, windingDirection, windingOptions);\n    return targetIndex;\n}\n/**\n * Copy a simple flat array into another flat array, closes the ring if needed.\n * Returns the index of the write head in the destination\n */\nfunction copyFlatRing(\n/** destination */\ntarget, \n/** index in the destination to start copying into */\ntargetStartIndex, \n/** the source polygon */\npositions, \n/** size of a position, 2 (xy) or 3 (xyz) */\nsize, \n/** start index of the path in the positions array */\nsrcStartIndex = 0, \n/** end index of the path in the positions array */\nsrcEndIndex, windingDirection) {\n    srcEndIndex = srcEndIndex || positions.length;\n    const srcLength = srcEndIndex - srcStartIndex;\n    if (srcLength <= 0) {\n        return targetStartIndex;\n    }\n    let targetIndex = targetStartIndex;\n    for (let i = 0; i < srcLength; i++) {\n        target[targetIndex++] = positions[srcStartIndex + i];\n    }\n    if (!isFlatRingClosed(positions, size, srcStartIndex, srcEndIndex)) {\n        for (let i = 0; i < size; i++) {\n            target[targetIndex++] = positions[srcStartIndex + i];\n        }\n    }\n    windingOptions.start = targetStartIndex;\n    windingOptions.end = targetIndex;\n    windingOptions.size = size;\n    modifyPolygonWindingDirection(target, windingDirection, windingOptions);\n    return targetIndex;\n}\n/**\n * Normalize any polygon representation into the \"complex flat\" format\n */\n/* eslint-disable max-statements */\nexport function normalize(polygon, positionSize) {\n    validate(polygon);\n    const positions = [];\n    const holeIndices = [];\n    if ('positions' in polygon) {\n        // complex flat\n        const { positions: srcPositions, holeIndices: srcHoleIndices } = polygon;\n        if (srcHoleIndices) {\n            let targetIndex = 0;\n            // split the positions array into `holeIndices.length + 1` rings\n            // holeIndices[-1] falls back to 0\n            // holeIndices[holeIndices.length] falls back to positions.length\n            for (let i = 0; i <= srcHoleIndices.length; i++) {\n                targetIndex = copyFlatRing(positions, targetIndex, srcPositions, positionSize, srcHoleIndices[i - 1], srcHoleIndices[i], i === 0 ? OUTER_POLYGON_WINDING : HOLE_POLYGON_WINDING);\n                holeIndices.push(targetIndex);\n            }\n            // The last one is not a starting index of a hole, remove\n            holeIndices.pop();\n            return { positions, holeIndices };\n        }\n        polygon = srcPositions;\n    }\n    if (!isNested(polygon)) {\n        // simple flat\n        copyFlatRing(positions, 0, polygon, positionSize, 0, positions.length, OUTER_POLYGON_WINDING);\n        return positions;\n    }\n    if (!isSimple(polygon)) {\n        // complex polygon\n        let targetIndex = 0;\n        for (const [polygonIndex, simplePolygon] of polygon.entries()) {\n            targetIndex = copyNestedRing(positions, targetIndex, simplePolygon, positionSize, polygonIndex === 0 ? OUTER_POLYGON_WINDING : HOLE_POLYGON_WINDING);\n            holeIndices.push(targetIndex);\n        }\n        // The last one is not a starting index of a hole, remove\n        holeIndices.pop();\n        // last index points to the end of the array, remove it\n        return { positions, holeIndices };\n    }\n    // simple polygon\n    copyNestedRing(positions, 0, polygon, positionSize, OUTER_POLYGON_WINDING);\n    return positions;\n}\n/* eslint-enable max-statements */\n/*\n * Calculate the area of a single plane of the polygon\n */\nfunction getPlaneArea(positions, xIndex, yIndex) {\n    const numVerts = positions.length / 3;\n    let area = 0;\n    for (let i = 0; i < numVerts; i++) {\n        const j = (i + 1) % numVerts;\n        area += positions[i * 3 + xIndex] * positions[j * 3 + yIndex];\n        area -= positions[j * 3 + xIndex] * positions[i * 3 + yIndex];\n    }\n    return Math.abs(area / 2);\n}\nfunction permutePositions(positions, xIndex, yIndex, zIndex) {\n    const numVerts = positions.length / 3;\n    for (let i = 0; i < numVerts; i++) {\n        const o = i * 3;\n        const x = positions[o + 0];\n        const y = positions[o + 1];\n        const z = positions[o + 2];\n        positions[o + xIndex] = x;\n        positions[o + yIndex] = y;\n        positions[o + zIndex] = z;\n    }\n}\n/**\n * Get vertex indices for drawing polygon mesh (triangulation)\n */\n// eslint-disable-next-line complexity, max-statements\nexport function getSurfaceIndices(polygon, positionSize, preproject, full3d) {\n    let holeIndices = getHoleIndices(polygon);\n    if (holeIndices) {\n        holeIndices = holeIndices.map(positionIndex => positionIndex / positionSize);\n    }\n    let positions = getPositions(polygon);\n    const is3d = full3d && positionSize === 3;\n    if (preproject) {\n        // When tesselating lnglat coordinates, project them to the common space for accuracy\n        const n = positions.length;\n        // Clone the array\n        positions = positions.slice();\n        const p = [];\n        for (let i = 0; i < n; i += positionSize) {\n            p[0] = positions[i];\n            p[1] = positions[i + 1];\n            if (is3d) {\n                p[2] = positions[i + 2];\n            }\n            const xy = preproject(p);\n            positions[i] = xy[0];\n            positions[i + 1] = xy[1];\n            if (is3d) {\n                positions[i + 2] = xy[2];\n            }\n        }\n    }\n    if (is3d) {\n        // calculate plane with largest area\n        const xyArea = getPlaneArea(positions, 0, 1);\n        const xzArea = getPlaneArea(positions, 0, 2);\n        const yzArea = getPlaneArea(positions, 1, 2);\n        if (!xyArea && !xzArea && !yzArea) {\n            return []; // no planes have area, nothing we can do\n        }\n        // permute positions to make the largest plane xy for earcut\n        if (xyArea > xzArea && xyArea > yzArea) {\n            // xy plane largest, nothing to do\n        }\n        else if (xzArea > yzArea) {\n            // xz plane largest, permute to make xyz -> xzy\n            if (!preproject) {\n                positions = positions.slice();\n            }\n            permutePositions(positions, 0, 2, 1);\n        }\n        else {\n            // yz plane largest, permute to make xyz -> yzx\n            if (!preproject) {\n                positions = positions.slice();\n            }\n            permutePositions(positions, 2, 0, 1);\n        }\n    }\n    // Let earcut triangulate the polygon\n    return earcut(positions, holeIndices, positionSize);\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n// Handles tesselation of polygons with holes\n// - 2D surfaces\n// - 2D outlines\n// - 3D surfaces (top and sides only)\n// - 3D wireframes (not yet)\nimport * as Polygon from \"./polygon.js\";\nimport { Tesselator } from '@deck.gl/core';\nimport { cutPolygonByGrid, cutPolygonByMercatorBounds } from '@math.gl/polygon';\n// This class is set up to allow querying one attribute at a time\n// the way the AttributeManager expects it\nexport default class PolygonTesselator extends Tesselator {\n    constructor(opts) {\n        const { fp64, IndexType = Uint32Array } = opts;\n        super({\n            ...opts,\n            attributes: {\n                positions: { size: 3, type: fp64 ? Float64Array : Float32Array },\n                vertexValid: { type: Uint16Array, size: 1 },\n                indices: { type: IndexType, size: 1 }\n            }\n        });\n    }\n    /** Get attribute by name */\n    get(attributeName) {\n        const { attributes } = this;\n        if (attributeName === 'indices') {\n            return attributes.indices && attributes.indices.subarray(0, this.vertexCount);\n        }\n        return attributes[attributeName];\n    }\n    /** Override base Tesselator method */\n    updateGeometry(opts) {\n        super.updateGeometry(opts);\n        const externalIndices = this.buffers.indices;\n        if (externalIndices) {\n            // @ts-ignore (2339) value is not defined on TypedArray (fall through)\n            this.vertexCount = (externalIndices.value || externalIndices).length;\n        }\n        else if (this.data && !this.getGeometry) {\n            throw new Error('missing indices buffer');\n        }\n    }\n    /** Implement base Tesselator interface */\n    normalizeGeometry(polygon) {\n        if (this.normalize) {\n            const normalizedPolygon = Polygon.normalize(polygon, this.positionSize);\n            if (this.opts.resolution) {\n                return cutPolygonByGrid(Polygon.getPositions(normalizedPolygon), Polygon.getHoleIndices(normalizedPolygon), {\n                    size: this.positionSize,\n                    gridResolution: this.opts.resolution,\n                    edgeTypes: true\n                });\n            }\n            if (this.opts.wrapLongitude) {\n                return cutPolygonByMercatorBounds(Polygon.getPositions(normalizedPolygon), Polygon.getHoleIndices(normalizedPolygon), {\n                    size: this.positionSize,\n                    maxLatitude: 86,\n                    edgeTypes: true\n                });\n            }\n            return normalizedPolygon;\n        }\n        // normalize is explicitly set to false, assume that user passed in already normalized polygons\n        return polygon;\n    }\n    /** Implement base Tesselator interface */\n    getGeometrySize(polygon) {\n        if (isCut(polygon)) {\n            let size = 0;\n            for (const subPolygon of polygon) {\n                size += this.getGeometrySize(subPolygon);\n            }\n            return size;\n        }\n        return Polygon.getPositions(polygon).length / this.positionSize;\n    }\n    /** Override base Tesselator method */\n    getGeometryFromBuffer(buffer) {\n        if (this.normalize || !this.buffers.indices) {\n            return super.getGeometryFromBuffer(buffer);\n        }\n        // we don't need to read the positions if no normalization/tesselation\n        return null;\n    }\n    /** Implement base Tesselator interface */\n    updateGeometryAttributes(polygon, context) {\n        if (polygon && isCut(polygon)) {\n            for (const subPolygon of polygon) {\n                const geometrySize = this.getGeometrySize(subPolygon);\n                context.geometrySize = geometrySize;\n                this.updateGeometryAttributes(subPolygon, context);\n                context.vertexStart += geometrySize;\n                context.indexStart = this.indexStarts[context.geometryIndex + 1];\n            }\n        }\n        else {\n            const normalizedPolygon = polygon;\n            this._updateIndices(normalizedPolygon, context);\n            this._updatePositions(normalizedPolygon, context);\n            this._updateVertexValid(normalizedPolygon, context);\n        }\n    }\n    // Flatten the indices array\n    _updateIndices(polygon, { geometryIndex, vertexStart: offset, indexStart }) {\n        const { attributes, indexStarts, typedArrayManager } = this;\n        let target = attributes.indices;\n        if (!target || !polygon) {\n            return;\n        }\n        let i = indexStart;\n        // 1. get triangulated indices for the internal areas\n        const indices = Polygon.getSurfaceIndices(polygon, this.positionSize, this.opts.preproject, this.opts.full3d);\n        // make sure the buffer is large enough\n        target = typedArrayManager.allocate(target, indexStart + indices.length, {\n            copy: true\n        });\n        // 2. offset each index by the number of indices in previous polygons\n        for (let j = 0; j < indices.length; j++) {\n            target[i++] = indices[j] + offset;\n        }\n        indexStarts[geometryIndex + 1] = indexStart + indices.length;\n        attributes.indices = target;\n    }\n    // Flatten out all the vertices of all the sub subPolygons\n    _updatePositions(polygon, { vertexStart, geometrySize }) {\n        const { attributes: { positions }, positionSize } = this;\n        if (!positions || !polygon) {\n            return;\n        }\n        const polygonPositions = Polygon.getPositions(polygon);\n        for (let i = vertexStart, j = 0; j < geometrySize; i++, j++) {\n            const x = polygonPositions[j * positionSize];\n            const y = polygonPositions[j * positionSize + 1];\n            const z = positionSize > 2 ? polygonPositions[j * positionSize + 2] : 0;\n            positions[i * 3] = x;\n            positions[i * 3 + 1] = y;\n            positions[i * 3 + 2] = z;\n        }\n    }\n    _updateVertexValid(polygon, { vertexStart, geometrySize }) {\n        const { positionSize } = this;\n        const vertexValid = this.attributes.vertexValid;\n        const holeIndices = polygon && Polygon.getHoleIndices(polygon);\n        /* We are reusing the some buffer for `nextPositions` by offseting one vertex\n         * to the left. As a result,\n         * the last vertex of each ring overlaps with the first vertex of the next ring.\n         * `vertexValid` is used to mark the end of each ring so we don't draw these\n         * segments:\n          positions      A0 A1 A2 A3 A4 B0 B1 B2 C0 ...\n          nextPositions  A1 A2 A3 A4 B0 B1 B2 C0 C1 ...\n          vertexValid    1  1  1  1  0  1  1  0  1 ...\n         */\n        if (polygon && polygon.edgeTypes) {\n            vertexValid.set(polygon.edgeTypes, vertexStart);\n        }\n        else {\n            vertexValid.fill(1, vertexStart, vertexStart + geometrySize);\n        }\n        if (holeIndices) {\n            for (let j = 0; j < holeIndices.length; j++) {\n                vertexValid[vertexStart + holeIndices[j] / positionSize - 1] = 0;\n            }\n        }\n        vertexValid[vertexStart + geometrySize - 1] = 0;\n    }\n}\nfunction isCut(polygon) {\n    return Array.isArray(polygon) && polygon.length > 0 && !Number.isFinite(polygon[0]);\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `\\\nuniform bool extruded;\nuniform bool isWireframe;\nuniform float elevationScale;\nuniform float opacity;\nout vec4 vColor;\nstruct PolygonProps {\nvec4 fillColors;\nvec4 lineColors;\nvec3 positions;\nvec3 positions64Low;\nvec3 pickingColors;\nvec3 normal;\nfloat elevations;\n};\nvec3 project_offset_normal(vec3 vector) {\nif (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\nproject_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSETS) {\nreturn normalize(vector * project_uCommonUnitsPerWorldUnit);\n}\nreturn project_normal(vector);\n}\nvoid calculatePosition(PolygonProps props) {\nvec3 pos = props.positions;\nvec3 pos64Low = props.positions64Low;\nvec3 normal = props.normal;\nvec4 colors = isWireframe ? props.lineColors : props.fillColors;\ngeometry.worldPosition = props.positions;\ngeometry.pickingColor = props.pickingColors;\nif (extruded) {\npos.z += props.elevations * elevationScale;\n}\ngl_Position = project_position_to_clipspace(pos, pos64Low, vec3(0.), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nif (extruded) {\n#ifdef IS_SIDE_VERTEX\nnormal = project_offset_normal(normal);\n#else\nnormal = project_normal(normal);\n#endif\ngeometry.normal = normal;\nvec3 lightColor = lighting_getLightColor(colors.rgb, project_uCameraPosition, geometry.position.xyz, geometry.normal);\nvColor = vec4(lightColor, colors.a * opacity);\n} else {\nvColor = vec4(colors.rgb, colors.a * opacity);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport main from \"./solid-polygon-layer-vertex-main.glsl.js\";\nexport default `\\\n#version 300 es\n#define SHADER_NAME solid-polygon-layer-vertex-shader\nin vec3 vertexPositions;\nin vec3 vertexPositions64Low;\nin float elevations;\nin vec4 fillColors;\nin vec4 lineColors;\nin vec3 pickingColors;\n${main}\nvoid main(void) {\nPolygonProps props;\nprops.positions = vertexPositions;\nprops.positions64Low = vertexPositions64Low;\nprops.elevations = elevations;\nprops.fillColors = fillColors;\nprops.lineColors = lineColors;\nprops.pickingColors = pickingColors;\nprops.normal = vec3(0.0, 0.0, 1.0);\ncalculatePosition(props);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport main from \"./solid-polygon-layer-vertex-main.glsl.js\";\nexport default `\\\n#version 300 es\n#define SHADER_NAME solid-polygon-layer-vertex-shader-side\n#define IS_SIDE_VERTEX\nin vec2 positions;\nin vec3 instancePositions;\nin vec3 instanceNextPositions;\nin vec3 instancePositions64Low;\nin vec3 instanceNextPositions64Low;\nin float instanceElevations;\nin vec4 instanceFillColors;\nin vec4 instanceLineColors;\nin vec3 instancePickingColors;\nin float instanceVertexValid;\n${main}\nvoid main(void) {\nif(instanceVertexValid < 0.5){\ngl_Position = vec4(0.);\nreturn;\n}\nPolygonProps props;\nvec3 pos;\nvec3 pos64Low;\nvec3 nextPos;\nvec3 nextPos64Low;\n#if RING_WINDING_ORDER_CW == 1\npos = instancePositions;\npos64Low = instancePositions64Low;\nnextPos = instanceNextPositions;\nnextPos64Low = instanceNextPositions64Low;\n#else\npos = instanceNextPositions;\npos64Low = instanceNextPositions64Low;\nnextPos = instancePositions;\nnextPos64Low = instancePositions64Low;\n#endif\nprops.positions = mix(pos, nextPos, positions.x);\nprops.positions64Low = mix(pos64Low, nextPos64Low, positions.x);\nprops.normal = vec3(\npos.y - nextPos.y + (pos64Low.y - nextPos64Low.y),\nnextPos.x - pos.x + (nextPos64Low.x - pos64Low.x),\n0.0);\nprops.elevations = instanceElevations * positions.y;\nprops.fillColors = instanceFillColors;\nprops.lineColors = instanceLineColors;\nprops.pickingColors = instancePickingColors;\ncalculatePosition(props);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `\\\n#version 300 es\n#define SHADER_NAME solid-polygon-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nout vec4 fragColor;\nvoid main(void) {\nfragColor = vColor;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { Layer, project32, gouraudLighting, picking, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { Model, Geometry } from '@luma.gl/engine';\n// Polygon geometry generation is managed by the polygon tesselator\nimport PolygonTesselator from \"./polygon-tesselator.js\";\nimport vsTop from \"./solid-polygon-layer-vertex-top.glsl.js\";\nimport vsSide from \"./solid-polygon-layer-vertex-side.glsl.js\";\nimport fs from \"./solid-polygon-layer-fragment.glsl.js\";\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n    filled: true,\n    extruded: false,\n    wireframe: false,\n    _normalize: true,\n    _windingOrder: 'CW',\n    _full3d: false,\n    elevationScale: { type: 'number', min: 0, value: 1 },\n    getPolygon: { type: 'accessor', value: (f) => f.polygon },\n    getElevation: { type: 'accessor', value: 1000 },\n    getFillColor: { type: 'accessor', value: DEFAULT_COLOR },\n    getLineColor: { type: 'accessor', value: DEFAULT_COLOR },\n    material: true\n};\nconst ATTRIBUTE_TRANSITION = {\n    enter: (value, chunk) => {\n        return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n    }\n};\nexport default class SolidPolygonLayer extends Layer {\n    static { this.defaultProps = defaultProps; }\n    static { this.layerName = 'SolidPolygonLayer'; }\n    getShaders(type) {\n        return super.getShaders({\n            vs: type === 'top' ? vsTop : vsSide,\n            fs,\n            defines: {\n                RING_WINDING_ORDER_CW: !this.props._normalize && this.props._windingOrder === 'CCW' ? 0 : 1\n            },\n            modules: [project32, gouraudLighting, picking]\n        });\n    }\n    get wrapLongitude() {\n        return false;\n    }\n    getBounds() {\n        return this.getAttributeManager()?.getBounds(['vertexPositions']);\n    }\n    initializeState() {\n        const { viewport } = this.context;\n        let { coordinateSystem } = this.props;\n        const { _full3d } = this.props;\n        if (viewport.isGeospatial && coordinateSystem === COORDINATE_SYSTEM.DEFAULT) {\n            coordinateSystem = COORDINATE_SYSTEM.LNGLAT;\n        }\n        let preproject;\n        if (coordinateSystem === COORDINATE_SYSTEM.LNGLAT) {\n            if (_full3d) {\n                preproject = viewport.projectPosition.bind(viewport);\n            }\n            else {\n                preproject = viewport.projectFlat.bind(viewport);\n            }\n        }\n        this.setState({\n            numInstances: 0,\n            polygonTesselator: new PolygonTesselator({\n                // Lnglat coordinates are usually projected non-linearly, which affects tesselation results\n                // Provide a preproject function if the coordinates are in lnglat\n                preproject,\n                fp64: this.use64bitPositions(),\n                IndexType: Uint32Array\n            })\n        });\n        const attributeManager = this.getAttributeManager();\n        const noAlloc = true;\n        attributeManager.remove(['instancePickingColors']);\n        /* eslint-disable max-len */\n        attributeManager.add({\n            indices: {\n                size: 1,\n                isIndexed: true,\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                update: this.calculateIndices,\n                noAlloc\n            },\n            vertexPositions: {\n                size: 3,\n                type: 'float64',\n                fp64: this.use64bitPositions(),\n                transition: ATTRIBUTE_TRANSITION,\n                accessor: 'getPolygon',\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                update: this.calculatePositions,\n                noAlloc,\n                shaderAttributes: {\n                    instancePositions: {\n                        vertexOffset: 0,\n                        divisor: 1\n                    },\n                    instanceNextPositions: {\n                        vertexOffset: 1,\n                        divisor: 1\n                    }\n                }\n            },\n            instanceVertexValid: {\n                size: 1,\n                type: 'uint16',\n                divisor: 1,\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                update: this.calculateVertexValid,\n                noAlloc\n            },\n            elevations: {\n                size: 1,\n                transition: ATTRIBUTE_TRANSITION,\n                accessor: 'getElevation',\n                shaderAttributes: {\n                    instanceElevations: {\n                        divisor: 1\n                    }\n                }\n            },\n            fillColors: {\n                size: this.props.colorFormat.length,\n                type: 'unorm8',\n                transition: ATTRIBUTE_TRANSITION,\n                accessor: 'getFillColor',\n                defaultValue: DEFAULT_COLOR,\n                shaderAttributes: {\n                    instanceFillColors: {\n                        divisor: 1\n                    }\n                }\n            },\n            lineColors: {\n                size: this.props.colorFormat.length,\n                type: 'unorm8',\n                transition: ATTRIBUTE_TRANSITION,\n                accessor: 'getLineColor',\n                defaultValue: DEFAULT_COLOR,\n                shaderAttributes: {\n                    instanceLineColors: {\n                        divisor: 1\n                    }\n                }\n            },\n            pickingColors: {\n                size: 4,\n                type: 'uint8',\n                accessor: (object, { index, target: value }) => this.encodePickingColor(object && object.__source ? object.__source.index : index, value),\n                shaderAttributes: {\n                    instancePickingColors: {\n                        divisor: 1\n                    }\n                }\n            }\n        });\n        /* eslint-enable max-len */\n    }\n    getPickingInfo(params) {\n        const info = super.getPickingInfo(params);\n        const { index } = info;\n        const data = this.props.data;\n        // Check if data comes from a composite layer, wrapped with getSubLayerRow\n        if (data[0] && data[0].__source) {\n            // index decoded from picking color refers to the source index\n            info.object = data.find(d => d.__source.index === index);\n        }\n        return info;\n    }\n    disablePickingIndex(objectIndex) {\n        const data = this.props.data;\n        // Check if data comes from a composite layer, wrapped with getSubLayerRow\n        if (data[0] && data[0].__source) {\n            // index decoded from picking color refers to the source index\n            for (let i = 0; i < data.length; i++) {\n                if (data[i].__source.index === objectIndex) {\n                    this._disablePickingIndex(i);\n                }\n            }\n        }\n        else {\n            super.disablePickingIndex(objectIndex);\n        }\n    }\n    draw({ uniforms }) {\n        const { extruded, filled, wireframe, elevationScale } = this.props;\n        const { topModel, sideModel, wireframeModel, polygonTesselator } = this.state;\n        const renderUniforms = {\n            ...uniforms,\n            extruded: Boolean(extruded),\n            elevationScale\n        };\n        // Note - the order is important\n        if (wireframeModel && wireframe) {\n            wireframeModel.setInstanceCount(polygonTesselator.instanceCount - 1);\n            wireframeModel.setUniforms(renderUniforms);\n            wireframeModel.draw(this.context.renderPass);\n        }\n        if (sideModel && filled) {\n            sideModel.setInstanceCount(polygonTesselator.instanceCount - 1);\n            sideModel.setUniforms(renderUniforms);\n            sideModel.draw(this.context.renderPass);\n        }\n        if (topModel && filled) {\n            topModel.setVertexCount(polygonTesselator.vertexCount);\n            topModel.setUniforms(renderUniforms);\n            topModel.draw(this.context.renderPass);\n        }\n    }\n    updateState(updateParams) {\n        super.updateState(updateParams);\n        this.updateGeometry(updateParams);\n        const { props, oldProps, changeFlags } = updateParams;\n        const attributeManager = this.getAttributeManager();\n        const regenerateModels = changeFlags.extensionsChanged ||\n            props.filled !== oldProps.filled ||\n            props.extruded !== oldProps.extruded;\n        if (regenerateModels) {\n            this.state.models?.forEach(model => model.destroy());\n            this.setState(this._getModels());\n            attributeManager.invalidateAll();\n        }\n    }\n    updateGeometry({ props, oldProps, changeFlags }) {\n        const geometryConfigChanged = changeFlags.dataChanged ||\n            (changeFlags.updateTriggersChanged &&\n                (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPolygon));\n        // When the geometry config  or the data is changed,\n        // tessellator needs to be invoked\n        if (geometryConfigChanged) {\n            const { polygonTesselator } = this.state;\n            const buffers = props.data.attributes || {};\n            polygonTesselator.updateGeometry({\n                data: props.data,\n                normalize: props._normalize,\n                geometryBuffer: buffers.getPolygon,\n                buffers,\n                getGeometry: props.getPolygon,\n                positionFormat: props.positionFormat,\n                wrapLongitude: props.wrapLongitude,\n                // TODO - move the flag out of the viewport\n                resolution: this.context.viewport.resolution,\n                fp64: this.use64bitPositions(),\n                dataChanged: changeFlags.dataChanged,\n                full3d: props._full3d\n            });\n            this.setState({\n                numInstances: polygonTesselator.instanceCount,\n                startIndices: polygonTesselator.vertexStarts\n            });\n            if (!changeFlags.dataChanged) {\n                // Base `layer.updateState` only invalidates all attributes on data change\n                // Cover the rest of the scenarios here\n                this.getAttributeManager().invalidateAll();\n            }\n        }\n    }\n    _getModels() {\n        const { id, filled, extruded } = this.props;\n        let topModel;\n        let sideModel;\n        let wireframeModel;\n        const bufferLayout = this.getAttributeManager().getBufferLayouts();\n        if (filled) {\n            const shaders = this.getShaders('top');\n            shaders.defines.NON_INSTANCED_MODEL = 1;\n            topModel = new Model(this.context.device, {\n                ...shaders,\n                id: `${id}-top`,\n                topology: 'triangle-list',\n                uniforms: {\n                    isWireframe: false\n                },\n                bufferLayout,\n                isIndexed: true,\n                userData: {\n                    excludeAttributes: { instanceVertexValid: true }\n                }\n            });\n        }\n        if (extruded) {\n            sideModel = new Model(this.context.device, {\n                ...this.getShaders('side'),\n                id: `${id}-side`,\n                bufferLayout,\n                uniforms: {\n                    isWireframe: false\n                },\n                geometry: new Geometry({\n                    topology: 'triangle-strip',\n                    attributes: {\n                        // top right - top left - bottom right - bottom left\n                        positions: {\n                            size: 2,\n                            value: new Float32Array([1, 0, 0, 0, 1, 1, 0, 1])\n                        }\n                    }\n                }),\n                isInstanced: 1,\n                userData: {\n                    excludeAttributes: { indices: true }\n                }\n            });\n            wireframeModel = new Model(this.context.device, {\n                ...this.getShaders('side'),\n                id: `${id}-wireframe`,\n                bufferLayout,\n                uniforms: {\n                    isWireframe: true\n                },\n                geometry: new Geometry({\n                    topology: 'line-strip',\n                    attributes: {\n                        // top right - top left - bottom left - bottom right\n                        positions: {\n                            size: 2,\n                            value: new Float32Array([1, 0, 0, 0, 0, 1, 1, 1])\n                        }\n                    }\n                }),\n                isInstanced: 1,\n                userData: {\n                    excludeAttributes: { indices: true }\n                }\n            });\n        }\n        return {\n            models: [sideModel, wireframeModel, topModel].filter(Boolean),\n            topModel,\n            sideModel,\n            wireframeModel\n        };\n    }\n    calculateIndices(attribute) {\n        const { polygonTesselator } = this.state;\n        attribute.startIndices = polygonTesselator.indexStarts;\n        attribute.value = polygonTesselator.get('indices');\n    }\n    calculatePositions(attribute) {\n        const { polygonTesselator } = this.state;\n        attribute.startIndices = polygonTesselator.vertexStarts;\n        attribute.value = polygonTesselator.get('positions');\n    }\n    calculateVertexValid(attribute) {\n        attribute.value = this.state.polygonTesselator.get('vertexValid');\n    }\n}\n", "// Assume data array is sorted by <accessor>\n// Replaces the specified range with a new subarray\n// Mutates the data array\n// Returns {startRow, endRow} of the inserted items\nexport function replaceInRange({ data, getIndex, dataRange, replace }) {\n    const { startRow = 0, endRow = Infinity } = dataRange;\n    const count = data.length;\n    let replaceStart = count;\n    let replaceEnd = count;\n    for (let i = 0; i < count; i++) {\n        const row = getIndex(data[i]);\n        if (replaceStart > i && row >= startRow) {\n            replaceStart = i;\n        }\n        if (row >= endRow) {\n            replaceEnd = i;\n            break;\n        }\n    }\n    let index = replaceStart;\n    const dataLengthChanged = replaceEnd - replaceStart !== replace.length;\n    // Save the items after replaceEnd before we overwrite data\n    const endChunk = dataLengthChanged ? data.slice(replaceEnd) : undefined;\n    // Insert new items\n    for (let i = 0; i < replace.length; i++) {\n        data[index++] = replace[i];\n    }\n    if (endChunk) {\n        // Append items after replaceEnd\n        for (let i = 0; i < endChunk.length; i++) {\n            data[index++] = endChunk[i];\n        }\n        // Trim additional items\n        data.length = index;\n    }\n    return {\n        startRow: replaceStart,\n        endRow: replaceStart + replace.length\n    };\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { CompositeLayer, createIterable, log } from '@deck.gl/core';\nimport SolidPolygonLayer from \"../solid-polygon-layer/solid-polygon-layer.js\";\nimport PathLayer from \"../path-layer/path-layer.js\";\nimport * as Polygon from \"../solid-polygon-layer/polygon.js\";\nimport { replaceInRange } from \"../utils.js\";\nconst defaultLineColor = [0, 0, 0, 255];\nconst defaultFillColor = [0, 0, 0, 255];\nconst defaultProps = {\n    stroked: true,\n    filled: true,\n    extruded: false,\n    elevationScale: 1,\n    wireframe: false,\n    _normalize: true,\n    _windingOrder: 'CW',\n    lineWidthUnits: 'meters',\n    lineWidthScale: 1,\n    lineWidthMinPixels: 0,\n    lineWidthMaxPixels: Number.MAX_SAFE_INTEGER,\n    lineJointRounded: false,\n    lineMiterLimit: 4,\n    getPolygon: { type: 'accessor', value: (f) => f.polygon },\n    // Polygon fill color\n    getFillColor: { type: 'accessor', value: defaultFillColor },\n    // Point, line and polygon outline color\n    getLineColor: { type: 'accessor', value: defaultLineColor },\n    // Line and polygon outline accessors\n    getLineWidth: { type: 'accessor', value: 1 },\n    // Polygon extrusion accessor\n    getElevation: { type: 'accessor', value: 1000 },\n    // Optional material for 'lighting' shader module\n    material: true\n};\n/** A composite layer that renders filled, stroked and/or extruded polygons. */\nexport default class PolygonLayer extends CompositeLayer {\n    static { this.layerName = 'PolygonLayer'; }\n    static { this.defaultProps = defaultProps; }\n    initializeState() {\n        this.state = {\n            paths: [],\n            pathsDiff: null\n        };\n        if (this.props.getLineDashArray) {\n            log.removed('getLineDashArray', 'PathStyleExtension')();\n        }\n    }\n    updateState({ changeFlags }) {\n        const geometryChanged = changeFlags.dataChanged ||\n            (changeFlags.updateTriggersChanged &&\n                (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPolygon));\n        if (geometryChanged && Array.isArray(changeFlags.dataChanged)) {\n            const paths = this.state.paths.slice();\n            const pathsDiff = changeFlags.dataChanged.map(dataRange => replaceInRange({\n                data: paths,\n                getIndex: p => p.__source.index,\n                dataRange,\n                replace: this._getPaths(dataRange)\n            }));\n            this.setState({ paths, pathsDiff });\n        }\n        else if (geometryChanged) {\n            this.setState({\n                paths: this._getPaths(),\n                pathsDiff: null\n            });\n        }\n    }\n    _getPaths(dataRange = {}) {\n        const { data, getPolygon, positionFormat, _normalize } = this.props;\n        const paths = [];\n        const positionSize = positionFormat === 'XY' ? 2 : 3;\n        const { startRow, endRow } = dataRange;\n        const { iterable, objectInfo } = createIterable(data, startRow, endRow);\n        for (const object of iterable) {\n            objectInfo.index++;\n            let polygon = getPolygon(object, objectInfo);\n            if (_normalize) {\n                polygon = Polygon.normalize(polygon, positionSize);\n            }\n            const { holeIndices } = polygon;\n            const positions = polygon.positions || polygon;\n            if (holeIndices) {\n                // split the positions array into `holeIndices.length + 1` rings\n                // holeIndices[-1] falls back to 0\n                // holeIndices[holeIndices.length] falls back to positions.length\n                for (let i = 0; i <= holeIndices.length; i++) {\n                    const path = positions.slice(holeIndices[i - 1] || 0, holeIndices[i] || positions.length);\n                    paths.push(this.getSubLayerRow({ path }, object, objectInfo.index));\n                }\n            }\n            else {\n                paths.push(this.getSubLayerRow({ path: positions }, object, objectInfo.index));\n            }\n        }\n        return paths;\n    }\n    /* eslint-disable complexity */\n    renderLayers() {\n        // Layer composition props\n        const { data, _dataDiff, stroked, filled, extruded, wireframe, _normalize, _windingOrder, elevationScale, transitions, positionFormat } = this.props;\n        // Rendering props underlying layer\n        const { lineWidthUnits, lineWidthScale, lineWidthMinPixels, lineWidthMaxPixels, lineJointRounded, lineMiterLimit, lineDashJustified } = this.props;\n        // Accessor props for underlying layers\n        const { getFillColor, getLineColor, getLineWidth, getLineDashArray, getElevation, getPolygon, updateTriggers, material } = this.props;\n        const { paths, pathsDiff } = this.state;\n        const FillLayer = this.getSubLayerClass('fill', SolidPolygonLayer);\n        const StrokeLayer = this.getSubLayerClass('stroke', PathLayer);\n        // Filled Polygon Layer\n        const polygonLayer = this.shouldRenderSubLayer('fill', paths) &&\n            new FillLayer({\n                _dataDiff,\n                extruded,\n                elevationScale,\n                filled,\n                wireframe,\n                _normalize,\n                _windingOrder,\n                getElevation,\n                getFillColor,\n                getLineColor: extruded && wireframe ? getLineColor : defaultLineColor,\n                material,\n                transitions\n            }, this.getSubLayerProps({\n                id: 'fill',\n                updateTriggers: updateTriggers && {\n                    getPolygon: updateTriggers.getPolygon,\n                    getElevation: updateTriggers.getElevation,\n                    getFillColor: updateTriggers.getFillColor,\n                    // using a legacy API to invalid lineColor attributes\n                    // if (extruded && wireframe) has changed\n                    lineColors: extruded && wireframe,\n                    getLineColor: updateTriggers.getLineColor\n                }\n            }), {\n                data,\n                positionFormat,\n                getPolygon\n            });\n        // Polygon line layer\n        const polygonLineLayer = !extruded &&\n            stroked &&\n            this.shouldRenderSubLayer('stroke', paths) &&\n            new StrokeLayer({\n                _dataDiff: pathsDiff && (() => pathsDiff),\n                widthUnits: lineWidthUnits,\n                widthScale: lineWidthScale,\n                widthMinPixels: lineWidthMinPixels,\n                widthMaxPixels: lineWidthMaxPixels,\n                jointRounded: lineJointRounded,\n                miterLimit: lineMiterLimit,\n                dashJustified: lineDashJustified,\n                // Already normalized\n                _pathType: 'loop',\n                transitions: transitions && {\n                    getWidth: transitions.getLineWidth,\n                    getColor: transitions.getLineColor,\n                    getPath: transitions.getPolygon\n                },\n                getColor: this.getSubLayerAccessor(getLineColor),\n                getWidth: this.getSubLayerAccessor(getLineWidth),\n                getDashArray: this.getSubLayerAccessor(getLineDashArray)\n            }, this.getSubLayerProps({\n                id: 'stroke',\n                updateTriggers: updateTriggers && {\n                    getWidth: updateTriggers.getLineWidth,\n                    getColor: updateTriggers.getLineColor,\n                    getDashArray: updateTriggers.getLineDashArray\n                }\n            }), {\n                data: paths,\n                positionFormat,\n                getPath: x => x.path\n            });\n        return [\n            // If not extruded: flat fill layer is drawn below outlines\n            !extruded && polygonLayer,\n            polygonLineLayer,\n            // If extruded: draw fill layer last for correct blending behavior\n            extruded && polygonLayer\n        ];\n    }\n}\n", "// This module implement some utility functions to work with\n// the geojson-binary format defined at loaders.gl:\n// https://github.com/visgl/loaders.gl/blob/master/modules/gis/docs/api-reference/geojson-to-binary.md\n/**\n * Return the feature for an accesor\n */\nexport function binaryToFeatureForAccesor(data, index) {\n    if (!data) {\n        return null;\n    }\n    const featureIndex = 'startIndices' in data ? data.startIndices[index] : index;\n    const geometryIndex = data.featureIds.value[featureIndex];\n    if (featureIndex !== -1) {\n        return getPropertiesForIndex(data, geometryIndex, featureIndex);\n    }\n    return null;\n}\nfunction getPropertiesForIndex(data, propertiesIndex, numericPropsIndex) {\n    const feature = {\n        properties: { ...data.properties[propertiesIndex] }\n    };\n    for (const prop in data.numericProps) {\n        feature.properties[prop] = data.numericProps[prop].value[numericPropsIndex];\n    }\n    return feature;\n}\n// Custom picking color to keep binary indexes\nexport function calculatePickingColors(geojsonBinary, encodePickingColor) {\n    const pickingColors = {\n        points: null,\n        lines: null,\n        polygons: null\n    };\n    for (const key in pickingColors) {\n        const featureIds = geojsonBinary[key].globalFeatureIds.value;\n        pickingColors[key] = new Uint8ClampedArray(featureIds.length * 3);\n        const pickingColor = [];\n        for (let i = 0; i < featureIds.length; i++) {\n            encodePickingColor(featureIds[i], pickingColor);\n            pickingColors[key][i * 3 + 0] = pickingColor[0];\n            pickingColors[key][i * 3 + 1] = pickingColor[1];\n            pickingColors[key][i * 3 + 2] = pickingColor[2];\n        }\n    }\n    return pickingColors;\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `\\\n#version 300 es\n#define SHADER_NAME multi-icon-layer-fragment-shader\nprecision highp float;\nuniform float opacity;\nuniform sampler2D iconsTexture;\nuniform float gamma;\nuniform bool sdf;\nuniform float alphaCutoff;\nuniform float sdfBuffer;\nuniform float outlineBuffer;\nuniform vec4 outlineColor;\nin vec4 vColor;\nin vec2 vTextureCoords;\nin vec2 uv;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = uv;\nif (!bool(picking.isActive)) {\nfloat alpha = texture(iconsTexture, vTextureCoords).a;\nvec4 color = vColor;\nif (sdf) {\nfloat distance = alpha;\nalpha = smoothstep(sdfBuffer - gamma, sdfBuffer + gamma, distance);\nif (outlineBuffer > 0.0) {\nfloat inFill = alpha;\nfloat inBorder = smoothstep(outlineBuffer - gamma, outlineBuffer + gamma, distance);\ncolor = mix(outlineColor, vColor, inFill);\nalpha = inBorder;\n}\n}\nfloat a = alpha * color.a;\nif (a < alphaCutoff) {\ndiscard;\n}\nfragColor = vec4(color.rgb, a * opacity);\n}\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { log } from '@deck.gl/core';\nimport IconLayer from \"../../icon-layer/icon-layer.js\";\nimport fs from \"./multi-icon-layer-fragment.glsl.js\";\n// TODO expose as layer properties\nconst DEFAULT_BUFFER = 192.0 / 256;\nconst EMPTY_ARRAY = [];\nconst defaultProps = {\n    getIconOffsets: { type: 'accessor', value: (x) => x.offsets },\n    alphaCutoff: 0.001,\n    smoothing: 0.1,\n    outlineWidth: 0,\n    outlineColor: { type: 'color', value: [0, 0, 0, 255] }\n};\nexport default class MultiIconLayer extends IconLayer {\n    static { this.defaultProps = defaultProps; }\n    static { this.layerName = 'MultiIconLayer'; }\n    getShaders() {\n        return { ...super.getShaders(), fs };\n    }\n    initializeState() {\n        super.initializeState();\n        const attributeManager = this.getAttributeManager();\n        attributeManager.addInstanced({\n            instanceOffsets: {\n                size: 2,\n                accessor: 'getIconOffsets'\n            },\n            instancePickingColors: {\n                type: 'uint8',\n                size: 3,\n                accessor: (object, { index, target: value }) => this.encodePickingColor(index, value)\n            }\n        });\n    }\n    updateState(params) {\n        super.updateState(params);\n        const { props, oldProps } = params;\n        let { outlineColor } = props;\n        if (outlineColor !== oldProps.outlineColor) {\n            outlineColor = outlineColor.map(x => x / 255);\n            outlineColor[3] = Number.isFinite(outlineColor[3]) ? outlineColor[3] : 1;\n            this.setState({\n                outlineColor\n            });\n        }\n        if (!props.sdf && props.outlineWidth) {\n            log.warn(`${this.id}: fontSettings.sdf is required to render outline`)();\n        }\n    }\n    draw(params) {\n        const { sdf, smoothing, outlineWidth } = this.props;\n        const { outlineColor } = this.state;\n        const outlineBuffer = outlineWidth\n            ? Math.max(smoothing, DEFAULT_BUFFER * (1 - outlineWidth))\n            : -1;\n        params.uniforms = {\n            ...params.uniforms,\n            // Refer the following doc about gamma and buffer\n            // https://blog.mapbox.com/drawing-text-with-signed-distance-fields-in-mapbox-gl-b0933af6f817\n            sdfBuffer: DEFAULT_BUFFER,\n            outlineBuffer,\n            gamma: smoothing,\n            sdf: Boolean(sdf),\n            outlineColor\n        };\n        super.draw(params);\n        // draw text without outline on top to ensure a thick outline won't occlude other characters\n        if (sdf && outlineWidth) {\n            const { iconManager } = this.state;\n            const iconsTexture = iconManager.getTexture();\n            const model = this.state.model;\n            if (iconsTexture) {\n                model.setUniforms({ outlineBuffer: DEFAULT_BUFFER });\n                model.draw(this.context.renderPass);\n            }\n        }\n    }\n    getInstanceOffset(icons) {\n        return icons ? Array.from(icons).flatMap(icon => super.getInstanceOffset(icon)) : EMPTY_ARRAY;\n    }\n    getInstanceColorMode(icons) {\n        return 1; // mask\n    }\n    getInstanceIconFrame(icons) {\n        return icons\n            ? Array.from(icons).flatMap(icon => super.getInstanceIconFrame(icon))\n            : EMPTY_ARRAY;\n    }\n}\n", "const INF = 1e20;\n\nexport default class TinySDF {\n    constructor({\n        fontSize = 24,\n        buffer = 3,\n        radius = 8,\n        cutoff = 0.25,\n        fontFamily = 'sans-serif',\n        fontWeight = 'normal',\n        fontStyle = 'normal'\n    } = {}) {\n        this.buffer = buffer;\n        this.cutoff = cutoff;\n        this.radius = radius;\n\n        // make the canvas size big enough to both have the specified buffer around the glyph\n        // for \"halo\", and account for some glyphs possibly being larger than their font size\n        const size = this.size = fontSize + buffer * 4;\n\n        const canvas = this._createCanvas(size);\n        const ctx = this.ctx = canvas.getContext('2d', {willReadFrequently: true});\n        ctx.font = `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;\n\n        ctx.textBaseline = 'alphabetic';\n        ctx.textAlign = 'left'; // Necessary so that RTL text doesn't have different alignment\n        ctx.fillStyle = 'black';\n\n        // temporary arrays for the distance transform\n        this.gridOuter = new Float64Array(size * size);\n        this.gridInner = new Float64Array(size * size);\n        this.f = new Float64Array(size);\n        this.z = new Float64Array(size + 1);\n        this.v = new Uint16Array(size);\n    }\n\n    _createCanvas(size) {\n        const canvas = document.createElement('canvas');\n        canvas.width = canvas.height = size;\n        return canvas;\n    }\n\n    draw(char) {\n        const {\n            width: glyphAdvance,\n            actualBoundingBoxAscent,\n            actualBoundingBoxDescent,\n            actualBoundingBoxLeft,\n            actualBoundingBoxRight\n        } = this.ctx.measureText(char);\n\n        // The integer/pixel part of the top alignment is encoded in metrics.glyphTop\n        // The remainder is implicitly encoded in the rasterization\n        const glyphTop = Math.ceil(actualBoundingBoxAscent);\n        const glyphLeft = 0;\n\n        // If the glyph overflows the canvas size, it will be clipped at the bottom/right\n        const glyphWidth = Math.max(0, Math.min(this.size - this.buffer, Math.ceil(actualBoundingBoxRight - actualBoundingBoxLeft)));\n        const glyphHeight = Math.min(this.size - this.buffer, glyphTop + Math.ceil(actualBoundingBoxDescent));\n\n        const width = glyphWidth + 2 * this.buffer;\n        const height = glyphHeight + 2 * this.buffer;\n\n        const len = Math.max(width * height, 0);\n        const data = new Uint8ClampedArray(len);\n        const glyph = {data, width, height, glyphWidth, glyphHeight, glyphTop, glyphLeft, glyphAdvance};\n        if (glyphWidth === 0 || glyphHeight === 0) return glyph;\n\n        const {ctx, buffer, gridInner, gridOuter} = this;\n        ctx.clearRect(buffer, buffer, glyphWidth, glyphHeight);\n        ctx.fillText(char, buffer, buffer + glyphTop);\n        const imgData = ctx.getImageData(buffer, buffer, glyphWidth, glyphHeight);\n\n        // Initialize grids outside the glyph range to alpha 0\n        gridOuter.fill(INF, 0, len);\n        gridInner.fill(0, 0, len);\n\n        for (let y = 0; y < glyphHeight; y++) {\n            for (let x = 0; x < glyphWidth; x++) {\n                const a = imgData.data[4 * (y * glyphWidth + x) + 3] / 255; // alpha value\n                if (a === 0) continue; // empty pixels\n\n                const j = (y + buffer) * width + x + buffer;\n\n                if (a === 1) { // fully drawn pixels\n                    gridOuter[j] = 0;\n                    gridInner[j] = INF;\n\n                } else { // aliased pixels\n                    const d = 0.5 - a;\n                    gridOuter[j] = d > 0 ? d * d : 0;\n                    gridInner[j] = d < 0 ? d * d : 0;\n                }\n            }\n        }\n\n        edt(gridOuter, 0, 0, width, height, width, this.f, this.v, this.z);\n        edt(gridInner, buffer, buffer, glyphWidth, glyphHeight, width, this.f, this.v, this.z);\n\n        for (let i = 0; i < len; i++) {\n            const d = Math.sqrt(gridOuter[i]) - Math.sqrt(gridInner[i]);\n            data[i] = Math.round(255 - 255 * (d / this.radius + this.cutoff));\n        }\n\n        return glyph;\n    }\n}\n\n// 2D Euclidean squared distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\nfunction edt(data, x0, y0, width, height, gridSize, f, v, z) {\n    for (let x = x0; x < x0 + width; x++) edt1d(data, y0 * gridSize + x, gridSize, height, f, v, z);\n    for (let y = y0; y < y0 + height; y++) edt1d(data, y * gridSize + x0, 1, width, f, v, z);\n}\n\n// 1D squared distance transform\nfunction edt1d(grid, offset, stride, length, f, v, z) {\n    v[0] = 0;\n    z[0] = -INF;\n    z[1] = INF;\n    f[0] = grid[offset];\n\n    for (let q = 1, k = 0, s = 0; q < length; q++) {\n        f[q] = grid[offset + q * stride];\n        const q2 = q * q;\n        do {\n            const r = v[k];\n            s = (f[q] - f[r] + q2 - r * r) / (q - r) / 2;\n        } while (s <= z[k] && --k > -1);\n\n        k++;\n        v[k] = q;\n        z[k] = s;\n        z[k + 1] = INF;\n    }\n\n    for (let q = 0, k = 0; q < length; q++) {\n        while (z[k + 1] < q) k++;\n        const r = v[k];\n        const qr = q - r;\n        grid[offset + q * stride] = f[r] + qr * qr;\n    }\n}\n", "/* eslint-disable max-statements, max-params, complexity, max-depth */\n// TODO merge with icon-layer/icon-manager\nimport { log } from '@deck.gl/core';\nconst MISSING_CHAR_WIDTH = 32;\nconst SINGLE_LINE = [];\nexport function nextPowOfTwo(number) {\n    return Math.pow(2, Math.ceil(Math.log2(number)));\n}\n/**\n * Generate character mapping table or update from an existing mapping table\n */\nexport function buildMapping({ characterSet, getFontWidth, fontHeight, buffer, maxCanvasWidth, mapping = {}, xOffset = 0, yOffset = 0 }) {\n    let row = 0;\n    // continue from x position of last character in the old mapping\n    let x = xOffset;\n    const rowHeight = fontHeight + buffer * 2;\n    for (const char of characterSet) {\n        if (!mapping[char]) {\n            // measure texts\n            // TODO - use Advanced text metrics when they are adopted:\n            // https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics\n            const width = getFontWidth(char);\n            if (x + width + buffer * 2 > maxCanvasWidth) {\n                x = 0;\n                row++;\n            }\n            mapping[char] = {\n                x: x + buffer,\n                y: yOffset + row * rowHeight + buffer,\n                width,\n                height: rowHeight,\n                layoutWidth: width,\n                layoutHeight: fontHeight\n            };\n            x += width + buffer * 2;\n        }\n    }\n    return {\n        mapping,\n        xOffset: x,\n        yOffset: yOffset + row * rowHeight,\n        canvasHeight: nextPowOfTwo(yOffset + (row + 1) * rowHeight)\n    };\n}\nfunction getTextWidth(text, startIndex, endIndex, mapping) {\n    let width = 0;\n    for (let i = startIndex; i < endIndex; i++) {\n        const character = text[i];\n        width += mapping[character]?.layoutWidth || 0;\n    }\n    return width;\n}\nfunction breakAll(text, startIndex, endIndex, maxWidth, iconMapping, target) {\n    let rowStartCharIndex = startIndex;\n    let rowOffsetLeft = 0;\n    for (let i = startIndex; i < endIndex; i++) {\n        // 2. figure out where to break lines\n        const textWidth = getTextWidth(text, i, i + 1, iconMapping);\n        if (rowOffsetLeft + textWidth > maxWidth) {\n            if (rowStartCharIndex < i) {\n                target.push(i);\n            }\n            rowStartCharIndex = i;\n            rowOffsetLeft = 0;\n        }\n        rowOffsetLeft += textWidth;\n    }\n    return rowOffsetLeft;\n}\nfunction breakWord(text, startIndex, endIndex, maxWidth, iconMapping, target) {\n    let rowStartCharIndex = startIndex;\n    let groupStartCharIndex = startIndex;\n    let groupEndCharIndex = startIndex;\n    let rowOffsetLeft = 0;\n    for (let i = startIndex; i < endIndex; i++) {\n        // 1. break text into word groups\n        //  - if current char is white space\n        //  - else if next char is white space\n        //  - else if reach last char\n        if (text[i] === ' ') {\n            groupEndCharIndex = i + 1;\n        }\n        else if (text[i + 1] === ' ' || i + 1 === endIndex) {\n            groupEndCharIndex = i + 1;\n        }\n        if (groupEndCharIndex > groupStartCharIndex) {\n            // 2. break text into next row at maxWidth\n            let groupWidth = getTextWidth(text, groupStartCharIndex, groupEndCharIndex, iconMapping);\n            if (rowOffsetLeft + groupWidth > maxWidth) {\n                if (rowStartCharIndex < groupStartCharIndex) {\n                    target.push(groupStartCharIndex);\n                    rowStartCharIndex = groupStartCharIndex;\n                    rowOffsetLeft = 0;\n                }\n                // if a single text group is bigger than maxWidth, then `break-all`\n                if (groupWidth > maxWidth) {\n                    groupWidth = breakAll(text, groupStartCharIndex, groupEndCharIndex, maxWidth, iconMapping, target);\n                    // move reference to last row\n                    rowStartCharIndex = target[target.length - 1];\n                }\n            }\n            groupStartCharIndex = groupEndCharIndex;\n            rowOffsetLeft += groupWidth;\n        }\n    }\n    return rowOffsetLeft;\n}\n/**\n * Wrap the given text so that each line does not exceed the given max width.\n * Returns a list of indices where line breaks should be inserted.\n */\nexport function autoWrapping(text, wordBreak, maxWidth, iconMapping, startIndex = 0, endIndex) {\n    if (endIndex === undefined) {\n        endIndex = text.length;\n    }\n    const result = [];\n    if (wordBreak === 'break-all') {\n        breakAll(text, startIndex, endIndex, maxWidth, iconMapping, result);\n    }\n    else {\n        breakWord(text, startIndex, endIndex, maxWidth, iconMapping, result);\n    }\n    return result;\n}\nfunction transformRow(line, startIndex, endIndex, iconMapping, leftOffsets, rowSize) {\n    let x = 0;\n    let rowHeight = 0;\n    for (let i = startIndex; i < endIndex; i++) {\n        const character = line[i];\n        const frame = iconMapping[character];\n        if (frame) {\n            if (!rowHeight) {\n                // frame.height should be a constant\n                rowHeight = frame.layoutHeight;\n            }\n            leftOffsets[i] = x + frame.layoutWidth / 2;\n            x += frame.layoutWidth;\n        }\n        else {\n            log.warn(`Missing character: ${character} (${character.codePointAt(0)})`)();\n            leftOffsets[i] = x;\n            x += MISSING_CHAR_WIDTH;\n        }\n    }\n    rowSize[0] = x;\n    rowSize[1] = rowHeight;\n}\n/**\n * Transform a text paragraph to an array of characters, each character contains\n */\nexport function transformParagraph(paragraph, \n/** CSS line-height */\nlineHeight, \n/** CSS word-break option */\nwordBreak, \n/** CSS max-width */\nmaxWidth, \n/** character mapping table for retrieving a character from font atlas */\niconMapping) {\n    // Break into an array of characters\n    // When dealing with double-length unicode characters, `str.length` or `str[i]` do not work\n    const characters = Array.from(paragraph);\n    const numCharacters = characters.length;\n    const x = new Array(numCharacters);\n    const y = new Array(numCharacters);\n    const rowWidth = new Array(numCharacters);\n    const autoWrappingEnabled = (wordBreak === 'break-word' || wordBreak === 'break-all') && isFinite(maxWidth) && maxWidth > 0;\n    // maxWidth and height of the paragraph\n    const size = [0, 0];\n    const rowSize = [0, 0];\n    let rowOffsetTop = 0;\n    let lineStartIndex = 0;\n    let lineEndIndex = 0;\n    for (let i = 0; i <= numCharacters; i++) {\n        const char = characters[i];\n        if (char === '\\n' || i === numCharacters) {\n            lineEndIndex = i;\n        }\n        if (lineEndIndex > lineStartIndex) {\n            const rows = autoWrappingEnabled\n                ? autoWrapping(characters, wordBreak, maxWidth, iconMapping, lineStartIndex, lineEndIndex)\n                : SINGLE_LINE;\n            for (let rowIndex = 0; rowIndex <= rows.length; rowIndex++) {\n                const rowStart = rowIndex === 0 ? lineStartIndex : rows[rowIndex - 1];\n                const rowEnd = rowIndex < rows.length ? rows[rowIndex] : lineEndIndex;\n                transformRow(characters, rowStart, rowEnd, iconMapping, x, rowSize);\n                for (let j = rowStart; j < rowEnd; j++) {\n                    const char = characters[j];\n                    const layoutOffsetY = iconMapping[char]?.layoutOffsetY || 0;\n                    y[j] = rowOffsetTop + rowSize[1] / 2 + layoutOffsetY;\n                    rowWidth[j] = rowSize[0];\n                }\n                rowOffsetTop = rowOffsetTop + rowSize[1] * lineHeight;\n                size[0] = Math.max(size[0], rowSize[0]);\n            }\n            lineStartIndex = lineEndIndex;\n        }\n        if (char === '\\n') {\n            // Make sure result.length matches paragraph.length\n            x[lineStartIndex] = 0;\n            y[lineStartIndex] = 0;\n            rowWidth[lineStartIndex] = 0;\n            lineStartIndex++;\n        }\n    }\n    // last row\n    size[1] = rowOffsetTop;\n    return { x, y, rowWidth, size };\n}\nexport function getTextFromBuffer({ value, length, stride, offset, startIndices, characterSet }) {\n    const bytesPerElement = value.BYTES_PER_ELEMENT;\n    const elementStride = stride ? stride / bytesPerElement : 1;\n    const elementOffset = offset ? offset / bytesPerElement : 0;\n    const characterCount = startIndices[length] || Math.ceil((value.length - elementOffset) / elementStride);\n    const autoCharacterSet = characterSet && new Set();\n    const texts = new Array(length);\n    let codes = value;\n    if (elementStride > 1 || elementOffset > 0) {\n        const ArrayType = value.constructor;\n        codes = new ArrayType(characterCount);\n        for (let i = 0; i < characterCount; i++) {\n            codes[i] = value[i * elementStride + elementOffset];\n        }\n    }\n    for (let index = 0; index < length; index++) {\n        const startIndex = startIndices[index];\n        const endIndex = startIndices[index + 1] || characterCount;\n        const codesAtIndex = codes.subarray(startIndex, endIndex);\n        // @ts-ignore TS wants the argument to be number[] but typed array works too\n        texts[index] = String.fromCodePoint.apply(null, codesAtIndex);\n        if (autoCharacterSet) {\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            codesAtIndex.forEach(autoCharacterSet.add, autoCharacterSet);\n        }\n    }\n    if (autoCharacterSet) {\n        for (const charCode of autoCharacterSet) {\n            characterSet.add(String.fromCodePoint(charCode));\n        }\n    }\n    return { texts, characterCount };\n}\n", "/**\n * LRU Cache class with limit\n *\n * Update order for each get/set operation\n * Delete oldest when reach given limit\n */\nexport default class LRUCache {\n    constructor(limit = 5) {\n        this._cache = {};\n        /** access/update order, first item is oldest, last item is newest */\n        this._order = [];\n        this.limit = limit;\n    }\n    get(key) {\n        const value = this._cache[key];\n        if (value) {\n            // update order\n            this._deleteOrder(key);\n            this._appendOrder(key);\n        }\n        return value;\n    }\n    set(key, value) {\n        if (!this._cache[key]) {\n            // if reach limit, delete the oldest\n            if (Object.keys(this._cache).length === this.limit) {\n                this.delete(this._order[0]);\n            }\n            this._cache[key] = value;\n            this._appendOrder(key);\n        }\n        else {\n            // if found in cache, delete the old one, insert new one to the first of list\n            this.delete(key);\n            this._cache[key] = value;\n            this._appendOrder(key);\n        }\n    }\n    delete(key) {\n        const value = this._cache[key];\n        if (value) {\n            delete this._cache[key];\n            this._deleteOrder(key);\n        }\n    }\n    _deleteOrder(key) {\n        const index = this._order.indexOf(key);\n        if (index >= 0) {\n            this._order.splice(index, 1);\n        }\n    }\n    _appendOrder(key) {\n        this._order.push(key);\n    }\n}\n", "/* global document */\nimport TinySDF from '@mapbox/tiny-sdf';\nimport { log } from '@deck.gl/core';\nimport { buildMapping } from \"./utils.js\";\nimport LRUCache from \"./lru-cache.js\";\n// import type {Texture} from '@deck.gl/core';\nfunction getDefaultCharacterSet() {\n    const charSet = [];\n    for (let i = 32; i < 128; i++) {\n        charSet.push(String.fromCharCode(i));\n    }\n    return charSet;\n}\nexport const DEFAULT_FONT_SETTINGS = {\n    fontFamily: 'Monaco, monospace',\n    fontWeight: 'normal',\n    characterSet: getDefaultCharacterSet(),\n    fontSize: 64,\n    buffer: 4,\n    sdf: false,\n    cutoff: 0.25,\n    radius: 12,\n    smoothing: 0.1\n};\nconst MAX_CANVAS_WIDTH = 1024;\nconst BASELINE_SCALE = 0.9;\nconst HEIGHT_SCALE = 1.2;\n// only preserve latest three fontAtlas\nconst CACHE_LIMIT = 3;\nlet cache = new LRUCache(CACHE_LIMIT);\n/**\n * get all the chars not in cache\n * @returns chars not in cache\n */\nfunction getNewChars(cacheKey, characterSet) {\n    let newCharSet;\n    if (typeof characterSet === 'string') {\n        newCharSet = new Set(Array.from(characterSet));\n    }\n    else {\n        newCharSet = new Set(characterSet);\n    }\n    const cachedFontAtlas = cache.get(cacheKey);\n    if (!cachedFontAtlas) {\n        return newCharSet;\n    }\n    for (const char in cachedFontAtlas.mapping) {\n        if (newCharSet.has(char)) {\n            newCharSet.delete(char);\n        }\n    }\n    return newCharSet;\n}\nfunction populateAlphaChannel(alphaChannel, imageData) {\n    // populate distance value from tinySDF to image alpha channel\n    for (let i = 0; i < alphaChannel.length; i++) {\n        imageData.data[4 * i + 3] = alphaChannel[i];\n    }\n}\nfunction setTextStyle(ctx, fontFamily, fontSize, fontWeight) {\n    ctx.font = `${fontWeight} ${fontSize}px ${fontFamily}`;\n    ctx.fillStyle = '#000';\n    ctx.textBaseline = 'alphabetic';\n    ctx.textAlign = 'left';\n}\n/**\n * Sets the Font Atlas LRU Cache Limit\n * @param {number} limit LRU Cache limit\n */\nexport function setFontAtlasCacheLimit(limit) {\n    log.assert(Number.isFinite(limit) && limit >= CACHE_LIMIT, 'Invalid cache limit');\n    cache = new LRUCache(limit);\n}\nexport default class FontAtlasManager {\n    constructor() {\n        /** Font settings */\n        this.props = { ...DEFAULT_FONT_SETTINGS };\n    }\n    get atlas() {\n        return this._atlas;\n    }\n    // TODO - cut during v9 porting as types reveal this is not correct\n    // get texture(): Texture | undefined {\n    //   return this._atlas;\n    // }\n    get mapping() {\n        return this._atlas && this._atlas.mapping;\n    }\n    get scale() {\n        const { fontSize, buffer } = this.props;\n        return (fontSize * HEIGHT_SCALE + buffer * 2) / fontSize;\n    }\n    setProps(props = {}) {\n        Object.assign(this.props, props);\n        // update cache key\n        this._key = this._getKey();\n        const charSet = getNewChars(this._key, this.props.characterSet);\n        const cachedFontAtlas = cache.get(this._key);\n        // if a fontAtlas associated with the new settings is cached and\n        // there are no new chars\n        if (cachedFontAtlas && charSet.size === 0) {\n            // update texture with cached fontAtlas\n            if (this._atlas !== cachedFontAtlas) {\n                this._atlas = cachedFontAtlas;\n            }\n            return;\n        }\n        // update fontAtlas with new settings\n        const fontAtlas = this._generateFontAtlas(charSet, cachedFontAtlas);\n        this._atlas = fontAtlas;\n        // update cache\n        cache.set(this._key, fontAtlas);\n    }\n    // eslint-disable-next-line max-statements\n    _generateFontAtlas(characterSet, cachedFontAtlas) {\n        const { fontFamily, fontWeight, fontSize, buffer, sdf, radius, cutoff } = this.props;\n        let canvas = cachedFontAtlas && cachedFontAtlas.data;\n        if (!canvas) {\n            canvas = document.createElement('canvas');\n            canvas.width = MAX_CANVAS_WIDTH;\n        }\n        const ctx = canvas.getContext('2d', { willReadFrequently: true });\n        setTextStyle(ctx, fontFamily, fontSize, fontWeight);\n        // 1. build mapping\n        const { mapping, canvasHeight, xOffset, yOffset } = buildMapping({\n            getFontWidth: char => ctx.measureText(char).width,\n            fontHeight: fontSize * HEIGHT_SCALE,\n            buffer,\n            characterSet,\n            maxCanvasWidth: MAX_CANVAS_WIDTH,\n            ...(cachedFontAtlas && {\n                mapping: cachedFontAtlas.mapping,\n                xOffset: cachedFontAtlas.xOffset,\n                yOffset: cachedFontAtlas.yOffset\n            })\n        });\n        // 2. update canvas\n        // copy old canvas data to new canvas only when height changed\n        if (canvas.height !== canvasHeight) {\n            const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            canvas.height = canvasHeight;\n            ctx.putImageData(imageData, 0, 0);\n        }\n        setTextStyle(ctx, fontFamily, fontSize, fontWeight);\n        // 3. layout characters\n        if (sdf) {\n            const tinySDF = new TinySDF({\n                fontSize,\n                buffer,\n                radius,\n                cutoff,\n                fontFamily,\n                fontWeight: `${fontWeight}`\n            });\n            for (const char of characterSet) {\n                const { data, width, height, glyphTop } = tinySDF.draw(char);\n                mapping[char].width = width;\n                mapping[char].layoutOffsetY = fontSize * BASELINE_SCALE - glyphTop;\n                const imageData = ctx.createImageData(width, height);\n                populateAlphaChannel(data, imageData);\n                ctx.putImageData(imageData, mapping[char].x, mapping[char].y);\n            }\n        }\n        else {\n            for (const char of characterSet) {\n                ctx.fillText(char, mapping[char].x, mapping[char].y + buffer + fontSize * BASELINE_SCALE);\n            }\n        }\n        return {\n            xOffset,\n            yOffset,\n            mapping,\n            data: canvas,\n            width: canvas.width,\n            height: canvas.height\n        };\n    }\n    _getKey() {\n        const { fontFamily, fontWeight, fontSize, buffer, sdf, radius, cutoff } = this.props;\n        if (sdf) {\n            return `${fontFamily} ${fontWeight} ${fontSize} ${buffer} ${radius} ${cutoff}`;\n        }\n        return `${fontFamily} ${fontWeight} ${fontSize} ${buffer}`;\n    }\n}\n", "export default `\\\n#version 300 es\n#define SHADER_NAME text-background-layer-vertex-shader\nin vec2 positions;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceRects;\nin float instanceSizes;\nin float instanceAngles;\nin vec2 instancePixelOffsets;\nin float instanceLineWidths;\nin vec4 instanceFillColors;\nin vec4 instanceLineColors;\nin vec3 instancePickingColors;\nuniform bool billboard;\nuniform float opacity;\nuniform float sizeScale;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform vec4 padding;\nuniform int sizeUnits;\nout vec4 vFillColor;\nout vec4 vLineColor;\nout float vLineWidth;\nout vec2 uv;\nout vec2 dimensions;\nvec2 rotate_by_angle(vec2 vertex, float angle) {\nfloat angle_radian = radians(angle);\nfloat cos_angle = cos(angle_radian);\nfloat sin_angle = sin(angle_radian);\nmat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\nreturn rotationMatrix * vertex;\n}\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\ngeometry.uv = positions;\ngeometry.pickingColor = instancePickingColors;\nuv = positions;\nvLineWidth = instanceLineWidths;\nfloat sizePixels = clamp(\nproject_size_to_pixel(instanceSizes * sizeScale, sizeUnits),\nsizeMinPixels, sizeMaxPixels\n);\ndimensions = instanceRects.zw * sizePixels + padding.xy + padding.zw;\nvec2 pixelOffset = (positions * instanceRects.zw + instanceRects.xy) * sizePixels + mix(-padding.xy, padding.zw, positions);\npixelOffset = rotate_by_angle(pixelOffset, instanceAngles);\npixelOffset += instancePixelOffsets;\npixelOffset.y *= -1.0;\nif (billboard)  {\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvec3 offset = vec3(pixelOffset, 0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\ngl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n} else {\nvec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\nDECKGL_FILTER_SIZE(offset_common, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n}\nvFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\nDECKGL_FILTER_COLOR(vFillColor, geometry);\nvLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\nDECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n`;\n", "export default `\\\n#version 300 es\n#define SHADER_NAME text-background-layer-fragment-shader\nprecision highp float;\nuniform bool stroked;\nin vec4 vFillColor;\nin vec4 vLineColor;\nin float vLineWidth;\nin vec2 uv;\nin vec2 dimensions;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = uv;\nvec2 pixelPosition = uv * dimensions;\nif (stroked) {\nfloat distToEdge = min(\nmin(pixelPosition.x, dimensions.x - pixelPosition.x),\nmin(pixelPosition.y, dimensions.y - pixelPosition.y)\n);\nfloat isBorder = smoothedge(distToEdge, vLineWidth);\nfragColor = mix(vFillColor, vLineColor, isBorder);\n} else {\nfragColor = vFillColor;\n}\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n`;\n", "import { Layer, project32, picking, UNIT } from '@deck.gl/core';\nimport { Geometry } from '@luma.gl/engine';\nimport { Model } from '@luma.gl/engine';\nimport vs from \"./text-background-layer-vertex.glsl.js\";\nimport fs from \"./text-background-layer-fragment.glsl.js\";\nconst defaultProps = {\n    billboard: true,\n    sizeScale: 1,\n    sizeUnits: 'pixels',\n    sizeMinPixels: 0,\n    sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n    padding: { type: 'array', value: [0, 0, 0, 0] },\n    getPosition: { type: 'accessor', value: (x) => x.position },\n    getSize: { type: 'accessor', value: 1 },\n    getAngle: { type: 'accessor', value: 0 },\n    getPixelOffset: { type: 'accessor', value: [0, 0] },\n    getBoundingRect: { type: 'accessor', value: [0, 0, 0, 0] },\n    getFillColor: { type: 'accessor', value: [0, 0, 0, 255] },\n    getLineColor: { type: 'accessor', value: [0, 0, 0, 255] },\n    getLineWidth: { type: 'accessor', value: 1 }\n};\nexport default class TextBackgroundLayer extends Layer {\n    static { this.defaultProps = defaultProps; }\n    static { this.layerName = 'TextBackgroundLayer'; }\n    getShaders() {\n        return super.getShaders({ vs, fs, modules: [project32, picking] });\n    }\n    initializeState() {\n        this.getAttributeManager().addInstanced({\n            instancePositions: {\n                size: 3,\n                type: 'float64',\n                fp64: this.use64bitPositions(),\n                transition: true,\n                accessor: 'getPosition'\n            },\n            instanceSizes: {\n                size: 1,\n                transition: true,\n                accessor: 'getSize',\n                defaultValue: 1\n            },\n            instanceAngles: {\n                size: 1,\n                transition: true,\n                accessor: 'getAngle'\n            },\n            instanceRects: {\n                size: 4,\n                accessor: 'getBoundingRect'\n            },\n            instancePixelOffsets: {\n                size: 2,\n                transition: true,\n                accessor: 'getPixelOffset'\n            },\n            instanceFillColors: {\n                size: 4,\n                transition: true,\n                type: 'unorm8',\n                accessor: 'getFillColor',\n                defaultValue: [0, 0, 0, 255]\n            },\n            instanceLineColors: {\n                size: 4,\n                transition: true,\n                type: 'unorm8',\n                accessor: 'getLineColor',\n                defaultValue: [0, 0, 0, 255]\n            },\n            instanceLineWidths: {\n                size: 1,\n                transition: true,\n                accessor: 'getLineWidth',\n                defaultValue: 1\n            }\n        });\n    }\n    updateState(params) {\n        super.updateState(params);\n        const { changeFlags } = params;\n        if (changeFlags.extensionsChanged) {\n            this.state.model?.destroy();\n            this.state.model = this._getModel();\n            this.getAttributeManager().invalidateAll();\n        }\n    }\n    draw({ uniforms }) {\n        const { billboard, sizeScale, sizeUnits, sizeMinPixels, sizeMaxPixels, getLineWidth } = this.props;\n        let { padding } = this.props;\n        if (padding.length < 4) {\n            padding = [padding[0], padding[1], padding[0], padding[1]];\n        }\n        const model = this.state.model;\n        model.setUniforms(uniforms);\n        model.setUniforms({\n            billboard,\n            stroked: Boolean(getLineWidth),\n            padding,\n            sizeUnits: UNIT[sizeUnits],\n            sizeScale,\n            sizeMinPixels,\n            sizeMaxPixels\n        });\n        model.draw(this.context.renderPass);\n    }\n    _getModel() {\n        // a square that minimally cover the unit circle\n        const positions = [0, 0, 1, 0, 1, 1, 0, 1];\n        return new Model(this.context.device, {\n            ...this.getShaders(),\n            id: this.props.id,\n            bufferLayout: this.getAttributeManager().getBufferLayouts(),\n            geometry: new Geometry({\n                topology: 'triangle-fan-webgl',\n                vertexCount: 4,\n                attributes: {\n                    positions: { size: 2, value: new Float32Array(positions) }\n                }\n            }),\n            isInstanced: true\n        });\n    }\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { CompositeLayer, createIterable, log } from '@deck.gl/core';\nimport MultiIconLayer from \"./multi-icon-layer/multi-icon-layer.js\";\nimport FontAtlasManager, { DEFAULT_FONT_SETTINGS, setFontAtlasCacheLimit } from \"./font-atlas-manager.js\";\nimport { transformParagraph, getTextFromBuffer } from \"./utils.js\";\nimport TextBackgroundLayer from \"./text-background-layer/text-background-layer.js\";\nconst TEXT_ANCHOR = {\n    start: 1,\n    middle: 0,\n    end: -1\n};\nconst ALIGNMENT_BASELINE = {\n    top: 1,\n    center: 0,\n    bottom: -1\n};\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst DEFAULT_LINE_HEIGHT = 1.0;\nconst defaultProps = {\n    billboard: true,\n    sizeScale: 1,\n    sizeUnits: 'pixels',\n    sizeMinPixels: 0,\n    sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n    background: false,\n    getBackgroundColor: { type: 'accessor', value: [255, 255, 255, 255] },\n    getBorderColor: { type: 'accessor', value: DEFAULT_COLOR },\n    getBorderWidth: { type: 'accessor', value: 0 },\n    backgroundPadding: { type: 'array', value: [0, 0, 0, 0] },\n    characterSet: { type: 'object', value: DEFAULT_FONT_SETTINGS.characterSet },\n    fontFamily: DEFAULT_FONT_SETTINGS.fontFamily,\n    fontWeight: DEFAULT_FONT_SETTINGS.fontWeight,\n    lineHeight: DEFAULT_LINE_HEIGHT,\n    outlineWidth: { type: 'number', value: 0, min: 0 },\n    outlineColor: { type: 'color', value: DEFAULT_COLOR },\n    fontSettings: { type: 'object', value: {}, compare: 1 },\n    // auto wrapping options\n    wordBreak: 'break-word',\n    maxWidth: { type: 'number', value: -1 },\n    getText: { type: 'accessor', value: (x) => x.text },\n    getPosition: { type: 'accessor', value: (x) => x.position },\n    getColor: { type: 'accessor', value: DEFAULT_COLOR },\n    getSize: { type: 'accessor', value: 32 },\n    getAngle: { type: 'accessor', value: 0 },\n    getTextAnchor: { type: 'accessor', value: 'middle' },\n    getAlignmentBaseline: { type: 'accessor', value: 'center' },\n    getPixelOffset: { type: 'accessor', value: [0, 0] },\n    // deprecated\n    backgroundColor: { deprecatedFor: ['background', 'getBackgroundColor'] }\n};\n/** Render text labels at given coordinates. */\nexport default class TextLayer extends CompositeLayer {\n    constructor() {\n        super(...arguments);\n        /** Returns the x, y, width, height of each text string, relative to pixel size.\n         * Used to render the background.\n         */\n        this.getBoundingRect = (object, objectInfo) => {\n            let { size: [width, height] } = this.transformParagraph(object, objectInfo);\n            const { fontSize } = this.state.fontAtlasManager.props;\n            width /= fontSize;\n            height /= fontSize;\n            const { getTextAnchor, getAlignmentBaseline } = this.props;\n            const anchorX = TEXT_ANCHOR[typeof getTextAnchor === 'function' ? getTextAnchor(object, objectInfo) : getTextAnchor];\n            const anchorY = ALIGNMENT_BASELINE[typeof getAlignmentBaseline === 'function'\n                ? getAlignmentBaseline(object, objectInfo)\n                : getAlignmentBaseline];\n            return [((anchorX - 1) * width) / 2, ((anchorY - 1) * height) / 2, width, height];\n        };\n        /** Returns the x, y offsets of each character in a text string, in texture size.\n         * Used to layout characters in the vertex shader.\n         */\n        this.getIconOffsets = (object, objectInfo) => {\n            const { getTextAnchor, getAlignmentBaseline } = this.props;\n            const { x, y, rowWidth, size: [width, height] } = this.transformParagraph(object, objectInfo);\n            const anchorX = TEXT_ANCHOR[typeof getTextAnchor === 'function' ? getTextAnchor(object, objectInfo) : getTextAnchor];\n            const anchorY = ALIGNMENT_BASELINE[typeof getAlignmentBaseline === 'function'\n                ? getAlignmentBaseline(object, objectInfo)\n                : getAlignmentBaseline];\n            const numCharacters = x.length;\n            const offsets = new Array(numCharacters * 2);\n            let index = 0;\n            for (let i = 0; i < numCharacters; i++) {\n                // For a multi-line object, offset in x-direction needs consider\n                // the row offset in the paragraph and the object offset in the row\n                const rowOffset = ((1 - anchorX) * (width - rowWidth[i])) / 2;\n                offsets[index++] = ((anchorX - 1) * width) / 2 + rowOffset + x[i];\n                offsets[index++] = ((anchorY - 1) * height) / 2 + y[i];\n            }\n            return offsets;\n        };\n    }\n    static { this.defaultProps = defaultProps; }\n    static { this.layerName = 'TextLayer'; }\n    initializeState() {\n        this.state = {\n            styleVersion: 0,\n            fontAtlasManager: new FontAtlasManager()\n        };\n        // Breaking change in v8.9\n        if (this.props.maxWidth > 0) {\n            log.warn('v8.9 breaking change: TextLayer maxWidth is now relative to text size')();\n        }\n    }\n    // eslint-disable-next-line complexity\n    updateState(params) {\n        const { props, oldProps, changeFlags } = params;\n        const textChanged = changeFlags.dataChanged ||\n            (changeFlags.updateTriggersChanged &&\n                (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText));\n        if (textChanged) {\n            this._updateText();\n        }\n        const fontChanged = this._updateFontAtlas();\n        const styleChanged = fontChanged ||\n            props.lineHeight !== oldProps.lineHeight ||\n            props.wordBreak !== oldProps.wordBreak ||\n            props.maxWidth !== oldProps.maxWidth;\n        if (styleChanged) {\n            this.setState({\n                styleVersion: this.state.styleVersion + 1\n            });\n        }\n    }\n    getPickingInfo({ info }) {\n        // because `TextLayer` assign the same pickingInfoIndex for one text label,\n        // here info.index refers the index of text label in props.data\n        info.object = info.index >= 0 ? this.props.data[info.index] : null;\n        return info;\n    }\n    /** Returns true if font has changed */\n    _updateFontAtlas() {\n        const { fontSettings, fontFamily, fontWeight } = this.props;\n        const { fontAtlasManager, characterSet } = this.state;\n        const fontProps = {\n            ...fontSettings,\n            characterSet,\n            fontFamily,\n            fontWeight\n        };\n        if (!fontAtlasManager.mapping) {\n            // This is the first update\n            fontAtlasManager.setProps(fontProps);\n            return true;\n        }\n        for (const key in fontProps) {\n            if (fontProps[key] !== fontAtlasManager.props[key]) {\n                fontAtlasManager.setProps(fontProps);\n                return true;\n            }\n        }\n        return false;\n    }\n    // Text strings are variable width objects\n    // Count characters and start offsets\n    _updateText() {\n        const { data, characterSet } = this.props;\n        const textBuffer = data.attributes?.getText;\n        let { getText } = this.props;\n        let startIndices = data.startIndices;\n        let numInstances;\n        const autoCharacterSet = characterSet === 'auto' && new Set();\n        if (textBuffer && startIndices) {\n            const { texts, characterCount } = getTextFromBuffer({\n                ...(ArrayBuffer.isView(textBuffer) ? { value: textBuffer } : textBuffer),\n                // @ts-ignore if data.attribute is defined then length is expected\n                length: data.length,\n                startIndices,\n                characterSet: autoCharacterSet\n            });\n            numInstances = characterCount;\n            getText = (_, { index }) => texts[index];\n        }\n        else {\n            const { iterable, objectInfo } = createIterable(data);\n            startIndices = [0];\n            numInstances = 0;\n            for (const object of iterable) {\n                objectInfo.index++;\n                // Break into an array of characters\n                // When dealing with double-length unicode characters, `str.length` or `str[i]` do not work\n                const text = Array.from(getText(object, objectInfo) || '');\n                if (autoCharacterSet) {\n                    // eslint-disable-next-line @typescript-eslint/unbound-method\n                    text.forEach(autoCharacterSet.add, autoCharacterSet);\n                }\n                numInstances += text.length;\n                startIndices.push(numInstances);\n            }\n        }\n        this.setState({\n            getText,\n            startIndices,\n            numInstances,\n            characterSet: autoCharacterSet || characterSet\n        });\n    }\n    /** There are two size systems in this layer:\n  \n      + Pixel size: user-specified text size, via getSize, sizeScale, sizeUnits etc.\n        The layer roughly matches the output of the layer to CSS pixels, e.g. getSize: 12, sizeScale: 2\n        in layer props is roughly equivalent to font-size: 24px in CSS.\n      + Texture size: internally, character positions in a text blob are calculated using the sizes of iconMapping,\n        which depends on how large each character is drawn into the font atlas. This is controlled by\n        fontSettings.fontSize (default 64) and most users do not set it manually.\n        These numbers are intended to be used in the vertex shader and never to be exposed to the end user.\n  \n      All surfaces exposed to the user should either use the pixel size or a multiplier relative to the pixel size. */\n    /** Calculate the size and position of each character in a text string.\n     * Values are in texture size */\n    transformParagraph(object, objectInfo) {\n        const { fontAtlasManager } = this.state;\n        const iconMapping = fontAtlasManager.mapping;\n        const getText = this.state.getText;\n        const { wordBreak, lineHeight, maxWidth } = this.props;\n        const paragraph = getText(object, objectInfo) || '';\n        return transformParagraph(paragraph, lineHeight, wordBreak, maxWidth * fontAtlasManager.props.fontSize, iconMapping);\n    }\n    renderLayers() {\n        const { startIndices, numInstances, getText, fontAtlasManager: { scale, atlas, mapping }, styleVersion } = this.state;\n        const { data, _dataDiff, getPosition, getColor, getSize, getAngle, getPixelOffset, getBackgroundColor, getBorderColor, getBorderWidth, backgroundPadding, background, billboard, fontSettings, outlineWidth, outlineColor, sizeScale, sizeUnits, sizeMinPixels, sizeMaxPixels, transitions, updateTriggers } = this.props;\n        const CharactersLayerClass = this.getSubLayerClass('characters', MultiIconLayer);\n        const BackgroundLayerClass = this.getSubLayerClass('background', TextBackgroundLayer);\n        return [\n            background &&\n                new BackgroundLayerClass({\n                    // background props\n                    getFillColor: getBackgroundColor,\n                    getLineColor: getBorderColor,\n                    getLineWidth: getBorderWidth,\n                    padding: backgroundPadding,\n                    // props shared with characters layer\n                    getPosition,\n                    getSize,\n                    getAngle,\n                    getPixelOffset,\n                    billboard,\n                    sizeScale,\n                    sizeUnits,\n                    sizeMinPixels,\n                    sizeMaxPixels,\n                    transitions: transitions && {\n                        getPosition: transitions.getPosition,\n                        getAngle: transitions.getAngle,\n                        getSize: transitions.getSize,\n                        getFillColor: transitions.getBackgroundColor,\n                        getLineColor: transitions.getBorderColor,\n                        getLineWidth: transitions.getBorderWidth,\n                        getPixelOffset: transitions.getPixelOffset\n                    }\n                }, this.getSubLayerProps({\n                    id: 'background',\n                    updateTriggers: {\n                        getPosition: updateTriggers.getPosition,\n                        getAngle: updateTriggers.getAngle,\n                        getSize: updateTriggers.getSize,\n                        getFillColor: updateTriggers.getBackgroundColor,\n                        getLineColor: updateTriggers.getBorderColor,\n                        getLineWidth: updateTriggers.getBorderWidth,\n                        getPixelOffset: updateTriggers.getPixelOffset,\n                        getBoundingRect: {\n                            getText: updateTriggers.getText,\n                            getTextAnchor: updateTriggers.getTextAnchor,\n                            getAlignmentBaseline: updateTriggers.getAlignmentBaseline,\n                            styleVersion\n                        }\n                    }\n                }), {\n                    data: \n                    // @ts-ignore (2339) attribute is not defined on all data types\n                    data.attributes && data.attributes.background\n                        ? // @ts-ignore (2339) attribute is not defined on all data types\n                            { length: data.length, attributes: data.attributes.background }\n                        : data,\n                    _dataDiff,\n                    // Maintain the same background behavior as <=8.3. Remove in v9?\n                    autoHighlight: false,\n                    getBoundingRect: this.getBoundingRect\n                }),\n            new CharactersLayerClass({\n                sdf: fontSettings.sdf,\n                smoothing: Number.isFinite(fontSettings.smoothing)\n                    ? fontSettings.smoothing\n                    : DEFAULT_FONT_SETTINGS.smoothing,\n                outlineWidth: outlineWidth / (fontSettings.radius || DEFAULT_FONT_SETTINGS.radius),\n                outlineColor,\n                iconAtlas: atlas,\n                iconMapping: mapping,\n                getPosition,\n                getColor,\n                getSize,\n                getAngle,\n                getPixelOffset,\n                billboard,\n                sizeScale: sizeScale * scale,\n                sizeUnits,\n                sizeMinPixels: sizeMinPixels * scale,\n                sizeMaxPixels: sizeMaxPixels * scale,\n                transitions: transitions && {\n                    getPosition: transitions.getPosition,\n                    getAngle: transitions.getAngle,\n                    getColor: transitions.getColor,\n                    getSize: transitions.getSize,\n                    getPixelOffset: transitions.getPixelOffset\n                }\n            }, this.getSubLayerProps({\n                id: 'characters',\n                updateTriggers: {\n                    all: updateTriggers.getText,\n                    getPosition: updateTriggers.getPosition,\n                    getAngle: updateTriggers.getAngle,\n                    getColor: updateTriggers.getColor,\n                    getSize: updateTriggers.getSize,\n                    getPixelOffset: updateTriggers.getPixelOffset,\n                    getIconOffsets: {\n                        getTextAnchor: updateTriggers.getTextAnchor,\n                        getAlignmentBaseline: updateTriggers.getAlignmentBaseline,\n                        styleVersion\n                    }\n                }\n            }), {\n                data,\n                _dataDiff,\n                startIndices,\n                numInstances,\n                getIconOffsets: this.getIconOffsets,\n                getIcon: getText\n            })\n        ];\n    }\n    static set fontAtlasCacheLimit(limit) {\n        setFontAtlasCacheLimit(limit);\n    }\n}\n", "import IconLayer from \"../icon-layer/icon-layer.js\";\nimport ScatterplotLayer from \"../scatterplot-layer/scatterplot-layer.js\";\nimport TextLayer from \"../text-layer/text-layer.js\";\nimport PathLayer from \"../path-layer/path-layer.js\";\nimport SolidPolygonLayer from \"../solid-polygon-layer/solid-polygon-layer.js\";\nexport const POINT_LAYER = {\n    circle: {\n        type: ScatterplotLayer,\n        props: {\n            filled: 'filled',\n            stroked: 'stroked',\n            lineWidthMaxPixels: 'lineWidthMaxPixels',\n            lineWidthMinPixels: 'lineWidthMinPixels',\n            lineWidthScale: 'lineWidthScale',\n            lineWidthUnits: 'lineWidthUnits',\n            pointRadiusMaxPixels: 'radiusMaxPixels',\n            pointRadiusMinPixels: 'radiusMinPixels',\n            pointRadiusScale: 'radiusScale',\n            pointRadiusUnits: 'radiusUnits',\n            pointAntialiasing: 'antialiasing',\n            pointBillboard: 'billboard',\n            getFillColor: 'getFillColor',\n            getLineColor: 'getLineColor',\n            getLineWidth: 'getLineWidth',\n            getPointRadius: 'getRadius'\n        }\n    },\n    icon: {\n        type: IconLayer,\n        props: {\n            iconAtlas: 'iconAtlas',\n            iconMapping: 'iconMapping',\n            iconSizeMaxPixels: 'sizeMaxPixels',\n            iconSizeMinPixels: 'sizeMinPixels',\n            iconSizeScale: 'sizeScale',\n            iconSizeUnits: 'sizeUnits',\n            iconAlphaCutoff: 'alphaCutoff',\n            iconBillboard: 'billboard',\n            getIcon: 'getIcon',\n            getIconAngle: 'getAngle',\n            getIconColor: 'getColor',\n            getIconPixelOffset: 'getPixelOffset',\n            getIconSize: 'getSize'\n        }\n    },\n    text: {\n        type: TextLayer,\n        props: {\n            textSizeMaxPixels: 'sizeMaxPixels',\n            textSizeMinPixels: 'sizeMinPixels',\n            textSizeScale: 'sizeScale',\n            textSizeUnits: 'sizeUnits',\n            textBackground: 'background',\n            textBackgroundPadding: 'backgroundPadding',\n            textFontFamily: 'fontFamily',\n            textFontWeight: 'fontWeight',\n            textLineHeight: 'lineHeight',\n            textMaxWidth: 'maxWidth',\n            textOutlineColor: 'outlineColor',\n            textOutlineWidth: 'outlineWidth',\n            textWordBreak: 'wordBreak',\n            textCharacterSet: 'characterSet',\n            textBillboard: 'billboard',\n            textFontSettings: 'fontSettings',\n            getText: 'getText',\n            getTextAngle: 'getAngle',\n            getTextColor: 'getColor',\n            getTextPixelOffset: 'getPixelOffset',\n            getTextSize: 'getSize',\n            getTextAnchor: 'getTextAnchor',\n            getTextAlignmentBaseline: 'getAlignmentBaseline',\n            getTextBackgroundColor: 'getBackgroundColor',\n            getTextBorderColor: 'getBorderColor',\n            getTextBorderWidth: 'getBorderWidth'\n        }\n    }\n};\nexport const LINE_LAYER = {\n    type: PathLayer,\n    props: {\n        lineWidthUnits: 'widthUnits',\n        lineWidthScale: 'widthScale',\n        lineWidthMinPixels: 'widthMinPixels',\n        lineWidthMaxPixels: 'widthMaxPixels',\n        lineJointRounded: 'jointRounded',\n        lineCapRounded: 'capRounded',\n        lineMiterLimit: 'miterLimit',\n        lineBillboard: 'billboard',\n        getLineColor: 'getColor',\n        getLineWidth: 'getWidth'\n    }\n};\nexport const POLYGON_LAYER = {\n    type: SolidPolygonLayer,\n    props: {\n        extruded: 'extruded',\n        filled: 'filled',\n        wireframe: 'wireframe',\n        elevationScale: 'elevationScale',\n        material: 'material',\n        _full3d: '_full3d',\n        getElevation: 'getElevation',\n        getFillColor: 'getFillColor',\n        getLineColor: 'getLineColor'\n    }\n};\nexport function getDefaultProps({ type, props }) {\n    const result = {};\n    for (const key in props) {\n        result[key] = type.defaultProps[props[key]];\n    }\n    return result;\n}\nexport function forwardProps(layer, mapping) {\n    const { transitions, updateTriggers } = layer.props;\n    const result = {\n        updateTriggers: {},\n        transitions: transitions && {\n            getPosition: transitions.geometry\n        }\n    };\n    for (const sourceKey in mapping) {\n        const targetKey = mapping[sourceKey];\n        let value = layer.props[sourceKey];\n        if (sourceKey.startsWith('get')) {\n            // isAccessor\n            value = layer.getSubLayerAccessor(value);\n            result.updateTriggers[targetKey] = updateTriggers[sourceKey];\n            if (transitions) {\n                result.transitions[targetKey] = transitions[sourceKey];\n            }\n        }\n        result[targetKey] = value;\n    }\n    return result;\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { log } from '@deck.gl/core';\n/**\n * \"Normalizes\" complete or partial GeoJSON data into iterable list of features\n * Can accept GeoJSON geometry or \"Feature\", \"FeatureCollection\" in addition\n * to plain arrays and iterables.\n * Works by extracting the feature array or wrapping single objects in an array,\n * so that subsequent code can simply iterate over features.\n *\n * @param {object} geojson - geojson data\n * @param {Object|Array} data - geojson object (FeatureCollection, Feature or\n *  Geometry) or array of features\n * @return {Array|\"iteratable\"} - iterable list of features\n */\nexport function getGeojsonFeatures(geojson) {\n    // If array, assume this is a list of features\n    if (Array.isArray(geojson)) {\n        return geojson;\n    }\n    log.assert(geojson.type, 'GeoJSON does not have type');\n    switch (geojson.type) {\n        case 'Feature':\n            // Wrap the feature in a 'Features' array\n            return [geojson];\n        case 'FeatureCollection':\n            // Just return the 'Features' array from the collection\n            log.assert(Array.isArray(geojson.features), 'GeoJSON does not have features array');\n            return geojson.features;\n        default:\n            // Assume it's a geometry, we'll check type in separateGeojsonFeatures\n            // Wrap the geometry object in a 'Feature' object and wrap in an array\n            return [{ geometry: geojson }];\n    }\n}\n// Linearize\nexport function separateGeojsonFeatures(features, wrapFeature, dataRange = {}) {\n    const separated = {\n        pointFeatures: [],\n        lineFeatures: [],\n        polygonFeatures: [],\n        polygonOutlineFeatures: []\n    };\n    const { startRow = 0, endRow = features.length } = dataRange;\n    for (let featureIndex = startRow; featureIndex < endRow; featureIndex++) {\n        const feature = features[featureIndex];\n        const { geometry } = feature;\n        if (!geometry) {\n            // geometry can be null per specification\n            continue; // eslint-disable-line no-continue\n        }\n        if (geometry.type === 'GeometryCollection') {\n            log.assert(Array.isArray(geometry.geometries), 'GeoJSON does not have geometries array');\n            const { geometries } = geometry;\n            for (let i = 0; i < geometries.length; i++) {\n                const subGeometry = geometries[i];\n                separateGeometry(subGeometry, separated, wrapFeature, feature, featureIndex);\n            }\n        }\n        else {\n            separateGeometry(geometry, separated, wrapFeature, feature, featureIndex);\n        }\n    }\n    return separated;\n}\nfunction separateGeometry(geometry, separated, wrapFeature, sourceFeature, sourceFeatureIndex) {\n    const { type, coordinates } = geometry;\n    const { pointFeatures, lineFeatures, polygonFeatures, polygonOutlineFeatures } = separated;\n    if (!validateGeometry(type, coordinates)) {\n        // Avoid hard failure if some features are malformed\n        log.warn(`${type} coordinates are malformed`)();\n        return;\n    }\n    // Split each feature, but keep track of the source feature and index (for Multi* geometries)\n    switch (type) {\n        case 'Point':\n            pointFeatures.push(wrapFeature({\n                geometry\n            }, sourceFeature, sourceFeatureIndex));\n            break;\n        case 'MultiPoint':\n            coordinates.forEach(point => {\n                pointFeatures.push(wrapFeature({\n                    geometry: { type: 'Point', coordinates: point }\n                }, sourceFeature, sourceFeatureIndex));\n            });\n            break;\n        case 'LineString':\n            lineFeatures.push(wrapFeature({\n                geometry\n            }, sourceFeature, sourceFeatureIndex));\n            break;\n        case 'MultiLineString':\n            // Break multilinestrings into multiple lines\n            coordinates.forEach(path => {\n                lineFeatures.push(wrapFeature({\n                    geometry: { type: 'LineString', coordinates: path }\n                }, sourceFeature, sourceFeatureIndex));\n            });\n            break;\n        case 'Polygon':\n            polygonFeatures.push(wrapFeature({\n                geometry\n            }, sourceFeature, sourceFeatureIndex));\n            // Break polygon into multiple lines\n            coordinates.forEach(path => {\n                polygonOutlineFeatures.push(wrapFeature({\n                    geometry: { type: 'LineString', coordinates: path }\n                }, sourceFeature, sourceFeatureIndex));\n            });\n            break;\n        case 'MultiPolygon':\n            // Break multipolygons into multiple polygons\n            coordinates.forEach(polygon => {\n                polygonFeatures.push(wrapFeature({\n                    geometry: { type: 'Polygon', coordinates: polygon }\n                }, sourceFeature, sourceFeatureIndex));\n                // Break polygon into multiple lines\n                polygon.forEach(path => {\n                    polygonOutlineFeatures.push(wrapFeature({\n                        geometry: { type: 'LineString', coordinates: path }\n                    }, sourceFeature, sourceFeatureIndex));\n                });\n            });\n            break;\n        default:\n    }\n}\n/**\n * Simple GeoJSON validation util. For perf reasons we do not validate against the full spec,\n * only the following:\n   - geometry.type is supported\n   - geometry.coordinate has correct nesting level\n */\nconst COORDINATE_NEST_LEVEL = {\n    Point: 1,\n    MultiPoint: 2,\n    LineString: 2,\n    MultiLineString: 3,\n    Polygon: 3,\n    MultiPolygon: 4\n};\nexport function validateGeometry(type, coordinates) {\n    let nestLevel = COORDINATE_NEST_LEVEL[type];\n    log.assert(nestLevel, `Unknown GeoJSON type ${type}`);\n    while (coordinates && --nestLevel > 0) {\n        coordinates = coordinates[0];\n    }\n    return coordinates && Number.isFinite(coordinates[0]);\n}\n", "import { calculatePickingColors } from \"./geojson-binary.js\";\nfunction createEmptyLayerProps() {\n    return {\n        points: {},\n        lines: {},\n        polygons: {},\n        polygonsOutline: {}\n    };\n}\nfunction getCoordinates(f) {\n    return f.geometry.coordinates;\n}\nexport function createLayerPropsFromFeatures(features, featuresDiff) {\n    const layerProps = createEmptyLayerProps();\n    const { pointFeatures, lineFeatures, polygonFeatures, polygonOutlineFeatures } = features;\n    layerProps.points.data = pointFeatures;\n    layerProps.points._dataDiff = featuresDiff.pointFeatures && (() => featuresDiff.pointFeatures);\n    layerProps.points.getPosition = getCoordinates;\n    layerProps.lines.data = lineFeatures;\n    layerProps.lines._dataDiff = featuresDiff.lineFeatures && (() => featuresDiff.lineFeatures);\n    layerProps.lines.getPath = getCoordinates;\n    layerProps.polygons.data = polygonFeatures;\n    layerProps.polygons._dataDiff =\n        featuresDiff.polygonFeatures && (() => featuresDiff.polygonFeatures);\n    layerProps.polygons.getPolygon = getCoordinates;\n    layerProps.polygonsOutline.data = polygonOutlineFeatures;\n    layerProps.polygonsOutline._dataDiff =\n        featuresDiff.polygonOutlineFeatures && (() => featuresDiff.polygonOutlineFeatures);\n    layerProps.polygonsOutline.getPath = getCoordinates;\n    return layerProps;\n}\nexport function createLayerPropsFromBinary(geojsonBinary, encodePickingColor) {\n    // The binary data format is documented here\n    // https://github.com/visgl/loaders.gl/blob/master/modules/gis/docs/api-reference/geojson-to-binary.md\n    // It is the default output from the `MVTLoader` and can also be obtained\n    // from GeoJSON by using the `geojsonToBinary` utility function.\n    const layerProps = createEmptyLayerProps();\n    const { points, lines, polygons } = geojsonBinary;\n    const customPickingColors = calculatePickingColors(geojsonBinary, encodePickingColor);\n    layerProps.points.data = {\n        length: points.positions.value.length / points.positions.size,\n        attributes: {\n            ...points.attributes,\n            getPosition: points.positions,\n            instancePickingColors: {\n                size: 3,\n                value: customPickingColors.points\n            }\n        },\n        properties: points.properties,\n        numericProps: points.numericProps,\n        featureIds: points.featureIds\n    };\n    layerProps.lines.data = {\n        length: lines.pathIndices.value.length - 1,\n        startIndices: lines.pathIndices.value,\n        attributes: {\n            ...lines.attributes,\n            getPath: lines.positions,\n            instancePickingColors: {\n                size: 3,\n                value: customPickingColors.lines\n            }\n        },\n        properties: lines.properties,\n        numericProps: lines.numericProps,\n        featureIds: lines.featureIds\n    };\n    layerProps.lines._pathType = 'open';\n    layerProps.polygons.data = {\n        length: polygons.polygonIndices.value.length - 1,\n        startIndices: polygons.polygonIndices.value,\n        attributes: {\n            ...polygons.attributes,\n            getPolygon: polygons.positions,\n            pickingColors: {\n                size: 3,\n                value: customPickingColors.polygons\n            }\n        },\n        properties: polygons.properties,\n        numericProps: polygons.numericProps,\n        featureIds: polygons.featureIds\n    };\n    layerProps.polygons._normalize = false;\n    if (polygons.triangles) {\n        layerProps.polygons.data.attributes.indices = polygons.triangles.value;\n    }\n    layerProps.polygonsOutline.data = {\n        length: polygons.primitivePolygonIndices.value.length - 1,\n        startIndices: polygons.primitivePolygonIndices.value,\n        attributes: {\n            ...polygons.attributes,\n            getPath: polygons.positions,\n            instancePickingColors: {\n                size: 3,\n                value: customPickingColors.polygons\n            }\n        },\n        properties: polygons.properties,\n        numericProps: polygons.numericProps,\n        featureIds: polygons.featureIds\n    };\n    layerProps.polygonsOutline._pathType = 'open';\n    return layerProps;\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { CompositeLayer } from '@deck.gl/core';\nimport { replaceInRange } from \"../utils.js\";\nimport { binaryToFeatureForAccesor } from \"./geojson-binary.js\";\nimport { POINT_LAYER, LINE_LAYER, POLYGON_LAYER, getDefaultProps, forwardProps } from \"./sub-layer-map.js\";\nimport { getGeojsonFeatures, separateGeojsonFeatures } from \"./geojson.js\";\nimport { createLayerPropsFromFeatures, createLayerPropsFromBinary } from \"./geojson-layer-props.js\";\nconst FEATURE_TYPES = ['points', 'linestrings', 'polygons'];\nconst defaultProps = {\n    ...getDefaultProps(POINT_LAYER.circle),\n    ...getDefaultProps(POINT_LAYER.icon),\n    ...getDefaultProps(POINT_LAYER.text),\n    ...getDefaultProps(LINE_LAYER),\n    ...getDefaultProps(POLYGON_LAYER),\n    // Overwrite sub layer defaults\n    stroked: true,\n    filled: true,\n    extruded: false,\n    wireframe: false,\n    _full3d: false,\n    iconAtlas: { type: 'object', value: null },\n    iconMapping: { type: 'object', value: {} },\n    getIcon: { type: 'accessor', value: f => f.properties.icon },\n    getText: { type: 'accessor', value: f => f.properties.text },\n    // Self props\n    pointType: 'circle',\n    // TODO: deprecated, remove in v9\n    getRadius: { deprecatedFor: 'getPointRadius' }\n};\n/** Render GeoJSON formatted data as polygons, lines and points (circles, icons and/or texts). */\nexport default class GeoJsonLayer extends CompositeLayer {\n    static { this.layerName = 'GeoJsonLayer'; }\n    static { this.defaultProps = defaultProps; }\n    initializeState() {\n        this.state = {\n            layerProps: {},\n            features: {},\n            featuresDiff: {}\n        };\n    }\n    updateState({ props, changeFlags }) {\n        if (!changeFlags.dataChanged) {\n            return;\n        }\n        const { data } = this.props;\n        const binary = data && 'points' in data && 'polygons' in data && 'lines' in data;\n        this.setState({ binary });\n        if (binary) {\n            this._updateStateBinary({ props, changeFlags });\n        }\n        else {\n            this._updateStateJSON({ props, changeFlags });\n        }\n    }\n    _updateStateBinary({ props, changeFlags }) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        const layerProps = createLayerPropsFromBinary(props.data, this.encodePickingColor);\n        this.setState({ layerProps });\n    }\n    _updateStateJSON({ props, changeFlags }) {\n        const features = getGeojsonFeatures(props.data);\n        const wrapFeature = this.getSubLayerRow.bind(this);\n        let newFeatures = {};\n        const featuresDiff = {};\n        if (Array.isArray(changeFlags.dataChanged)) {\n            const oldFeatures = this.state.features;\n            for (const key in oldFeatures) {\n                newFeatures[key] = oldFeatures[key].slice();\n                featuresDiff[key] = [];\n            }\n            for (const dataRange of changeFlags.dataChanged) {\n                const partialFeatures = separateGeojsonFeatures(features, wrapFeature, dataRange);\n                for (const key in oldFeatures) {\n                    featuresDiff[key].push(replaceInRange({\n                        data: newFeatures[key],\n                        getIndex: f => f.__source.index,\n                        dataRange,\n                        replace: partialFeatures[key]\n                    }));\n                }\n            }\n        }\n        else {\n            newFeatures = separateGeojsonFeatures(features, wrapFeature);\n        }\n        const layerProps = createLayerPropsFromFeatures(newFeatures, featuresDiff);\n        this.setState({\n            features: newFeatures,\n            featuresDiff,\n            layerProps\n        });\n    }\n    getPickingInfo(params) {\n        const info = super.getPickingInfo(params);\n        const { index, sourceLayer } = info;\n        info.featureType = FEATURE_TYPES.find(ft => sourceLayer.id.startsWith(`${this.id}-${ft}-`));\n        if (index >= 0 && sourceLayer.id.startsWith(`${this.id}-points-text`) && this.state.binary) {\n            info.index = this.props.data.points.globalFeatureIds.value[index];\n        }\n        return info;\n    }\n    _updateAutoHighlight(info) {\n        // All sub layers except the points layer use source feature index to encode the picking color\n        // The points layer uses indices from the points data array.\n        const pointLayerIdPrefix = `${this.id}-points-`;\n        const sourceIsPoints = info.featureType === 'points';\n        for (const layer of this.getSubLayers()) {\n            if (layer.id.startsWith(pointLayerIdPrefix) === sourceIsPoints) {\n                layer.updateAutoHighlight(info);\n            }\n        }\n    }\n    _renderPolygonLayer() {\n        const { extruded, wireframe } = this.props;\n        const { layerProps } = this.state;\n        const id = 'polygons-fill';\n        const PolygonFillLayer = this.shouldRenderSubLayer(id, layerProps.polygons?.data) &&\n            this.getSubLayerClass(id, POLYGON_LAYER.type);\n        if (PolygonFillLayer) {\n            const forwardedProps = forwardProps(this, POLYGON_LAYER.props);\n            // Avoid building the lineColors attribute if wireframe is off\n            const useLineColor = extruded && wireframe;\n            if (!useLineColor) {\n                delete forwardedProps.getLineColor;\n            }\n            // using a legacy API to invalid lineColor attributes\n            forwardedProps.updateTriggers.lineColors = useLineColor;\n            return new PolygonFillLayer(forwardedProps, this.getSubLayerProps({\n                id,\n                updateTriggers: forwardedProps.updateTriggers\n            }), layerProps.polygons);\n        }\n        return null;\n    }\n    _renderLineLayers() {\n        const { extruded, stroked } = this.props;\n        const { layerProps } = this.state;\n        const polygonStrokeLayerId = 'polygons-stroke';\n        const lineStringsLayerId = 'linestrings';\n        const PolygonStrokeLayer = !extruded &&\n            stroked &&\n            this.shouldRenderSubLayer(polygonStrokeLayerId, layerProps.polygonsOutline?.data) &&\n            this.getSubLayerClass(polygonStrokeLayerId, LINE_LAYER.type);\n        const LineStringsLayer = this.shouldRenderSubLayer(lineStringsLayerId, layerProps.lines?.data) &&\n            this.getSubLayerClass(lineStringsLayerId, LINE_LAYER.type);\n        if (PolygonStrokeLayer || LineStringsLayer) {\n            const forwardedProps = forwardProps(this, LINE_LAYER.props);\n            return [\n                PolygonStrokeLayer &&\n                    new PolygonStrokeLayer(forwardedProps, this.getSubLayerProps({\n                        id: polygonStrokeLayerId,\n                        updateTriggers: forwardedProps.updateTriggers\n                    }), layerProps.polygonsOutline),\n                LineStringsLayer &&\n                    new LineStringsLayer(forwardedProps, this.getSubLayerProps({\n                        id: lineStringsLayerId,\n                        updateTriggers: forwardedProps.updateTriggers\n                    }), layerProps.lines)\n            ];\n        }\n        return null;\n    }\n    _renderPointLayers() {\n        const { pointType } = this.props;\n        const { layerProps, binary } = this.state;\n        let { highlightedObjectIndex } = this.props;\n        if (!binary && Number.isFinite(highlightedObjectIndex)) {\n            // @ts-expect-error TODO - type non-binary data\n            highlightedObjectIndex = layerProps.points.data.findIndex(d => d.__source.index === highlightedObjectIndex);\n        }\n        // Avoid duplicate sub layer ids\n        const types = new Set(pointType.split('+'));\n        const pointLayers = [];\n        for (const type of types) {\n            const id = `points-${type}`;\n            const PointLayerMapping = POINT_LAYER[type];\n            const PointsLayer = PointLayerMapping &&\n                this.shouldRenderSubLayer(id, layerProps.points?.data) &&\n                this.getSubLayerClass(id, PointLayerMapping.type);\n            if (PointsLayer) {\n                const forwardedProps = forwardProps(this, PointLayerMapping.props);\n                let pointsLayerProps = layerProps.points;\n                if (type === 'text' && binary) {\n                    // Picking colors are per-point but for text per-character are required\n                    // getPickingInfo() maps back to the correct index\n                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                    // @ts-expect-error TODO - type binary data\n                    const { instancePickingColors, ...rest } = pointsLayerProps.data.attributes;\n                    pointsLayerProps = {\n                        ...pointsLayerProps,\n                        // @ts-expect-error TODO - type binary data\n                        data: { ...pointsLayerProps.data, attributes: rest }\n                    };\n                }\n                pointLayers.push(new PointsLayer(forwardedProps, this.getSubLayerProps({\n                    id,\n                    updateTriggers: forwardedProps.updateTriggers,\n                    highlightedObjectIndex\n                }), pointsLayerProps));\n            }\n        }\n        return pointLayers;\n    }\n    renderLayers() {\n        const { extruded } = this.props;\n        const polygonFillLayer = this._renderPolygonLayer();\n        const lineLayers = this._renderLineLayers();\n        const pointLayers = this._renderPointLayers();\n        return [\n            // If not extruded: flat fill layer is drawn below outlines\n            !extruded && polygonFillLayer,\n            lineLayers,\n            pointLayers,\n            // If extruded: draw fill layer last for correct blending behavior\n            extruded && polygonFillLayer\n        ];\n    }\n    getSubLayerAccessor(accessor) {\n        const { binary } = this.state;\n        if (!binary || typeof accessor !== 'function') {\n            return super.getSubLayerAccessor(accessor);\n        }\n        return (object, info) => {\n            const { data, index } = info;\n            const feature = binaryToFeatureForAccesor(data, index);\n            // @ts-ignore (TS2349) accessor is always function\n            return accessor(feature, info);\n        };\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst DEFAULT_SAX_EVENTS = {\n    ontext: () => { },\n    onprocessinginstruction: () => { },\n    onsgmldeclaration: () => { },\n    ondoctype: () => { },\n    oncomment: () => { },\n    onopentagstart: () => { },\n    onattribute: () => { },\n    onopentag: () => { },\n    onclosetag: () => { },\n    onopencdata: () => { },\n    oncdata: () => { },\n    onclosecdata: () => { },\n    onerror: () => { },\n    onend: () => { },\n    onready: () => { },\n    onscript: () => { },\n    onopennamespace: () => { },\n    onclosenamespace: () => { }\n};\nconst DEFAULT_SAX_PARSER_OPTIONS = {\n    ...DEFAULT_SAX_EVENTS,\n    strict: false,\n    MAX_BUFFER_LENGTH: 64 * 1024,\n    lowercase: false,\n    lowercasetags: false,\n    noscript: false,\n    strictEntities: false,\n    xmlns: undefined,\n    position: undefined,\n    trim: undefined,\n    normalize: undefined\n};\nconst EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n];\nconst BUFFERS = [\n    'comment',\n    'sgmlDecl',\n    'textNode',\n    'tagName',\n    'doctype',\n    'procInstName',\n    'procInstBody',\n    'entity',\n    'attribName',\n    'attribValue',\n    'cdata',\n    'script'\n];\nconst nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;\nconst nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/;\nconst entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;\nconst entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/;\nexport const ENTITIES = {\n    amp: '&',\n    gt: '>',\n    lt: '<',\n    quot: '\"',\n    apos: \"'\",\n    AElig: 198,\n    Aacute: 193,\n    Acirc: 194,\n    Agrave: 192,\n    Aring: 197,\n    Atilde: 195,\n    Auml: 196,\n    Ccedil: 199,\n    ETH: 208,\n    Eacute: 201,\n    Ecirc: 202,\n    Egrave: 200,\n    Euml: 203,\n    Iacute: 205,\n    Icirc: 206,\n    Igrave: 204,\n    Iuml: 207,\n    Ntilde: 209,\n    Oacute: 211,\n    Ocirc: 212,\n    Ograve: 210,\n    Oslash: 216,\n    Otilde: 213,\n    Ouml: 214,\n    THORN: 222,\n    Uacute: 218,\n    Ucirc: 219,\n    Ugrave: 217,\n    Uuml: 220,\n    Yacute: 221,\n    aacute: 225,\n    acirc: 226,\n    aelig: 230,\n    agrave: 224,\n    aring: 229,\n    atilde: 227,\n    auml: 228,\n    ccedil: 231,\n    eacute: 233,\n    ecirc: 234,\n    egrave: 232,\n    eth: 240,\n    euml: 235,\n    iacute: 237,\n    icirc: 238,\n    igrave: 236,\n    iuml: 239,\n    ntilde: 241,\n    oacute: 243,\n    ocirc: 244,\n    ograve: 242,\n    oslash: 248,\n    otilde: 245,\n    ouml: 246,\n    szlig: 223,\n    thorn: 254,\n    uacute: 250,\n    ucirc: 251,\n    ugrave: 249,\n    uuml: 252,\n    yacute: 253,\n    yuml: 255,\n    copy: 169,\n    reg: 174,\n    nbsp: 160,\n    iexcl: 161,\n    cent: 162,\n    pound: 163,\n    curren: 164,\n    yen: 165,\n    brvbar: 166,\n    sect: 167,\n    uml: 168,\n    ordf: 170,\n    laquo: 171,\n    not: 172,\n    shy: 173,\n    macr: 175,\n    deg: 176,\n    plusmn: 177,\n    sup1: 185,\n    sup2: 178,\n    sup3: 179,\n    acute: 180,\n    micro: 181,\n    para: 182,\n    middot: 183,\n    cedil: 184,\n    ordm: 186,\n    raquo: 187,\n    frac14: 188,\n    frac12: 189,\n    frac34: 190,\n    iquest: 191,\n    times: 215,\n    divide: 247,\n    OElig: 338,\n    oelig: 339,\n    Scaron: 352,\n    scaron: 353,\n    Yuml: 376,\n    fnof: 402,\n    circ: 710,\n    tilde: 732,\n    Alpha: 913,\n    Beta: 914,\n    Gamma: 915,\n    Delta: 916,\n    Epsilon: 917,\n    Zeta: 918,\n    Eta: 919,\n    Theta: 920,\n    Iota: 921,\n    Kappa: 922,\n    Lambda: 923,\n    Mu: 924,\n    Nu: 925,\n    Xi: 926,\n    Omicron: 927,\n    Pi: 928,\n    Rho: 929,\n    Sigma: 931,\n    Tau: 932,\n    Upsilon: 933,\n    Phi: 934,\n    Chi: 935,\n    Psi: 936,\n    Omega: 937,\n    alpha: 945,\n    beta: 946,\n    gamma: 947,\n    delta: 948,\n    epsilon: 949,\n    zeta: 950,\n    eta: 951,\n    theta: 952,\n    iota: 953,\n    kappa: 954,\n    lambda: 955,\n    mu: 956,\n    nu: 957,\n    xi: 958,\n    omicron: 959,\n    pi: 960,\n    rho: 961,\n    sigmaf: 962,\n    sigma: 963,\n    tau: 964,\n    upsilon: 965,\n    phi: 966,\n    chi: 967,\n    psi: 968,\n    omega: 969,\n    thetasym: 977,\n    upsih: 978,\n    piv: 982,\n    ensp: 8194,\n    emsp: 8195,\n    thinsp: 8201,\n    zwnj: 8204,\n    zwj: 8205,\n    lrm: 8206,\n    rlm: 8207,\n    ndash: 8211,\n    mdash: 8212,\n    lsquo: 8216,\n    rsquo: 8217,\n    sbquo: 8218,\n    ldquo: 8220,\n    rdquo: 8221,\n    bdquo: 8222,\n    dagger: 8224,\n    Dagger: 8225,\n    bull: 8226,\n    hellip: 8230,\n    permil: 8240,\n    prime: 8242,\n    Prime: 8243,\n    lsaquo: 8249,\n    rsaquo: 8250,\n    oline: 8254,\n    frasl: 8260,\n    euro: 8364,\n    image: 8465,\n    weierp: 8472,\n    real: 8476,\n    trade: 8482,\n    alefsym: 8501,\n    larr: 8592,\n    uarr: 8593,\n    rarr: 8594,\n    darr: 8595,\n    harr: 8596,\n    crarr: 8629,\n    lArr: 8656,\n    uArr: 8657,\n    rArr: 8658,\n    dArr: 8659,\n    hArr: 8660,\n    forall: 8704,\n    part: 8706,\n    exist: 8707,\n    empty: 8709,\n    nabla: 8711,\n    isin: 8712,\n    notin: 8713,\n    ni: 8715,\n    prod: 8719,\n    sum: 8721,\n    minus: 8722,\n    lowast: 8727,\n    radic: 8730,\n    prop: 8733,\n    infin: 8734,\n    ang: 8736,\n    and: 8743,\n    or: 8744,\n    cap: 8745,\n    cup: 8746,\n    int: 8747,\n    there4: 8756,\n    sim: 8764,\n    cong: 8773,\n    asymp: 8776,\n    ne: 8800,\n    equiv: 8801,\n    le: 8804,\n    ge: 8805,\n    sub: 8834,\n    sup: 8835,\n    nsub: 8836,\n    sube: 8838,\n    supe: 8839,\n    oplus: 8853,\n    otimes: 8855,\n    perp: 8869,\n    sdot: 8901,\n    lceil: 8968,\n    rceil: 8969,\n    lfloor: 8970,\n    rfloor: 8971,\n    lang: 9001,\n    rang: 9002,\n    loz: 9674,\n    spades: 9824,\n    clubs: 9827,\n    hearts: 9829,\n    diams: 9830\n};\nObject.keys(ENTITIES).forEach((key) => {\n    const e = ENTITIES[key];\n    ENTITIES[key] = typeof e === 'number' ? String.fromCharCode(e) : e;\n});\n/**\n * Internal helper class\n */\nclass SAX {\n    EVENTS = EVENTS;\n    ENTITIES = {\n        // TODO: make it readonly, needed for entity-mega test\n        // amp, gt, lt, quot and apos are resolved to strings instead of numerical\n        // codes, IDK why\n        ...ENTITIES\n    };\n    XML_ENTITIES = {\n        amp: '&',\n        gt: '>',\n        lt: '<',\n        quot: '\"',\n        apos: \"'\"\n    };\n    S = 0;\n    opt;\n    trackPosition = false;\n    column = 0;\n    line = 0;\n    c = '';\n    error;\n    q = '';\n    bufferCheckPosition;\n    closed = false;\n    tags = [];\n    looseCase = '';\n    closedRoot = false;\n    sawRoot = false;\n    strict = false;\n    tag;\n    strictEntities;\n    state;\n    noscript = false;\n    attribList = [];\n    ns;\n    position = 0;\n    STATE = {\n        BEGIN: this.S++, // leading byte order mark or whitespace\n        BEGIN_WHITESPACE: this.S++, // leading whitespace\n        TEXT: this.S++, // general stuff\n        TEXT_ENTITY: this.S++, // &amp and such.\n        OPEN_WAKA: this.S++, // <\n        SGML_DECL: this.S++, // <!BLARG\n        SGML_DECL_QUOTED: this.S++, // <!BLARG foo \"bar\n        DOCTYPE: this.S++, // <!DOCTYPE\n        DOCTYPE_QUOTED: this.S++, // <!DOCTYPE \"//blah\n        DOCTYPE_DTD: this.S++, // <!DOCTYPE \"//blah\" [ ...\n        DOCTYPE_DTD_QUOTED: this.S++, // <!DOCTYPE \"//blah\" [ \"foo\n        COMMENT_STARTING: this.S++, // <!-\n        COMMENT: this.S++, // <!--\n        COMMENT_ENDING: this.S++, // <!-- blah -\n        COMMENT_ENDED: this.S++, // <!-- blah --\n        CDATA: this.S++, // <![CDATA[ something\n        CDATA_ENDING: this.S++, // ]\n        CDATA_ENDING_2: this.S++, // ]]\n        PROC_INST: this.S++, // <?hi\n        PROC_INST_BODY: this.S++, // <?hi there\n        PROC_INST_ENDING: this.S++, // <?hi \"there\" ?\n        OPEN_TAG: this.S++, // <strong\n        OPEN_TAG_SLASH: this.S++, // <strong /\n        ATTRIB: this.S++, // <a\n        ATTRIB_NAME: this.S++, // <a foo\n        ATTRIB_NAME_SAW_WHITE: this.S++, // <a foo _\n        ATTRIB_VALUE: this.S++, // <a foo=\n        ATTRIB_VALUE_QUOTED: this.S++, // <a foo=\"bar\n        ATTRIB_VALUE_CLOSED: this.S++, // <a foo=\"bar\"\n        ATTRIB_VALUE_UNQUOTED: this.S++, // <a foo=bar\n        ATTRIB_VALUE_ENTITY_Q: this.S++, // <foo bar=\"&quot;\"\n        ATTRIB_VALUE_ENTITY_U: this.S++, // <foo bar=&quot\n        CLOSE_TAG: this.S++, // </a\n        CLOSE_TAG_SAW_WHITE: this.S++, // </a   >\n        SCRIPT: this.S++, // <script> ...\n        SCRIPT_ENDING: this.S++ // <script> ... <\n    };\n    BUFFERS = BUFFERS;\n    // private parser: (strict: boolean, opt: any) => SAXParser;\n    CDATA = '[CDATA[';\n    DOCTYPE = 'DOCTYPE';\n    XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace';\n    XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/';\n    rootNS = {\n        xml: this.XML_NAMESPACE,\n        xmlns: this.XMLNS_NAMESPACE\n    };\n    comment;\n    sgmlDecl;\n    textNode = '';\n    tagName;\n    doctype;\n    procInstName;\n    procInstBody;\n    entity = '';\n    attribName;\n    attribValue;\n    cdata = '';\n    script = '';\n    startTagPosition = 0;\n    constructor() {\n        this.S = 0;\n        for (const s in this.STATE) {\n            if (this.STATE.hasOwnProperty(s)) {\n                this.STATE[this.STATE[s]] = s;\n            }\n        }\n        // shorthand\n        this.S = this.STATE;\n    }\n    static charAt(chunk, i) {\n        let result = '';\n        if (i < chunk.length) {\n            result = chunk.charAt(i);\n        }\n        return result;\n    }\n    static isWhitespace(c) {\n        return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t';\n    }\n    static isQuote(c) {\n        return c === '\"' || c === \"'\";\n    }\n    static isAttribEnd(c) {\n        return c === '>' || SAX.isWhitespace(c);\n    }\n    static isMatch(regex, c) {\n        return regex.test(c);\n    }\n    static notMatch(regex, c) {\n        return !SAX.isMatch(regex, c);\n    }\n    static qname(name, attribute) {\n        const i = name.indexOf(':');\n        const qualName = i < 0 ? ['', name] : name.split(':');\n        let prefix = qualName[0];\n        let local = qualName[1];\n        // <x \"xmlns\"=\"http://foo\">\n        if (attribute && name === 'xmlns') {\n            prefix = 'xmlns';\n            local = '';\n        }\n        return { prefix, local };\n    }\n    write(chunk) {\n        if (this.error) {\n            throw this.error;\n        }\n        if (this.closed) {\n            return this.errorFunction('Cannot write after close. Assign an onready handler.');\n        }\n        if (chunk === null) {\n            return this.end();\n        }\n        if (typeof chunk === 'object') {\n            chunk = chunk.toString();\n        }\n        let i = 0;\n        let c;\n        while (true) {\n            c = SAX.charAt(chunk, i++);\n            this.c = c;\n            if (!c) {\n                break;\n            }\n            if (this.trackPosition) {\n                this.position++;\n                if (c === '\\n') {\n                    this.line++;\n                    this.column = 0;\n                }\n                else {\n                    this.column++;\n                }\n            }\n            switch (this.state) {\n                case this.S.BEGIN:\n                    this.state = this.S.BEGIN_WHITESPACE;\n                    if (c === '\\uFEFF') {\n                        continue;\n                    }\n                    this.beginWhiteSpace(c);\n                    continue;\n                case this.S.BEGIN_WHITESPACE:\n                    this.beginWhiteSpace(c);\n                    continue;\n                case this.S.TEXT:\n                    if (this.sawRoot && !this.closedRoot) {\n                        const starti = i - 1;\n                        while (c && c !== '<' && c !== '&') {\n                            c = SAX.charAt(chunk, i++);\n                            if (c && this.trackPosition) {\n                                this.position++;\n                                if (c === '\\n') {\n                                    this.line++;\n                                    this.column = 0;\n                                }\n                                else {\n                                    this.column++;\n                                }\n                            }\n                        }\n                        this.textNode += chunk.substring(starti, i - 1);\n                    }\n                    if (c === '<' && !(this.sawRoot && this.closedRoot && !this.strict)) {\n                        this.state = this.S.OPEN_WAKA;\n                        this.startTagPosition = this.position;\n                    }\n                    else {\n                        if (!SAX.isWhitespace(c) && (!this.sawRoot || this.closedRoot)) {\n                            this.strictFail('Text data outside of root node.');\n                        }\n                        if (c === '&') {\n                            this.state = this.S.TEXT_ENTITY;\n                        }\n                        else {\n                            this.textNode += c;\n                        }\n                    }\n                    continue;\n                case this.S.SCRIPT:\n                    // only non-strict\n                    if (c === '<') {\n                        this.state = this.S.SCRIPT_ENDING;\n                    }\n                    else {\n                        this.script += c;\n                    }\n                    continue;\n                case this.S.SCRIPT_ENDING:\n                    if (c === '/') {\n                        this.state = this.S.CLOSE_TAG;\n                    }\n                    else {\n                        this.script += `<${c}`;\n                        this.state = this.S.SCRIPT;\n                    }\n                    continue;\n                case this.S.OPEN_WAKA:\n                    // either a /, ?, !, or text is coming next.\n                    if (c === '!') {\n                        this.state = this.S.SGML_DECL;\n                        this.sgmlDecl = '';\n                    }\n                    else if (SAX.isWhitespace(c)) {\n                        // wait for it...\n                    }\n                    else if (SAX.isMatch(nameStart, c)) {\n                        this.state = this.S.OPEN_TAG;\n                        this.tagName = c;\n                    }\n                    else if (c === '/') {\n                        this.state = this.S.CLOSE_TAG;\n                        this.tagName = '';\n                    }\n                    else if (c === '?') {\n                        this.state = this.S.PROC_INST;\n                        this.procInstName = this.procInstBody = '';\n                    }\n                    else {\n                        this.strictFail('Unencoded <');\n                        // if there was some whitespace, then add that in.\n                        if (this.startTagPosition + 1 < this.position) {\n                            const pad = this.position - this.startTagPosition;\n                            c = new Array(pad).join(' ') + c;\n                        }\n                        this.textNode += `<${c}`;\n                        this.state = this.S.TEXT;\n                    }\n                    continue;\n                case this.S.SGML_DECL:\n                    if ((this.sgmlDecl + c).toUpperCase() === this.CDATA) {\n                        this.emitNode('onopencdata');\n                        this.state = this.S.CDATA;\n                        this.sgmlDecl = '';\n                        this.cdata = '';\n                    }\n                    else if (this.sgmlDecl + c === '--') {\n                        this.state = this.S.COMMENT;\n                        this.comment = '';\n                        this.sgmlDecl = '';\n                    }\n                    else if ((this.sgmlDecl + c).toUpperCase() === this.DOCTYPE) {\n                        this.state = this.S.DOCTYPE;\n                        if (this.doctype || this.sawRoot) {\n                            this.strictFail('Inappropriately located doctype declaration');\n                        }\n                        this.doctype = '';\n                        this.sgmlDecl = '';\n                    }\n                    else if (c === '>') {\n                        this.emitNode('onsgmldeclaration', this.sgmlDecl);\n                        this.sgmlDecl = '';\n                        this.state = this.S.TEXT;\n                    }\n                    else if (SAX.isQuote(c)) {\n                        this.state = this.S.SGML_DECL_QUOTED;\n                        this.sgmlDecl += c;\n                    }\n                    else {\n                        this.sgmlDecl += c;\n                    }\n                    continue;\n                case this.S.SGML_DECL_QUOTED:\n                    if (c === this.q) {\n                        this.state = this.S.SGML_DECL;\n                        this.q = '';\n                    }\n                    this.sgmlDecl += c;\n                    continue;\n                case this.S.DOCTYPE:\n                    if (c === '>') {\n                        this.state = this.S.TEXT;\n                        this.emitNode('ondoctype', this.doctype);\n                        this.doctype = true; // just remember that we saw it.\n                    }\n                    else {\n                        this.doctype += c;\n                        if (c === '[') {\n                            this.state = this.S.DOCTYPE_DTD;\n                        }\n                        else if (SAX.isQuote(c)) {\n                            this.state = this.S.DOCTYPE_QUOTED;\n                            this.q = c;\n                        }\n                    }\n                    continue;\n                case this.S.DOCTYPE_QUOTED:\n                    this.doctype += c;\n                    if (c === this.q) {\n                        this.q = '';\n                        this.state = this.S.DOCTYPE;\n                    }\n                    continue;\n                case this.S.DOCTYPE_DTD:\n                    this.doctype += c;\n                    if (c === ']') {\n                        this.state = this.S.DOCTYPE;\n                    }\n                    else if (SAX.isQuote(c)) {\n                        this.state = this.S.DOCTYPE_DTD_QUOTED;\n                        this.q = c;\n                    }\n                    continue;\n                case this.S.DOCTYPE_DTD_QUOTED:\n                    this.doctype += c;\n                    if (c === this.q) {\n                        this.state = this.S.DOCTYPE_DTD;\n                        this.q = '';\n                    }\n                    continue;\n                case this.S.COMMENT:\n                    if (c === '-') {\n                        this.state = this.S.COMMENT_ENDING;\n                    }\n                    else {\n                        this.comment += c;\n                    }\n                    continue;\n                case this.S.COMMENT_ENDING:\n                    if (c === '-') {\n                        this.state = this.S.COMMENT_ENDED;\n                        this.comment = this.textApplyOptions(this.comment);\n                        if (this.comment) {\n                            this.emitNode('oncomment', this.comment);\n                        }\n                        this.comment = '';\n                    }\n                    else {\n                        this.comment += `-${c}`;\n                        this.state = this.S.COMMENT;\n                    }\n                    continue;\n                case this.S.COMMENT_ENDED:\n                    if (c !== '>') {\n                        this.strictFail('Malformed comment');\n                        // allow <!-- blah -- bloo --> in non-strict mode,\n                        // which is a comment of \" blah -- bloo \"\n                        this.comment += `--${c}`;\n                        this.state = this.S.COMMENT;\n                    }\n                    else {\n                        this.state = this.S.TEXT;\n                    }\n                    continue;\n                case this.S.CDATA:\n                    if (c === ']') {\n                        this.state = this.S.CDATA_ENDING;\n                    }\n                    else {\n                        this.cdata += c;\n                    }\n                    continue;\n                case this.S.CDATA_ENDING:\n                    if (c === ']') {\n                        this.state = this.S.CDATA_ENDING_2;\n                    }\n                    else {\n                        this.cdata += `]${c}`;\n                        this.state = this.S.CDATA;\n                    }\n                    continue;\n                case this.S.CDATA_ENDING_2:\n                    if (c === '>') {\n                        if (this.cdata) {\n                            this.emitNode('oncdata', this.cdata);\n                        }\n                        this.emitNode('onclosecdata');\n                        this.cdata = '';\n                        this.state = this.S.TEXT;\n                    }\n                    else if (c === ']') {\n                        this.cdata += ']';\n                    }\n                    else {\n                        this.cdata += `]]${c}`;\n                        this.state = this.S.CDATA;\n                    }\n                    continue;\n                case this.S.PROC_INST:\n                    if (c === '?') {\n                        this.state = this.S.PROC_INST_ENDING;\n                    }\n                    else if (SAX.isWhitespace(c)) {\n                        this.state = this.S.PROC_INST_BODY;\n                    }\n                    else {\n                        this.procInstName += c;\n                    }\n                    continue;\n                case this.S.PROC_INST_BODY:\n                    if (!this.procInstBody && SAX.isWhitespace(c)) {\n                        continue;\n                    }\n                    else if (c === '?') {\n                        this.state = this.S.PROC_INST_ENDING;\n                    }\n                    else {\n                        this.procInstBody += c;\n                    }\n                    continue;\n                case this.S.PROC_INST_ENDING:\n                    if (c === '>') {\n                        this.emitNode('onprocessinginstruction', {\n                            name: this.procInstName,\n                            body: this.procInstBody\n                        });\n                        this.procInstName = this.procInstBody = '';\n                        this.state = this.S.TEXT;\n                    }\n                    else {\n                        this.procInstBody += `?${c}`;\n                        this.state = this.S.PROC_INST_BODY;\n                    }\n                    continue;\n                case this.S.OPEN_TAG:\n                    if (SAX.isMatch(nameBody, c)) {\n                        this.tagName += c;\n                    }\n                    else {\n                        this.newTag();\n                        if (c === '>') {\n                            this.openTag();\n                        }\n                        else if (c === '/') {\n                            this.state = this.S.OPEN_TAG_SLASH;\n                        }\n                        else {\n                            if (!SAX.isWhitespace(c)) {\n                                this.strictFail('Invalid character in tag name');\n                            }\n                            this.state = this.S.ATTRIB;\n                        }\n                    }\n                    continue;\n                case this.S.OPEN_TAG_SLASH:\n                    if (c === '>') {\n                        this.openTag(true);\n                        this.closeTag();\n                    }\n                    else {\n                        this.strictFail('Forward-slash in opening tag not followed by >');\n                        this.state = this.S.ATTRIB;\n                    }\n                    continue;\n                case this.S.ATTRIB:\n                    // haven't read the attribute name yet.\n                    if (SAX.isWhitespace(c)) {\n                        continue;\n                    }\n                    else if (c === '>') {\n                        this.openTag();\n                    }\n                    else if (c === '/') {\n                        this.state = this.S.OPEN_TAG_SLASH;\n                    }\n                    else if (SAX.isMatch(nameStart, c)) {\n                        this.attribName = c;\n                        this.attribValue = '';\n                        this.state = this.S.ATTRIB_NAME;\n                    }\n                    else {\n                        this.strictFail('Invalid attribute name');\n                    }\n                    continue;\n                case this.S.ATTRIB_NAME:\n                    if (c === '=') {\n                        this.state = this.S.ATTRIB_VALUE;\n                    }\n                    else if (c === '>') {\n                        this.strictFail('Attribute without value');\n                        this.attribValue = this.attribName;\n                        this.attrib();\n                        this.openTag();\n                    }\n                    else if (SAX.isWhitespace(c)) {\n                        this.state = this.S.ATTRIB_NAME_SAW_WHITE;\n                    }\n                    else if (SAX.isMatch(nameBody, c)) {\n                        this.attribName += c;\n                    }\n                    else {\n                        this.strictFail('Invalid attribute name');\n                    }\n                    continue;\n                case this.S.ATTRIB_NAME_SAW_WHITE:\n                    if (c === '=') {\n                        this.state = this.S.ATTRIB_VALUE;\n                    }\n                    else if (SAX.isWhitespace(c)) {\n                        continue;\n                    }\n                    else {\n                        this.strictFail('Attribute without value');\n                        this.tag.attributes[this.attribName] = '';\n                        this.attribValue = '';\n                        this.emitNode('onattribute', {\n                            name: this.attribName,\n                            value: ''\n                        });\n                        this.attribName = '';\n                        if (c === '>') {\n                            this.openTag();\n                        }\n                        else if (SAX.isMatch(nameStart, c)) {\n                            this.attribName = c;\n                            this.state = this.S.ATTRIB_NAME;\n                        }\n                        else {\n                            this.strictFail('Invalid attribute name');\n                            this.state = this.S.ATTRIB;\n                        }\n                    }\n                    continue;\n                case this.S.ATTRIB_VALUE:\n                    if (SAX.isWhitespace(c)) {\n                        continue;\n                    }\n                    else if (SAX.isQuote(c)) {\n                        this.q = c;\n                        this.state = this.S.ATTRIB_VALUE_QUOTED;\n                    }\n                    else {\n                        this.strictFail('Unquoted attribute value');\n                        this.state = this.S.ATTRIB_VALUE_UNQUOTED;\n                        this.attribValue = c;\n                    }\n                    continue;\n                case this.S.ATTRIB_VALUE_QUOTED:\n                    if (c !== this.q) {\n                        if (c === '&') {\n                            this.state = this.S.ATTRIB_VALUE_ENTITY_Q;\n                        }\n                        else {\n                            this.attribValue += c;\n                        }\n                        continue;\n                    }\n                    this.attrib();\n                    this.q = '';\n                    this.state = this.S.ATTRIB_VALUE_CLOSED;\n                    continue;\n                case this.S.ATTRIB_VALUE_CLOSED:\n                    if (SAX.isWhitespace(c)) {\n                        this.state = this.S.ATTRIB;\n                    }\n                    else if (c === '>') {\n                        this.openTag();\n                    }\n                    else if (c === '/') {\n                        this.state = this.S.OPEN_TAG_SLASH;\n                    }\n                    else if (SAX.isMatch(nameStart, c)) {\n                        this.strictFail('No whitespace between attributes');\n                        this.attribName = c;\n                        this.attribValue = '';\n                        this.state = this.S.ATTRIB_NAME;\n                    }\n                    else {\n                        this.strictFail('Invalid attribute name');\n                    }\n                    continue;\n                case this.S.ATTRIB_VALUE_UNQUOTED:\n                    if (!SAX.isAttribEnd(c)) {\n                        if (c === '&') {\n                            this.state = this.S.ATTRIB_VALUE_ENTITY_U;\n                        }\n                        else {\n                            this.attribValue += c;\n                        }\n                        continue;\n                    }\n                    this.attrib();\n                    if (c === '>') {\n                        this.openTag();\n                    }\n                    else {\n                        this.state = this.S.ATTRIB;\n                    }\n                    continue;\n                case this.S.CLOSE_TAG:\n                    if (!this.tagName) {\n                        if (SAX.isWhitespace(c)) {\n                            continue;\n                        }\n                        else if (SAX.notMatch(nameStart, c)) {\n                            if (this.script) {\n                                this.script += `</${c}`;\n                                this.state = this.S.SCRIPT;\n                            }\n                            else {\n                                this.strictFail('Invalid tagname in closing tag.');\n                            }\n                        }\n                        else {\n                            this.tagName = c;\n                        }\n                    }\n                    else if (c === '>') {\n                        this.closeTag();\n                    }\n                    else if (SAX.isMatch(nameBody, c)) {\n                        this.tagName += c;\n                    }\n                    else if (this.script) {\n                        this.script += `</${this.tagName}`;\n                        this.tagName = '';\n                        this.state = this.S.SCRIPT;\n                    }\n                    else {\n                        if (!SAX.isWhitespace(c)) {\n                            this.strictFail('Invalid tagname in closing tag');\n                        }\n                        this.state = this.S.CLOSE_TAG_SAW_WHITE;\n                    }\n                    continue;\n                case this.S.CLOSE_TAG_SAW_WHITE:\n                    if (SAX.isWhitespace(c)) {\n                        continue;\n                    }\n                    if (c === '>') {\n                        this.closeTag();\n                    }\n                    else {\n                        this.strictFail('Invalid characters in closing tag');\n                    }\n                    continue;\n                case this.S.TEXT_ENTITY:\n                case this.S.ATTRIB_VALUE_ENTITY_Q:\n                case this.S.ATTRIB_VALUE_ENTITY_U:\n                    let returnState;\n                    let buffer;\n                    switch (this.state) {\n                        case this.S.TEXT_ENTITY:\n                            returnState = this.S.TEXT;\n                            buffer = 'textNode';\n                            break;\n                        case this.S.ATTRIB_VALUE_ENTITY_Q:\n                            returnState = this.S.ATTRIB_VALUE_QUOTED;\n                            buffer = 'attribValue';\n                            break;\n                        case this.S.ATTRIB_VALUE_ENTITY_U:\n                            returnState = this.S.ATTRIB_VALUE_UNQUOTED;\n                            buffer = 'attribValue';\n                            break;\n                        default:\n                            throw new Error(`Unknown state: ${this.state}`);\n                    }\n                    if (c === ';') {\n                        this[buffer] += this.parseEntity();\n                        this.entity = '';\n                        this.state = returnState;\n                    }\n                    else if (SAX.isMatch(this.entity.length ? entityBody : entityStart, c)) {\n                        this.entity += c;\n                    }\n                    else {\n                        this.strictFail('Invalid character in entity name');\n                        this[buffer] += `&${this.entity}${c}`;\n                        this.entity = '';\n                        this.state = returnState;\n                    }\n                    continue;\n                default:\n                    throw new Error(`Unknown state: ${this.state}`);\n            }\n        } // while\n        if (this.position >= this.bufferCheckPosition) {\n            this.checkBufferLength();\n        }\n        return this;\n    }\n    emit(event, data) {\n        if (this.events.hasOwnProperty(event)) {\n            const eventName = event.replace(/^on/, '');\n            this.events[event](data, eventName, this);\n        }\n    }\n    clearBuffers() {\n        for (let i = 0, l = this.BUFFERS.length; i < l; i++) {\n            this[this[i]] = '';\n        }\n    }\n    flushBuffers() {\n        this.closeText();\n        if (this.cdata !== '') {\n            this.emitNode('oncdata', this.cdata);\n            this.cdata = '';\n        }\n        if (this.script !== '') {\n            this.emitNode('onscript', this.script);\n            this.script = '';\n        }\n    }\n    end() {\n        if (this.sawRoot && !this.closedRoot)\n            this.strictFail('Unclosed root tag');\n        if (this.state !== this.S.BEGIN &&\n            this.state !== this.S.BEGIN_WHITESPACE &&\n            this.state !== this.S.TEXT) {\n            this.errorFunction('Unexpected end');\n        }\n        this.closeText();\n        this.c = '';\n        this.closed = true;\n        this.emit('onend');\n        return new SAXParser(this.opt);\n    }\n    errorFunction(er) {\n        this.closeText();\n        if (this.trackPosition) {\n            er += `\\nLine: ${this.line}\\nColumn: ${this.column}\\nChar: ${this.c}`;\n        }\n        const error = new Error(er);\n        this.error = error;\n        this.emit('onerror', error);\n        return this;\n    }\n    attrib() {\n        if (!this.strict) {\n            this.attribName = this.attribName[this.looseCase]();\n        }\n        if (this.attribList.indexOf(this.attribName) !== -1 ||\n            this.tag.attributes.hasOwnProperty(this.attribName)) {\n            this.attribName = this.attribValue = '';\n            return;\n        }\n        if (this.opt.xmlns) {\n            const qn = SAX.qname(this.attribName, true);\n            const prefix = qn.prefix;\n            const local = qn.local;\n            if (prefix === 'xmlns') {\n                // namespace binding attribute. push the binding into scope\n                if (local === 'xml' && this.attribValue !== this.XML_NAMESPACE) {\n                    this.strictFail(`xml: prefix must be bound to ${this.XML_NAMESPACE}\\n` + `Actual: ${this.attribValue}`);\n                }\n                else if (local === 'xmlns' && this.attribValue !== this.XMLNS_NAMESPACE) {\n                    this.strictFail(`xmlns: prefix must be bound to ${this.XMLNS_NAMESPACE}\\n` +\n                        `Actual: ${this.attribValue}`);\n                }\n                else {\n                    const tag = this.tag;\n                    const parent = this.tags[this.tags.length - 1] || this;\n                    if (tag.ns === parent.ns) {\n                        tag.ns = Object.create(parent.ns);\n                    }\n                    tag.ns[local] = this.attribValue;\n                }\n            }\n            // defer onattribute events until all attributes have been seen\n            // so any new bindings can take effect. preserve attribute order\n            // so deferred events can be emitted in document order\n            this.attribList.push([this.attribName, this.attribValue]);\n        }\n        else {\n            // in non-xmlns mode, we can emit the event right away\n            this.tag.attributes[this.attribName] = this.attribValue;\n            this.emitNode('onattribute', {\n                name: this.attribName,\n                value: this.attribValue\n            });\n        }\n        this.attribName = this.attribValue = '';\n    }\n    newTag() {\n        if (!this.strict)\n            this.tagName = this.tagName[this.looseCase]();\n        const parent = this.tags[this.tags.length - 1] || this;\n        const tag = (this.tag = { name: this.tagName, attributes: {} });\n        // will be overridden if tag contains an xmlns=\"foo\" or xmlns:foo=\"bar\"\n        if (this.opt.xmlns) {\n            tag.ns = parent.ns;\n        }\n        this.attribList.length = 0;\n        this.emitNode('onopentagstart', tag);\n    }\n    parseEntity() {\n        let entity = this.entity;\n        const entityLC = entity.toLowerCase();\n        let num = NaN;\n        let numStr = '';\n        if (this.ENTITIES[entity]) {\n            return this.ENTITIES[entity];\n        }\n        if (this.ENTITIES[entityLC]) {\n            return this.ENTITIES[entityLC];\n        }\n        entity = entityLC;\n        if (entity.charAt(0) === '#') {\n            if (entity.charAt(1) === 'x') {\n                entity = entity.slice(2);\n                // TODO: remove tslint:disable\n                // tslint:disable-next-line\n                num = parseInt(entity, 16);\n                numStr = num.toString(16);\n            }\n            else {\n                entity = entity.slice(1);\n                // TODO: remove tslint:disable\n                // tslint:disable-next-line\n                num = parseInt(entity, 10);\n                numStr = num.toString(10);\n            }\n        }\n        entity = entity.replace(/^0+/, '');\n        if (isNaN(num) || numStr.toLowerCase() !== entity) {\n            this.strictFail('Invalid character entity');\n            return `&${this.entity};`;\n        }\n        return String.fromCodePoint(num);\n    }\n    beginWhiteSpace(c) {\n        if (c === '<') {\n            this.state = this.S.OPEN_WAKA;\n            this.startTagPosition = this.position;\n        }\n        else if (!SAX.isWhitespace(c)) {\n            // have to process this as a text node.\n            // weird, but happens.\n            this.strictFail('Non-whitespace before first tag.');\n            this.textNode = c;\n            this.state = this.S.TEXT;\n        }\n        else {\n        }\n    }\n    strictFail(message) {\n        if (typeof this !== 'object' || !(this instanceof SAXParser)) {\n            throw new Error('bad call to strictFail');\n        }\n        if (this.strict) {\n            this.errorFunction(message);\n        }\n    }\n    textApplyOptions(text) {\n        if (this.opt.trim)\n            text = text.trim();\n        if (this.opt.normalize)\n            text = text.replace(/\\s+/g, ' ');\n        return text;\n    }\n    emitNode(nodeType, data) {\n        if (this.textNode)\n            this.closeText();\n        this.emit(nodeType, data);\n    }\n    closeText() {\n        this.textNode = this.textApplyOptions(this.textNode);\n        // TODO: figure out why this.textNode can be \"\" and \"undefined\"\n        if (this.textNode !== undefined && this.textNode !== '' && this.textNode !== 'undefined') {\n            this.emit('ontext', this.textNode);\n        }\n        this.textNode = '';\n    }\n    checkBufferLength() {\n        const maxAllowed = Math.max(this.opt.MAX_BUFFER_LENGTH, 10);\n        let maxActual = 0;\n        for (let i = 0, l = this.BUFFERS.length; i < l; i++) {\n            const len = this[this.BUFFERS[i]]?.length || 0;\n            if (len > maxAllowed) {\n                // Text/cdata nodes can get big, and since they're buffered,\n                // we can get here under normal conditions.\n                // Avoid issues by emitting the text node now,\n                // so at least it won't get any bigger.\n                switch (this.BUFFERS[i]) {\n                    case 'textNode':\n                        this.closeText();\n                        break;\n                    case 'cdata':\n                        this.emitNode('oncdata', this.cdata);\n                        this.cdata = '';\n                        break;\n                    case 'script':\n                        this.emitNode('onscript', this.script);\n                        this.script = '';\n                        break;\n                    default:\n                        this.errorFunction(`Max buffer length exceeded: ${this.BUFFERS[i]}`);\n                }\n            }\n            maxActual = Math.max(maxActual, len);\n        }\n        // schedule the next check for the earliest possible buffer overrun.\n        const m = this.opt.MAX_BUFFER_LENGTH - maxActual;\n        this.bufferCheckPosition = m + this.position;\n    }\n    openTag(selfClosing) {\n        if (this.opt.xmlns) {\n            // emit namespace binding events\n            const tag = this.tag;\n            // add namespace info to tag\n            const qn = SAX.qname(this.tagName);\n            tag.prefix = qn.prefix;\n            tag.local = qn.local;\n            tag.uri = tag.ns[qn.prefix] || '';\n            if (tag.prefix && !tag.uri) {\n                this.strictFail(`Unbound namespace prefix: ${JSON.stringify(this.tagName)}`);\n                tag.uri = qn.prefix;\n            }\n            const parent = this.tags[this.tags.length - 1] || this;\n            if (tag.ns && parent.ns !== tag.ns) {\n                const that = this;\n                Object.keys(tag.ns).forEach((p) => {\n                    that.emitNode('onopennamespace', {\n                        prefix: p,\n                        uri: tag.ns[p]\n                    });\n                });\n            }\n            // handle deferred onattribute events\n            // Note: do not apply default ns to attributes:\n            //   http://www.w3.org/TR/REC-xml-names/#defaulting\n            for (let i = 0, l = this.attribList.length; i < l; i++) {\n                const nv = this.attribList[i];\n                const name = nv[0];\n                const value = nv[1];\n                const qualName = SAX.qname(name, true);\n                const prefix = qualName.prefix;\n                const local = qualName.local;\n                const uri = prefix === '' ? '' : tag.ns[prefix] || '';\n                const a = {\n                    name,\n                    value,\n                    prefix,\n                    local,\n                    uri\n                };\n                // if there's any attributes with an undefined namespace,\n                // then fail on them now.\n                if (prefix && prefix !== 'xmlns' && !uri) {\n                    this.strictFail(`Unbound namespace prefix: ${JSON.stringify(prefix)}`);\n                    a.uri = prefix;\n                }\n                this.tag.attributes[name] = a;\n                this.emitNode('onattribute', a);\n            }\n            this.attribList.length = 0;\n        }\n        this.tag.isSelfClosing = Boolean(selfClosing);\n        // process the tag\n        this.sawRoot = true;\n        this.tags.push(this.tag);\n        this.emitNode('onopentag', this.tag);\n        if (!selfClosing) {\n            // special case for <script> in non-strict mode.\n            if (!this.noscript && this.tagName.toLowerCase() === 'script') {\n                this.state = this.S.SCRIPT;\n            }\n            else {\n                this.state = this.S.TEXT;\n            }\n            this.tag = null;\n            this.tagName = '';\n        }\n        this.attribName = this.attribValue = '';\n        this.attribList.length = 0;\n    }\n    closeTag() {\n        if (!this.tagName) {\n            this.strictFail('Weird empty close tag.');\n            this.textNode += '</>';\n            this.state = this.S.TEXT;\n            return;\n        }\n        if (this.script) {\n            if (this.tagName !== 'script') {\n                this.script += `</${this.tagName}>`;\n                this.tagName = '';\n                this.state = this.S.SCRIPT;\n                return;\n            }\n            this.emitNode('onscript', this.script);\n            this.script = '';\n        }\n        // first make sure that the closing tag actually exists.\n        // <a><b></c></b></a> will close everything, otherwise.\n        let t = this.tags.length;\n        let tagName = this.tagName;\n        if (!this.strict) {\n            tagName = tagName[this.looseCase]();\n        }\n        while (t--) {\n            const close = this.tags[t];\n            if (close.name !== tagName) {\n                // fail the first time in strict mode\n                this.strictFail('Unexpected close tag');\n            }\n            else {\n                break;\n            }\n        }\n        // didn't find it.  we already failed for strict, so just abort.\n        if (t < 0) {\n            this.strictFail(`Unmatched closing tag: ${this.tagName}`);\n            this.textNode += `</${this.tagName}>`;\n            this.state = this.S.TEXT;\n            return;\n        }\n        this.tagName = tagName;\n        let s = this.tags.length;\n        while (s-- > t) {\n            const tag = (this.tag = this.tags.pop());\n            this.tagName = this.tag.name;\n            this.emitNode('onclosetag', this.tagName);\n            const x = {};\n            for (const i in tag.ns) {\n                if (tag.ns.hasOwnProperty(i)) {\n                    x[i] = tag.ns[i];\n                }\n            }\n            const parent = this.tags[this.tags.length - 1] || this;\n            if (this.opt.xmlns && tag.ns !== parent.ns) {\n                // remove namespace bindings introduced by tag\n                const that = this;\n                Object.keys(tag.ns).forEach((p) => {\n                    const n = tag.ns[p];\n                    that.emitNode('onclosenamespace', { prefix: p, uri: n });\n                });\n            }\n        }\n        if (t === 0)\n            this.closedRoot = true;\n        this.tagName = this.attribValue = this.attribName = '';\n        this.attribList.length = 0;\n        this.state = this.S.TEXT;\n    }\n}\n/**\n *\n * @todo Weird inheritance, with some variables initialized in subclass\n */\nexport class SAXParser extends SAX {\n    static ENTITIES = ENTITIES;\n    opt = DEFAULT_SAX_PARSER_OPTIONS;\n    events = DEFAULT_SAX_EVENTS;\n    constructor(opt) {\n        super();\n        this.clearBuffers();\n        this.opt = opt = { ...this.opt, ...opt };\n        this.events = { ...this.events, ...opt };\n        this.q = this.c = '';\n        this.opt.lowercase = this.opt.lowercase || this.opt.lowercasetags;\n        this.bufferCheckPosition = this.opt.MAX_BUFFER_LENGTH;\n        this.looseCase = this.opt.lowercase ? 'toLowerCase' : 'toUpperCase';\n        this.tags = [];\n        this.closed = this.closedRoot = this.sawRoot = false;\n        this.tag = this.error = null;\n        this.strict = Boolean(this.opt.strict);\n        this.noscript = Boolean(this.opt.strict || this.opt.noscript);\n        this.state = this.S.BEGIN;\n        this.strictEntities = this.opt.strictEntities;\n        this.ENTITIES = this.strictEntities\n            ? Object.create(this.XML_ENTITIES)\n            : Object.create(this.ENTITIES);\n        this.attribList = [];\n        // namespaces form a prototype chain.\n        // it always points at the current tag,\n        // which protos to its parent tag.\n        if (this.opt.xmlns) {\n            this.ns = Object.create(this.rootNS);\n        }\n        // mostly just for error reporting\n        this.trackPosition = this.opt.position !== false;\n        if (this.trackPosition) {\n            this.position = this.line = this.column = 0;\n        }\n        this.emit('onready');\n    }\n    resume() {\n        this.error = null;\n        return this;\n    }\n    close() {\n        return this.write(null);\n    }\n    flush() {\n        this.flushBuffers();\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * Uncapitalize first letter of a string\n * @param str\n * @returns\n */\nexport function uncapitalize(str) {\n    return typeof str === 'string' ? str.charAt(0).toLowerCase() + str.slice(1) : str;\n}\n/**\n * Recursively uncapitalize all keys in a nested object\n * @param object\n * @returns\n */\nexport function uncapitalizeKeys(object) {\n    if (Array.isArray(object)) {\n        return object.map((element) => uncapitalizeKeys(element));\n    }\n    if (object && typeof object === 'object') {\n        const newObject = {};\n        for (const [key, value] of Object.entries(object)) {\n            newObject[uncapitalize(key)] = uncapitalizeKeys(value);\n        }\n        return newObject;\n    }\n    return object;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { StreamingXMLParser } from \"./streaming-xml-parser.js\";\nimport { uncapitalizeKeys } from \"../xml-utils/uncapitalize.js\";\nimport { XMLParser as FastXMLParser } from 'fast-xml-parser';\nexport function parseXMLSync(text, options) {\n    if (options?._parser && options._parser !== 'fast-xml-parser') {\n        throw new Error(options?._parser);\n    }\n    const fastXMLOptions = {\n        // Default FastXML options\n        // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#allowbooleanattributes\n        allowBooleanAttributes: true,\n        // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#ignoredeclaration\n        ignoreDeclaration: true,\n        // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#removensprefix\n        removeNSPrefix: options?.removeNSPrefix,\n        // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#textnodename\n        textNodeName: options?.textNodeName,\n        // Let's application specify keys that are always arrays\n        isArray: (name, jpath, isLeafNode, isAttribute) => {\n            const array = Boolean(options?.arrayPaths?.some((path) => jpath === path));\n            return array;\n        },\n        // Application overrides\n        ...options?._fastXML\n    };\n    const xml = fastParseXML(text, fastXMLOptions);\n    // Note - could be done with FastXML tag processing\n    return options?.uncapitalizeKeys ? uncapitalizeKeys(xml) : xml;\n}\nexport function fastParseXML(text, options) {\n    const parser = new FastXMLParser({\n        ignoreAttributes: false,\n        attributeNamePrefix: '',\n        ...options\n    });\n    const parsedXML = parser.parse(text);\n    return parsedXML;\n}\n/**\n * @todo Build a streaming XML parser based on sax-js\n * @param text\n * @param options\n * @returns\n */\nexport function parseXMLInBatches(text, options = {}) {\n    const parser = new StreamingXMLParser({\n        ...options,\n        strict: true\n    });\n    parser.write(text);\n    parser.close();\n    return parser.result;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { parseXMLSync } from \"./lib/parsers/parse-xml.js\";\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof \"4.2.0-beta.2\" !== 'undefined' ? \"4.2.0-beta.2\" : 'latest';\n/**\n * Loader for XML files\n */\nexport const XMLLoader = {\n    dataType: null,\n    batchType: null,\n    name: 'XML',\n    id: 'xml',\n    module: 'xml',\n    version: VERSION,\n    worker: false,\n    extensions: ['xml'],\n    mimeTypes: ['application/xml', 'text/xml'],\n    testText: testXMLFile,\n    options: {\n        xml: {\n            _parser: 'fast-xml-parser',\n            uncapitalizeKeys: false,\n            removeNSPrefix: false,\n            textNodeName: 'value',\n            arrayPaths: []\n        }\n    },\n    parse: async (arrayBuffer, options) => parseXMLSync(new TextDecoder().decode(arrayBuffer), {\n        ...XMLLoader.options.xml,\n        ...options?.xml\n    }),\n    parseTextSync: (text, options) => parseXMLSync(text, { ...XMLLoader.options.xml, ...options?.xml })\n};\nfunction testXMLFile(text) {\n    // TODO - There could be space first.\n    return text.startsWith('<?xml');\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { mergeLoaderOptions } from '@loaders.gl/loader-utils';\nimport { XMLLoader } from \"./xml-loader.js\";\n/**\n * Loader for HTML files\n * Essentially a copy of the XMLLoader with different mime types, file extensions and content tests.\n * This split enables applications can control whether they want HTML responses to be parsed by the XML loader or not.\n * This loader does not have any additional understanding of the structure of HTML or the document.\n */\nexport const HTMLLoader = {\n    ...XMLLoader,\n    name: 'HTML',\n    id: 'html',\n    extensions: ['html', 'htm'],\n    mimeTypes: ['text/html'],\n    testText: testHTMLFile,\n    parse: async (arrayBuffer, options) => parseTextSync(new TextDecoder().decode(arrayBuffer), options),\n    parseTextSync: (text, options) => parseTextSync(text, options)\n};\nfunction testHTMLFile(text) {\n    // TODO - There could be space first.\n    return text.startsWith('<html');\n}\nfunction parseTextSync(text, options) {\n    // fast-xml-parser can recognize HTML entities\n    // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#htmlentities\n    // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/5.Entities.md\n    options = mergeLoaderOptions(options, {\n        xml: {\n            _parser: 'fast-xml-parser',\n            _fastXML: {\n                htmlEntities: true\n            }\n        }\n    });\n    return XMLLoader.parseTextSync?.(text, options);\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { XMLLoader } from '@loaders.gl/xml';\n/**\n * Extract an error message from WMS error response XML\n * @param text\n * @param options\n * @returns a string with a human readable message\n */\nexport function parseWMSError(text, options) {\n    const parsedXML = XMLLoader.parseTextSync?.(text, options);\n    const serviceExceptionXML = parsedXML?.ServiceExceptionReport?.ServiceException ||\n        parsedXML?.['ogc:ServiceExceptionReport']?.['ogc:ServiceException'];\n    // Sigh, can be either a string or an object\n    const message = typeof serviceExceptionXML === 'string'\n        ? serviceExceptionXML\n        : serviceExceptionXML.value || serviceExceptionXML.code || 'Unknown error';\n    return message;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { parseWMSError } from \"./lib/parsers/wms/parse-wms-error.js\";\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof \"4.2.0-beta.2\" !== 'undefined' ? \"4.2.0-beta.2\" : 'latest';\n/**\n * Loader for the response to the WMS GetCapability request\n */\nexport const WMSErrorLoader = {\n    dataType: null,\n    batchType: null,\n    id: 'wms-error',\n    name: 'WMS Error',\n    module: 'wms',\n    version: VERSION,\n    worker: false,\n    extensions: ['xml'],\n    mimeTypes: ['application/vnd.ogc.se_xml', 'application/xml', 'text/xml'],\n    testText: testXMLFile,\n    options: {\n        wms: {\n            throwOnError: false\n        }\n    },\n    parse: async (arrayBuffer, options) => parseTextSync(new TextDecoder().decode(arrayBuffer), options),\n    parseSync: (arrayBuffer, options) => parseTextSync(new TextDecoder().decode(arrayBuffer), options),\n    parseTextSync: (text, options) => parseTextSync(text, options)\n};\nfunction testXMLFile(text) {\n    // TODO - There could be space first.\n    return text.startsWith('<?xml');\n}\nfunction parseTextSync(text, options) {\n    const wmsOptions = { ...WMSErrorLoader.options.wms, ...options?.wms };\n    const error = parseWMSError(text, wmsOptions);\n    const message = wmsOptions.minimalErrors ? error : `WMS Service error: ${error}`;\n    if (wmsOptions.throwOnError) {\n        throw new Error(message);\n    }\n    return message;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/** A single element of an array is not represented as an array in XML */\nexport function getXMLArray(xmlValue) {\n    // Already an array, return as is\n    if (Array.isArray(xmlValue)) {\n        return xmlValue;\n    }\n    // Single value, wrap in array\n    if (xmlValue) {\n        return [xmlValue];\n    }\n    // nullish, return empty array\n    return [];\n}\n/** Get a list of strings from XML */\nexport function getXMLStringArray(xmlValue) {\n    const xmlArray = getXMLArray(xmlValue);\n    if (xmlArray.length > 0 && xmlArray.every((_) => typeof _ === 'string')) {\n        return xmlArray;\n    }\n    // TODO - error handling?\n    return [];\n}\n/** Get XML float */\nexport function getXMLFloat(xmlValue, defaultValue = undefined) {\n    switch (typeof xmlValue) {\n        case 'number':\n            return xmlValue;\n        case 'string':\n            return parseFloat(xmlValue);\n        default:\n            return undefined;\n    }\n}\n/** Get XML integer */\nexport function getXMLInteger(xmlValue, defaultValue = undefined) {\n    switch (typeof xmlValue) {\n        case 'number':\n            return xmlValue;\n        case 'string':\n            return parseInt(xmlValue, 10);\n        default:\n            return undefined;\n    }\n}\n/** Somewhat arbitrary boolean parsing */\nexport function getXMLBoolean(xmlValue) {\n    switch (xmlValue) {\n        case 'true':\n            return true;\n        case 'false':\n            return false;\n        case '1':\n            return true;\n        case '0':\n            return false;\n        default:\n            return false;\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { XMLLoader } from '@loaders.gl/xml';\nimport { getXMLArray, getXMLStringArray, getXMLInteger, getXMLFloat, getXMLBoolean } from \"../xml/parse-xml-helpers.js\";\n/**\n * Parses a typed data structure from raw XML for `GetCapabilities` response\n * @note Error handlings is fairly weak\n */\nexport function parseWMSCapabilities(xmlText, options) {\n    const parsedXML = XMLLoader.parseTextSync?.(xmlText, options);\n    const xmlCapabilities = parsedXML.WMT_MS_Capabilities || parsedXML.WMS_Capabilities || parsedXML;\n    const capabilities = extractCapabilities(xmlCapabilities);\n    // In case the processed, normalized capabilities do not contain everything,\n    // the user can get the parsed XML structure.\n    if (options?.inheritedLayerProps) {\n        // Traverse layers and inject missing props from parents\n        for (const layer of capabilities.layers) {\n            addInheritedLayerProps(layer, null);\n        }\n        // Not yet implemented\n    }\n    if (options?.includeRawJSON) {\n        capabilities.json = xmlCapabilities;\n    }\n    if (options?.includeXMLText) {\n        capabilities.xml = xmlText;\n    }\n    return capabilities;\n}\n/** Extract typed capability data from XML */\nfunction extractCapabilities(xml) {\n    const capabilities = {\n        version: String(xml.version || ''),\n        name: String(xml.Service?.Name || 'unnamed'),\n        title: xml.Service?.Title ? String(xml.Service?.Title) : undefined,\n        abstract: xml.Service?.Abstract ? String(xml.Service?.Abstract) : undefined,\n        keywords: getXMLStringArray(xml.Service?.KeywordList?.Keyword),\n        fees: xml.Service?.Fees ? JSON.stringify(xml.Service?.Fees) : undefined,\n        accessConstraints: xml.Service?.AccessConstraints\n            ? JSON.stringify(xml.Service?.AccessConstraints)\n            : undefined,\n        layerLimit: getXMLInteger(xml.Service?.LayerLimit),\n        maxWidth: getXMLInteger(xml.Service?.maxWidth),\n        maxHeight: getXMLInteger(xml.Service?.maxHeight),\n        layers: [],\n        requests: extractRequests(xml.Capability?.Request),\n        exceptions: extractExceptions(xml.Exception)\n        // contact field is a mess of largely irrelevant information, put it last\n        // contact: xml.Service?.Contact ? JSON.stringify(xml.Service?.Contact) : undefined,\n    };\n    // LAYERS\n    const xmlLayers = getXMLArray(xml.Capability?.Layer);\n    for (const xmlSubLayer of xmlLayers) {\n        capabilities.layers.push(extractLayer(xmlSubLayer));\n    }\n    // Clean up object\n    for (const [key, value] of Object.entries(capabilities)) {\n        if (value === undefined) {\n            delete capabilities[key];\n        }\n    }\n    return capabilities;\n}\n/** Extract typed request metadata from XML requests field */\nfunction extractRequests(xmlRequests) {\n    const requests = {};\n    for (const [name, xmlRequest] of Object.entries(xmlRequests || {})) {\n        const mimeTypes = getXMLStringArray(xmlRequest?.Format);\n        requests[name] = { mimeTypes };\n    }\n    return requests;\n}\nfunction extractExceptions(xmlException) {\n    const xmlExceptionFormats = getXMLArray(xmlException?.Format);\n    if (xmlExceptionFormats.length > 0) {\n        return {\n            mimeTypes: getXMLStringArray(xmlException)\n        };\n    }\n    return undefined;\n}\n/** Extract request data */\n// eslint-disable-next-line complexity, max-statements\nfunction extractLayer(xmlLayer) {\n    const layer = {\n        // All layers must have a title\n        title: String(xmlLayer?.Title || ''),\n        // Name is required only if renderable\n        name: xmlLayer?.Name && String(xmlLayer?.Name),\n        abstract: xmlLayer?.Name && String(xmlLayer?.Abstract),\n        keywords: getXMLStringArray(xmlLayer.KeywordList?.Keyword)\n    };\n    // WMS 1.3.0 changes SRS to CRS\n    const crs = xmlLayer?.CRS || xmlLayer?.SRS;\n    if (crs && Array.isArray(crs) && crs.every((_) => typeof _ === 'string')) {\n        layer.crs = crs;\n    }\n    // v1.3.0 extract simple geographic bounding box\n    let geographicBoundingBox = xmlLayer?.EX_GeographicBoundingBox && extractEXBoundingBox(xmlLayer?.EX_GeographicBoundingBox);\n    if (geographicBoundingBox) {\n        layer.geographicBoundingBox = geographicBoundingBox;\n    }\n    // v1.1.1 extract simple geographic bounding box\n    geographicBoundingBox =\n        xmlLayer?.LatLonBoundingBox && extractLatLonBoundingBox(xmlLayer?.LatLonBoundingBox);\n    if (geographicBoundingBox) {\n        layer.geographicBoundingBox = geographicBoundingBox;\n    }\n    // Extract per-CRS bounding boxes\n    const boundingBoxes = xmlLayer?.BoundingBox && extractWMSBoundingBoxes(xmlLayer?.BoundingBox);\n    if (boundingBoxes && boundingBoxes.length > 0) {\n        layer.boundingBoxes = boundingBoxes;\n    }\n    // Extract dimensions\n    const xmlDimensions = getXMLArray(xmlLayer?.Dimension);\n    const dimensions = xmlDimensions.map((xml) => extractDimension(xml));\n    if (dimensions.length) {\n        layer.dimensions = dimensions;\n    }\n    if (xmlLayer?.opaque) {\n        layer.opaque = getXMLBoolean(xmlLayer?.opaque);\n    }\n    if (xmlLayer?.cascaded) {\n        layer.cascaded = getXMLBoolean(xmlLayer?.cascaded);\n    }\n    if (xmlLayer?.queryable) {\n        layer.queryable = getXMLBoolean(xmlLayer?.queryable);\n    }\n    // Single layer is not represented as array in XML\n    const xmlLayers = getXMLArray(xmlLayer?.Layer);\n    const layers = [];\n    for (const xmlSubLayer of xmlLayers) {\n        layers.push(extractLayer(xmlSubLayer));\n    }\n    if (layers.length > 0) {\n        layer.layers = layers;\n    }\n    // Clean up object\n    for (const [key, value] of Object.entries(layer)) {\n        if (value === undefined) {\n            delete layer[key];\n        }\n    }\n    return layer;\n}\n/** WMS 1.3.0 Loosely defined geospatial bounding box in unspecified CRS for quick content searches */\nfunction extractEXBoundingBox(xmlBoundingBox) {\n    const { westBoundLongitude: w, northBoundLatitude: n, eastBoundLongitude: e, southBoundLatitude: s } = xmlBoundingBox;\n    return [\n        [w, s],\n        [e, n]\n    ];\n}\n/** WMS 1.1.1 Loosely defined geospatial bounding box in unspecified CRS for quick content searches */\nfunction extractLatLonBoundingBox(xmlBoundingBox) {\n    const { minx, miny, maxx, maxy } = xmlBoundingBox;\n    return [\n        [minx, miny],\n        [maxx, maxy]\n    ];\n}\n/** Loosely defined geospatial bounding box in unspecified CRS for quick content searches */\nfunction extractWMSBoundingBoxes(xmlBoundingBoxes) {\n    const xmlBoxes = getXMLArray(xmlBoundingBoxes);\n    return xmlBoxes.map((xmlBox) => extractWMSBoundingBox(xmlBox));\n}\n/** Loosely defined geospatial bounding box in unspecified CRS for quick content searches */\nfunction extractWMSBoundingBox(xmlBoundingBox) {\n    const { CRS, SRS, minx, miny, maxx, maxy, resx, resy } = xmlBoundingBox;\n    const boundingBox = {\n        // CRS in 1.3.0, SRS in 1.1.1\n        crs: CRS || SRS,\n        boundingBox: [\n            [getXMLFloat(minx), getXMLFloat(miny)],\n            [getXMLFloat(maxx), getXMLFloat(maxy)]\n        ]\n    };\n    if (resx) {\n        boundingBox.xResolution = resx;\n    }\n    if (resy) {\n        boundingBox.yResolution = resy;\n    }\n    return boundingBox;\n}\n/**\n * Extracts optional WMS Dimension layer field\n * @param xmlDimension\n * @example <Dimension name=\"time\" units=\"ISO8601\" default=\"2018-01-01\" nearestValue=\"0\">2001-01-01/2018-01-01/P1Y</Dimension>\n * @see https://mapserver.org/ogc/wms_dimension.html\n */\nfunction extractDimension(xmlDimension) {\n    const { name, units, value: extent } = xmlDimension;\n    const dimension = { name, units, extent };\n    if (xmlDimension.unitSymbol) {\n        dimension.unitSymbol = xmlDimension.unitSymbol;\n    }\n    if (xmlDimension.default) {\n        dimension.defaultValue = xmlDimension.default;\n    }\n    if (xmlDimension.multipleValues) {\n        dimension.multipleValues = getXMLBoolean(xmlDimension.multipleValues);\n    }\n    if (xmlDimension.nearestValue) {\n        dimension.nearestValue = getXMLBoolean(xmlDimension.nearestValue);\n    }\n    if (xmlDimension.current) {\n        dimension.current = getXMLBoolean(xmlDimension.current);\n    }\n    return dimension;\n}\n/** Traverse layers and inject missing props from parents */\n// eslint-disable-next-line complexity\nfunction addInheritedLayerProps(layer, parent) {\n    if (parent?.geographicBoundingBox && !layer.geographicBoundingBox) {\n        layer.geographicBoundingBox = [...parent.geographicBoundingBox];\n    }\n    if (parent?.crs && !layer.crs) {\n        layer.crs = [...parent.crs];\n    }\n    if (parent?.boundingBoxes && !layer.boundingBoxes) {\n        layer.boundingBoxes = [...parent.boundingBoxes];\n    }\n    if (parent?.dimensions && !layer.dimensions) {\n        layer.dimensions = [...parent.dimensions];\n    }\n    for (const subLayer of layer.layers || []) {\n        addInheritedLayerProps(subLayer, layer);\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { parseWMSCapabilities } from \"./lib/parsers/wms/parse-wms-capabilities.js\";\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof \"4.2.0-beta.2\" !== 'undefined' ? \"4.2.0-beta.2\" : 'latest';\n/**\n * Loader for the response to the WMS GetCapability request\n */\nexport const WMSCapabilitiesLoader = {\n    dataType: null,\n    batchType: null,\n    id: 'wms-capabilities',\n    name: 'WMS Capabilities',\n    module: 'wms',\n    version: VERSION,\n    worker: false,\n    extensions: ['xml'],\n    mimeTypes: ['application/vnd.ogc.wms_xml', 'application/xml', 'text/xml'],\n    testText: testXMLFile,\n    options: {\n        wms: {}\n    },\n    parse: async (arrayBuffer, options) => \n    // TODO pass in XML options\n    parseWMSCapabilities(new TextDecoder().decode(arrayBuffer), options?.wms),\n    parseTextSync: (text, options) => \n    // TODO pass in XML options\n    parseWMSCapabilities(text, options?.wms)\n};\nfunction testXMLFile(text) {\n    // TODO - There could be space first.\n    return text.startsWith('<?xml');\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { XMLLoader } from '@loaders.gl/xml';\n/**\n * Parses a typed data structure from raw XML for `GetFeatureInfo` response\n * @note Error handlings is fairly weak\n */\nexport function parseWMSFeatureInfo(text, options) {\n    const parsedXML = XMLLoader.parseTextSync?.(text, options);\n    const xmlFeatureInfo = parsedXML.FeatureInfoResponse?.FIELDS || [];\n    const xmlFeatures = Array.isArray(xmlFeatureInfo) ? xmlFeatureInfo : [xmlFeatureInfo];\n    return {\n        features: xmlFeatures.map((xmlFeature) => extractFeature(xmlFeature))\n    };\n}\nfunction extractFeature(xmlFeature) {\n    const xmlFields = xmlFeature || {};\n    // TODO - not correct\n    return {\n        attributes: xmlFields,\n        type: '',\n        bounds: { bottom: 0, top: 0, left: 0, right: 0 }\n    };\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { WMSCapabilitiesLoader } from \"../wms-capabilities-loader.js\";\nimport { parseWMSFeatureInfo } from \"../lib/parsers/wms/parse-wms-features.js\";\n/**\n * Loader for the response to the WMS GetFeatureInfo request\n */\nexport const WMSFeatureInfoLoader = {\n    ...WMSCapabilitiesLoader,\n    dataType: null,\n    id: 'wms-feature-info',\n    name: 'WMS FeatureInfo',\n    parse: async (arrayBuffer, options) => parseWMSFeatureInfo(new TextDecoder().decode(arrayBuffer), options),\n    parseTextSync: (text, options) => parseWMSFeatureInfo(text, options)\n};\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { XMLLoader } from '@loaders.gl/xml';\n/**\n * Parses a typed data structure from raw XML for `GetFeatureInfo` response\n * @note Error handlings is fairly weak\n */\nexport function parseWMSLayerDescription(text, options) {\n    const parsedXML = XMLLoader.parseTextSync?.(text, options);\n    // TODO - implement parser\n    return parsedXML;\n}\n", "// loaders.gl, MIT license\nimport { WMSCapabilitiesLoader } from \"../wms-capabilities-loader.js\";\nimport { parseWMSLayerDescription } from \"../lib/parsers/wms/parse-wms-layer-description.js\";\n/**\n * Loader for the response to the WMS DescribeLayer request\n */\nexport const WMSLayerDescriptionLoader = {\n    ...WMSCapabilitiesLoader,\n    dataType: null,\n    id: 'wms-layer-description',\n    name: 'WMS DescribeLayer',\n    parse: async (arrayBuffer, options) => parseWMSLayerDescription(new TextDecoder().decode(arrayBuffer), options),\n    parseTextSync: (text, options) => parseWMSLayerDescription(text, options)\n};\n", "// https://github.com/nodejs/node/commit/c1d82ac2ff15594840e2a1b9531b506ae067ed27;\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n/** @todo replace this ridiculous choice of deepStrictEqual */\n// eslint-disable-next-line complexity\nexport function deepStrictEqual(actual, expected, strict) {\n    // 7.1. All identical values are equivalent, as determined by ===.\n    if (actual === expected) {\n        return true;\n        // } else if (actual instanceof Buffer && expected instanceof Buffer) {\n        //   return compare(actual, expected) === 0;\n        // // 7.2. If the expected value is a Date object, the actual value is\n        // // equivalent if it is also a Date object that refers to the same time.\n    }\n    else if (actual instanceof Date && expected instanceof Date) {\n        return actual.getTime() === expected.getTime();\n        // 7.3 If the expected value is a RegExp object, the actual value is\n        // equivalent if it is also a RegExp object with the same source and\n        // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n    }\n    else if (actual instanceof RegExp && expected instanceof RegExp) {\n        return (actual.source === expected.source &&\n            actual.global === expected.global &&\n            actual.multiline === expected.multiline &&\n            actual.lastIndex === expected.lastIndex &&\n            actual.ignoreCase === expected.ignoreCase);\n        // 7.4. Other pairs that do not both pass typeof value == 'object',\n        // equivalence is determined by ==.\n    }\n    else if ((actual === null || typeof actual !== 'object') &&\n        (expected === null || typeof expected !== 'object')) {\n        // eslint-disable-next-line eqeqeq\n        return strict ? actual === expected : actual == expected;\n        // 7.5 For all other Object pairs, including Array objects, equivalence is\n        // determined by having the same number of owned properties (as verified\n        // with Object.prototype.hasOwnProperty.call), the same set of keys\n        // (although not necessarily the same order), equivalent values for every\n        // corresponding key, and an identical 'prototype' property. Note: this\n        // accounts for both named and indexed properties on Arrays.\n    }\n    return objEquiv(actual, expected, strict);\n}\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst pSlice = Array.prototype.slice;\nfunction isPrimitive(arg) {\n    return arg === null || (typeof arg !== 'object' && typeof arg !== 'function');\n}\nfunction isArguments(object) {\n    // eslint-disable-next-line eqeqeq\n    return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n// eslint-disable-next-line complexity\nfunction objEquiv(a, b, strict) {\n    if (a === null || a === undefined || b === null || b === undefined)\n        return false;\n    // if one is a primitive, the other must be same\n    if (isPrimitive(a) || isPrimitive(b))\n        return a === b;\n    if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n        return false;\n    const aIsArgs = isArguments(a);\n    const bIsArgs = isArguments(b);\n    if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n        return false;\n    if (aIsArgs) {\n        a = pSlice.call(a);\n        b = pSlice.call(b);\n        return deepStrictEqual(a, b, strict);\n    }\n    const ka = Object.keys(a);\n    const kb = Object.keys(b);\n    let key;\n    let i;\n    // having the same number of owned properties (keys incorporates\n    // hasOwnProperty)\n    if (ka.length !== kb.length)\n        return false;\n    // the same set of keys (although not necessarily the same order),\n    ka.sort();\n    kb.sort();\n    // ~~~cheap key test\n    for (i = ka.length - 1; i >= 0; i--) {\n        if (ka[i] !== kb[i])\n            return false;\n    }\n    // equivalent values for every corresponding key, and\n    // ~~~possibly expensive deep test\n    for (i = ka.length - 1; i >= 0; i--) {\n        key = ka[i];\n        // @ts-ignore\n        if (!deepStrictEqual(a[key], b[key], strict))\n            return false;\n    }\n    return true;\n}\n", "/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * Creates an image source\n * If type is not supplied, will try to automatically detect the the\n * @param url URL to the image source\n * @param type type of source. if not known, set to 'auto'\n * @returns an ImageSource instance\n */\nexport function createImageService(props, services) {\n    const { type = 'auto' } = props;\n    const service = type === 'auto' ? guessServiceType(props.url, services) : getServiceOfType(type, services);\n    if (!service) {\n        throw new Error('Not a valid image source type');\n    }\n    return service.create(props);\n}\n/** Guess service type from URL */\nfunction getServiceOfType(type, services) {\n    // if (type === 'template') {\n    //   return ImageService;\n    // }\n    for (const service of services) {\n        if (service.type === type) {\n            return service;\n        }\n    }\n    return null;\n}\n/** Guess service type from URL */\nfunction guessServiceType(url, services) {\n    for (const service of services) {\n        if (service.testURL && service.testURL(url)) {\n            return service;\n        }\n    }\n    return null;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { ImageLoader } from '@loaders.gl/images';\nimport { mergeLoaderOptions } from '@loaders.gl/loader-utils';\nimport { ImageSource } from '@loaders.gl/loader-utils';\nimport { WMSCapabilitiesLoader } from \"../../wms-capabilities-loader.js\";\nimport { WMSFeatureInfoLoader } from \"../../wip/wms-feature-info-loader.js\";\nimport { WMSLayerDescriptionLoader } from \"../../wip/wms-layer-description-loader.js\";\nimport { WMSErrorLoader } from \"../../wms-error-loader.js\";\nexport const WMSService = {\n    type: 'wms',\n    testURL: (url) => url.toLowerCase().includes('wms'),\n    create: (props) => new WMSSource(props)\n};\n/**\n * The WMSSource class provides\n * - provides type safe methods to form URLs to a WMS service\n * - provides type safe methods to query and parse results (and errors) from a WMS service\n * - implements the ImageService interface\n * @note Only the URL parameter conversion is supported. XML posts are not supported.\n */\nexport class WMSSource extends ImageSource {\n    /** Base URL to the service */\n    url;\n    data;\n    /** In WMS 1.3.0, replaces references to EPSG:4326 with CRS:84. But not always supported. Default: false */\n    substituteCRS84;\n    /** In WMS 1.3.0, flips x,y (lng, lat) coordinates for the supplied coordinate systems. Default: ['ESPG:4326'] */\n    flipCRS;\n    /** Default static WMS parameters */\n    wmsParameters;\n    /** Default static vendor parameters */\n    vendorParameters;\n    capabilities = null;\n    /** Create a WMSSource */\n    constructor(props) {\n        super(props);\n        // TODO - defaults such as version, layers etc could be extracted from a base URL with parameters\n        // This would make pasting in any WMS URL more likely to make this class just work.\n        // const {baseUrl, parameters} = this._parseWMSUrl(props.url);\n        this.url = props.url;\n        this.data = props.url;\n        this.substituteCRS84 = props.substituteCRS84 ?? false;\n        this.flipCRS = ['EPSG:4326'];\n        this.wmsParameters = {\n            layers: undefined,\n            query_layers: undefined,\n            styles: undefined,\n            version: '1.3.0',\n            crs: 'EPSG:4326',\n            format: 'image/png',\n            info_format: 'text/plain',\n            transparent: undefined,\n            time: undefined,\n            elevation: undefined,\n            ...props.wmsParameters\n        };\n        this.vendorParameters = props.vendorParameters || {};\n    }\n    // ImageService implementation\n    async getMetadata() {\n        const capabilities = await this.getCapabilities();\n        return this.normalizeMetadata(capabilities);\n    }\n    async getImage(parameters) {\n        // Replace the GetImage `boundingBox` parameter with the WMS flat `bbox` parameter.\n        const { boundingBox, bbox, ...rest } = parameters;\n        const wmsParameters = {\n            bbox: boundingBox ? [...boundingBox[0], ...boundingBox[1]] : bbox,\n            ...rest\n        };\n        return await this.getMap(wmsParameters);\n    }\n    normalizeMetadata(capabilities) {\n        return capabilities;\n    }\n    // WMS Service API Stubs\n    /** Get Capabilities */\n    async getCapabilities(wmsParameters, vendorParameters) {\n        const url = this.getCapabilitiesURL(wmsParameters, vendorParameters);\n        const response = await this.fetch(url);\n        const arrayBuffer = await response.arrayBuffer();\n        this._checkResponse(response, arrayBuffer);\n        const capabilities = await WMSCapabilitiesLoader.parse(arrayBuffer, this.loadOptions);\n        this.capabilities = capabilities;\n        return capabilities;\n    }\n    /** Get a map image */\n    async getMap(wmsParameters, vendorParameters) {\n        const url = this.getMapURL(wmsParameters, vendorParameters);\n        const response = await this.fetch(url);\n        const arrayBuffer = await response.arrayBuffer();\n        this._checkResponse(response, arrayBuffer);\n        try {\n            return await ImageLoader.parse(arrayBuffer, this.loadOptions);\n        }\n        catch {\n            throw this._parseError(arrayBuffer);\n        }\n    }\n    /** Get Feature Info for a coordinate */\n    async getFeatureInfo(wmsParameters, vendorParameters) {\n        const url = this.getFeatureInfoURL(wmsParameters, vendorParameters);\n        const response = await this.fetch(url);\n        const arrayBuffer = await response.arrayBuffer();\n        this._checkResponse(response, arrayBuffer);\n        return await WMSFeatureInfoLoader.parse(arrayBuffer, this.loadOptions);\n    }\n    /** Get Feature Info for a coordinate */\n    async getFeatureInfoText(wmsParameters, vendorParameters) {\n        const url = this.getFeatureInfoURL(wmsParameters, vendorParameters);\n        const response = await this.fetch(url);\n        const arrayBuffer = await response.arrayBuffer();\n        this._checkResponse(response, arrayBuffer);\n        return new TextDecoder().decode(arrayBuffer);\n    }\n    /** Get more information about a layer */\n    async describeLayer(wmsParameters, vendorParameters) {\n        const url = this.describeLayerURL(wmsParameters, vendorParameters);\n        const response = await this.fetch(url);\n        const arrayBuffer = await response.arrayBuffer();\n        this._checkResponse(response, arrayBuffer);\n        return await WMSLayerDescriptionLoader.parse(arrayBuffer, this.loadOptions);\n    }\n    /** Get an image with a semantic legend */\n    async getLegendGraphic(wmsParameters, vendorParameters) {\n        const url = this.getLegendGraphicURL(wmsParameters, vendorParameters);\n        const response = await this.fetch(url);\n        const arrayBuffer = await response.arrayBuffer();\n        this._checkResponse(response, arrayBuffer);\n        try {\n            return await ImageLoader.parse(arrayBuffer, this.loadOptions);\n        }\n        catch {\n            throw this._parseError(arrayBuffer);\n        }\n    }\n    // Typed URL creators\n    // For applications that want full control of fetching and parsing\n    /** Generate a URL for the GetCapabilities request */\n    getCapabilitiesURL(wmsParameters, vendorParameters) {\n        const options = {\n            version: this.wmsParameters.version,\n            ...wmsParameters\n        };\n        return this._getWMSUrl('GetCapabilities', options, vendorParameters);\n    }\n    /** Generate a URL for the GetMap request */\n    getMapURL(wmsParameters, vendorParameters) {\n        wmsParameters = this._getWMS130Parameters(wmsParameters);\n        const options = {\n            version: this.wmsParameters.version,\n            format: this.wmsParameters.format,\n            transparent: this.wmsParameters.transparent,\n            time: this.wmsParameters.time,\n            elevation: this.wmsParameters.elevation,\n            layers: this.wmsParameters.layers,\n            styles: this.wmsParameters.styles,\n            crs: this.wmsParameters.crs,\n            // bbox: [-77.87304, 40.78975, -77.85828, 40.80228],\n            // width: 1200,\n            // height: 900,\n            ...wmsParameters\n        };\n        return this._getWMSUrl('GetMap', options, vendorParameters);\n    }\n    /** Generate a URL for the GetFeatureInfo request */\n    getFeatureInfoURL(wmsParameters, vendorParameters) {\n        wmsParameters = this._getWMS130Parameters(wmsParameters);\n        // Replace the GetImage `boundingBox` parameter with the WMS flat `bbox` parameter.\n        const { boundingBox, bbox } = wmsParameters;\n        wmsParameters.bbox = boundingBox ? [...boundingBox[0], ...boundingBox[1]] : bbox;\n        const options = {\n            version: this.wmsParameters.version,\n            // query_layers: [],\n            // format: this.wmsParameters.format,\n            info_format: this.wmsParameters.info_format,\n            layers: this.wmsParameters.layers,\n            query_layers: this.wmsParameters.query_layers,\n            styles: this.wmsParameters.styles,\n            crs: this.wmsParameters.crs,\n            // bbox: [-77.87304, 40.78975, -77.85828, 40.80228],\n            // width: 1200,\n            // height: 900,\n            // x: undefined!,\n            // y: undefined!,\n            ...wmsParameters\n        };\n        return this._getWMSUrl('GetFeatureInfo', options, vendorParameters);\n    }\n    /** Generate a URL for the GetFeatureInfo request */\n    describeLayerURL(wmsParameters, vendorParameters) {\n        const options = {\n            version: this.wmsParameters.version,\n            ...wmsParameters\n        };\n        return this._getWMSUrl('DescribeLayer', options, vendorParameters);\n    }\n    getLegendGraphicURL(wmsParameters, vendorParameters) {\n        const options = {\n            version: this.wmsParameters.version,\n            // format?\n            ...wmsParameters\n        };\n        return this._getWMSUrl('GetLegendGraphic', options, vendorParameters);\n    }\n    // INTERNAL METHODS\n    _parseWMSUrl(url) {\n        const [baseUrl, search] = url.split('?');\n        const searchParams = search.split('&');\n        const parameters = {};\n        for (const parameter of searchParams) {\n            const [key, value] = parameter.split('=');\n            parameters[key] = value;\n        }\n        return { url: baseUrl, parameters };\n    }\n    /**\n     * Generate a URL with parameters\n     * @note case _getWMSUrl may need to be overridden to handle certain backends?\n     * @note at the moment, only URLs with parameters are supported (no XML payloads)\n     * */\n    _getWMSUrl(request, wmsParameters, vendorParameters) {\n        let url = this.url;\n        let first = true;\n        // Add any vendor searchParams\n        const allParameters = {\n            service: 'WMS',\n            version: wmsParameters.version,\n            request,\n            ...wmsParameters,\n            ...this.vendorParameters,\n            ...vendorParameters\n        };\n        // Encode the keys\n        const IGNORE_EMPTY_KEYS = ['transparent', 'time', 'elevation'];\n        for (const [key, value] of Object.entries(allParameters)) {\n            // hack to preserve test cases. Not super clear if keys should be included when values are undefined\n            if (!IGNORE_EMPTY_KEYS.includes(key) || value) {\n                url += first ? '?' : '&';\n                first = false;\n                url += this._getURLParameter(key, value, wmsParameters);\n            }\n        }\n        return encodeURI(url);\n    }\n    _getWMS130Parameters(wmsParameters) {\n        const newParameters = { ...wmsParameters };\n        if (newParameters.srs) {\n            newParameters.crs = newParameters.crs || newParameters.srs;\n            delete newParameters.srs;\n        }\n        return newParameters;\n    }\n    // eslint-disable-next-line complexity\n    _getURLParameter(key, value, wmsParameters) {\n        // Substitute by key\n        switch (key) {\n            case 'crs':\n                // CRS was called SRS before WMS 1.3.0\n                if (wmsParameters.version !== '1.3.0') {\n                    key = 'srs';\n                }\n                else if (this.substituteCRS84 && value === 'EPSG:4326') {\n                    /** In 1.3.0, replaces references to 'EPSG:4326' with the new backwards compatible CRS:84 */\n                    // Substitute by value\n                    value = 'CRS:84';\n                }\n                break;\n            case 'srs':\n                // CRS was called SRS before WMS 1.3.0\n                if (wmsParameters.version === '1.3.0') {\n                    key = 'crs';\n                }\n                break;\n            case 'bbox':\n                // Coordinate order is flipped for certain CRS in WMS 1.3.0\n                const bbox = this._flipBoundingBox(value, wmsParameters);\n                if (bbox) {\n                    value = bbox;\n                }\n                break;\n            case 'x':\n                // i is the parameter used in WMS 1.3\n                // TODO - change parameter to `i` and convert to `x` if not 1.3\n                if (wmsParameters.version === '1.3.0') {\n                    key = 'i';\n                }\n                break;\n            case 'y':\n                // j is the parameter used in WMS 1.3\n                // TODO - change parameter to `j` and convert to `y` if not 1.3\n                if (wmsParameters.version === '1.3.0') {\n                    key = 'j';\n                }\n                break;\n            default:\n            // do nothing\n        }\n        key = key.toUpperCase();\n        return Array.isArray(value)\n            ? `${key}=${value.join(',')}`\n            : `${key}=${value ? String(value) : ''}`;\n    }\n    /** Coordinate order is flipped for certain CRS in WMS 1.3.0 */\n    _flipBoundingBox(bboxValue, wmsParameters) {\n        // Sanity checks\n        if (!Array.isArray(bboxValue) || bboxValue.length !== 4) {\n            return null;\n        }\n        const flipCoordinates = \n        // Only affects WMS 1.3.0\n        wmsParameters.version === '1.3.0' &&\n            // Flip if we are dealing with a CRS that was flipped in 1.3.0\n            this.flipCRS.includes(wmsParameters.crs || '') &&\n            // Don't flip if we are subsituting EPSG:4326 with CRS:84\n            !(this.substituteCRS84 && wmsParameters.crs === 'EPSG:4326');\n        const bbox = bboxValue;\n        return flipCoordinates ? [bbox[1], bbox[0], bbox[3], bbox[2]] : bbox;\n    }\n    /** Fetches an array buffer and checks the response (boilerplate reduction) */\n    async _fetchArrayBuffer(url) {\n        const response = await this.fetch(url);\n        const arrayBuffer = await response.arrayBuffer();\n        this._checkResponse(response, arrayBuffer);\n        return arrayBuffer;\n    }\n    /** Checks for and parses a WMS XML formatted ServiceError and throws an exception */\n    _checkResponse(response, arrayBuffer) {\n        const contentType = response.headers['content-type'];\n        if (!response.ok || WMSErrorLoader.mimeTypes.includes(contentType)) {\n            // We want error responses to throw exceptions, the WMSErrorLoader can do this\n            const loadOptions = mergeLoaderOptions(this.loadOptions, {\n                wms: { throwOnError: true }\n            });\n            const error = WMSErrorLoader.parseSync?.(arrayBuffer, loadOptions);\n            throw new Error(error);\n        }\n    }\n    /** Error situation detected */\n    _parseError(arrayBuffer) {\n        const error = WMSErrorLoader.parseSync?.(arrayBuffer, this.loadOptions);\n        return new Error(error);\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { ImageLoader } from '@loaders.gl/images';\nimport { ImageSource } from '@loaders.gl/loader-utils';\n/**\n * Quickly connect to \"ad hoc\" image sources without subclassing ImageSource.\n * ImageSource allows template url strings to be used to ad hoc connect to arbitrary image data sources\n * Accepts a template url string and builds requests URLs\n */\nexport class ImageService extends ImageSource {\n    static type = 'template';\n    static testURL = (url) => url.toLowerCase().includes('{');\n    constructor(props) {\n        super(props);\n    }\n    // IMAGE SOURCE API\n    async getMetadata() {\n        throw new Error('ImageSource.getMetadata not implemented');\n    }\n    async getImage(parameters) {\n        const granularParameters = this.getGranularParameters(parameters);\n        const url = this.getURLFromTemplate(granularParameters);\n        const response = await this.fetch(url);\n        const arrayBuffer = await response.arrayBuffer();\n        return await ImageLoader.parse(arrayBuffer);\n    }\n    // HELPERS\n    /** Break up bounding box in east, north, south, west */\n    getGranularParameters(parameters) {\n        const [[east, north], [west, south]] = parameters.boundingBox;\n        return { ...parameters, east, north, south, west };\n    }\n    /** Supports both ${} and {} notations */\n    getURLFromTemplate(parameters) {\n        let url = this.props.url;\n        for (const [key, value] of Object.entries(parameters)) {\n            // TODO - parameter could be repeated\n            // const regex = new RegExp(`\\${${key}}`, 'g');\n            url = url.replace(`\\${${key}}`, String(value));\n            url = url.replace(`{${key}}`, String(value));\n        }\n        return url;\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { ImageService } from \"../../lib/services/image-service.js\";\n/**\n * ArcGIS ImageServer\n * Note - exports a big API, that could be exposed here if there is a use case\n * @see https://developers.arcgis.com/rest/services-reference/enterprise/image-service.htm\n */\nexport class ArcGISImageSource extends ImageService {\n    data;\n    constructor(props) {\n        super(props);\n        this.data = props.url;\n    }\n    // ImageSource (normalized endpoints)\n    async getMetadata() {\n        return (await this.metadata());\n        // TODO - normalize metadata\n    }\n    async getImage(parameters) {\n        throw new Error('not implemented');\n        // TODO - Map generic parameters to ArcGIS specific parameters\n        // return await this.exportImage(parameters);\n    }\n    // ImageServer endpoints\n    async metadata() {\n        // We just need a JSON parsing...\n        // return this.getUrl({path: '', ...options});\n        throw new Error('not implemented');\n    }\n    /**\n     * Form a URL to an ESRI ImageServer\n     // https://sampleserver6.arcgisonline.com/arcgis/rest/services/NLCDLandCover2001/ImageServer/exportImage?bbox=${bounds[0]},${bounds[1]},${bounds[2]},${bounds[3]}&bboxSR=4326&size=${width},${height}&imageSR=102100&time=&format=jpgpng&pixelType=U8&noData=&noDataInterpretation=esriNoDataMatchAny&interpolation=+RSP_NearestNeighbor&compression=&compressionQuality=&bandIds=&mosaicRule=&renderingRule=&f=image`,\n     */\n    exportImage(options) {\n        // See WMSService.getMap()\n        throw new Error('not implemented');\n    }\n    // URL creators\n    metadataURL(options) {\n        return `${this.props.url}?f=pjson`;\n    }\n    /**\n     * Form a URL to an ESRI ImageServer\n     // https://sampleserver6.arcgisonline.com/arcgis/rest/services/NLCDLandCover2001/ImageServer/exportImage?\n     //   bbox=${bounds[0]},${bounds[1]},${bounds[2]},${bounds[3]}&bboxSR=4326&\n     //   size=${width},${height}&imageSR=102100&time=&format=jpgpng&pixelType=U8&\n     //   noData=&noDataInterpretation=esriNoDataMatchAny&interpolation=+RSP_NearestNeighbor&compression=&\n     //   compressionQuality=&bandIds=&mosaicRule=&renderingRule=&\n     //   f=image\n     */\n    exportImageURL(options) {\n        const bbox = `bbox=${options.bbox[0]},${options.bbox[1]},${options.bbox[2]},${options.bbox[3]}`;\n        const size = `size=${options.width},${options.height}`;\n        const arcgisOptions = { ...options, bbox, size };\n        // @ts-expect-error\n        delete arcgisOptions.width;\n        // @ts-expect-error\n        delete arcgisOptions.height;\n        return this.getUrl('exportImage', arcgisOptions);\n    }\n    // INTERNAL METHODS\n    /**\n     * @note protected, since perhaps getWMSUrl may need to be overridden to handle certain backends?\n     * @note if override is common, maybe add a callback prop?\n     * */\n    getUrl(path, options, extra) {\n        let url = `${this.props.url}/${path}`;\n        let first = true;\n        for (const [key, value] of Object.entries(options)) {\n            url += first ? '?' : '&';\n            first = false;\n            if (Array.isArray(value)) {\n                url += `${key.toUpperCase()}=${value.join(',')}`;\n            }\n            else {\n                url += `${key.toUpperCase()}=${value ? String(value) : ''}`;\n            }\n        }\n        return url;\n    }\n    /** Checks for and parses a WMS XML formatted ServiceError and throws an exception */\n    async checkResponse(response) {\n        if (!response.ok) {\n            // } || response.headers['content-type'] === WMSErrorLoader.mimeTypes[0]) {\n            // const arrayBuffer = await response.arrayBuffer();\n            // const error = await WMSErrorLoader.parse(arrayBuffer, this.loadOptions);\n            throw new Error('error');\n        }\n    }\n}\nexport const ArcGISImageService = {\n    type: 'arcgis-image-server',\n    testURL: (url) => url.toLowerCase().includes('ImageServer'),\n    create: (props) => new ArcGISImageSource(props)\n};\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { createImageService } from \"../lib/services/create-image-service.js\";\nimport { WMSService } from \"./ogc/wms-service.js\";\nimport { ArcGISImageService } from \"./arcgis/arcgis-image-service.js\";\nconst SERVICES = [WMSService, ArcGISImageService];\n/**\n * Creates an image source\n * If type is not supplied, will try to automatically detect the the\n * @param url URL to the image source\n * @param type type of source. if not known, set to 'auto'\n * @returns an ImageSource instance\n */\nexport function createImageSource(props) {\n    return createImageService(props, SERVICES);\n}\n", "import { lngLatToWorld } from '@math.gl/web-mercator';\n// https://epsg.io/3857\n// +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs\nconst HALF_EARTH_CIRCUMFERENCE = 6378137 * Math.PI;\n/** Projects EPSG:4326 to EPSG:3857\n * This is a lightweight replacement of proj4. Use tests to ensure conformance.\n */\nexport function WGS84ToPseudoMercator(coord) {\n    const mercator = lngLatToWorld(coord);\n    mercator[0] = (mercator[0] / 256 - 1) * HALF_EARTH_CIRCUMFERENCE;\n    mercator[1] = (mercator[1] / 256 - 1) * HALF_EARTH_CIRCUMFERENCE;\n    return mercator;\n}\n", "// deck.gl, MIT license\n// Attributions:\n// Copyright 2022 Foursquare Labs, Inc.\n/* eslint-disable camelcase */ // Some WMS parameters are not in camel case\n/* global setTimeout, clearTimeout */\nimport { CompositeLayer, COORDINATE_SYSTEM, _deepEqual as deepEqual } from '@deck.gl/core';\nimport { BitmapLayer } from '@deck.gl/layers';\nimport { ImageSource, createImageSource } from '@loaders.gl/wms';\nimport { WGS84ToPseudoMercator } from \"./utils.js\";\nconst defaultProps = {\n    id: 'imagery-layer',\n    data: '',\n    serviceType: 'auto',\n    srs: 'auto',\n    layers: { type: 'array', compare: true, value: [] },\n    onMetadataLoad: { type: 'function', value: () => { } },\n    // eslint-disable-next-line\n    onMetadataLoadError: { type: 'function', value: console.error },\n    onImageLoadStart: { type: 'function', value: () => { } },\n    onImageLoad: { type: 'function', value: () => { } },\n    onImageLoadError: {\n        type: 'function',\n        compare: false,\n        // eslint-disable-next-line\n        value: (requestId, error) => console.error(error, requestId)\n    }\n};\n/**\n * The layer is used in Hex Tile layer in order to properly discard invisible elements during animation\n */\nexport class WMSLayer extends CompositeLayer {\n    static { this.layerName = 'WMSLayer'; }\n    static { this.defaultProps = defaultProps; }\n    /** Returns true if all async resources are loaded */\n    get isLoaded() {\n        // Track the explicit loading done by this layer\n        return this.state?.loadCounter === 0 && super.isLoaded;\n    }\n    /** Lets deck.gl know that we want viewport change events */\n    shouldUpdateState() {\n        return true;\n    }\n    initializeState() {\n        // intentionally empty, initialization is done in updateState\n        this.state._nextRequestId = 0;\n        this.state.lastRequestId = -1;\n        this.state.loadCounter = 0;\n    }\n    updateState({ changeFlags, props, oldProps }) {\n        const { viewport } = this.context;\n        // Check if data source has changed\n        if (changeFlags.dataChanged || props.serviceType !== oldProps.serviceType) {\n            this.state.imageSource = this._createImageSource(props);\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this._loadMetadata();\n            this.debounce(() => this.loadImage(viewport, 'image source changed'), 0);\n        }\n        else if (!deepEqual(props.layers, oldProps.layers, 1)) {\n            this.debounce(() => this.loadImage(viewport, 'layers changed'), 0);\n        }\n        else if (changeFlags.viewportChanged) {\n            this.debounce(() => this.loadImage(viewport, 'viewport changed'));\n        }\n    }\n    finalizeState() {\n        // TODO - we could cancel outstanding requests\n    }\n    renderLayers() {\n        // TODO - which bitmap layer is rendered should depend on the current viewport\n        // Currently Studio only uses one viewport\n        const { bounds, image, lastRequestParameters } = this.state;\n        return (image &&\n            new BitmapLayer({\n                ...this.getSubLayerProps({ id: 'bitmap' }),\n                _imageCoordinateSystem: lastRequestParameters.srs === 'EPSG:4326'\n                    ? COORDINATE_SYSTEM.LNGLAT\n                    : COORDINATE_SYSTEM.CARTESIAN,\n                bounds,\n                image\n            }));\n    }\n    async getFeatureInfoText(x, y) {\n        const { lastRequestParameters } = this.state;\n        if (lastRequestParameters) {\n            // @ts-expect-error Undocumented method\n            const featureInfo = await this.state.imageSource.getFeatureInfoText?.({\n                ...lastRequestParameters,\n                query_layers: lastRequestParameters.layers,\n                x,\n                y,\n                info_format: 'application/vnd.ogc.gml'\n            });\n            return featureInfo;\n        }\n        return '';\n    }\n    _createImageSource(props) {\n        if (props.data instanceof ImageSource) {\n            return props.data;\n        }\n        if (typeof props.data === 'string') {\n            return createImageSource({\n                url: props.data,\n                loadOptions: props.loadOptions,\n                type: props.serviceType\n            });\n        }\n        throw new Error('invalid image source in props.data');\n    }\n    /** Run a getMetadata on the image service */\n    async _loadMetadata() {\n        const { imageSource } = this.state;\n        try {\n            this.state.loadCounter++;\n            const metadata = await imageSource.getMetadata();\n            // If a request takes a long time, it may no longer be expected\n            if (this.state.imageSource === imageSource) {\n                this.getCurrentLayer()?.props.onMetadataLoad(metadata);\n            }\n        }\n        catch (error) {\n            this.getCurrentLayer()?.props.onMetadataLoadError(error);\n        }\n        finally {\n            this.state.loadCounter--;\n        }\n    }\n    /** Load an image */\n    async loadImage(viewport, reason) {\n        const { layers, serviceType } = this.props;\n        // TODO - move to ImageSource?\n        if (serviceType === 'wms' && layers.length === 0) {\n            return;\n        }\n        const bounds = viewport.getBounds();\n        const { width, height } = viewport;\n        const requestId = this.getRequestId();\n        let { srs } = this.props;\n        if (srs === 'auto') {\n            // BitmapLayer only supports LNGLAT or CARTESIAN (Web-Mercator)\n            srs = viewport.resolution ? 'EPSG:4326' : 'EPSG:3857';\n        }\n        const requestParams = {\n            width,\n            height,\n            boundingBox: [\n                [bounds[0], bounds[1]],\n                [bounds[2], bounds[3]]\n            ],\n            layers,\n            crs: srs\n        };\n        if (srs === 'EPSG:3857') {\n            const min = WGS84ToPseudoMercator([bounds[0], bounds[1]]);\n            const max = WGS84ToPseudoMercator([bounds[2], bounds[3]]);\n            requestParams.boundingBox = [min, max];\n        }\n        try {\n            this.state.loadCounter++;\n            this.props.onImageLoadStart(requestId);\n            const image = await this.state.imageSource.getImage(requestParams);\n            // If a request takes a long time, later requests may have already loaded.\n            if (this.state.lastRequestId < requestId) {\n                this.getCurrentLayer()?.props.onImageLoad(requestId);\n                // Not type safe...\n                this.setState({\n                    image,\n                    bounds,\n                    lastRequestParameters: requestParams,\n                    lastRequestId: requestId\n                });\n            }\n        }\n        catch (error) {\n            this.raiseError(error, 'Load image');\n            this.getCurrentLayer()?.props.onImageLoadError(requestId, error);\n        }\n        finally {\n            this.state.loadCounter--;\n        }\n    }\n    // HELPERS\n    /** Global counter for issuing unique request ids */\n    getRequestId() {\n        return this.state._nextRequestId++;\n    }\n    /** Runs an action in the future, cancels it if the new action is issued before it executes */\n    debounce(fn, ms = 500) {\n        clearTimeout(this.state._timeoutId);\n        this.state._timeoutId = setTimeout(() => fn(), ms);\n    }\n}\n", "import { ArcLayer } from '@deck.gl/layers';\nconst defaultProps = {\n    getHeight: { type: 'accessor', value: 0 },\n    greatCircle: true\n};\n// This layer has been merged into the core ArcLayer\n// Keeping for backward-compatibility\n/** @deprecated Use ArcLayer with `greatCircle: true` instead */\nexport default class GreatCircleLayer extends ArcLayer {\n    static { this.layerName = 'GreatCircleLayer'; }\n    static { this.defaultProps = defaultProps; }\n}\n", "import { CompositeLayer } from '@deck.gl/core';\nimport { PolygonLayer } from '@deck.gl/layers';\nconst defaultProps = {\n    ...PolygonLayer.defaultProps\n};\nexport default class GeoCellLayer extends CompositeLayer {\n    static { this.layerName = 'GeoCellLayer'; }\n    static { this.defaultProps = defaultProps; }\n    /** Implement to generate props to create geometry. */\n    indexToBounds() {\n        return null;\n    }\n    renderLayers() {\n        // Rendering props underlying layer\n        const { elevationScale, extruded, wireframe, filled, stroked, lineWidthUnits, lineWidthScale, lineWidthMinPixels, lineWidthMaxPixels, lineJointRounded, lineMiterLimit, lineDashJustified, getElevation, getFillColor, getLineColor, getLineWidth } = this.props;\n        // Accessor props for underlying layers\n        const { updateTriggers, material, transitions } = this.props;\n        // Filled Polygon Layer\n        const CellLayer = this.getSubLayerClass('cell', PolygonLayer);\n        const { updateTriggers: boundsUpdateTriggers, ...boundsProps } = this.indexToBounds() || {};\n        return new CellLayer({\n            filled,\n            wireframe,\n            extruded,\n            elevationScale,\n            stroked,\n            lineWidthUnits,\n            lineWidthScale,\n            lineWidthMinPixels,\n            lineWidthMaxPixels,\n            lineJointRounded,\n            lineMiterLimit,\n            lineDashJustified,\n            material,\n            transitions,\n            getElevation,\n            getFillColor,\n            getLineColor,\n            getLineWidth\n        }, this.getSubLayerProps({\n            id: 'cell',\n            updateTriggers: updateTriggers && {\n                ...boundsUpdateTriggers,\n                getElevation: updateTriggers.getElevation,\n                getFillColor: updateTriggers.getFillColor,\n                getLineColor: updateTriggers.getLineColor,\n                getLineWidth: updateTriggers.getLineWidth\n            }\n        }), boundsProps);\n    }\n}\n", "/*\nAdapted from s2-geometry\n\nISC License (ISC)\n\nCopyright (c) 2012-2016, Jon Atkins <github@jonatkins.com>\nCopyright (c) 2016, AJ ONeal <aj@daplie.com>\n\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\nimport Long from 'long';\n//\n// Functional Style\n//\nconst FACE_BITS = 3;\nconst MAX_LEVEL = 30;\nconst POS_BITS = 2 * MAX_LEVEL + 1; // 61 (60 bits of data, 1 bit lsb marker)\nconst RADIAN_TO_DEGREE = 180 / Math.PI;\nexport function IJToST(ij, order, offsets) {\n    const maxSize = 1 << order;\n    return [(ij[0] + offsets[0]) / maxSize, (ij[1] + offsets[1]) / maxSize];\n}\nfunction singleSTtoUV(st) {\n    if (st >= 0.5) {\n        return (1 / 3.0) * (4 * st * st - 1);\n    }\n    return (1 / 3.0) * (1 - 4 * (1 - st) * (1 - st));\n}\nexport function STToUV(st) {\n    return [singleSTtoUV(st[0]), singleSTtoUV(st[1])];\n}\nexport function FaceUVToXYZ(face, [u, v]) {\n    switch (face) {\n        case 0:\n            return [1, u, v];\n        case 1:\n            return [-u, 1, v];\n        case 2:\n            return [-u, -v, 1];\n        case 3:\n            return [-1, -v, -u];\n        case 4:\n            return [v, -1, -u];\n        case 5:\n            return [v, u, -1];\n        default:\n            throw new Error('Invalid face');\n    }\n}\nexport function XYZToLngLat([x, y, z]) {\n    const lat = Math.atan2(z, Math.sqrt(x * x + y * y));\n    const lng = Math.atan2(y, x);\n    return [lng * RADIAN_TO_DEGREE, lat * RADIAN_TO_DEGREE];\n}\nexport function toHilbertQuadkey(idS) {\n    let bin = Long.fromString(idS, true, 10).toString(2);\n    while (bin.length < FACE_BITS + POS_BITS) {\n        // eslint-disable-next-line prefer-template\n        bin = '0' + bin;\n    }\n    // MUST come AFTER binstr has been left-padded with '0's\n    const lsbIndex = bin.lastIndexOf('1');\n    // substr(start, len)\n    // substring(start, end) // includes start, does not include end\n    const faceB = bin.substring(0, 3);\n    // posB will always be a multiple of 2 (or it's invalid)\n    const posB = bin.substring(3, lsbIndex);\n    const levelN = posB.length / 2;\n    const faceS = Long.fromString(faceB, true, 2).toString(10);\n    let posS = Long.fromString(posB, true, 2).toString(4);\n    while (posS.length < levelN) {\n        // eslint-disable-next-line prefer-template\n        posS = '0' + posS;\n    }\n    return `${faceS}/${posS}`;\n}\nfunction rotateAndFlipQuadrant(n, point, rx, ry) {\n    if (ry === 0) {\n        if (rx === 1) {\n            point[0] = n - 1 - point[0];\n            point[1] = n - 1 - point[1];\n        }\n        const x = point[0];\n        point[0] = point[1];\n        point[1] = x;\n    }\n}\nexport function FromHilbertQuadKey(hilbertQuadkey) {\n    const parts = hilbertQuadkey.split('/');\n    const face = parseInt(parts[0], 10);\n    const position = parts[1];\n    const maxLevel = position.length;\n    const point = [0, 0];\n    let level;\n    for (let i = maxLevel - 1; i >= 0; i--) {\n        level = maxLevel - i;\n        const bit = position[i];\n        let rx = 0;\n        let ry = 0;\n        if (bit === '1') {\n            ry = 1;\n        }\n        else if (bit === '2') {\n            rx = 1;\n            ry = 1;\n        }\n        else if (bit === '3') {\n            rx = 1;\n        }\n        const val = Math.pow(2, level - 1);\n        rotateAndFlipQuadrant(val, point, rx, ry);\n        point[0] += val * rx;\n        point[1] += val * ry;\n    }\n    if (face % 2 === 1) {\n        const t = point[0];\n        point[0] = point[1];\n        point[1] = t;\n    }\n    return { face, ij: point, level };\n}\n", "// s2-geometry is a pure JavaScript port of Google/Niantic's S2 Geometry library\n// which is perfect since it works in the browser.\nimport { toHilbertQuadkey, FromHilbertQuadKey, IJToST, STToUV, FaceUVToXYZ, XYZToLngLat } from \"./s2-geometry.js\";\nimport Long from 'long';\n/**\n * Given an S2 token this function convert the token to 64 bit id\n   https://github.com/google/s2-geometry-library-java/blob/c04b68bf3197a9c34082327eeb3aec7ab7c85da1/src/com/google/common/geometry/S2CellId.java#L439\n * */\nfunction getIdFromToken(token) {\n    // pad token with zeros to make the length 16\n    const paddedToken = token.padEnd(16, '0');\n    return Long.fromString(paddedToken, 16);\n}\nconst MAX_RESOLUTION = 100;\n/* Adapted from s2-geometry's S2Cell.getCornerLatLngs */\n/* eslint-disable max-statements */\nfunction getGeoBounds({ face, ij, level }) {\n    const offsets = [\n        [0, 0],\n        [0, 1],\n        [1, 1],\n        [1, 0],\n        [0, 0]\n    ];\n    // The S2 cell edge is curved: http://s2geometry.io/\n    // This is more prominent at lower levels\n    // resolution is the number of segments to generate per edge.\n    // We exponentially reduce resolution as level increases so it doesn't affect perf\n    // when there are a large number of cells\n    const resolution = Math.max(1, Math.ceil(MAX_RESOLUTION * Math.pow(2, -level)));\n    const result = new Float64Array(4 * resolution * 2 + 2);\n    let ptIndex = 0;\n    let prevLng = 0;\n    for (let i = 0; i < 4; i++) {\n        const offset = offsets[i].slice(0);\n        const nextOffset = offsets[i + 1];\n        const stepI = (nextOffset[0] - offset[0]) / resolution;\n        const stepJ = (nextOffset[1] - offset[1]) / resolution;\n        for (let j = 0; j < resolution; j++) {\n            offset[0] += stepI;\n            offset[1] += stepJ;\n            // Cell can be represented by coordinates IJ, ST, UV, XYZ\n            // http://s2geometry.io/devguide/s2cell_hierarchy#coordinate-systems\n            const st = IJToST(ij, level, offset);\n            const uv = STToUV(st);\n            const xyz = FaceUVToXYZ(face, uv);\n            const lngLat = XYZToLngLat(xyz);\n            // Adjust longitude for Web Mercator projection\n            if (Math.abs(lngLat[1]) > 89.999) {\n                lngLat[0] = prevLng;\n            }\n            const deltaLng = lngLat[0] - prevLng;\n            lngLat[0] += deltaLng > 180 ? -360 : deltaLng < -180 ? 360 : 0;\n            result[ptIndex++] = lngLat[0];\n            result[ptIndex++] = lngLat[1];\n            prevLng = lngLat[0];\n        }\n    }\n    // close the loop\n    result[ptIndex++] = result[0];\n    result[ptIndex++] = result[1];\n    return result;\n}\n/* eslint-enable max-statements */\nexport function getS2QuadKey(token) {\n    if (typeof token === 'string') {\n        if (token.indexOf('/') > 0) {\n            // is Hilbert quad key\n            return token;\n        }\n        // is S2 token\n        token = getIdFromToken(token);\n    }\n    // is Long id\n    return toHilbertQuadkey(token.toString());\n}\n/**\n * Get a polygon with corner coordinates for an s2 cell\n * @param {*} cell - This can be an S2 key or token\n * @return {Float64Array} - a simple polygon in flat array format: [lng0, lat0, lng1, lat1, ...]\n *   - the polygon is closed, i.e. last coordinate is a copy of the first coordinate\n */\nexport function getS2Polygon(token) {\n    const key = getS2QuadKey(token);\n    const s2cell = FromHilbertQuadKey(key);\n    return getGeoBounds(s2cell);\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport GeoCellLayer from \"../geo-cell-layer/GeoCellLayer.js\";\nimport { getS2Polygon } from \"./s2-utils.js\";\nconst defaultProps = {\n    getS2Token: { type: 'accessor', value: (d) => d.token }\n};\n/** Render filled and/or stroked polygons based on the [S2](http://s2geometry.io/) geospatial indexing system. */\nexport default class S2Layer extends GeoCellLayer {\n    static { this.layerName = 'S2Layer'; }\n    static { this.defaultProps = defaultProps; }\n    indexToBounds() {\n        const { data, getS2Token } = this.props;\n        return {\n            data,\n            _normalize: false,\n            positionFormat: 'XY',\n            getPolygon: (x, objectInfo) => getS2Polygon(getS2Token(x, objectInfo))\n        };\n    }\n}\n", "import { worldToLngLat } from '@math.gl/web-mercator';\nconst TILE_SIZE = 512;\nexport function quadkeyToWorldBounds(quadkey, coverage) {\n    let x = 0;\n    let y = 0;\n    let mask = 1 << quadkey.length;\n    const scale = mask / TILE_SIZE;\n    for (let i = 0; i < quadkey.length; i++) {\n        mask >>= 1;\n        const q = parseInt(quadkey[i]);\n        if (q % 2)\n            x |= mask;\n        if (q > 1)\n            y |= mask;\n    }\n    return [\n        [x / scale, TILE_SIZE - y / scale],\n        [(x + coverage) / scale, TILE_SIZE - (y + coverage) / scale]\n    ];\n}\nexport function getQuadkeyPolygon(quadkey, coverage = 1) {\n    const [topLeft, bottomRight] = quadkeyToWorldBounds(quadkey, coverage);\n    const [w, n] = worldToLngLat(topLeft);\n    const [e, s] = worldToLngLat(bottomRight);\n    return [e, n, e, s, w, s, w, n, e, n];\n}\n", "import GeoCellLayer from \"../geo-cell-layer/GeoCellLayer.js\";\nimport { getQuadkeyPolygon } from \"./quadkey-utils.js\";\nconst defaultProps = {\n    getQuadkey: { type: 'accessor', value: (d) => d.quadkey }\n};\n/** Render filled and/or stroked polygons based on the [Quadkey](https://towardsdatascience.com/geospatial-indexing-with-quadkeys-d933dff01496) geospatial indexing system. */\nexport default class QuadkeyLayer extends GeoCellLayer {\n    static { this.layerName = 'QuadkeyLayer'; }\n    static { this.defaultProps = defaultProps; }\n    indexToBounds() {\n        const { data, extruded, getQuadkey } = this.props;\n        // To avoid z-fighting reduce polygon footprint when extruding\n        const coverage = extruded ? 0.99 : 1;\n        return {\n            data,\n            _normalize: false,\n            positionFormat: 'XY',\n            getPolygon: (x, objectInfo) => getQuadkeyPolygon(getQuadkey(x, objectInfo), coverage),\n            updateTriggers: { getPolygon: coverage }\n        };\n    }\n}\n", "export class Tile2DHeader {\n    constructor(index) {\n        this.index = index;\n        this.isVisible = false;\n        this.isSelected = false;\n        this.parent = null;\n        this.children = [];\n        this.content = null;\n        this._loader = undefined;\n        this._abortController = null;\n        this._loaderId = 0;\n        this._isLoaded = false;\n        this._isCancelled = false;\n        this._needsReload = false;\n    }\n    /** @deprecated use `boundingBox` instead */\n    get bbox() {\n        return this._bbox;\n    }\n    // TODO - remove in v9\n    set bbox(value) {\n        // Only set once from `Tileset2D.getTileMetadata`\n        if (this._bbox)\n            return;\n        this._bbox = value;\n        if ('west' in value) {\n            this.boundingBox = [\n                [value.west, value.south],\n                [value.east, value.north]\n            ];\n        }\n        else {\n            this.boundingBox = [\n                [value.left, value.top],\n                [value.right, value.bottom]\n            ];\n        }\n    }\n    get data() {\n        return this.isLoading && this._loader ? this._loader.then(() => this.data) : this.content;\n    }\n    get isLoaded() {\n        return this._isLoaded && !this._needsReload;\n    }\n    get isLoading() {\n        return Boolean(this._loader) && !this._isCancelled;\n    }\n    get needsReload() {\n        return this._needsReload || this._isCancelled;\n    }\n    get byteLength() {\n        const result = this.content ? this.content.byteLength : 0;\n        if (!Number.isFinite(result)) {\n            // eslint-disable-next-line no-console\n            console.error('byteLength not defined in tile data');\n        }\n        return result;\n    }\n    /* eslint-disable max-statements */\n    async _loadData({ getData, requestScheduler, onLoad, onError }) {\n        const { index, id, bbox, userData, zoom } = this;\n        const loaderId = this._loaderId;\n        this._abortController = new AbortController();\n        const { signal } = this._abortController;\n        // @ts-expect-error (2345) Argument of type '(tile: any) => 1 | -1' is not assignable ...\n        const requestToken = await requestScheduler.scheduleRequest(this, tile => {\n            return tile.isSelected ? 1 : -1;\n        });\n        if (!requestToken) {\n            this._isCancelled = true;\n            return;\n        }\n        // A tile can be cancelled while being scheduled\n        if (this._isCancelled) {\n            requestToken.done();\n            return;\n        }\n        let tileData = null;\n        let error;\n        try {\n            tileData = await getData({ index, id, bbox, userData, zoom, signal });\n        }\n        catch (err) {\n            error = err || true;\n        }\n        finally {\n            requestToken.done();\n        }\n        // If loadData has been called with a newer version, discard the result from this operation\n        if (loaderId !== this._loaderId) {\n            return;\n        }\n        // Clear the `isLoading` flag\n        this._loader = undefined;\n        // Rewrite tile content with the result of getTileData if successful, or `null` in case of\n        // error or cancellation\n        this.content = tileData;\n        // If cancelled, do not invoke the callbacks\n        // Consider it loaded if we tried to cancel but `getTileData` still returned data\n        if (this._isCancelled && !tileData) {\n            this._isLoaded = false;\n            return;\n        }\n        this._isLoaded = true;\n        this._isCancelled = false;\n        if (error) {\n            onError(error, this);\n        }\n        else {\n            onLoad(this);\n        }\n    }\n    loadData(opts) {\n        this._isLoaded = false;\n        this._isCancelled = false;\n        this._needsReload = false;\n        this._loaderId++;\n        this._loader = this._loadData(opts);\n        return this._loader;\n    }\n    setNeedsReload() {\n        if (this.isLoading) {\n            this.abort();\n            this._loader = undefined;\n        }\n        this._needsReload = true;\n    }\n    abort() {\n        if (this.isLoaded) {\n            return;\n        }\n        this._isCancelled = true;\n        this._abortController?.abort();\n    }\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nexport const INTERSECTION = {\n    OUTSIDE: -1, // Represents that an object is not contained within the frustum.\n    INTERSECTING: 0, // Represents that an object intersects one of the frustum's planes.\n    INSIDE: 1 // Represents that an object is fully within the frustum.\n};\n", "import { Vector3 } from '@math.gl/core';\nimport { INTERSECTION } from \"../../constants.js\";\nconst scratchVector = new Vector3();\nconst scratchNormal = new Vector3();\n/**\n * An axis aligned bounding box - aligned with coordinate axes\n * @see BoundingVolume\n * @see BoundingRectangle\n * @see OrientedBoundingBox\n */\nexport class AxisAlignedBoundingBox {\n    /**\n     * Creates an instance of an AxisAlignedBoundingBox from the minimum and maximum points along the x, y, and z axes.\n     * @param minimum=[0, 0, 0] The minimum point along the x, y, and z axes.\n     * @param maximum=[0, 0, 0] The maximum point along the x, y, and z axes.\n     * @param center The center of the box; automatically computed if not supplied.\n     */\n    constructor(minimum = [0, 0, 0], maximum = [0, 0, 0], center) {\n        // If center was not defined, compute it.\n        center = center || scratchVector.copy(minimum).add(maximum).scale(0.5);\n        this.center = new Vector3(center);\n        this.halfDiagonal = new Vector3(maximum).subtract(this.center);\n        /**\n         * The minimum point defining the bounding box.\n         * @type {Vector3}\n         * @default {@link 0, 0, 0}\n         */\n        this.minimum = new Vector3(minimum);\n        /**\n         * The maximum point defining the bounding box.\n         * @type {Vector3}\n         * @default {@link 0, 0, 0}\n         */\n        this.maximum = new Vector3(maximum);\n    }\n    /**\n     * Duplicates a AxisAlignedBoundingBox instance.\n     *\n     * @returns {AxisAlignedBoundingBox} A new AxisAlignedBoundingBox instance.\n     */\n    clone() {\n        return new AxisAlignedBoundingBox(this.minimum, this.maximum, this.center);\n    }\n    /**\n     * Compares the provided AxisAlignedBoundingBox componentwise and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @param {AxisAlignedBoundingBox} [right] The second AxisAlignedBoundingBox to compare with.\n     * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n     */\n    equals(right) {\n        return (this === right ||\n            (Boolean(right) && this.minimum.equals(right.minimum) && this.maximum.equals(right.maximum)));\n    }\n    /**\n     * Applies a 4x4 affine transformation matrix to a bounding sphere.\n     * @param transform The transformation matrix to apply to the bounding sphere.\n     * @returns itself, i.e. the modified BoundingVolume.\n     */\n    transform(transform) {\n        this.center.transformAsPoint(transform);\n        // TODO - this.halfDiagonal.transformAsVector(transform);\n        this.halfDiagonal.transform(transform);\n        this.minimum.transform(transform);\n        this.maximum.transform(transform);\n        return this;\n    }\n    /**\n     * Determines which side of a plane a box is located.\n     */\n    intersectPlane(plane) {\n        const { halfDiagonal } = this;\n        const normal = scratchNormal.from(plane.normal);\n        const e = halfDiagonal.x * Math.abs(normal.x) +\n            halfDiagonal.y * Math.abs(normal.y) +\n            halfDiagonal.z * Math.abs(normal.z);\n        const s = this.center.dot(normal) + plane.distance; // signed distance from center\n        if (s - e > 0) {\n            return INTERSECTION.INSIDE;\n        }\n        if (s + e < 0) {\n            // Not in front because normals point inward\n            return INTERSECTION.OUTSIDE;\n        }\n        return INTERSECTION.INTERSECTING;\n    }\n    /** Computes the estimated distance from the closest point on a bounding box to a point. */\n    distanceTo(point) {\n        return Math.sqrt(this.distanceSquaredTo(point));\n    }\n    /** Computes the estimated distance squared from the closest point on a bounding box to a point. */\n    distanceSquaredTo(point) {\n        const offset = scratchVector.from(point).subtract(this.center);\n        const { halfDiagonal } = this;\n        let distanceSquared = 0.0;\n        let d;\n        d = Math.abs(offset.x) - halfDiagonal.x;\n        if (d > 0) {\n            distanceSquared += d * d;\n        }\n        d = Math.abs(offset.y) - halfDiagonal.y;\n        if (d > 0) {\n            distanceSquared += d * d;\n        }\n        d = Math.abs(offset.z) - halfDiagonal.z;\n        if (d > 0) {\n            distanceSquared += d * d;\n        }\n        return distanceSquared;\n    }\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { Vector3, mat4 } from '@math.gl/core';\nimport { INTERSECTION } from \"../../constants.js\";\nconst scratchVector = new Vector3();\nconst scratchVector2 = new Vector3();\n/** A BoundingSphere */\nexport class BoundingSphere {\n    /** Creates a bounding sphere */\n    constructor(center = [0, 0, 0], radius = 0.0) {\n        this.radius = -0;\n        this.center = new Vector3();\n        this.fromCenterRadius(center, radius);\n    }\n    /** Sets the bounding sphere from `center` and `radius`. */\n    fromCenterRadius(center, radius) {\n        this.center.from(center);\n        this.radius = radius;\n        return this;\n    }\n    /**\n     * Computes a bounding sphere from the corner points of an axis-aligned bounding box.  The sphere\n     * tightly and fully encompasses the box.\n     */\n    fromCornerPoints(corner, oppositeCorner) {\n        oppositeCorner = scratchVector.from(oppositeCorner);\n        this.center = new Vector3().from(corner).add(oppositeCorner).scale(0.5);\n        this.radius = this.center.distance(oppositeCorner);\n        return this;\n    }\n    /** Compares the provided BoundingSphere component wise */\n    equals(right) {\n        return (this === right ||\n            (Boolean(right) && this.center.equals(right.center) && this.radius === right.radius));\n    }\n    /** Duplicates a BoundingSphere instance. */\n    clone() {\n        return new BoundingSphere(this.center, this.radius);\n    }\n    /** Computes a bounding sphere that contains both the left and right bounding spheres. */\n    union(boundingSphere) {\n        const leftCenter = this.center;\n        const leftRadius = this.radius;\n        const rightCenter = boundingSphere.center;\n        const rightRadius = boundingSphere.radius;\n        const toRightCenter = scratchVector.copy(rightCenter).subtract(leftCenter);\n        const centerSeparation = toRightCenter.magnitude();\n        if (leftRadius >= centerSeparation + rightRadius) {\n            // Left sphere wins.\n            return this.clone();\n        }\n        if (rightRadius >= centerSeparation + leftRadius) {\n            // Right sphere wins.\n            return boundingSphere.clone();\n        }\n        // There are two tangent points, one on far side of each sphere.\n        const halfDistanceBetweenTangentPoints = (leftRadius + centerSeparation + rightRadius) * 0.5;\n        // Compute the center point halfway between the two tangent points.\n        scratchVector2\n            .copy(toRightCenter)\n            .scale((-leftRadius + halfDistanceBetweenTangentPoints) / centerSeparation)\n            .add(leftCenter);\n        this.center.copy(scratchVector2);\n        this.radius = halfDistanceBetweenTangentPoints;\n        return this;\n    }\n    /** Computes a bounding sphere by enlarging the provided sphere to contain the provided point. */\n    expand(point) {\n        const scratchPoint = scratchVector.from(point);\n        const radius = scratchPoint.subtract(this.center).magnitude();\n        if (radius > this.radius) {\n            this.radius = radius;\n        }\n        return this;\n    }\n    // BoundingVolume interface\n    /**\n     * Applies a 4x4 affine transformation matrix to a bounding sphere.\n     * @param sphere The bounding sphere to apply the transformation to.\n     * @param transform The transformation matrix to apply to the bounding sphere.\n     * @returns self.\n     */\n    transform(transform) {\n        this.center.transform(transform);\n        const scale = mat4.getScaling(scratchVector, transform);\n        this.radius = Math.max(scale[0], Math.max(scale[1], scale[2])) * this.radius;\n        return this;\n    }\n    /** Computes the estimated distance squared from the closest point on a bounding sphere to a point. */\n    distanceSquaredTo(point) {\n        const d = this.distanceTo(point);\n        return d * d;\n    }\n    /** Computes the estimated distance from the closest point on a bounding sphere to a point. */\n    distanceTo(point) {\n        const scratchPoint = scratchVector.from(point);\n        const delta = scratchPoint.subtract(this.center);\n        return Math.max(0, delta.len() - this.radius);\n    }\n    /** Determines which side of a plane a sphere is located. */\n    intersectPlane(plane) {\n        const center = this.center;\n        const radius = this.radius;\n        const normal = plane.normal;\n        const distanceToPlane = normal.dot(center) + plane.distance;\n        // The center point is negative side of the plane normal\n        if (distanceToPlane < -radius) {\n            return INTERSECTION.OUTSIDE;\n        }\n        // The center point is positive side of the plane, but radius extends beyond it; partial overlap\n        if (distanceToPlane < radius) {\n            return INTERSECTION.INTERSECTING;\n        }\n        // The center point and radius is positive side of the plane\n        return INTERSECTION.INSIDE;\n    }\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { Vector3, Matrix3, Quaternion } from '@math.gl/core';\nimport { BoundingSphere } from \"./bounding-sphere.js\";\nimport { INTERSECTION } from \"../../constants.js\";\nconst scratchVector3 = new Vector3();\nconst scratchOffset = new Vector3();\nconst scratchVectorU = new Vector3();\nconst scratchVectorV = new Vector3();\nconst scratchVectorW = new Vector3();\nconst scratchCorner = new Vector3();\nconst scratchToCenter = new Vector3();\nconst MATRIX3 = {\n    COLUMN0ROW0: 0,\n    COLUMN0ROW1: 1,\n    COLUMN0ROW2: 2,\n    COLUMN1ROW0: 3,\n    COLUMN1ROW1: 4,\n    COLUMN1ROW2: 5,\n    COLUMN2ROW0: 6,\n    COLUMN2ROW1: 7,\n    COLUMN2ROW2: 8\n};\n/**\n * An OrientedBoundingBox of some object is a closed and convex cuboid.\n * It can provide a tighter bounding volume than `BoundingSphere` or\n * `AxisAlignedBoundingBox` in many cases.\n */\nexport class OrientedBoundingBox {\n    constructor(center = [0, 0, 0], halfAxes = [0, 0, 0, 0, 0, 0, 0, 0, 0]) {\n        this.center = new Vector3().from(center);\n        this.halfAxes = new Matrix3(halfAxes);\n    }\n    /** Returns an array with three halfSizes for the bounding box */\n    get halfSize() {\n        const xAxis = this.halfAxes.getColumn(0);\n        const yAxis = this.halfAxes.getColumn(1);\n        const zAxis = this.halfAxes.getColumn(2);\n        return [new Vector3(xAxis).len(), new Vector3(yAxis).len(), new Vector3(zAxis).len()];\n    }\n    /** Returns a quaternion describing the orientation of the bounding box */\n    get quaternion() {\n        const xAxis = this.halfAxes.getColumn(0);\n        const yAxis = this.halfAxes.getColumn(1);\n        const zAxis = this.halfAxes.getColumn(2);\n        const normXAxis = new Vector3(xAxis).normalize();\n        const normYAxis = new Vector3(yAxis).normalize();\n        const normZAxis = new Vector3(zAxis).normalize();\n        return new Quaternion().fromMatrix3(new Matrix3([...normXAxis, ...normYAxis, ...normZAxis]));\n    }\n    /**\n     * Create OrientedBoundingBox from quaternion based OBB,\n     */\n    fromCenterHalfSizeQuaternion(center, halfSize, quaternion) {\n        const quaternionObject = new Quaternion(quaternion);\n        const directionsMatrix = new Matrix3().fromQuaternion(quaternionObject);\n        directionsMatrix[0] = directionsMatrix[0] * halfSize[0];\n        directionsMatrix[1] = directionsMatrix[1] * halfSize[0];\n        directionsMatrix[2] = directionsMatrix[2] * halfSize[0];\n        directionsMatrix[3] = directionsMatrix[3] * halfSize[1];\n        directionsMatrix[4] = directionsMatrix[4] * halfSize[1];\n        directionsMatrix[5] = directionsMatrix[5] * halfSize[1];\n        directionsMatrix[6] = directionsMatrix[6] * halfSize[2];\n        directionsMatrix[7] = directionsMatrix[7] * halfSize[2];\n        directionsMatrix[8] = directionsMatrix[8] * halfSize[2];\n        this.center = new Vector3().from(center);\n        this.halfAxes = directionsMatrix;\n        return this;\n    }\n    /** Duplicates a OrientedBoundingBox instance. */\n    clone() {\n        return new OrientedBoundingBox(this.center, this.halfAxes);\n    }\n    /** Compares the provided OrientedBoundingBox component wise and returns */\n    equals(right) {\n        return (this === right ||\n            (Boolean(right) && this.center.equals(right.center) && this.halfAxes.equals(right.halfAxes)));\n    }\n    /** Computes a tight-fitting bounding sphere enclosing the provided oriented bounding box. */\n    getBoundingSphere(result = new BoundingSphere()) {\n        const halfAxes = this.halfAxes;\n        const u = halfAxes.getColumn(0, scratchVectorU);\n        const v = halfAxes.getColumn(1, scratchVectorV);\n        const w = halfAxes.getColumn(2, scratchVectorW);\n        // Calculate \"corner\" vector\n        const cornerVector = scratchVector3.copy(u).add(v).add(w);\n        result.center.copy(this.center);\n        result.radius = cornerVector.magnitude();\n        return result;\n    }\n    /** Determines which side of a plane the oriented bounding box is located. */\n    intersectPlane(plane) {\n        const center = this.center;\n        const normal = plane.normal;\n        const halfAxes = this.halfAxes;\n        const normalX = normal.x;\n        const normalY = normal.y;\n        const normalZ = normal.z;\n        // Plane is used as if it is its normal; the first three components are assumed to be normalized\n        const radEffective = Math.abs(normalX * halfAxes[MATRIX3.COLUMN0ROW0] +\n            normalY * halfAxes[MATRIX3.COLUMN0ROW1] +\n            normalZ * halfAxes[MATRIX3.COLUMN0ROW2]) +\n            Math.abs(normalX * halfAxes[MATRIX3.COLUMN1ROW0] +\n                normalY * halfAxes[MATRIX3.COLUMN1ROW1] +\n                normalZ * halfAxes[MATRIX3.COLUMN1ROW2]) +\n            Math.abs(normalX * halfAxes[MATRIX3.COLUMN2ROW0] +\n                normalY * halfAxes[MATRIX3.COLUMN2ROW1] +\n                normalZ * halfAxes[MATRIX3.COLUMN2ROW2]);\n        const distanceToPlane = normal.dot(center) + plane.distance;\n        if (distanceToPlane <= -radEffective) {\n            // The entire box is on the negative side of the plane normal\n            return INTERSECTION.OUTSIDE;\n        }\n        else if (distanceToPlane >= radEffective) {\n            // The entire box is on the positive side of the plane normal\n            return INTERSECTION.INSIDE;\n        }\n        return INTERSECTION.INTERSECTING;\n    }\n    /** Computes the estimated distance from the closest point on a bounding box to a point. */\n    distanceTo(point) {\n        return Math.sqrt(this.distanceSquaredTo(point));\n    }\n    /**\n     * Computes the estimated distance squared from the closest point\n     * on a bounding box to a point.\n     * See Geometric Tools for Computer Graphics 10.4.2\n     */\n    distanceSquaredTo(point) {\n        // Computes the estimated distance squared from the\n        // closest point on a bounding box to a point.\n        // See Geometric Tools for Computer Graphics 10.4.2\n        const offset = scratchOffset.from(point).subtract(this.center);\n        const halfAxes = this.halfAxes;\n        const u = halfAxes.getColumn(0, scratchVectorU);\n        const v = halfAxes.getColumn(1, scratchVectorV);\n        const w = halfAxes.getColumn(2, scratchVectorW);\n        const uHalf = u.magnitude();\n        const vHalf = v.magnitude();\n        const wHalf = w.magnitude();\n        u.normalize();\n        v.normalize();\n        w.normalize();\n        let distanceSquared = 0.0;\n        let d;\n        d = Math.abs(offset.dot(u)) - uHalf;\n        if (d > 0) {\n            distanceSquared += d * d;\n        }\n        d = Math.abs(offset.dot(v)) - vHalf;\n        if (d > 0) {\n            distanceSquared += d * d;\n        }\n        d = Math.abs(offset.dot(w)) - wHalf;\n        if (d > 0) {\n            distanceSquared += d * d;\n        }\n        return distanceSquared;\n    }\n    /**\n     * The distances calculated by the vector from the center of the bounding box\n     * to position projected onto direction.\n     *\n     * - If you imagine the infinite number of planes with normal direction,\n     *   this computes the smallest distance to the closest and farthest planes\n     *   from `position` that intersect the bounding box.\n     *\n     * @param position The position to calculate the distance from.\n     * @param direction The direction from position.\n     * @param result An Interval (array of length 2) to store the nearest and farthest distances.\n     * @returns Interval (array of length 2) with nearest and farthest distances\n     *   on the bounding box from position in direction.\n     */\n    // eslint-disable-next-line max-statements\n    computePlaneDistances(position, direction, result = [-0, -0]) {\n        let minDist = Number.POSITIVE_INFINITY;\n        let maxDist = Number.NEGATIVE_INFINITY;\n        const center = this.center;\n        const halfAxes = this.halfAxes;\n        const u = halfAxes.getColumn(0, scratchVectorU);\n        const v = halfAxes.getColumn(1, scratchVectorV);\n        const w = halfAxes.getColumn(2, scratchVectorW);\n        // project first corner\n        const corner = scratchCorner.copy(u).add(v).add(w).add(center);\n        const toCenter = scratchToCenter.copy(corner).subtract(position);\n        let mag = direction.dot(toCenter);\n        minDist = Math.min(mag, minDist);\n        maxDist = Math.max(mag, maxDist);\n        // project second corner\n        corner.copy(center).add(u).add(v).subtract(w);\n        toCenter.copy(corner).subtract(position);\n        mag = direction.dot(toCenter);\n        minDist = Math.min(mag, minDist);\n        maxDist = Math.max(mag, maxDist);\n        // project third corner\n        corner.copy(center).add(u).subtract(v).add(w);\n        toCenter.copy(corner).subtract(position);\n        mag = direction.dot(toCenter);\n        minDist = Math.min(mag, minDist);\n        maxDist = Math.max(mag, maxDist);\n        // project fourth corner\n        corner.copy(center).add(u).subtract(v).subtract(w);\n        toCenter.copy(corner).subtract(position);\n        mag = direction.dot(toCenter);\n        minDist = Math.min(mag, minDist);\n        maxDist = Math.max(mag, maxDist);\n        // project fifth corner\n        center.copy(corner).subtract(u).add(v).add(w);\n        toCenter.copy(corner).subtract(position);\n        mag = direction.dot(toCenter);\n        minDist = Math.min(mag, minDist);\n        maxDist = Math.max(mag, maxDist);\n        // project sixth corner\n        center.copy(corner).subtract(u).add(v).subtract(w);\n        toCenter.copy(corner).subtract(position);\n        mag = direction.dot(toCenter);\n        minDist = Math.min(mag, minDist);\n        maxDist = Math.max(mag, maxDist);\n        // project seventh corner\n        center.copy(corner).subtract(u).subtract(v).add(w);\n        toCenter.copy(corner).subtract(position);\n        mag = direction.dot(toCenter);\n        minDist = Math.min(mag, minDist);\n        maxDist = Math.max(mag, maxDist);\n        // project eighth corner\n        center.copy(corner).subtract(u).subtract(v).subtract(w);\n        toCenter.copy(corner).subtract(position);\n        mag = direction.dot(toCenter);\n        minDist = Math.min(mag, minDist);\n        maxDist = Math.max(mag, maxDist);\n        result[0] = minDist;\n        result[1] = maxDist;\n        return result;\n    }\n    /**\n     * Applies a 4x4 affine transformation matrix to a bounding sphere.\n     * @param transform The transformation matrix to apply to the bounding sphere.\n     * @returns itself, i.e. the modified BoundingVolume.\n     */\n    transform(transformation) {\n        this.center.transformAsPoint(transformation);\n        const xAxis = this.halfAxes.getColumn(0, scratchVectorU);\n        xAxis.transformAsPoint(transformation);\n        const yAxis = this.halfAxes.getColumn(1, scratchVectorV);\n        yAxis.transformAsPoint(transformation);\n        const zAxis = this.halfAxes.getColumn(2, scratchVectorW);\n        zAxis.transformAsPoint(transformation);\n        this.halfAxes = new Matrix3([...xAxis, ...yAxis, ...zAxis]);\n        return this;\n    }\n    getTransform() {\n        // const modelMatrix = Matrix4.fromRotationTranslation(this.boundingVolume.halfAxes, this.boundingVolume.center);\n        // return modelMatrix;\n        throw new Error('not implemented');\n    }\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n/* eslint-disable */\nimport { Vector3, equals, assert } from '@math.gl/core';\nconst scratchPosition = new Vector3();\nconst scratchNormal = new Vector3();\n// A plane in Hessian Normal Form\nexport class Plane {\n    constructor(normal = [0, 0, 1], distance = 0) {\n        this.normal = new Vector3();\n        this.distance = -0;\n        this.fromNormalDistance(normal, distance);\n    }\n    /** Creates a plane from a normal and a distance from the origin. */\n    fromNormalDistance(normal, distance) {\n        assert(Number.isFinite(distance));\n        this.normal.from(normal).normalize();\n        this.distance = distance;\n        return this;\n    }\n    /** Creates a plane from a normal and a point on the plane. */\n    fromPointNormal(point, normal) {\n        point = scratchPosition.from(point);\n        this.normal.from(normal).normalize();\n        const distance = -this.normal.dot(point);\n        this.distance = distance;\n        return this;\n    }\n    /** Creates a plane from the general equation */\n    fromCoefficients(a, b, c, d) {\n        this.normal.set(a, b, c);\n        assert(equals(this.normal.len(), 1));\n        this.distance = d;\n        return this;\n    }\n    /** Duplicates a Plane instance. */\n    clone() {\n        return new Plane(this.normal, this.distance);\n    }\n    /** Compares the provided Planes by normal and distance */\n    equals(right) {\n        return equals(this.distance, right.distance) && equals(this.normal, right.normal);\n    }\n    /** Computes the signed shortest distance of a point to a plane.\n     * The sign of the distance determines which side of the plane the point is on.\n     */\n    getPointDistance(point) {\n        return this.normal.dot(point) + this.distance;\n    }\n    /** Transforms the plane by the given transformation matrix. */\n    transform(matrix4) {\n        const normal = scratchNormal.copy(this.normal).transformAsVector(matrix4).normalize();\n        const point = this.normal.scale(-this.distance).transform(matrix4);\n        return this.fromPointNormal(point, normal);\n    }\n    projectPointOntoPlane(point, result = [0, 0, 0]) {\n        const scratchPoint = scratchPosition.from(point);\n        // projectedPoint = point - (normal.point + scale) * normal\n        const pointDistance = this.getPointDistance(scratchPoint);\n        const scaledNormal = scratchNormal.copy(this.normal).scale(pointDistance);\n        return scratchPoint.subtract(scaledNormal).to(result);\n    }\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n/* eslint-disable */\nimport { Vector3, assert } from '@math.gl/core';\nimport { INTERSECTION } from \"../constants.js\";\nimport { Plane } from \"./plane.js\";\n// X, Y, Z Unit vectors\nconst faces = [new Vector3([1, 0, 0]), new Vector3([0, 1, 0]), new Vector3([0, 0, 1])];\nconst scratchPlaneCenter = new Vector3();\nconst scratchPlaneNormal = new Vector3();\n// const scratchPlane = new Plane(new Vector3(1.0, 0.0, 0.0), 0.0);\n/** A culling volume defined by planes. */\nexport class CullingVolume {\n    /**\n     * Create a new `CullingVolume` bounded by an array of clipping planed\n     * @param planes Array of clipping planes.\n     * */\n    constructor(planes = []) {\n        this.planes = planes;\n    }\n    /**\n     * Constructs a culling volume from a bounding sphere. Creates six planes that create a box containing the sphere.\n     * The planes are aligned to the x, y, and z axes in world coordinates.\n     */\n    fromBoundingSphere(boundingSphere) {\n        this.planes.length = 2 * faces.length;\n        const center = boundingSphere.center;\n        const radius = boundingSphere.radius;\n        let planeIndex = 0;\n        for (const faceNormal of faces) {\n            let plane0 = this.planes[planeIndex];\n            let plane1 = this.planes[planeIndex + 1];\n            if (!plane0) {\n                plane0 = this.planes[planeIndex] = new Plane();\n            }\n            if (!plane1) {\n                plane1 = this.planes[planeIndex + 1] = new Plane();\n            }\n            const plane0Center = scratchPlaneCenter.copy(faceNormal).scale(-radius).add(center);\n            // const plane0Distance = -faceNormal.dot(plane0Center);\n            plane0.fromPointNormal(plane0Center, faceNormal);\n            const plane1Center = scratchPlaneCenter.copy(faceNormal).scale(radius).add(center);\n            const negatedFaceNormal = scratchPlaneNormal.copy(faceNormal).negate();\n            // const plane1Distance = -negatedFaceNormal.dot(plane1Center);\n            plane1.fromPointNormal(plane1Center, negatedFaceNormal);\n            planeIndex += 2;\n        }\n        return this;\n    }\n    /** Determines whether a bounding volume intersects the culling volume. */\n    computeVisibility(boundingVolume) {\n        // const planes = this.planes;\n        let intersect = INTERSECTION.INSIDE;\n        for (const plane of this.planes) {\n            const result = boundingVolume.intersectPlane(plane);\n            switch (result) {\n                case INTERSECTION.OUTSIDE:\n                    // We are done\n                    return INTERSECTION.OUTSIDE;\n                case INTERSECTION.INTERSECTING:\n                    // If no other intersection is outside, return INTERSECTING\n                    intersect = INTERSECTION.INTERSECTING;\n                    break;\n                default:\n            }\n        }\n        return intersect;\n    }\n    /**\n     * Determines whether a bounding volume intersects the culling volume.\n     *\n     * @param parentPlaneMask A bit mask from the boundingVolume's parent's check against the same culling\n     *   volume, such that if (planeMask & (1 << planeIndex) === 0), for k < 31, then\n     *   the parent (and therefore this) volume is completely inside plane[planeIndex]\n     *   and that plane check can be skipped.\n     */\n    computeVisibilityWithPlaneMask(boundingVolume, parentPlaneMask) {\n        assert(Number.isFinite(parentPlaneMask), 'parentPlaneMask is required.');\n        if (parentPlaneMask === CullingVolume.MASK_OUTSIDE ||\n            parentPlaneMask === CullingVolume.MASK_INSIDE) {\n            // parent is completely outside or completely inside, so this child is as well.\n            return parentPlaneMask;\n        }\n        // Start with MASK_INSIDE (all zeros) so that after the loop, the return value can be compared with MASK_INSIDE.\n        // (Because if there are fewer than 31 planes, the upper bits wont be changed.)\n        let mask = CullingVolume.MASK_INSIDE;\n        const planes = this.planes;\n        for (let k = 0; k < this.planes.length; ++k) {\n            // For k greater than 31 (since 31 is the maximum number of INSIDE/INTERSECTING bits we can store), skip the optimization.\n            const flag = k < 31 ? 1 << k : 0;\n            if (k < 31 && (parentPlaneMask & flag) === 0) {\n                // boundingVolume is known to be INSIDE this plane.\n                continue;\n            }\n            const plane = planes[k];\n            const result = boundingVolume.intersectPlane(plane);\n            if (result === INTERSECTION.OUTSIDE) {\n                return CullingVolume.MASK_OUTSIDE;\n            }\n            else if (result === INTERSECTION.INTERSECTING) {\n                mask |= flag;\n            }\n        }\n        return mask;\n    }\n}\n/**\n * For plane masks (as used in {@link CullingVolume#computeVisibilityWithPlaneMask}), this special value\n * represents the case where the object bounding volume is entirely outside the culling volume.\n */\nCullingVolume.MASK_OUTSIDE = 0xffffffff;\n/**\n * For plane masks (as used in {@link CullingVolume.prototype.computeVisibilityWithPlaneMask}), this value\n * represents the case where the object bounding volume is entirely inside the culling volume.\n */\nCullingVolume.MASK_INSIDE = 0x00000000;\n/**\n * For plane masks (as used in {@link CullingVolume.prototype.computeVisibilityWithPlaneMask}), this value\n * represents the case where the object bounding volume (may) intersect all planes of the culling volume.\n */\nCullingVolume.MASK_INDETERMINATE = 0x7fffffff;\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n// Note: This class is still an experimental export, mainly used by other test cases\n// - It has not been fully adapted to math.gl conventions\n// - Documentation has not been ported\nimport { Vector3, Matrix4, assert } from '@math.gl/core';\nimport { CullingVolume } from \"./culling-volume.js\";\nimport { Plane } from \"./plane.js\";\nconst scratchPlaneUpVector = new Vector3();\nconst scratchPlaneRightVector = new Vector3();\nconst scratchPlaneNearCenter = new Vector3();\nconst scratchPlaneFarCenter = new Vector3();\nconst scratchPlaneNormal = new Vector3();\nexport class PerspectiveOffCenterFrustum {\n    /**\n     * The viewing frustum is defined by 6 planes.\n     * Each plane is represented by a {@link Vector4} object, where the x, y, and z components\n     * define the unit vector normal to the plane, and the w component is the distance of the\n     * plane from the origin/camera position.\n     *\n     * @alias PerspectiveOffCenterFrustum\n     *\n     * @example\n     * const frustum = new PerspectiveOffCenterFrustum({\n     *     left : -1.0,\n     *     right : 1.0,\n     *     top : 1.0,\n     *     bottom : -1.0,\n     *     near : 1.0,\n     *     far : 100.0\n     * });\n     *\n     * @see PerspectiveFrustum\n     */\n    constructor(options = {}) {\n        this._cullingVolume = new CullingVolume([\n            new Plane(),\n            new Plane(),\n            new Plane(),\n            new Plane(),\n            new Plane(),\n            new Plane()\n        ]);\n        this._perspectiveMatrix = new Matrix4();\n        this._infinitePerspective = new Matrix4();\n        const { near = 1.0, far = 500000000.0 } = options;\n        this.left = options.left;\n        this._left = undefined;\n        this.right = options.right;\n        this._right = undefined;\n        this.top = options.top;\n        this._top = undefined;\n        this.bottom = options.bottom;\n        this._bottom = undefined;\n        this.near = near;\n        this._near = near;\n        this.far = far;\n        this._far = far;\n    }\n    /**\n     * Returns a duplicate of a PerspectiveOffCenterFrustum instance.\n     * @returns {PerspectiveOffCenterFrustum} A new PerspectiveFrustum instance.\n     * */\n    clone() {\n        return new PerspectiveOffCenterFrustum({\n            right: this.right,\n            left: this.left,\n            top: this.top,\n            bottom: this.bottom,\n            near: this.near,\n            far: this.far\n        });\n    }\n    /**\n     * Compares the provided PerspectiveOffCenterFrustum componentwise and returns\n     * <code>true</code> if they are equal, <code>false</code> otherwise.\n     *\n     * @returns {Boolean} <code>true</code> if they are equal, <code>false</code> otherwise.\n     */\n    equals(other) {\n        return (other &&\n            other instanceof PerspectiveOffCenterFrustum &&\n            this.right === other.right &&\n            this.left === other.left &&\n            this.top === other.top &&\n            this.bottom === other.bottom &&\n            this.near === other.near &&\n            this.far === other.far);\n    }\n    /**\n     * Gets the perspective projection matrix computed from the view frustum.\n     * @memberof PerspectiveOffCenterFrustum.prototype\n     * @type {Matrix4}\n     *\n     * @see PerspectiveOffCenterFrustum#infiniteProjectionMatrix\n     */\n    get projectionMatrix() {\n        this._update();\n        return this._perspectiveMatrix;\n    }\n    /**\n     * Gets the perspective projection matrix computed from the view frustum with an infinite far plane.\n     * @memberof PerspectiveOffCenterFrustum.prototype\n     * @type {Matrix4}\n     *\n     * @see PerspectiveOffCenterFrustum#projectionMatrix\n     */\n    get infiniteProjectionMatrix() {\n        this._update();\n        return this._infinitePerspective;\n    }\n    /**\n     * Creates a culling volume for this frustum.\n     * @returns {CullingVolume} A culling volume at the given position and orientation.\n     *\n     * @example\n     * // Check if a bounding volume intersects the frustum.\n     * const cullingVolume = frustum.computeCullingVolume(cameraPosition, cameraDirection, cameraUp);\n     * const intersect = cullingVolume.computeVisibility(boundingVolume);\n     */\n    // eslint-disable-next-line complexity, max-statements\n    computeCullingVolume(\n    /** A Vector3 defines the eye position. */\n    position, \n    /** A Vector3 defines the view direction. */\n    direction, \n    /** A Vector3 defines the up direction. */\n    up) {\n        assert(position, 'position is required.');\n        assert(direction, 'direction is required.');\n        assert(up, 'up is required.');\n        const planes = this._cullingVolume.planes;\n        up = scratchPlaneUpVector.copy(up).normalize();\n        const right = scratchPlaneRightVector.copy(direction).cross(up).normalize();\n        const nearCenter = scratchPlaneNearCenter\n            .copy(direction)\n            .multiplyByScalar(this.near)\n            .add(position);\n        const farCenter = scratchPlaneFarCenter\n            .copy(direction)\n            .multiplyByScalar(this.far)\n            .add(position);\n        let normal = scratchPlaneNormal;\n        // Left plane computation\n        normal.copy(right).multiplyByScalar(this.left).add(nearCenter).subtract(position).cross(up);\n        planes[0].fromPointNormal(position, normal);\n        // Right plane computation\n        normal\n            .copy(right)\n            .multiplyByScalar(this.right)\n            .add(nearCenter)\n            .subtract(position)\n            .cross(up)\n            .negate();\n        planes[1].fromPointNormal(position, normal);\n        // Bottom plane computation\n        normal\n            .copy(up)\n            .multiplyByScalar(this.bottom)\n            .add(nearCenter)\n            .subtract(position)\n            .cross(right)\n            .negate();\n        planes[2].fromPointNormal(position, normal);\n        // Top plane computation\n        normal.copy(up).multiplyByScalar(this.top).add(nearCenter).subtract(position).cross(right);\n        planes[3].fromPointNormal(position, normal);\n        normal = new Vector3().copy(direction);\n        // Near plane computation\n        planes[4].fromPointNormal(nearCenter, normal);\n        // Far plane computation\n        normal.negate();\n        planes[5].fromPointNormal(farCenter, normal);\n        return this._cullingVolume;\n    }\n    /**\n     * Returns the pixel's width and height in meters.\n     *\n     * @returns {Vector2} The modified result parameter or a new instance of {@link Vector2} with the pixel's width and height in the x and y properties, respectively.\n     *\n     * @exception {DeveloperError} drawingBufferWidth must be greater than zero.\n     * @exception {DeveloperError} drawingBufferHeight must be greater than zero.\n     *\n     * @example\n     * // Example 1\n     * // Get the width and height of a pixel.\n     * const pixelSize = camera.frustum.getPixelDimensions(scene.drawingBufferWidth, scene.drawingBufferHeight, 1.0, new Vector2());\n     *\n     * @example\n     * // Example 2\n     * // Get the width and height of a pixel if the near plane was set to 'distance'.\n     * // For example, get the size of a pixel of an image on a billboard.\n     * const position = camera.position;\n     * const direction = camera.direction;\n     * const toCenter = Vector3.subtract(primitive.boundingVolume.center, position, new Vector3());      // vector from camera to a primitive\n     * const toCenterProj = Vector3.multiplyByScalar(direction, Vector3.dot(direction, toCenter), new Vector3()); // project vector onto camera direction vector\n     * const distance = Vector3.magnitude(toCenterProj);\n     * const pixelSize = camera.frustum.getPixelDimensions(scene.drawingBufferWidth, scene.drawingBufferHeight, distance, new Vector2());\n     */\n    getPixelDimensions(\n    /** The width of the drawing buffer. */\n    drawingBufferWidth, \n    /** The height of the drawing buffer. */\n    drawingBufferHeight, \n    /** The distance to the near plane in meters. */\n    distance, \n    /** The object onto which to store the result. */\n    result) {\n        this._update();\n        assert(Number.isFinite(drawingBufferWidth) && Number.isFinite(drawingBufferHeight));\n        // 'Both drawingBufferWidth and drawingBufferHeight are required.'\n        assert(drawingBufferWidth > 0);\n        // 'drawingBufferWidth must be greater than zero.'\n        assert(drawingBufferHeight > 0);\n        // 'drawingBufferHeight must be greater than zero.'\n        assert(distance > 0);\n        // 'distance is required.');\n        assert(result);\n        // 'A result object is required.');\n        const inverseNear = 1.0 / this.near;\n        let tanTheta = this.top * inverseNear;\n        const pixelHeight = (2.0 * distance * tanTheta) / drawingBufferHeight;\n        tanTheta = this.right * inverseNear;\n        const pixelWidth = (2.0 * distance * tanTheta) / drawingBufferWidth;\n        result.x = pixelWidth;\n        result.y = pixelHeight;\n        return result;\n    }\n    // eslint-disable-next-line complexity, max-statements\n    _update() {\n        assert(Number.isFinite(this.right) &&\n            Number.isFinite(this.left) &&\n            Number.isFinite(this.top) &&\n            Number.isFinite(this.bottom) &&\n            Number.isFinite(this.near) &&\n            Number.isFinite(this.far));\n        // throw new DeveloperError('right, left, top, bottom, near, or far parameters are not set.');\n        const { top, bottom, right, left, near, far } = this;\n        if (top !== this._top ||\n            bottom !== this._bottom ||\n            left !== this._left ||\n            right !== this._right ||\n            near !== this._near ||\n            far !== this._far) {\n            assert(this.near > 0 && this.near < this.far, 'near must be greater than zero and less than far.');\n            this._left = left;\n            this._right = right;\n            this._top = top;\n            this._bottom = bottom;\n            this._near = near;\n            this._far = far;\n            this._perspectiveMatrix = new Matrix4().frustum({\n                left,\n                right,\n                bottom,\n                top,\n                near,\n                far\n            });\n            this._infinitePerspective = new Matrix4().frustum({\n                left,\n                right,\n                bottom,\n                top,\n                near,\n                far: Infinity\n            });\n        }\n    }\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { Vector3 } from '@math.gl/core';\nimport { BoundingSphere } from \"../bounding-volumes/bounding-sphere.js\";\n/* eslint-disable */\nconst fromPointsXMin = new Vector3();\nconst fromPointsYMin = new Vector3();\nconst fromPointsZMin = new Vector3();\nconst fromPointsXMax = new Vector3();\nconst fromPointsYMax = new Vector3();\nconst fromPointsZMax = new Vector3();\nconst fromPointsCurrentPos = new Vector3();\nconst fromPointsScratch = new Vector3();\nconst fromPointsRitterCenter = new Vector3();\nconst fromPointsMinBoxPt = new Vector3();\nconst fromPointsMaxBoxPt = new Vector3();\nconst fromPointsNaiveCenterScratch = new Vector3();\n// const volumeConstant = (4.0 / 3.0) * Math.PI;\n/**\n * Computes a tight-fitting bounding sphere enclosing a list of 3D Cartesian points.\n *\n * The bounding sphere is computed by running two algorithms, a naive algorithm and\n * Ritter's algorithm. The smaller of the two spheres is used to ensure a tight fit.\n * Bounding sphere computation article http://blogs.agi.com/insight3d/index.php/2008/02/04/a-bounding\n *\n * @param positions An array of points that the bounding sphere will enclose.\n * @param result Optional object onto which to store the result.\n * @returns The modified result parameter or a new `BoundingSphere` instance if not provided.\n */\nexport function makeBoundingSphereFromPoints(positions, result = new BoundingSphere()) {\n    if (!positions || positions.length === 0) {\n        return result.fromCenterRadius([0, 0, 0], 0);\n    }\n    const currentPos = fromPointsCurrentPos.copy(positions[0]);\n    const xMin = fromPointsXMin.copy(currentPos);\n    const yMin = fromPointsYMin.copy(currentPos);\n    const zMin = fromPointsZMin.copy(currentPos);\n    const xMax = fromPointsXMax.copy(currentPos);\n    const yMax = fromPointsYMax.copy(currentPos);\n    const zMax = fromPointsZMax.copy(currentPos);\n    for (const position of positions) {\n        currentPos.copy(position);\n        const x = currentPos.x;\n        const y = currentPos.y;\n        const z = currentPos.z;\n        // Store points containing the the smallest and largest components\n        if (x < xMin.x) {\n            xMin.copy(currentPos);\n        }\n        if (x > xMax.x) {\n            xMax.copy(currentPos);\n        }\n        if (y < yMin.y) {\n            yMin.copy(currentPos);\n        }\n        if (y > yMax.y) {\n            yMax.copy(currentPos);\n        }\n        if (z < zMin.z) {\n            zMin.copy(currentPos);\n        }\n        if (z > zMax.z) {\n            zMax.copy(currentPos);\n        }\n    }\n    // Compute x-, y-, and z-spans (Squared distances b/n each component's min. and max.).\n    const xSpan = fromPointsScratch.copy(xMax).subtract(xMin).magnitudeSquared();\n    const ySpan = fromPointsScratch.copy(yMax).subtract(yMin).magnitudeSquared();\n    const zSpan = fromPointsScratch.copy(zMax).subtract(zMin).magnitudeSquared();\n    // Set the diameter endpoints to the largest span.\n    let diameter1 = xMin;\n    let diameter2 = xMax;\n    let maxSpan = xSpan;\n    if (ySpan > maxSpan) {\n        maxSpan = ySpan;\n        diameter1 = yMin;\n        diameter2 = yMax;\n    }\n    if (zSpan > maxSpan) {\n        maxSpan = zSpan;\n        diameter1 = zMin;\n        diameter2 = zMax;\n    }\n    // Calculate the center of the initial sphere found by Ritter's algorithm\n    const ritterCenter = fromPointsRitterCenter;\n    ritterCenter.x = (diameter1.x + diameter2.x) * 0.5;\n    ritterCenter.y = (diameter1.y + diameter2.y) * 0.5;\n    ritterCenter.z = (diameter1.z + diameter2.z) * 0.5;\n    // Calculate the radius of the initial sphere found by Ritter's algorithm\n    let radiusSquared = fromPointsScratch.copy(diameter2).subtract(ritterCenter).magnitudeSquared();\n    let ritterRadius = Math.sqrt(radiusSquared);\n    // Find the center of the sphere found using the Naive method.\n    const minBoxPt = fromPointsMinBoxPt;\n    minBoxPt.x = xMin.x;\n    minBoxPt.y = yMin.y;\n    minBoxPt.z = zMin.z;\n    const maxBoxPt = fromPointsMaxBoxPt;\n    maxBoxPt.x = xMax.x;\n    maxBoxPt.y = yMax.y;\n    maxBoxPt.z = zMax.z;\n    const naiveCenter = fromPointsNaiveCenterScratch\n        .copy(minBoxPt)\n        .add(maxBoxPt)\n        .multiplyByScalar(0.5);\n    // Begin 2nd pass to find naive radius and modify the ritter sphere.\n    let naiveRadius = 0;\n    for (const position of positions) {\n        currentPos.copy(position);\n        // Find the furthest point from the naive center to calculate the naive radius.\n        const r = fromPointsScratch.copy(currentPos).subtract(naiveCenter).magnitude();\n        if (r > naiveRadius) {\n            naiveRadius = r;\n        }\n        // Make adjustments to the Ritter Sphere to include all points.\n        const oldCenterToPointSquared = fromPointsScratch\n            .copy(currentPos)\n            .subtract(ritterCenter)\n            .magnitudeSquared();\n        if (oldCenterToPointSquared > radiusSquared) {\n            const oldCenterToPoint = Math.sqrt(oldCenterToPointSquared);\n            // Calculate new radius to include the point that lies outside\n            ritterRadius = (ritterRadius + oldCenterToPoint) * 0.5;\n            radiusSquared = ritterRadius * ritterRadius;\n            // Calculate center of new Ritter sphere\n            const oldToNew = oldCenterToPoint - ritterRadius;\n            ritterCenter.x = (ritterRadius * ritterCenter.x + oldToNew * currentPos.x) / oldCenterToPoint;\n            ritterCenter.y = (ritterRadius * ritterCenter.y + oldToNew * currentPos.y) / oldCenterToPoint;\n            ritterCenter.z = (ritterRadius * ritterCenter.z + oldToNew * currentPos.z) / oldCenterToPoint;\n        }\n    }\n    if (ritterRadius < naiveRadius) {\n        ritterCenter.to(result.center);\n        result.radius = ritterRadius;\n    }\n    else {\n        naiveCenter.to(result.center);\n        result.radius = naiveRadius;\n    }\n    return result;\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { Matrix3, _MathUtils } from '@math.gl/core';\nconst scratchMatrix = new Matrix3();\nconst scratchUnitary = new Matrix3();\nconst scratchDiagonal = new Matrix3();\nconst jMatrix = new Matrix3();\nconst jMatrixTranspose = new Matrix3();\n/**\n * Computes the eigenvectors and eigenvalues of a symmetric matrix.\n *\n * - Returns a diagonal matrix and unitary matrix such that:\n * `matrix = unitary matrix * diagonal matrix * transpose(unitary matrix)`\n * - The values along the diagonal of the diagonal matrix are the eigenvalues. The columns\n * of the unitary matrix are the corresponding eigenvectors.\n * - This routine was created based upon Matrix Computations, 3rd ed., by Golub and Van Loan,\n * section 8.4.3 The Classical Jacobi Algorithm\n *\n * @param matrix The 3x3 matrix to decompose into diagonal and unitary matrix. Expected to be symmetric.\n * @param result Optional object with unitary and diagonal properties which are matrices onto which to store the result.\n * @returns An object with unitary and diagonal properties which are the unitary and diagonal matrices, respectively.\n *\n * @example\n * const a = //... symmetric matrix\n * const result = {\n *   unitary : new Matrix3(),\n *   diagonal : new Matrix3()\n * };\n * computeEigenDecomposition(a, result);\n *\n * const unitaryTranspose = Matrix3.transpose(result.unitary, new Matrix3());\n * const b = Matrix3.multiply(result.unitary, result.diagonal, new Matrix3());\n * Matrix3.multiply(b, unitaryTranspose, b); // b is now equal to a\n *\n * const lambda = result.diagonal.getColumn(0, new Vector3()).x;  // first eigenvalue\n * const v = result.unitary.getColumn(0, new Vector3());          // first eigenvector\n * const c = v.multiplyByScalar(lambda);                          // equal to v.transformByMatrix3(a)\n */\nexport function computeEigenDecomposition(matrix, \n// @ts-expect-error accept empty object type\nresult = {}) {\n    const EIGEN_TOLERANCE = _MathUtils.EPSILON20;\n    const EIGEN_MAX_SWEEPS = 10;\n    let count = 0;\n    let sweep = 0;\n    const unitaryMatrix = scratchUnitary;\n    const diagonalMatrix = scratchDiagonal;\n    unitaryMatrix.identity();\n    diagonalMatrix.copy(matrix);\n    const epsilon = EIGEN_TOLERANCE * computeFrobeniusNorm(diagonalMatrix);\n    while (sweep < EIGEN_MAX_SWEEPS && offDiagonalFrobeniusNorm(diagonalMatrix) > epsilon) {\n        shurDecomposition(diagonalMatrix, jMatrix);\n        jMatrixTranspose.copy(jMatrix).transpose();\n        diagonalMatrix.multiplyRight(jMatrix);\n        diagonalMatrix.multiplyLeft(jMatrixTranspose);\n        unitaryMatrix.multiplyRight(jMatrix);\n        if (++count > 2) {\n            ++sweep;\n            count = 0;\n        }\n    }\n    result.unitary = unitaryMatrix.toTarget(result.unitary);\n    result.diagonal = diagonalMatrix.toTarget(result.diagonal);\n    return result;\n}\nfunction computeFrobeniusNorm(matrix) {\n    let norm = 0.0;\n    for (let i = 0; i < 9; ++i) {\n        const temp = matrix[i];\n        norm += temp * temp;\n    }\n    return Math.sqrt(norm);\n}\nconst rowVal = [1, 0, 0];\nconst colVal = [2, 2, 1];\n// Computes the \"off-diagonal\" Frobenius norm.\n// Assumes matrix is symmetric.\nfunction offDiagonalFrobeniusNorm(matrix) {\n    let norm = 0.0;\n    for (let i = 0; i < 3; ++i) {\n        const temp = matrix[scratchMatrix.getElementIndex(colVal[i], rowVal[i])];\n        norm += 2.0 * temp * temp;\n    }\n    return Math.sqrt(norm);\n}\n// The routine takes a matrix, which is assumed to be symmetric, and\n// finds the largest off-diagonal term, and then creates\n// a matrix (result) which can be used to help reduce it\n//\n// This routine was created based upon Matrix Computations, 3rd ed., by Golub and Van Loan,\n// section 8.4.2 The 2by2 Symmetric Schur Decomposition.\n//\n// eslint-disable-next-line max-statements\nfunction shurDecomposition(matrix, result) {\n    const tolerance = _MathUtils.EPSILON15;\n    let maxDiagonal = 0.0;\n    let rotAxis = 1;\n    // find pivot (rotAxis) based on max diagonal of matrix\n    for (let i = 0; i < 3; ++i) {\n        const temp = Math.abs(matrix[scratchMatrix.getElementIndex(colVal[i], rowVal[i])]);\n        if (temp > maxDiagonal) {\n            rotAxis = i;\n            maxDiagonal = temp;\n        }\n    }\n    const p = rowVal[rotAxis];\n    const q = colVal[rotAxis];\n    let c = 1.0;\n    let s = 0.0;\n    if (Math.abs(matrix[scratchMatrix.getElementIndex(q, p)]) > tolerance) {\n        const qq = matrix[scratchMatrix.getElementIndex(q, q)];\n        const pp = matrix[scratchMatrix.getElementIndex(p, p)];\n        const qp = matrix[scratchMatrix.getElementIndex(q, p)];\n        const tau = (qq - pp) / 2.0 / qp;\n        let t;\n        if (tau < 0.0) {\n            t = -1.0 / (-tau + Math.sqrt(1.0 + tau * tau));\n        }\n        else {\n            t = 1.0 / (tau + Math.sqrt(1.0 + tau * tau));\n        }\n        c = 1.0 / Math.sqrt(1.0 + t * t);\n        s = t * c;\n    }\n    // Copy into result\n    Matrix3.IDENTITY.to(result);\n    result[scratchMatrix.getElementIndex(p, p)] = result[scratchMatrix.getElementIndex(q, q)] = c;\n    result[scratchMatrix.getElementIndex(q, p)] = s;\n    result[scratchMatrix.getElementIndex(p, q)] = -s;\n    return result;\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { Vector3, Matrix3 } from '@math.gl/core';\nimport { computeEigenDecomposition } from \"./compute-eigen-decomposition.js\";\nimport { OrientedBoundingBox } from \"../bounding-volumes/oriented-bounding-box.js\";\nimport { AxisAlignedBoundingBox } from \"../bounding-volumes/axis-aligned-bounding-box.js\";\nconst scratchVector2 = new Vector3();\nconst scratchVector3 = new Vector3();\nconst scratchVector4 = new Vector3();\nconst scratchVector5 = new Vector3();\nconst scratchVector6 = new Vector3();\nconst scratchCovarianceResult = new Matrix3();\nconst scratchEigenResult = {\n    diagonal: new Matrix3(),\n    unitary: new Matrix3()\n};\n/**\n * Computes an instance of an OrientedBoundingBox of the given positions.\n *\n * This is an implementation of Stefan Gottschalk's Collision Queries using Oriented Bounding Boxes solution (PHD thesis).\n * Reference: http://gamma.cs.unc.edu/users/gottschalk/main.pdf\n */\n/* eslint-disable max-statements */\nexport function makeOrientedBoundingBoxFromPoints(positions, result = new OrientedBoundingBox()) {\n    if (!positions || positions.length === 0) {\n        result.halfAxes = new Matrix3([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n        result.center = new Vector3();\n        return result;\n    }\n    const length = positions.length;\n    const meanPoint = new Vector3(0, 0, 0);\n    for (const position of positions) {\n        meanPoint.add(position);\n    }\n    const invLength = 1.0 / length;\n    meanPoint.multiplyByScalar(invLength);\n    let exx = 0.0;\n    let exy = 0.0;\n    let exz = 0.0;\n    let eyy = 0.0;\n    let eyz = 0.0;\n    let ezz = 0.0;\n    for (const position of positions) {\n        const p = scratchVector2.copy(position).subtract(meanPoint);\n        exx += p.x * p.x;\n        exy += p.x * p.y;\n        exz += p.x * p.z;\n        eyy += p.y * p.y;\n        eyz += p.y * p.z;\n        ezz += p.z * p.z;\n    }\n    exx *= invLength;\n    exy *= invLength;\n    exz *= invLength;\n    eyy *= invLength;\n    eyz *= invLength;\n    ezz *= invLength;\n    const covarianceMatrix = scratchCovarianceResult;\n    covarianceMatrix[0] = exx;\n    covarianceMatrix[1] = exy;\n    covarianceMatrix[2] = exz;\n    covarianceMatrix[3] = exy;\n    covarianceMatrix[4] = eyy;\n    covarianceMatrix[5] = eyz;\n    covarianceMatrix[6] = exz;\n    covarianceMatrix[7] = eyz;\n    covarianceMatrix[8] = ezz;\n    const { unitary } = computeEigenDecomposition(covarianceMatrix, scratchEigenResult);\n    const rotation = result.halfAxes.copy(unitary);\n    let v1 = rotation.getColumn(0, scratchVector4);\n    let v2 = rotation.getColumn(1, scratchVector5);\n    let v3 = rotation.getColumn(2, scratchVector6);\n    let u1 = -Number.MAX_VALUE;\n    let u2 = -Number.MAX_VALUE;\n    let u3 = -Number.MAX_VALUE;\n    let l1 = Number.MAX_VALUE;\n    let l2 = Number.MAX_VALUE;\n    let l3 = Number.MAX_VALUE;\n    for (const position of positions) {\n        scratchVector2.copy(position);\n        u1 = Math.max(scratchVector2.dot(v1), u1);\n        u2 = Math.max(scratchVector2.dot(v2), u2);\n        u3 = Math.max(scratchVector2.dot(v3), u3);\n        l1 = Math.min(scratchVector2.dot(v1), l1);\n        l2 = Math.min(scratchVector2.dot(v2), l2);\n        l3 = Math.min(scratchVector2.dot(v3), l3);\n    }\n    v1 = v1.multiplyByScalar(0.5 * (l1 + u1));\n    v2 = v2.multiplyByScalar(0.5 * (l2 + u2));\n    v3 = v3.multiplyByScalar(0.5 * (l3 + u3));\n    result.center.copy(v1).add(v2).add(v3);\n    const scale = scratchVector3.set(u1 - l1, u2 - l2, u3 - l3).multiplyByScalar(0.5);\n    const scaleMatrix = new Matrix3([scale[0], 0, 0, 0, scale[1], 0, 0, 0, scale[2]]);\n    result.halfAxes.multiplyRight(scaleMatrix);\n    return result;\n}\n/**\n * Computes an instance of an AxisAlignedBoundingBox. The box is determined by\n * finding the points spaced the farthest apart on the x, y, and z axes.\n */\nexport function makeAxisAlignedBoundingBoxFromPoints(positions, result = new AxisAlignedBoundingBox()) {\n    if (!positions || positions.length === 0) {\n        result.minimum.set(0, 0, 0);\n        result.maximum.set(0, 0, 0);\n        result.center.set(0, 0, 0);\n        result.halfDiagonal.set(0, 0, 0);\n        return result;\n    }\n    let minimumX = positions[0][0];\n    let minimumY = positions[0][1];\n    let minimumZ = positions[0][2];\n    let maximumX = positions[0][0];\n    let maximumY = positions[0][1];\n    let maximumZ = positions[0][2];\n    for (const p of positions) {\n        const x = p[0];\n        const y = p[1];\n        const z = p[2];\n        minimumX = Math.min(x, minimumX);\n        maximumX = Math.max(x, maximumX);\n        minimumY = Math.min(y, minimumY);\n        maximumY = Math.max(y, maximumY);\n        minimumZ = Math.min(z, minimumZ);\n        maximumZ = Math.max(z, maximumZ);\n    }\n    result.minimum.set(minimumX, minimumY, minimumZ);\n    result.maximum.set(maximumX, maximumY, maximumZ);\n    result.center.copy(result.minimum).add(result.maximum).scale(0.5);\n    result.halfDiagonal.copy(result.maximum).subtract(result.center);\n    return result;\n}\n", "import { WebMercatorViewport, _GlobeViewport } from '@deck.gl/core';\nimport { CullingVolume, Plane, AxisAlignedBoundingBox, makeOrientedBoundingBoxFromPoints } from '@math.gl/culling';\nimport { lngLatToWorld } from '@math.gl/web-mercator';\nimport { osmTile2lngLat } from \"./utils.js\";\nconst TILE_SIZE = 512;\n// number of world copies to check\nconst MAX_MAPS = 3;\n// for calculating bounding volume of a tile in a non-web-mercator viewport\nconst REF_POINTS_5 = [\n    [0.5, 0.5],\n    [0, 0],\n    [0, 1],\n    [1, 0],\n    [1, 1]\n]; // 4 corners and center\nconst REF_POINTS_9 = REF_POINTS_5.concat([\n    [0, 0.5],\n    [0.5, 0],\n    [1, 0.5],\n    [0.5, 1]\n]); // 4 corners, center and 4 mid points\nconst REF_POINTS_11 = REF_POINTS_9.concat([\n    [0.25, 0.5],\n    [0.75, 0.5]\n]); // 2 additional points on equator for top tile\nclass OSMNode {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    get children() {\n        if (!this._children) {\n            const x = this.x * 2;\n            const y = this.y * 2;\n            const z = this.z + 1;\n            this._children = [\n                new OSMNode(x, y, z),\n                new OSMNode(x, y + 1, z),\n                new OSMNode(x + 1, y, z),\n                new OSMNode(x + 1, y + 1, z)\n            ];\n        }\n        return this._children;\n    }\n    // eslint-disable-next-line complexity\n    update(params) {\n        const { viewport, cullingVolume, elevationBounds, minZ, maxZ, bounds, offset, project } = params;\n        const boundingVolume = this.getBoundingVolume(elevationBounds, offset, project);\n        // First, check if this tile is visible\n        if (bounds && !this.insideBounds(bounds)) {\n            return false;\n        }\n        const isInside = cullingVolume.computeVisibility(boundingVolume);\n        if (isInside < 0) {\n            return false;\n        }\n        // Avoid loading overlapping tiles - if a descendant is requested, do not request the ancester\n        if (!this.childVisible) {\n            let { z } = this;\n            if (z < maxZ && z >= minZ) {\n                // Adjust LOD\n                // If the tile is far enough from the camera, accept a lower zoom level\n                const distance = (boundingVolume.distanceTo(viewport.cameraPosition) * viewport.scale) / viewport.height;\n                z += Math.floor(Math.log2(distance));\n            }\n            if (z >= maxZ) {\n                // LOD is acceptable\n                this.selected = true;\n                return true;\n            }\n        }\n        // LOD is not enough, recursively test child tiles\n        this.selected = false;\n        this.childVisible = true;\n        for (const child of this.children) {\n            child.update(params);\n        }\n        return true;\n    }\n    getSelected(result = []) {\n        if (this.selected) {\n            result.push(this);\n        }\n        if (this._children) {\n            for (const node of this._children) {\n                node.getSelected(result);\n            }\n        }\n        return result;\n    }\n    insideBounds([minX, minY, maxX, maxY]) {\n        const scale = Math.pow(2, this.z);\n        const extent = TILE_SIZE / scale;\n        return (this.x * extent < maxX &&\n            this.y * extent < maxY &&\n            (this.x + 1) * extent > minX &&\n            (this.y + 1) * extent > minY);\n    }\n    getBoundingVolume(zRange, worldOffset, project) {\n        if (project) {\n            // Custom projection\n            // Estimate bounding box from sample points\n            // At low zoom level we need more samples to calculate the bounding volume correctly\n            const refPoints = this.z < 1 ? REF_POINTS_11 : this.z < 2 ? REF_POINTS_9 : REF_POINTS_5;\n            // Convert from tile-relative coordinates to common space\n            const refPointPositions = [];\n            for (const p of refPoints) {\n                const lngLat = osmTile2lngLat(this.x + p[0], this.y + p[1], this.z);\n                lngLat[2] = zRange[0];\n                refPointPositions.push(project(lngLat));\n                if (zRange[0] !== zRange[1]) {\n                    // Account for the elevation volume\n                    lngLat[2] = zRange[1];\n                    refPointPositions.push(project(lngLat));\n                }\n            }\n            return makeOrientedBoundingBoxFromPoints(refPointPositions);\n        }\n        // Use WebMercator projection\n        const scale = Math.pow(2, this.z);\n        const extent = TILE_SIZE / scale;\n        const originX = this.x * extent + worldOffset * TILE_SIZE;\n        // deck's common space is y-flipped\n        const originY = TILE_SIZE - (this.y + 1) * extent;\n        return new AxisAlignedBoundingBox([originX, originY, zRange[0]], [originX + extent, originY + extent, zRange[1]]);\n    }\n}\n// eslint-disable-next-line complexity\nexport function getOSMTileIndices(viewport, maxZ, zRange, bounds) {\n    const project = viewport instanceof _GlobeViewport && viewport.resolution\n        ? // eslint-disable-next-line @typescript-eslint/unbound-method\n            viewport.projectPosition\n        : null;\n    // Get the culling volume of the current camera\n    const planes = Object.values(viewport.getFrustumPlanes()).map(({ normal, distance }) => new Plane(normal.clone().negate(), distance));\n    const cullingVolume = new CullingVolume(planes);\n    // Project zRange from meters to common space\n    const unitsPerMeter = viewport.distanceScales.unitsPerMeter[2];\n    const elevationMin = (zRange && zRange[0] * unitsPerMeter) || 0;\n    const elevationMax = (zRange && zRange[1] * unitsPerMeter) || 0;\n    // Always load at the current zoom level if pitch is small\n    const minZ = viewport instanceof WebMercatorViewport && viewport.pitch <= 60 ? maxZ : 0;\n    // Map extent to OSM position\n    if (bounds) {\n        const [minLng, minLat, maxLng, maxLat] = bounds;\n        const topLeft = lngLatToWorld([minLng, maxLat]);\n        const bottomRight = lngLatToWorld([maxLng, minLat]);\n        bounds = [topLeft[0], TILE_SIZE - topLeft[1], bottomRight[0], TILE_SIZE - bottomRight[1]];\n    }\n    const root = new OSMNode(0, 0, 0);\n    const traversalParams = {\n        viewport,\n        project,\n        cullingVolume,\n        elevationBounds: [elevationMin, elevationMax],\n        minZ,\n        maxZ,\n        bounds,\n        // num. of worlds from the center. For repeated maps\n        offset: 0\n    };\n    root.update(traversalParams);\n    if (viewport instanceof WebMercatorViewport &&\n        viewport.subViewports &&\n        viewport.subViewports.length > 1) {\n        // Check worlds in repeated maps\n        traversalParams.offset = -1;\n        while (root.update(traversalParams)) {\n            if (--traversalParams.offset < -MAX_MAPS) {\n                break;\n            }\n        }\n        traversalParams.offset = 1;\n        while (root.update(traversalParams)) {\n            if (++traversalParams.offset > MAX_MAPS) {\n                break;\n            }\n        }\n    }\n    return root.getSelected();\n}\n", "import { getOSMTileIndices } from \"./tile-2d-traversal.js\";\nconst TILE_SIZE = 512;\nconst DEFAULT_EXTENT = [-Infinity, -Infinity, Infinity, Infinity];\nexport const urlType = {\n    type: 'object',\n    value: null,\n    validate: (value, propType) => (propType.optional && value === null) ||\n        typeof value === 'string' ||\n        (Array.isArray(value) && value.every(url => typeof url === 'string')),\n    equal: (value1, value2) => {\n        if (value1 === value2) {\n            return true;\n        }\n        if (!Array.isArray(value1) || !Array.isArray(value2)) {\n            return false;\n        }\n        const len = value1.length;\n        if (len !== value2.length) {\n            return false;\n        }\n        for (let i = 0; i < len; i++) {\n            if (value1[i] !== value2[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n};\nfunction transformBox(bbox, modelMatrix) {\n    const transformedCoords = [\n        // top-left\n        modelMatrix.transformAsPoint([bbox[0], bbox[1]]),\n        // top-right\n        modelMatrix.transformAsPoint([bbox[2], bbox[1]]),\n        // bottom-left\n        modelMatrix.transformAsPoint([bbox[0], bbox[3]]),\n        // bottom-right\n        modelMatrix.transformAsPoint([bbox[2], bbox[3]])\n    ];\n    const transformedBox = [\n        // Minimum x coord\n        Math.min(...transformedCoords.map(i => i[0])),\n        // Minimum y coord\n        Math.min(...transformedCoords.map(i => i[1])),\n        // Max x coord\n        Math.max(...transformedCoords.map(i => i[0])),\n        // Max y coord\n        Math.max(...transformedCoords.map(i => i[1]))\n    ];\n    return transformedBox;\n}\nfunction stringHash(s) {\n    return Math.abs(s.split('').reduce((a, b) => ((a << 5) - a + b.charCodeAt(0)) | 0, 0));\n}\nexport function getURLFromTemplate(template, tile) {\n    if (!template || !template.length) {\n        return null;\n    }\n    const { index, id } = tile;\n    if (Array.isArray(template)) {\n        const i = stringHash(id) % template.length;\n        template = template[i];\n    }\n    let url = template;\n    for (const key of Object.keys(index)) {\n        const regex = new RegExp(`{${key}}`, 'g');\n        url = url.replace(regex, String(index[key]));\n    }\n    // Back-compatible support for {-y}\n    if (Number.isInteger(index.y) && Number.isInteger(index.z)) {\n        url = url.replace(/\\{-y\\}/g, String(Math.pow(2, index.z) - index.y - 1));\n    }\n    return url;\n}\n/**\n * gets the bounding box of a viewport\n */\nfunction getBoundingBox(viewport, zRange, extent) {\n    let bounds;\n    if (zRange && zRange.length === 2) {\n        const [minZ, maxZ] = zRange;\n        const bounds0 = viewport.getBounds({ z: minZ });\n        const bounds1 = viewport.getBounds({ z: maxZ });\n        bounds = [\n            Math.min(bounds0[0], bounds1[0]),\n            Math.min(bounds0[1], bounds1[1]),\n            Math.max(bounds0[2], bounds1[2]),\n            Math.max(bounds0[3], bounds1[3])\n        ];\n    }\n    else {\n        bounds = viewport.getBounds();\n    }\n    if (!viewport.isGeospatial) {\n        return [\n            // Top corner should not be more then bottom corner in either direction\n            Math.max(Math.min(bounds[0], extent[2]), extent[0]),\n            Math.max(Math.min(bounds[1], extent[3]), extent[1]),\n            // Bottom corner should not be less then top corner in either direction\n            Math.min(Math.max(bounds[2], extent[0]), extent[2]),\n            Math.min(Math.max(bounds[3], extent[1]), extent[3])\n        ];\n    }\n    return [\n        Math.max(bounds[0], extent[0]),\n        Math.max(bounds[1], extent[1]),\n        Math.min(bounds[2], extent[2]),\n        Math.min(bounds[3], extent[3])\n    ];\n}\n/** Get culling bounds in world space */\nexport function getCullBounds({ viewport, z, cullRect }) {\n    const subViewports = viewport.subViewports || [viewport];\n    return subViewports.map(v => getCullBoundsInViewport(v, z || 0, cullRect));\n}\nfunction getCullBoundsInViewport(\n/** Current viewport */\nviewport, \n/** At altitude */\nz, \n/** Culling rectangle in screen space */\ncullRect) {\n    if (!Array.isArray(z)) {\n        const x = cullRect.x - viewport.x;\n        const y = cullRect.y - viewport.y;\n        const { width, height } = cullRect;\n        const unprojectOption = { targetZ: z };\n        const topLeft = viewport.unproject([x, y], unprojectOption);\n        const topRight = viewport.unproject([x + width, y], unprojectOption);\n        const bottomLeft = viewport.unproject([x, y + height], unprojectOption);\n        const bottomRight = viewport.unproject([x + width, y + height], unprojectOption);\n        return [\n            Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n            Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]),\n            Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n            Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1])\n        ];\n    }\n    const bounds0 = getCullBoundsInViewport(viewport, z[0], cullRect);\n    const bounds1 = getCullBoundsInViewport(viewport, z[1], cullRect);\n    return [\n        Math.min(bounds0[0], bounds1[0]),\n        Math.min(bounds0[1], bounds1[1]),\n        Math.max(bounds0[2], bounds1[2]),\n        Math.max(bounds0[3], bounds1[3])\n    ];\n}\nfunction getIndexingCoords(bbox, scale, modelMatrixInverse) {\n    if (modelMatrixInverse) {\n        const transformedTileIndex = transformBox(bbox, modelMatrixInverse).map(i => (i * scale) / TILE_SIZE);\n        return transformedTileIndex;\n    }\n    return bbox.map(i => (i * scale) / TILE_SIZE);\n}\nfunction getScale(z, tileSize) {\n    return (Math.pow(2, z) * TILE_SIZE) / tileSize;\n}\n// https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Lon..2Flat._to_tile_numbers_2\nexport function osmTile2lngLat(x, y, z) {\n    const scale = getScale(z, TILE_SIZE);\n    const lng = (x / scale) * 360 - 180;\n    const n = Math.PI - (2 * Math.PI * y) / scale;\n    const lat = (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n    return [lng, lat];\n}\nfunction tile2XY(x, y, z, tileSize) {\n    const scale = getScale(z, tileSize);\n    return [(x / scale) * TILE_SIZE, (y / scale) * TILE_SIZE];\n}\nexport function tileToBoundingBox(viewport, x, y, z, tileSize = TILE_SIZE) {\n    if (viewport.isGeospatial) {\n        const [west, north] = osmTile2lngLat(x, y, z);\n        const [east, south] = osmTile2lngLat(x + 1, y + 1, z);\n        return { west, north, east, south };\n    }\n    const [left, top] = tile2XY(x, y, z, tileSize);\n    const [right, bottom] = tile2XY(x + 1, y + 1, z, tileSize);\n    return { left, top, right, bottom };\n}\nfunction getIdentityTileIndices(viewport, z, tileSize, extent, modelMatrixInverse) {\n    const bbox = getBoundingBox(viewport, null, extent);\n    const scale = getScale(z, tileSize);\n    const [minX, minY, maxX, maxY] = getIndexingCoords(bbox, scale, modelMatrixInverse);\n    const indices = [];\n    /*\n        |  TILE  |  TILE  |  TILE  |\n          |(minX)            |(maxX)\n     */\n    for (let x = Math.floor(minX); x < maxX; x++) {\n        for (let y = Math.floor(minY); y < maxY; y++) {\n            indices.push({ x, y, z });\n        }\n    }\n    return indices;\n}\n/**\n * Returns all tile indices in the current viewport. If the current zoom level is smaller\n * than minZoom, return an empty array. If the current zoom level is greater than maxZoom,\n * return tiles that are on maxZoom.\n */\n// eslint-disable-next-line complexity\nexport function getTileIndices({ viewport, maxZoom, minZoom, zRange, extent, tileSize = TILE_SIZE, modelMatrix, modelMatrixInverse, zoomOffset = 0 }) {\n    let z = viewport.isGeospatial\n        ? Math.round(viewport.zoom + Math.log2(TILE_SIZE / tileSize)) + zoomOffset\n        : Math.ceil(viewport.zoom) + zoomOffset;\n    if (typeof minZoom === 'number' && Number.isFinite(minZoom) && z < minZoom) {\n        if (!extent) {\n            return [];\n        }\n        z = minZoom;\n    }\n    if (typeof maxZoom === 'number' && Number.isFinite(maxZoom) && z > maxZoom) {\n        z = maxZoom;\n    }\n    let transformedExtent = extent;\n    if (modelMatrix && modelMatrixInverse && extent && !viewport.isGeospatial) {\n        transformedExtent = transformBox(extent, modelMatrix);\n    }\n    return viewport.isGeospatial\n        ? getOSMTileIndices(viewport, z, zRange, extent)\n        : getIdentityTileIndices(viewport, z, tileSize, transformedExtent || DEFAULT_EXTENT, modelMatrixInverse);\n}\n/**\n * Returns true if s is a valid URL template\n */\nexport function isURLTemplate(s) {\n    return /(?=.*{z})(?=.*{x})(?=.*({y}|{-y}))/.test(s);\n}\nexport function isGeoBoundingBox(v) {\n    return (Number.isFinite(v.west) &&\n        Number.isFinite(v.north) &&\n        Number.isFinite(v.east) &&\n        Number.isFinite(v.south));\n}\n", "// deck.gl, MIT license\n// @note - this is a duplicate of the deck.gl core export (because Tileset2D should be deck.gl independent)\n/**\n * Speed up consecutive function calls by caching the result of calls with identical input\n * https://en.wikipedia.org/wiki/Memoization\n * @param compute - the function to be memoized\n */\nexport function memoize(compute) {\n    let cachedArgs = {};\n    let cachedResult;\n    return (args) => {\n        for (const key in args) {\n            if (!isEqual(args[key], cachedArgs[key])) {\n                cachedResult = compute(args);\n                cachedArgs = args;\n                break;\n            }\n        }\n        return cachedResult;\n    };\n}\nfunction isEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (Array.isArray(a)) {\n        // Special treatment for arrays: compare 1-level deep\n        // This is to support equality of matrix/coordinate props\n        const len = a.length;\n        if (!b || b.length !== len) {\n            return false;\n        }\n        for (let i = 0; i < len; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n", "import { RequestScheduler } from '@loaders.gl/loader-utils';\nimport { Matrix4, equals } from '@math.gl/core';\nimport { Tile2DHeader } from \"./tile-2d-header.js\";\nimport { getTileIndices, tileToBoundingBox, getCullBounds } from \"./utils.js\";\nimport { memoize } from \"./memoize.js\";\n// bit masks\nconst TILE_STATE_VISITED = 1;\nconst TILE_STATE_VISIBLE = 2;\n/*\n   show cached parent tile if children are loading\n   +-----------+       +-----+            +-----+-----+\n   |           |       |     |            |     |     |\n   |           |       |     |            |     |     |\n   |           |  -->  +-----+-----+  ->  +-----+-----+\n   |           |             |     |      |     |     |\n   |           |             |     |      |     |     |\n   +-----------+             +-----+      +-----+-----+\n\n   show cached children tiles when parent is loading\n   +-------+----       +------------\n   |       |           |\n   |       |           |\n   |       |           |\n   +-------+----  -->  |\n   |       |           |\n */\nexport const STRATEGY_NEVER = 'never';\nexport const STRATEGY_REPLACE = 'no-overlap';\nexport const STRATEGY_DEFAULT = 'best-available';\nconst DEFAULT_CACHE_SCALE = 5;\nconst STRATEGIES = {\n    [STRATEGY_DEFAULT]: updateTileStateDefault,\n    [STRATEGY_REPLACE]: updateTileStateReplace,\n    [STRATEGY_NEVER]: () => { }\n};\nexport const DEFAULT_TILESET2D_PROPS = {\n    extent: null,\n    tileSize: 512,\n    maxZoom: null,\n    minZoom: null,\n    maxCacheSize: null,\n    maxCacheByteSize: null,\n    refinementStrategy: 'best-available',\n    zRange: null,\n    maxRequests: 6,\n    debounceTime: 0,\n    zoomOffset: 0,\n    // onTileLoad: (tile: Tile2DHeader) => void,  // onTileUnload: (tile: Tile2DHeader) => void,  // onTileError: (error: any, tile: Tile2DHeader) => void,  /** Called when all tiles in the current viewport are loaded. */\n    // onViewportLoad: ((tiles: Tile2DHeader<DataT>[]) => void) | null,\n    onTileLoad: () => { },\n    onTileUnload: () => { },\n    onTileError: () => { }\n};\n/**\n * Manages loading and purging of tile data. This class caches recently visited tiles\n * and only creates new tiles if they are present.\n */\nexport class Tileset2D {\n    /**\n     * Takes in a function that returns tile data, a cache size, and a max and a min zoom level.\n     * Cache size defaults to 5 * number of tiles in the current viewport\n     */\n    constructor(opts) {\n        /* Private methods */\n        this._getCullBounds = memoize(getCullBounds);\n        this.opts = { ...DEFAULT_TILESET2D_PROPS, ...opts };\n        this.setOptions(this.opts);\n        this.onTileLoad = tile => {\n            this.opts.onTileLoad?.(tile);\n            if (this.opts.maxCacheByteSize) {\n                this._cacheByteSize += tile.byteLength;\n                this._resizeCache();\n            }\n        };\n        this._requestScheduler = new RequestScheduler({\n            throttleRequests: this.opts.maxRequests > 0 || this.opts.debounceTime > 0,\n            maxRequests: this.opts.maxRequests,\n            debounceTime: this.opts.debounceTime\n        });\n        // Maps tile id in string {z}-{x}-{y} to a Tile object\n        this._cache = new Map();\n        this._tiles = [];\n        this._dirty = false;\n        this._cacheByteSize = 0;\n        // Cache the last processed viewport\n        this._viewport = null;\n        this._zRange = null;\n        this._selectedTiles = null;\n        this._frameNumber = 0;\n        this._modelMatrix = new Matrix4();\n        this._modelMatrixInverse = new Matrix4();\n    }\n    /* Public API */\n    get tiles() {\n        return this._tiles;\n    }\n    get selectedTiles() {\n        return this._selectedTiles;\n    }\n    get isLoaded() {\n        return this._selectedTiles !== null && this._selectedTiles.every(tile => tile.isLoaded);\n    }\n    get needsReload() {\n        return this._selectedTiles !== null && this._selectedTiles.some(tile => tile.needsReload);\n    }\n    setOptions(opts) {\n        Object.assign(this.opts, opts);\n        if (Number.isFinite(opts.maxZoom)) {\n            this._maxZoom = Math.floor(opts.maxZoom);\n        }\n        if (Number.isFinite(opts.minZoom)) {\n            this._minZoom = Math.ceil(opts.minZoom);\n        }\n    }\n    // Clean up any outstanding tile requests.\n    finalize() {\n        for (const tile of this._cache.values()) {\n            if (tile.isLoading) {\n                tile.abort();\n            }\n        }\n        this._cache.clear();\n        this._tiles = [];\n        this._selectedTiles = null;\n    }\n    reloadAll() {\n        for (const id of this._cache.keys()) {\n            const tile = this._cache.get(id);\n            if (!this._selectedTiles || !this._selectedTiles.includes(tile)) {\n                this._cache.delete(id);\n            }\n            else {\n                tile.setNeedsReload();\n            }\n        }\n    }\n    /**\n     * Update the cache with the given viewport and model matrix and triggers callback onUpdate.\n     */\n    update(viewport, { zRange, modelMatrix } = {\n        zRange: null,\n        modelMatrix: null\n    }) {\n        const modelMatrixAsMatrix4 = modelMatrix ? new Matrix4(modelMatrix) : new Matrix4();\n        const isModelMatrixNew = !modelMatrixAsMatrix4.equals(this._modelMatrix);\n        if (!this._viewport ||\n            !viewport.equals(this._viewport) ||\n            !equals(this._zRange, zRange) ||\n            isModelMatrixNew) {\n            if (isModelMatrixNew) {\n                this._modelMatrixInverse = modelMatrixAsMatrix4.clone().invert();\n                this._modelMatrix = modelMatrixAsMatrix4;\n            }\n            this._viewport = viewport;\n            this._zRange = zRange;\n            const tileIndices = this.getTileIndices({\n                viewport,\n                maxZoom: this._maxZoom,\n                minZoom: this._minZoom,\n                zRange,\n                modelMatrix: this._modelMatrix,\n                modelMatrixInverse: this._modelMatrixInverse\n            });\n            this._selectedTiles = tileIndices.map(index => this._getTile(index, true));\n            if (this._dirty) {\n                // Some new tiles are added\n                this._rebuildTree();\n            }\n            // Check for needed reloads explicitly even if the view/matrix has not changed.\n        }\n        else if (this.needsReload) {\n            this._selectedTiles = this._selectedTiles.map(tile => this._getTile(tile.index, true));\n        }\n        // Update tile states\n        const changed = this.updateTileStates();\n        this._pruneRequests();\n        if (this._dirty) {\n            // cache size is either the user defined maxSize or 5 * number of current tiles in the viewport.\n            this._resizeCache();\n        }\n        if (changed) {\n            this._frameNumber++;\n        }\n        return this._frameNumber;\n    }\n    // eslint-disable-next-line complexity\n    isTileVisible(tile, cullRect) {\n        if (!tile.isVisible) {\n            return false;\n        }\n        if (cullRect && this._viewport) {\n            const boundsArr = this._getCullBounds({\n                viewport: this._viewport,\n                z: this._zRange,\n                cullRect\n            });\n            const { bbox } = tile;\n            for (const [minX, minY, maxX, maxY] of boundsArr) {\n                let overlaps;\n                if ('west' in bbox) {\n                    overlaps = bbox.west < maxX && bbox.east > minX && bbox.south < maxY && bbox.north > minY;\n                }\n                else {\n                    // top/bottom could be swapped depending on the indexing system\n                    const y0 = Math.min(bbox.top, bbox.bottom);\n                    const y1 = Math.max(bbox.top, bbox.bottom);\n                    overlaps = bbox.left < maxX && bbox.right > minX && y0 < maxY && y1 > minY;\n                }\n                if (overlaps) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return true;\n    }\n    /* Public interface for subclassing */\n    /** Returns array of tile indices in the current viewport */\n    getTileIndices({ viewport, maxZoom, minZoom, zRange, modelMatrix, modelMatrixInverse }) {\n        const { tileSize, extent, zoomOffset } = this.opts;\n        return getTileIndices({\n            viewport,\n            maxZoom,\n            minZoom,\n            zRange,\n            tileSize,\n            extent: extent,\n            modelMatrix,\n            modelMatrixInverse,\n            zoomOffset\n        });\n    }\n    /** Returns unique string key for a tile index */\n    getTileId(index) {\n        return `${index.x}-${index.y}-${index.z}`;\n    }\n    /** Returns a zoom level for a tile index */\n    getTileZoom(index) {\n        return index.z;\n    }\n    /** Returns additional metadata to add to tile, bbox by default */\n    getTileMetadata(index) {\n        const { tileSize } = this.opts;\n        return { bbox: tileToBoundingBox(this._viewport, index.x, index.y, index.z, tileSize) };\n    }\n    /** Returns index of the parent tile */\n    getParentIndex(index) {\n        const x = Math.floor(index.x / 2);\n        const y = Math.floor(index.y / 2);\n        const z = index.z - 1;\n        return { x, y, z };\n    }\n    // Returns true if any tile's visibility changed\n    updateTileStates() {\n        const refinementStrategy = this.opts.refinementStrategy || STRATEGY_DEFAULT;\n        const visibilities = new Array(this._cache.size);\n        let i = 0;\n        // Reset state\n        for (const tile of this._cache.values()) {\n            // save previous state\n            visibilities[i++] = tile.isVisible;\n            tile.isSelected = false;\n            tile.isVisible = false;\n        }\n        // @ts-expect-error called only when _selectedTiles is already defined\n        for (const tile of this._selectedTiles) {\n            tile.isSelected = true;\n            tile.isVisible = true;\n        }\n        // Strategy-specific state logic\n        (typeof refinementStrategy === 'function'\n            ? refinementStrategy\n            : STRATEGIES[refinementStrategy])(Array.from(this._cache.values()));\n        i = 0;\n        // Check if any visibility has changed\n        for (const tile of this._cache.values()) {\n            if (visibilities[i++] !== tile.isVisible) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _pruneRequests() {\n        const { maxRequests = 0 } = this.opts;\n        const abortCandidates = [];\n        let ongoingRequestCount = 0;\n        for (const tile of this._cache.values()) {\n            // Keep track of all the ongoing requests\n            if (tile.isLoading) {\n                ongoingRequestCount++;\n                if (!tile.isSelected && !tile.isVisible) {\n                    abortCandidates.push(tile);\n                }\n            }\n        }\n        while (maxRequests > 0 && ongoingRequestCount > maxRequests && abortCandidates.length > 0) {\n            // There are too many ongoing requests, so abort some that are unselected\n            const tile = abortCandidates.shift();\n            tile.abort();\n            ongoingRequestCount--;\n        }\n    }\n    // This needs to be called every time some tiles have been added/removed from cache\n    _rebuildTree() {\n        const { _cache } = this;\n        // Reset states\n        for (const tile of _cache.values()) {\n            tile.parent = null;\n            if (tile.children) {\n                tile.children.length = 0;\n            }\n        }\n        // Rebuild tree\n        for (const tile of _cache.values()) {\n            const parent = this._getNearestAncestor(tile);\n            tile.parent = parent;\n            if (parent?.children) {\n                parent.children.push(tile);\n            }\n        }\n    }\n    /**\n     * Clear tiles that are not visible when the cache is full\n     */\n    /* eslint-disable complexity */\n    _resizeCache() {\n        const { _cache, opts } = this;\n        const maxCacheSize = opts.maxCacheSize ||\n            // @ts-expect-error called only when selectedTiles is initialized\n            (opts.maxCacheByteSize ? Infinity : DEFAULT_CACHE_SCALE * this.selectedTiles.length);\n        const maxCacheByteSize = opts.maxCacheByteSize || Infinity;\n        const overflown = _cache.size > maxCacheSize || this._cacheByteSize > maxCacheByteSize;\n        if (overflown) {\n            for (const [id, tile] of _cache) {\n                if (!tile.isVisible && !tile.isSelected) {\n                    // delete tile\n                    this._cacheByteSize -= opts.maxCacheByteSize ? tile.byteLength : 0;\n                    _cache.delete(id);\n                    this.opts.onTileUnload?.(tile);\n                }\n                if (_cache.size <= maxCacheSize && this._cacheByteSize <= maxCacheByteSize) {\n                    break;\n                }\n            }\n            this._rebuildTree();\n            this._dirty = true;\n        }\n        if (this._dirty) {\n            // sort by zoom level so that smaller tiles are displayed on top\n            this._tiles = Array.from(this._cache.values()).sort((t1, t2) => t1.zoom - t2.zoom);\n            this._dirty = false;\n        }\n    }\n    _getTile(index, create) {\n        const id = this.getTileId(index);\n        let tile = this._cache.get(id);\n        let needsReload = false;\n        if (!tile && create) {\n            tile = new Tile2DHeader(index);\n            Object.assign(tile, this.getTileMetadata(tile.index));\n            Object.assign(tile, { id, zoom: this.getTileZoom(tile.index) });\n            needsReload = true;\n            this._cache.set(id, tile);\n            this._dirty = true;\n        }\n        else if (tile && tile.needsReload) {\n            needsReload = true;\n        }\n        if (tile && needsReload) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            tile.loadData({\n                getData: this.opts.getTileData,\n                requestScheduler: this._requestScheduler,\n                onLoad: this.onTileLoad,\n                onError: this.opts.onTileError\n            });\n        }\n        return tile;\n    }\n    _getNearestAncestor(tile) {\n        const { _minZoom = 0 } = this;\n        let index = tile.index;\n        while (this.getTileZoom(index) > _minZoom) {\n            index = this.getParentIndex(index);\n            const parent = this._getTile(index);\n            if (parent) {\n                return parent;\n            }\n        }\n        return null;\n    }\n}\n/* -- Refinement strategies --*/\n/* eslint-disable max-depth */\n// For all the selected && pending tiles:\n// - pick the closest ancestor as placeholder\n// - if no ancestor is visible, pick the closest children as placeholder\nfunction updateTileStateDefault(allTiles) {\n    for (const tile of allTiles) {\n        tile.state = 0;\n    }\n    for (const tile of allTiles) {\n        if (tile.isSelected && !getPlaceholderInAncestors(tile)) {\n            getPlaceholderInChildren(tile);\n        }\n    }\n    for (const tile of allTiles) {\n        tile.isVisible = Boolean(tile.state & TILE_STATE_VISIBLE);\n    }\n}\n// Until a selected tile and all its selected siblings are loaded, use the closest ancestor as placeholder\nfunction updateTileStateReplace(allTiles) {\n    for (const tile of allTiles) {\n        tile.state = 0;\n    }\n    for (const tile of allTiles) {\n        if (tile.isSelected) {\n            getPlaceholderInAncestors(tile);\n        }\n    }\n    // Always process parents first\n    const sortedTiles = Array.from(allTiles).sort((t1, t2) => t1.zoom - t2.zoom);\n    for (const tile of sortedTiles) {\n        tile.isVisible = Boolean(tile.state & TILE_STATE_VISIBLE);\n        if (tile.children && (tile.isVisible || tile.state & TILE_STATE_VISITED)) {\n            // If the tile is rendered, or if the tile has been explicitly hidden, hide all of its children\n            for (const child of tile.children) {\n                child.state = TILE_STATE_VISITED;\n            }\n        }\n        else if (tile.isSelected) {\n            getPlaceholderInChildren(tile);\n        }\n    }\n}\n// Walk up the tree until we find one ancestor that is loaded. Returns true if successful.\nfunction getPlaceholderInAncestors(startTile) {\n    let tile = startTile;\n    while (tile) {\n        if (tile.isLoaded || tile.content) {\n            tile.state |= TILE_STATE_VISIBLE;\n            return true;\n        }\n        tile = tile.parent;\n    }\n    return false;\n}\n// Recursively set children as placeholder\nfunction getPlaceholderInChildren(tile) {\n    for (const child of tile.children) {\n        if (child.isLoaded || child.content) {\n            child.state |= TILE_STATE_VISIBLE;\n        }\n        else {\n            getPlaceholderInChildren(child);\n        }\n    }\n}\n", "import { CompositeLayer, _flatten as flatten } from '@deck.gl/core';\nimport { GeoJsonLayer } from '@deck.gl/layers';\nimport { Tileset2D, STRATEGY_DEFAULT } from \"../tileset-2d/index.js\";\nimport { urlType, getURLFromTemplate } from \"../tileset-2d/index.js\";\nconst defaultProps = {\n    TilesetClass: Tileset2D,\n    data: { type: 'data', value: [] },\n    dataComparator: urlType.equal,\n    renderSubLayers: { type: 'function', value: (props) => new GeoJsonLayer(props) },\n    getTileData: { type: 'function', optional: true, value: null },\n    // TODO - change to onViewportLoad to align with Tile3DLayer\n    onViewportLoad: { type: 'function', optional: true, value: null },\n    onTileLoad: { type: 'function', value: tile => { } },\n    onTileUnload: { type: 'function', value: tile => { } },\n    // eslint-disable-next-line\n    onTileError: { type: 'function', value: err => console.error(err) },\n    extent: { type: 'array', optional: true, value: null, compare: true },\n    tileSize: 512,\n    maxZoom: null,\n    minZoom: 0,\n    maxCacheSize: null,\n    maxCacheByteSize: null,\n    refinementStrategy: STRATEGY_DEFAULT,\n    zRange: null,\n    maxRequests: 6,\n    debounceTime: 0,\n    zoomOffset: 0\n};\n/**\n * The TileLayer is a composite layer that makes it possible to visualize very large datasets.\n *\n * Instead of fetching the entire dataset, it only loads and renders what's visible in the current viewport.\n */\nexport default class TileLayer extends CompositeLayer {\n    static { this.defaultProps = defaultProps; }\n    static { this.layerName = 'TileLayer'; }\n    initializeState() {\n        this.state = {\n            tileset: null,\n            isLoaded: false\n        };\n    }\n    finalizeState() {\n        this.state?.tileset?.finalize();\n    }\n    get isLoaded() {\n        return Boolean(this.state?.tileset?.selectedTiles?.every(tile => tile.isLoaded && tile.layers && tile.layers.every(layer => layer.isLoaded)));\n    }\n    shouldUpdateState({ changeFlags }) {\n        return changeFlags.somethingChanged;\n    }\n    updateState({ changeFlags }) {\n        let { tileset } = this.state;\n        const propsChanged = changeFlags.propsOrDataChanged || changeFlags.updateTriggersChanged;\n        const dataChanged = changeFlags.dataChanged ||\n            (changeFlags.updateTriggersChanged &&\n                (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getTileData));\n        if (!tileset) {\n            tileset = new this.props.TilesetClass(this._getTilesetOptions());\n            this.setState({ tileset });\n        }\n        else if (propsChanged) {\n            tileset.setOptions(this._getTilesetOptions());\n            if (dataChanged) {\n                // reload all tiles\n                // use cached layers until new content is loaded\n                tileset.reloadAll();\n            }\n            else {\n                // some render options changed, regenerate sub layers now\n                tileset.tiles.forEach(tile => {\n                    tile.layers = null;\n                });\n            }\n        }\n        this._updateTileset();\n    }\n    _getTilesetOptions() {\n        const { tileSize, maxCacheSize, maxCacheByteSize, refinementStrategy, extent, maxZoom, minZoom, maxRequests, debounceTime, zoomOffset } = this.props;\n        return {\n            maxCacheSize,\n            maxCacheByteSize,\n            maxZoom,\n            minZoom,\n            tileSize,\n            refinementStrategy,\n            extent,\n            maxRequests,\n            debounceTime,\n            zoomOffset,\n            getTileData: this.getTileData.bind(this),\n            onTileLoad: this._onTileLoad.bind(this),\n            onTileError: this._onTileError.bind(this),\n            onTileUnload: this._onTileUnload.bind(this)\n        };\n    }\n    _updateTileset() {\n        const tileset = this.state.tileset;\n        const { zRange, modelMatrix } = this.props;\n        const frameNumber = tileset.update(this.context.viewport, { zRange, modelMatrix });\n        const { isLoaded } = tileset;\n        const loadingStateChanged = this.state.isLoaded !== isLoaded;\n        const tilesetChanged = this.state.frameNumber !== frameNumber;\n        if (isLoaded && (loadingStateChanged || tilesetChanged)) {\n            this._onViewportLoad();\n        }\n        if (tilesetChanged) {\n            // Save the tileset frame number - trigger a rerender\n            this.setState({ frameNumber });\n        }\n        // Save the loaded state - should not trigger a rerender\n        this.state.isLoaded = isLoaded;\n    }\n    _onViewportLoad() {\n        const { tileset } = this.state;\n        const { onViewportLoad } = this.props;\n        if (onViewportLoad) {\n            // This method can only be called when tileset is defined and updated\n            onViewportLoad(tileset.selectedTiles);\n        }\n    }\n    _onTileLoad(tile) {\n        this.props.onTileLoad(tile);\n        tile.layers = null;\n        this.setNeedsUpdate();\n    }\n    _onTileError(error, tile) {\n        this.props.onTileError(error);\n        tile.layers = null;\n        this.setNeedsUpdate();\n    }\n    _onTileUnload(tile) {\n        this.props.onTileUnload(tile);\n    }\n    // Methods for subclass to override\n    getTileData(tile) {\n        const { data, getTileData, fetch } = this.props;\n        const { signal } = tile;\n        tile.url =\n            typeof data === 'string' || Array.isArray(data) ? getURLFromTemplate(data, tile) : null;\n        if (getTileData) {\n            return getTileData(tile);\n        }\n        if (fetch && tile.url) {\n            return fetch(tile.url, { propName: 'data', layer: this, signal });\n        }\n        return null;\n    }\n    renderSubLayers(props) {\n        return this.props.renderSubLayers(props);\n    }\n    getSubLayerPropsByTile(tile) {\n        return null;\n    }\n    getPickingInfo(params) {\n        const sourceTile = params.sourceLayer.props.tile;\n        const info = params.info;\n        if (info.picked) {\n            info.tile = sourceTile;\n        }\n        info.sourceTile = sourceTile;\n        return info;\n    }\n    _updateAutoHighlight(info) {\n        const sourceTile = info.sourceTile;\n        if (sourceTile && sourceTile.layers) {\n            for (const layer of sourceTile.layers) {\n                layer.updateAutoHighlight(info);\n            }\n        }\n    }\n    renderLayers() {\n        return this.state.tileset.tiles.map((tile) => {\n            const subLayerProps = this.getSubLayerPropsByTile(tile);\n            // cache the rendered layer in the tile\n            if (!tile.isLoaded && !tile.content) {\n                // nothing to show\n            }\n            else if (!tile.layers) {\n                const layers = this.renderSubLayers({\n                    ...this.props,\n                    ...this.getSubLayerProps({\n                        id: tile.id,\n                        updateTriggers: this.props.updateTriggers\n                    }),\n                    data: tile.content,\n                    _offset: 0,\n                    tile\n                });\n                tile.layers = flatten(layers, Boolean).map(layer => layer.clone({\n                    tile,\n                    ...subLayerProps\n                }));\n            }\n            else if (subLayerProps &&\n                tile.layers[0] &&\n                Object.keys(subLayerProps).some(propName => tile.layers[0].props[propName] !== subLayerProps[propName])) {\n                tile.layers = tile.layers.map(layer => layer.clone(subLayerProps));\n            }\n            return tile.layers;\n        });\n    }\n    filterSubLayer({ layer, cullRect }) {\n        const { tile } = layer.props;\n        return this.state.tileset.isTileVisible(tile, cullRect);\n    }\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { PathLayer } from '@deck.gl/layers';\nconst defaultProps = {\n    fadeTrail: true,\n    trailLength: { type: 'number', value: 120, min: 0 },\n    currentTime: { type: 'number', value: 0, min: 0 },\n    getTimestamps: { type: 'accessor', value: (d) => d.timestamps }\n};\n/** Render animated paths that represent vehicle trips. */\nexport default class TripsLayer extends PathLayer {\n    static { this.layerName = 'TripsLayer'; }\n    static { this.defaultProps = defaultProps; }\n    getShaders() {\n        const shaders = super.getShaders();\n        shaders.inject = {\n            'vs:#decl': `\\\nuniform float trailLength;\nin float instanceTimestamps;\nin float instanceNextTimestamps;\nout float vTime;\n`,\n            // Timestamp of the vertex\n            'vs:#main-end': `\\\nvTime = instanceTimestamps + (instanceNextTimestamps - instanceTimestamps) * vPathPosition.y / vPathLength;\n`,\n            'fs:#decl': `\\\nuniform bool fadeTrail;\nuniform float trailLength;\nuniform float currentTime;\nin float vTime;\n`,\n            // Drop the segments outside of the time window\n            'fs:#main-start': `\\\nif(vTime > currentTime || (fadeTrail && (vTime < currentTime - trailLength))) {\n  discard;\n}\n`,\n            // Fade the color (currentTime - 100%, end of trail - 0%)\n            'fs:DECKGL_FILTER_COLOR': `\\\nif(fadeTrail) {\n  color.a *= 1.0 - (currentTime - vTime) / trailLength;\n}\n`\n        };\n        return shaders;\n    }\n    initializeState() {\n        super.initializeState();\n        const attributeManager = this.getAttributeManager();\n        attributeManager.addInstanced({\n            timestamps: {\n                size: 1,\n                accessor: 'getTimestamps',\n                shaderAttributes: {\n                    instanceTimestamps: {\n                        vertexOffset: 0\n                    },\n                    instanceNextTimestamps: {\n                        vertexOffset: 1\n                    }\n                }\n            }\n        });\n    }\n    draw(params) {\n        const { fadeTrail, trailLength, currentTime } = this.props;\n        params.uniforms = {\n            ...params.uniforms,\n            fadeTrail,\n            trailLength,\n            currentTime\n        };\n        super.draw(params);\n    }\n}\n", "// @ts-nocheck\n\nvar libh3 = (\nfunction(libh3) {\n  libh3 = libh3 || {};\n\nvar Module=typeof libh3!==\"undefined\"?libh3:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\" && document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}read_=function shell_read(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data)}throw err}};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}catch(err){var data=tryParseAsDataURI(url);if(data){return data}throw err}}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return}onerror()};xhr.onerror=onerror;xhr.send(null)};setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var STACK_ALIGN=16;function dynamicAlloc(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;if(end>_emscripten_get_heap_size()){abort()}HEAP32[DYNAMICTOP_PTR>>2]=end;return ret}function getNativeTypeSize(type){switch(type){case\"i1\":case\"i8\":return 1;case\"i16\":return 2;case\"i32\":return 4;case\"i64\":return 8;case\"float\":return 4;case\"double\":return 8;default:{if(type[type.length-1]===\"*\"){return 4}else if(type[0]===\"i\"){var bits=parseInt(type.substr(1));assert(bits%8===0,\"getNativeTypeSize invalid bits \"+bits+\", type \"+type);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}var jsCallStartIndex=1;var functionPointers=new Array(0);var funcWrappers={};function dynCall(sig,ptr,args){if(args&&args.length){return Module[\"dynCall_\"+sig].apply(null,[ptr].concat(args))}else{return Module[\"dynCall_\"+sig].call(null,ptr)}}var tempRet0=0;var setTempRet0=function(value){tempRet0=value};var getTempRet0=function(){return tempRet0};var GLOBAL_BASE=8;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime;if(Module[\"noExitRuntime\"])noExitRuntime=Module[\"noExitRuntime\"];function setValue(ptr,value,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":HEAP8[ptr>>0]=value;break;case\"i8\":HEAP8[ptr>>0]=value;break;case\"i16\":HEAP16[ptr>>1]=value;break;case\"i32\":HEAP32[ptr>>2]=value;break;case\"i64\":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case\"float\":HEAPF32[ptr>>2]=value;break;case\"double\":HEAPF64[ptr>>3]=value;break;default:abort(\"invalid type for setValue: \"+type)}}function getValue(ptr,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":return HEAP8[ptr>>0];case\"i8\":return HEAP8[ptr>>0];case\"i16\":return HEAP16[ptr>>1];case\"i32\":return HEAP32[ptr>>2];case\"i64\":return HEAP32[ptr>>2];case\"float\":return HEAPF32[ptr>>2];case\"double\":return HEAPF64[ptr>>3];default:abort(\"invalid type for getValue: \"+type)}return null}var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var ALLOC_NONE=3;var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var STACK_BASE=24160,DYNAMIC_BASE=5267040,DYNAMICTOP_PTR=24128;var INITIAL_TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||33554432;if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{buffer=new ArrayBuffer(INITIAL_TOTAL_MEMORY)}INITIAL_TOTAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var Math_abs=Math.abs;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_min=Math.min;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var memoryInitializer=null;var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var tempDouble;var tempI64;memoryInitializer=\"data:application/octet-stream;base64,\";var tempDoublePtr=24144;function demangle(func){return func}function demangleAll(text){var regex=/\\b__Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return\"(no stack trace available)\"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module[\"extraStackTrace\"])js+=\"\\n\"+Module[\"extraStackTrace\"]();return demangleAll(js)}function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])}function _emscripten_get_heap_size(){return HEAP8.length}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest)}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function emscripten_realloc_buffer(size){try{var newBuffer=new ArrayBuffer(size);if(newBuffer.byteLength!=size)return;new Int8Array(newBuffer).set(HEAP8);_emscripten_replace_memory(newBuffer);updateGlobalBufferAndViews(newBuffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();var PAGE_MULTIPLE=16777216;var LIMIT=2147483648-PAGE_MULTIPLE;if(requestedSize>LIMIT){return false}var MIN_TOTAL_MEMORY=16777216;var newSize=Math.max(oldSize,MIN_TOTAL_MEMORY);while(newSize<requestedSize){if(newSize<=536870912){newSize=alignUp(2*newSize,PAGE_MULTIPLE)}else{newSize=Math.min(alignUp((3*newSize+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=emscripten_realloc_buffer(newSize);if(!replacement){return false}return true}var ASSERTIONS=false;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){if(ASSERTIONS){assert(false,\"Character code \"+chr+\" (\"+String.fromCharCode(chr)+\")  at offset \"+i+\" not in 0x00-0xFF.\")}chr&=255}ret.push(String.fromCharCode(chr))}return ret.join(\"\")}var decodeBase64=typeof atob===\"function\"?atob:function(input){var keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";var output=\"\";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output};function intArrayFromBase64(s){try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var asmGlobalArg={\"Math\":Math,\"Int8Array\":Int8Array,\"Int32Array\":Int32Array,\"Uint8Array\":Uint8Array,\"Float32Array\":Float32Array,\"Float64Array\":Float64Array};var asmLibraryArg={\"a\":abort,\"b\":setTempRet0,\"c\":getTempRet0,\"d\":___assert_fail,\"e\":___setErrNo,\"f\":_emscripten_get_heap_size,\"g\":_emscripten_memcpy_big,\"h\":_emscripten_resize_heap,\"i\":abortOnCannotGrowMemory,\"j\":demangle,\"k\":demangleAll,\"l\":emscripten_realloc_buffer,\"m\":jsStackTrace,\"n\":stackTrace,\"o\":tempDoublePtr,\"p\":DYNAMICTOP_PTR};// EMSCRIPTEN_START_ASM\nvar asm=(/** @suppress {uselessCode} */ function(global,env,buffer) {\n\"almost asm\";var a=new global.Int8Array(buffer),b=new global.Int32Array(buffer),c=new global.Uint8Array(buffer),d=new global.Float32Array(buffer),e=new global.Float64Array(buffer),f=env.o|0,g=env.p|0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=global.Math.floor,q=global.Math.abs,r=global.Math.sqrt,s=global.Math.pow,t=global.Math.cos,u=global.Math.sin,v=global.Math.tan,w=global.Math.acos,x=global.Math.asin,y=global.Math.atan,z=global.Math.atan2,A=global.Math.ceil,B=global.Math.imul,C=global.Math.min,D=global.Math.max,E=global.Math.clz32,F=env.a,G=env.b,H=env.c,I=env.d,J=env.e,K=env.f,L=env.g,M=env.h,N=env.i,O=env.j,P=env.k,Q=env.l,R=env.m,S=env.n,T=24160,U=5267040,V=0.0;function W(newBuffer){a=new Int8Array(newBuffer);c=new Uint8Array(newBuffer);b=new Int32Array(newBuffer);d=new Float32Array(newBuffer);e=new Float64Array(newBuffer);buffer=newBuffer;return true}\n// EMSCRIPTEN_START_FUNCS\nfunction X(a){a=a|0;var b=0;b=T;T=T+a|0;T=T+15&-16;return b|0}function Y(){return T|0}function Z(a){a=a|0;T=a}function _(a,b){a=a|0;b=b|0;T=a;U=b}function $(a,c){a=a|0;c=c|0;var d=0,e=0,f=0;if((a|0)<0){c=2;return c|0}if((a|0)>13780509){c=ic(15,c)|0;return c|0}else{d=((a|0)<0)<<31>>31;f=rd(a|0,d|0,3,0)|0;e=H()|0;d=ld(a|0,d|0,1,0)|0;d=rd(f|0,e|0,d|0,H()|0)|0;d=ld(d|0,H()|0,1,0)|0;a=H()|0;b[c>>2]=d;b[c+4>>2]=a;c=0;return c|0}return 0}function aa(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return ba(a,b,c,d,0)|0}function ba(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;j=T;T=T+16|0;h=j;if(!(ca(a,c,d,e,f)|0)){e=0;T=j;return e|0}do if((d|0)>=0){if((d|0)>13780509){g=ic(15,h)|0;if(g|0)break;i=h;h=b[i>>2]|0;i=b[i+4>>2]|0}else{g=((d|0)<0)<<31>>31;k=rd(d|0,g|0,3,0)|0;i=H()|0;g=ld(d|0,g|0,1,0)|0;g=rd(k|0,i|0,g|0,H()|0)|0;g=ld(g|0,H()|0,1,0)|0;i=H()|0;b[h>>2]=g;b[h+4>>2]=i;h=g}Bd(e|0,0,h<<3|0)|0;if(f|0){Bd(f|0,0,h<<2|0)|0;g=da(a,c,d,e,f,h,i,0)|0;break}g=kd(h,4)|0;if(!g)g=13;else{k=da(a,c,d,e,g,h,i,0)|0;jd(g);g=k}}else g=2;while(0);k=g;T=j;return k|0}function ca(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=T;T=T+16|0;o=q;p=q+8|0;n=o;b[n>>2]=a;b[n+4>>2]=c;if((d|0)<0){p=2;T=q;return p|0}g=e;b[g>>2]=a;b[g+4>>2]=c;g=(f|0)!=0;if(g)b[f>>2]=0;if(xb(a,c)|0){p=9;T=q;return p|0}b[p>>2]=0;a:do if((d|0)>=1)if(g){l=1;k=0;m=0;n=1;g=a;while(1){if(!(k|m)){g=ea(g,c,4,p,o)|0;if(g|0)break a;c=o;g=b[c>>2]|0;c=b[c+4>>2]|0;if(xb(g,c)|0){g=9;break a}}g=ea(g,c,b[22384+(m<<2)>>2]|0,p,o)|0;if(g|0)break a;c=o;g=b[c>>2]|0;c=b[c+4>>2]|0;a=e+(l<<3)|0;b[a>>2]=g;b[a+4>>2]=c;b[f+(l<<2)>>2]=n;a=k+1|0;h=(a|0)==(n|0);i=m+1|0;j=(i|0)==6;if(xb(g,c)|0){g=9;break a}n=n+(j&h&1)|0;if((n|0)>(d|0)){g=0;break}else{l=l+1|0;k=h?0:a;m=h?(j?0:i):m}}}else{l=1;k=0;m=0;n=1;g=a;while(1){if(!(k|m)){g=ea(g,c,4,p,o)|0;if(g|0)break a;c=o;g=b[c>>2]|0;c=b[c+4>>2]|0;if(xb(g,c)|0){g=9;break a}}g=ea(g,c,b[22384+(m<<2)>>2]|0,p,o)|0;if(g|0)break a;c=o;g=b[c>>2]|0;c=b[c+4>>2]|0;a=e+(l<<3)|0;b[a>>2]=g;b[a+4>>2]=c;a=k+1|0;h=(a|0)==(n|0);i=m+1|0;j=(i|0)==6;if(xb(g,c)|0){g=9;break a}n=n+(j&h&1)|0;if((n|0)>(d|0)){g=0;break}else{l=l+1|0;k=h?0:a;m=h?(j?0:i):m}}}else g=0;while(0);p=g;T=q;return p|0}function da(a,c,d,e,f,g,h,i){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;q=T;T=T+16|0;o=q+8|0;p=q;j=td(a|0,c|0,g|0,h|0)|0;l=H()|0;m=e+(j<<3)|0;r=m;s=b[r>>2]|0;r=b[r+4>>2]|0;k=(s|0)==(a|0)&(r|0)==(c|0);if(!((s|0)==0&(r|0)==0|k))do{j=ld(j|0,l|0,1,0)|0;j=sd(j|0,H()|0,g|0,h|0)|0;l=H()|0;m=e+(j<<3)|0;s=m;r=b[s>>2]|0;s=b[s+4>>2]|0;k=(r|0)==(a|0)&(s|0)==(c|0)}while(!((r|0)==0&(s|0)==0|k));j=f+(j<<2)|0;if(k?(b[j>>2]|0)<=(i|0):0){s=0;T=q;return s|0}s=m;b[s>>2]=a;b[s+4>>2]=c;b[j>>2]=i;if((i|0)>=(d|0)){s=0;T=q;return s|0}k=i+1|0;b[o>>2]=0;j=ea(a,c,2,o,p)|0;switch(j|0){case 9:{n=9;break}case 0:{j=p;j=da(b[j>>2]|0,b[j+4>>2]|0,d,e,f,g,h,k)|0;if(!j)n=9;break}default:{}}a:do if((n|0)==9){b[o>>2]=0;j=ea(a,c,3,o,p)|0;switch(j|0){case 9:break;case 0:{j=p;j=da(b[j>>2]|0,b[j+4>>2]|0,d,e,f,g,h,k)|0;if(j|0)break a;break}default:break a}b[o>>2]=0;j=ea(a,c,1,o,p)|0;switch(j|0){case 9:break;case 0:{j=p;j=da(b[j>>2]|0,b[j+4>>2]|0,d,e,f,g,h,k)|0;if(j|0)break a;break}default:break a}b[o>>2]=0;j=ea(a,c,5,o,p)|0;switch(j|0){case 9:break;case 0:{j=p;j=da(b[j>>2]|0,b[j+4>>2]|0,d,e,f,g,h,k)|0;if(j|0)break a;break}default:break a}b[o>>2]=0;j=ea(a,c,4,o,p)|0;switch(j|0){case 9:break;case 0:{j=p;j=da(b[j>>2]|0,b[j+4>>2]|0,d,e,f,g,h,k)|0;if(j|0)break a;break}default:break a}b[o>>2]=0;j=ea(a,c,6,o,p)|0;switch(j|0){case 9:break;case 0:{j=p;j=da(b[j>>2]|0,b[j+4>>2]|0,d,e,f,g,h,k)|0;if(j|0)break a;break}default:break a}s=0;T=q;return s|0}while(0);s=j;T=q;return s|0}function ea(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(d>>>0>6){f=1;return f|0}m=(b[e>>2]|0)%6|0;b[e>>2]=m;if((m|0)>0){g=0;do{d=Sa(d)|0;g=g+1|0}while((g|0)<(b[e>>2]|0))}m=vd(a|0,c|0,45)|0;H()|0;l=m&127;if(l>>>0>121){f=5;return f|0}j=Fb(a,c)|0;g=vd(a|0,c|0,52)|0;H()|0;g=g&15;a:do if(!g)k=8;else{while(1){h=(15-g|0)*3|0;i=vd(a|0,c|0,h|0)|0;H()|0;i=i&7;if((i|0)==7){c=5;break}p=(Lb(g)|0)==0;g=g+-1|0;n=wd(7,0,h|0)|0;c=c&~(H()|0);o=wd(b[(p?432:16)+(i*28|0)+(d<<2)>>2]|0,0,h|0)|0;h=H()|0;d=b[(p?640:224)+(i*28|0)+(d<<2)>>2]|0;a=o|a&~n;c=h|c;if(!d){d=0;break a}if(!g){k=8;break a}}return c|0}while(0);if((k|0)==8){p=b[848+(l*28|0)+(d<<2)>>2]|0;o=wd(p|0,0,45)|0;a=o|a;c=H()|0|c&-1040385;d=b[4272+(l*28|0)+(d<<2)>>2]|0;if((p&127|0)==127){p=wd(b[848+(l*28|0)+20>>2]|0,0,45)|0;c=H()|0|c&-1040385;d=b[4272+(l*28|0)+20>>2]|0;a=Hb(p|a,c)|0;c=H()|0;b[e>>2]=(b[e>>2]|0)+1}}i=vd(a|0,c|0,45)|0;H()|0;i=i&127;b:do if(!(ma(i)|0)){if((d|0)>0){g=0;do{a=Hb(a,c)|0;c=H()|0;g=g+1|0}while((g|0)!=(d|0))}}else{c:do if((Fb(a,c)|0)==1){if((l|0)!=(i|0))if(sa(i,b[7696+(l*28|0)>>2]|0)|0){a=Jb(a,c)|0;h=1;c=H()|0;break}else I(23313,22416,436,22424);switch(j|0){case 3:{a=Hb(a,c)|0;c=H()|0;b[e>>2]=(b[e>>2]|0)+1;h=0;break c}case 5:{a=Jb(a,c)|0;c=H()|0;b[e>>2]=(b[e>>2]|0)+5;h=0;break c}case 0:{p=9;return p|0}default:{p=1;return p|0}}}else h=0;while(0);if((d|0)>0){g=0;do{a=Gb(a,c)|0;c=H()|0;g=g+1|0}while((g|0)!=(d|0))}if((l|0)!=(i|0)){if(!(na(i)|0)){if((h|0)!=0|(Fb(a,c)|0)!=5)break;b[e>>2]=(b[e>>2]|0)+1;break}switch(m&127){case 8:case 118:break b;default:{}}if((Fb(a,c)|0)!=3)b[e>>2]=(b[e>>2]|0)+1}}while(0);b[e>>2]=((b[e>>2]|0)+d|0)%6|0;p=f;b[p>>2]=a;b[p+4>>2]=c;p=0;return p|0}function fa(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;i=T;T=T+16|0;g=i;h=i+8|0;f=(xb(a,c)|0)==0;f=f?1:2;while(1){b[h>>2]=0;k=(ea(a,c,f,h,g)|0)==0;j=g;if(k&((b[j>>2]|0)==(d|0)?(b[j+4>>2]|0)==(e|0):0)){a=4;break}f=f+1|0;if(f>>>0>=7){f=7;a=4;break}}if((a|0)==4){T=i;return f|0}return 0}function ga(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=T;T=T+16|0;n=p;o=p+8|0;m=n;b[m>>2]=a;b[m+4>>2]=c;if(!d){o=e;b[o>>2]=a;b[o+4>>2]=c;o=0;T=p;return o|0}b[o>>2]=0;a:do if(!(xb(a,c)|0)){g=(d|0)>0;if(g){f=0;m=a;do{a=ea(m,c,4,o,n)|0;if(a|0)break a;c=n;m=b[c>>2]|0;c=b[c+4>>2]|0;f=f+1|0;if(xb(m,c)|0){a=9;break a}}while((f|0)<(d|0));l=e;b[l>>2]=m;b[l+4>>2]=c;l=d+-1|0;if(g){k=0;a=1;do{f=22384+(k<<2)|0;if((k|0)==5){h=b[f>>2]|0;g=0;f=a;while(1){a=n;a=ea(b[a>>2]|0,b[a+4>>2]|0,h,o,n)|0;if(a|0)break a;if((g|0)!=(l|0)){j=n;i=b[j>>2]|0;j=b[j+4>>2]|0;a=e+(f<<3)|0;b[a>>2]=i;b[a+4>>2]=j;if(!(xb(i,j)|0))a=f+1|0;else{a=9;break a}}else a=f;g=g+1|0;if((g|0)>=(d|0))break;else f=a}}else{h=n;j=b[f>>2]|0;i=0;f=a;g=b[h>>2]|0;h=b[h+4>>2]|0;while(1){a=ea(g,h,j,o,n)|0;if(a|0)break a;h=n;g=b[h>>2]|0;h=b[h+4>>2]|0;a=e+(f<<3)|0;b[a>>2]=g;b[a+4>>2]=h;a=f+1|0;if(xb(g,h)|0){a=9;break a}i=i+1|0;if((i|0)>=(d|0))break;else f=a}}k=k+1|0}while(k>>>0<6);a=n;h=m;f=b[a>>2]|0;g=c;a=b[a+4>>2]|0}else{h=m;f=m;g=c;a=c}}else{h=e;b[h>>2]=a;b[h+4>>2]=c;h=a;f=a;g=c;a=c}a=(h|0)==(f|0)&(g|0)==(a|0)?0:9}else a=9;while(0);o=a;T=p;return o|0}function ha(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;i=T;T=T+48|0;f=i+16|0;g=i+8|0;h=i;if(d|0){h=15;T=i;return h|0}k=a;j=b[k+4>>2]|0;d=g;b[d>>2]=b[k>>2];b[d+4>>2]=j;Ec(g,f);c=za(f,c,h)|0;if(!c){d=b[g>>2]|0;g=b[a+8>>2]|0;if((g|0)>0){f=b[a+12>>2]|0;c=0;do{d=(b[f+(c<<3)>>2]|0)+d|0;c=c+1|0}while((c|0)<(g|0))}c=h;f=b[c>>2]|0;c=b[c+4>>2]|0;g=((d|0)<0)<<31>>31;if((c|0)<(g|0)|(c|0)==(g|0)&f>>>0<d>>>0){c=h;b[c>>2]=d;b[c+4>>2]=g;c=g}else d=f;j=ld(d|0,c|0,12,0)|0;k=H()|0;c=h;b[c>>2]=j;b[c+4>>2]=k;c=e;b[c>>2]=j;b[c+4>>2]=k;c=0}k=c;T=i;return k|0}function ia(a,c,d,f,g,h,i){a=a|0;c=c|0;d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,I=0,J=0.0,K=0.0,L=0.0,M=0.0;I=T;T=T+64|0;D=I+48|0;E=I+32|0;F=I+24|0;x=I+8|0;y=I;k=b[a>>2]|0;if((k|0)<=0){G=0;T=I;return G|0}z=a+4|0;A=D+8|0;B=E+8|0;C=x+8|0;j=0;v=0;while(1){l=b[z>>2]|0;u=l+(v<<4)|0;b[D>>2]=b[u>>2];b[D+4>>2]=b[u+4>>2];b[D+8>>2]=b[u+8>>2];b[D+12>>2]=b[u+12>>2];if((v|0)==(k+-1|0)){b[E>>2]=b[l>>2];b[E+4>>2]=b[l+4>>2];b[E+8>>2]=b[l+8>>2];b[E+12>>2]=b[l+12>>2]}else{u=l+(v+1<<4)|0;b[E>>2]=b[u>>2];b[E+4>>2]=b[u+4>>2];b[E+8>>2]=b[u+8>>2];b[E+12>>2]=b[u+12>>2]}k=Aa(D,E,f,F)|0;a:do if(!k){l=F;k=b[l>>2]|0;l=b[l+4>>2]|0;if((l|0)>0|(l|0)==0&k>>>0>0){t=0;u=0;b:while(1){M=+e[D>>3];s=md(k|0,l|0,t|0,u|0)|0;L=+(s>>>0)+4294967296.0*+(H()|0);J=+(k>>>0)+4294967296.0*+(l|0);K=+(t>>>0)+4294967296.0*+(u|0);e[x>>3]=M*L/J+ +e[E>>3]*K/J;e[C>>3]=+e[A>>3]*L/J+ +e[B>>3]*K/J;k=Mb(x,f,y)|0;if(k|0){j=k;break}s=y;r=b[s>>2]|0;s=b[s+4>>2]|0;o=td(r|0,s|0,c|0,d|0)|0;m=H()|0;k=i+(o<<3)|0;n=k;l=b[n>>2]|0;n=b[n+4>>2]|0;c:do if((l|0)==0&(n|0)==0){w=k;G=16}else{p=0;q=0;while(1){if((p|0)>(d|0)|(p|0)==(d|0)&q>>>0>c>>>0){j=1;break b}if((l|0)==(r|0)&(n|0)==(s|0))break c;k=ld(o|0,m|0,1,0)|0;o=sd(k|0,H()|0,c|0,d|0)|0;m=H()|0;q=ld(q|0,p|0,1,0)|0;p=H()|0;k=i+(o<<3)|0;n=k;l=b[n>>2]|0;n=b[n+4>>2]|0;if((l|0)==0&(n|0)==0){w=k;G=16;break}}}while(0);if((G|0)==16?(G=0,!((r|0)==0&(s|0)==0)):0){q=w;b[q>>2]=r;b[q+4>>2]=s;q=h+(b[g>>2]<<3)|0;b[q>>2]=r;b[q+4>>2]=s;q=g;q=ld(b[q>>2]|0,b[q+4>>2]|0,1,0)|0;r=H()|0;s=g;b[s>>2]=q;b[s+4>>2]=r}t=ld(t|0,u|0,1,0)|0;u=H()|0;l=F;k=b[l>>2]|0;l=b[l+4>>2]|0;if(!((l|0)>(u|0)|(l|0)==(u|0)&k>>>0>t>>>0)){l=1;break a}}l=0}else l=1}else{l=0;j=k}while(0);v=v+1|0;if(!l){G=21;break}k=b[a>>2]|0;if((v|0)>=(k|0)){j=0;G=21;break}}if((G|0)==21){T=I;return j|0}return 0}function ja(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,I=0,J=0,K=0;K=T;T=T+112|0;F=K+80|0;j=K+72|0;G=K;I=K+56|0;if(d|0){J=15;T=K;return J|0}k=a+8|0;J=id((b[k>>2]<<5)+32|0)|0;if(!J){J=13;T=K;return J|0}Fc(a,J);D=a;E=b[D+4>>2]|0;d=j;b[d>>2]=b[D>>2];b[d+4>>2]=E;Ec(j,F);d=za(F,c,G)|0;if(!d){d=b[j>>2]|0;g=b[k>>2]|0;if((g|0)>0){h=b[a+12>>2]|0;f=0;do{d=(b[h+(f<<3)>>2]|0)+d|0;f=f+1|0}while((f|0)!=(g|0));f=d}else f=d;d=G;g=b[d>>2]|0;d=b[d+4>>2]|0;h=((f|0)<0)<<31>>31;if((d|0)<(h|0)|(d|0)==(h|0)&g>>>0<f>>>0){d=G;b[d>>2]=f;b[d+4>>2]=h;d=h}else f=g;D=ld(f|0,d|0,12,0)|0;E=H()|0;d=G;b[d>>2]=D;b[d+4>>2]=E;d=0}else{D=0;E=0}if(d|0){jd(J);J=d;T=K;return J|0}f=kd(D,8)|0;if(!f){jd(J);J=13;T=K;return J|0}i=kd(D,8)|0;if(!i){jd(J);jd(f);J=13;T=K;return J|0}B=F;b[B>>2]=0;b[B+4>>2]=0;B=a;C=b[B+4>>2]|0;d=j;b[d>>2]=b[B>>2];b[d+4>>2]=C;d=ia(j,D,E,c,F,f,i)|0;a:do if(!d){b:do if((b[k>>2]|0)>0){h=a+12|0;g=0;while(1){d=ia((b[h>>2]|0)+(g<<3)|0,D,E,c,F,f,i)|0;g=g+1|0;if(d|0)break;if((g|0)>=(b[k>>2]|0))break b}jd(f);jd(i);jd(J);break a}while(0);if((E|0)>0|(E|0)==0&D>>>0>0)Bd(i|0,0,D<<3|0)|0;C=F;B=b[C+4>>2]|0;c:do if((B|0)>0|(B|0)==0&(b[C>>2]|0)>>>0>0){y=f;z=i;A=f;B=i;C=f;d=f;v=f;w=i;x=i;f=i;d:while(1){r=0;s=0;t=0;u=0;g=0;h=0;while(1){i=G;j=i+56|0;do{b[i>>2]=0;i=i+4|0}while((i|0)<(j|0));c=y+(r<<3)|0;k=b[c>>2]|0;c=b[c+4>>2]|0;if(ca(k,c,1,G,0)|0){i=G;j=i+56|0;do{b[i>>2]=0;i=i+4|0}while((i|0)<(j|0));i=kd(7,4)|0;if(i|0){da(k,c,1,G,i,7,0,0)|0;jd(i)}}q=0;while(1){p=G+(q<<3)|0;o=b[p>>2]|0;p=b[p+4>>2]|0;e:do if(!((o|0)==0&(p|0)==0)){l=td(o|0,p|0,D|0,E|0)|0;k=H()|0;i=e+(l<<3)|0;c=i;j=b[c>>2]|0;c=b[c+4>>2]|0;if(!((j|0)==0&(c|0)==0)){m=0;n=0;do{if((m|0)>(E|0)|(m|0)==(E|0)&n>>>0>D>>>0)break d;if((j|0)==(o|0)&(c|0)==(p|0)){i=g;j=h;break e}i=ld(l|0,k|0,1,0)|0;l=sd(i|0,H()|0,D|0,E|0)|0;k=H()|0;n=ld(n|0,m|0,1,0)|0;m=H()|0;i=e+(l<<3)|0;c=i;j=b[c>>2]|0;c=b[c+4>>2]|0}while(!((j|0)==0&(c|0)==0))}if(!((o|0)==0&(p|0)==0)){Pb(o,p,I)|0;if(Gc(a,J,I)|0){n=ld(g|0,h|0,1,0)|0;h=H()|0;m=i;b[m>>2]=o;b[m+4>>2]=p;g=z+(g<<3)|0;b[g>>2]=o;b[g+4>>2]=p;g=n}i=g;j=h}else{i=g;j=h}}else{i=g;j=h}while(0);q=q+1|0;if(q>>>0>=7)break;else{g=i;h=j}}r=ld(r|0,s|0,1,0)|0;s=H()|0;t=ld(t|0,u|0,1,0)|0;u=H()|0;h=F;g=b[h>>2]|0;h=b[h+4>>2]|0;if(!((u|0)<(h|0)|(u|0)==(h|0)&t>>>0<g>>>0))break;else{g=i;h=j}}if((h|0)>0|(h|0)==0&g>>>0>0){g=0;h=0;do{u=y+(g<<3)|0;b[u>>2]=0;b[u+4>>2]=0;g=ld(g|0,h|0,1,0)|0;h=H()|0;u=F;t=b[u+4>>2]|0}while((h|0)<(t|0)|((h|0)==(t|0)?g>>>0<(b[u>>2]|0)>>>0:0))}u=F;b[u>>2]=i;b[u+4>>2]=j;if((j|0)>0|(j|0)==0&i>>>0>0){q=f;r=x;s=C;t=w;u=z;f=v;x=d;w=A;v=q;d=r;C=B;B=s;A=t;z=y;y=u}else break c}jd(A);jd(B);jd(J);d=1;break a}else d=i;while(0);jd(J);jd(f);jd(d);d=0}else{jd(f);jd(i);jd(J)}while(0);J=d;T=K;return J|0}function ka(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=T;T=T+176|0;j=l;if((c|0)<1){_c(d,0,0);k=0;T=l;return k|0}i=a;i=vd(b[i>>2]|0,b[i+4>>2]|0,52)|0;H()|0;_c(d,(c|0)>6?c:6,i&15);i=0;while(1){e=a+(i<<3)|0;e=Qb(b[e>>2]|0,b[e+4>>2]|0,j)|0;if(e|0)break;e=b[j>>2]|0;if((e|0)>0){h=0;do{g=j+8+(h<<4)|0;h=h+1|0;e=j+8+(((h|0)%(e|0)|0)<<4)|0;f=dd(d,e,g)|0;if(!f)cd(d,g,e)|0;else bd(d,f)|0;e=b[j>>2]|0}while((h|0)<(e|0))}i=i+1|0;if((i|0)>=(c|0)){e=0;k=13;break}}if((k|0)==13){T=l;return e|0}$c(d);k=e;T=l;return k|0}function la(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;g=T;T=T+32|0;e=g;f=g+16|0;a=ka(a,c,f)|0;if(a|0){d=a;T=g;return d|0}b[d>>2]=0;b[d+4>>2]=0;b[d+8>>2]=0;a=ad(f)|0;if(a|0)do{c=qc(d)|0;do{rc(c,a)|0;h=a+16|0;b[e>>2]=b[h>>2];b[e+4>>2]=b[h+4>>2];b[e+8>>2]=b[h+8>>2];b[e+12>>2]=b[h+12>>2];bd(f,a)|0;a=ed(f,e)|0}while((a|0)!=0);a=ad(f)|0}while((a|0)!=0);$c(f);a=tc(d)|0;if(!a){h=0;T=g;return h|0}sc(d);h=a;T=g;return h|0}function ma(a){a=a|0;if(a>>>0>121){a=0;return a|0}a=b[7696+(a*28|0)+16>>2]|0;return a|0}function na(a){a=a|0;return (a|0)==4|(a|0)==117|0}function oa(a){a=a|0;return b[11120+((b[a>>2]|0)*216|0)+((b[a+4>>2]|0)*72|0)+((b[a+8>>2]|0)*24|0)+(b[a+12>>2]<<3)>>2]|0}function pa(a){a=a|0;return b[11120+((b[a>>2]|0)*216|0)+((b[a+4>>2]|0)*72|0)+((b[a+8>>2]|0)*24|0)+(b[a+12>>2]<<3)+4>>2]|0}function qa(a,c){a=a|0;c=c|0;a=7696+(a*28|0)|0;b[c>>2]=b[a>>2];b[c+4>>2]=b[a+4>>2];b[c+8>>2]=b[a+8>>2];b[c+12>>2]=b[a+12>>2];return}function ra(a,c){a=a|0;c=c|0;var d=0,e=0;if(c>>>0>20){c=-1;return c|0}do if((b[11120+(c*216|0)>>2]|0)!=(a|0))if((b[11120+(c*216|0)+8>>2]|0)!=(a|0))if((b[11120+(c*216|0)+16>>2]|0)!=(a|0))if((b[11120+(c*216|0)+24>>2]|0)!=(a|0))if((b[11120+(c*216|0)+32>>2]|0)!=(a|0))if((b[11120+(c*216|0)+40>>2]|0)!=(a|0))if((b[11120+(c*216|0)+48>>2]|0)!=(a|0))if((b[11120+(c*216|0)+56>>2]|0)!=(a|0))if((b[11120+(c*216|0)+64>>2]|0)!=(a|0))if((b[11120+(c*216|0)+72>>2]|0)!=(a|0))if((b[11120+(c*216|0)+80>>2]|0)!=(a|0))if((b[11120+(c*216|0)+88>>2]|0)!=(a|0))if((b[11120+(c*216|0)+96>>2]|0)!=(a|0))if((b[11120+(c*216|0)+104>>2]|0)!=(a|0))if((b[11120+(c*216|0)+112>>2]|0)!=(a|0))if((b[11120+(c*216|0)+120>>2]|0)!=(a|0))if((b[11120+(c*216|0)+128>>2]|0)!=(a|0))if((b[11120+(c*216|0)+136>>2]|0)==(a|0)){a=2;d=1;e=2}else{if((b[11120+(c*216|0)+144>>2]|0)==(a|0)){a=0;d=2;e=0;break}if((b[11120+(c*216|0)+152>>2]|0)==(a|0)){a=0;d=2;e=1;break}if((b[11120+(c*216|0)+160>>2]|0)==(a|0)){a=0;d=2;e=2;break}if((b[11120+(c*216|0)+168>>2]|0)==(a|0)){a=1;d=2;e=0;break}if((b[11120+(c*216|0)+176>>2]|0)==(a|0)){a=1;d=2;e=1;break}if((b[11120+(c*216|0)+184>>2]|0)==(a|0)){a=1;d=2;e=2;break}if((b[11120+(c*216|0)+192>>2]|0)==(a|0)){a=2;d=2;e=0;break}if((b[11120+(c*216|0)+200>>2]|0)==(a|0)){a=2;d=2;e=1;break}if((b[11120+(c*216|0)+208>>2]|0)==(a|0)){a=2;d=2;e=2;break}else a=-1;return a|0}else{a=2;d=1;e=1}else{a=2;d=1;e=0}else{a=1;d=1;e=2}else{a=1;d=1;e=1}else{a=1;d=1;e=0}else{a=0;d=1;e=2}else{a=0;d=1;e=1}else{a=0;d=1;e=0}else{a=2;d=0;e=2}else{a=2;d=0;e=1}else{a=2;d=0;e=0}else{a=1;d=0;e=2}else{a=1;d=0;e=1}else{a=1;d=0;e=0}else{a=0;d=0;e=2}else{a=0;d=0;e=1}else{a=0;d=0;e=0}while(0);c=b[11120+(c*216|0)+(d*72|0)+(a*24|0)+(e<<3)+4>>2]|0;return c|0}function sa(a,c){a=a|0;c=c|0;if((b[7696+(a*28|0)+20>>2]|0)==(c|0)){c=1;return c|0}c=(b[7696+(a*28|0)+24>>2]|0)==(c|0);return c|0}function ta(a,c){a=a|0;c=c|0;return b[848+(a*28|0)+(c<<2)>>2]|0}function ua(a,c){a=a|0;c=c|0;if((b[848+(a*28|0)>>2]|0)==(c|0)){c=0;return c|0}if((b[848+(a*28|0)+4>>2]|0)==(c|0)){c=1;return c|0}if((b[848+(a*28|0)+8>>2]|0)==(c|0)){c=2;return c|0}if((b[848+(a*28|0)+12>>2]|0)==(c|0)){c=3;return c|0}if((b[848+(a*28|0)+16>>2]|0)==(c|0)){c=4;return c|0}if((b[848+(a*28|0)+20>>2]|0)==(c|0)){c=5;return c|0}else return ((b[848+(a*28|0)+24>>2]|0)==(c|0)?6:7)|0;return 0}function va(){return 122}function wa(a){a=a|0;var c=0,d=0,e=0;c=0;do{wd(c|0,0,45)|0;e=H()|0|134225919;d=a+(c<<3)|0;b[d>>2]=-1;b[d+4>>2]=e;c=c+1|0}while((c|0)!=122);return 0}function xa(a){a=a|0;return +e[a+16>>3]<+e[a+24>>3]|0}function ya(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0;c=+e[b>>3];if(!(c>=+e[a+8>>3])){b=0;return b|0}if(!(c<=+e[a>>3])){b=0;return b|0}d=+e[a+16>>3];c=+e[a+24>>3];f=+e[b+8>>3];b=f>=c;a=f<=d&1;if(d<c){if(b)a=1}else if(!b)a=0;b=(a|0)!=0;return b|0}function za(a,c,d){a=a|0;c=c|0;d=d|0;var g=0.0,h=0.0,i=0.0,j=0.0,k=0,l=0,m=0,n=0,o=0,r=0,s=0,t=0,u=0.0,v=0.0;t=T;T=T+288|0;n=t+264|0;o=t+96|0;m=t;k=m;l=k+96|0;do{b[k>>2]=0;k=k+4|0}while((k|0)<(l|0));c=Ub(c,m)|0;if(c|0){s=c;T=t;return s|0}l=m;m=b[l>>2]|0;l=b[l+4>>2]|0;Pb(m,l,n)|0;Qb(m,l,o)|0;j=+ac(n,o+8|0);e[n>>3]=+e[a>>3];l=n+8|0;e[l>>3]=+e[a+16>>3];e[o>>3]=+e[a+8>>3];m=o+8|0;e[m>>3]=+e[a+24>>3];h=+ac(n,o);v=+e[l>>3]-+e[m>>3];i=+q(+v);u=+e[n>>3]-+e[o>>3];g=+q(+u);if(!(v==0.0|u==0.0)?(v=+xd(+i,+g),v=+A(+(h*h/+yd(+(v/+yd(+i,+g)),3.0)/(j*(j*2.59807621135)*.8))),e[f>>3]=v,r=~~v>>>0,s=+q(v)>=1.0?(v>0.0?~~+C(+p(v/4294967296.0),4294967295.0)>>>0:~~+A((v-+(~~v>>>0))/4294967296.0)>>>0):0,!(0==0?(b[f+4>>2]&2146435072|0)==2146435072:0)):0){o=(r|0)==0&(s|0)==0;c=d;b[c>>2]=o?1:r;b[c+4>>2]=o?0:s;c=0}else c=1;s=c;T=t;return s|0}function Aa(a,c,d,g){a=a|0;c=c|0;d=d|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0.0;m=T;T=T+288|0;j=m+264|0;k=m+96|0;l=m;h=l;i=h+96|0;do{b[h>>2]=0;h=h+4|0}while((h|0)<(i|0));d=Ub(d,l)|0;if(d|0){g=d;T=m;return g|0}d=l;h=b[d>>2]|0;d=b[d+4>>2]|0;Pb(h,d,j)|0;Qb(h,d,k)|0;n=+ac(j,k+8|0);n=+A(+(+ac(a,c)/(n*2.0)));e[f>>3]=n;d=~~n>>>0;h=+q(n)>=1.0?(n>0.0?~~+C(+p(n/4294967296.0),4294967295.0)>>>0:~~+A((n-+(~~n>>>0))/4294967296.0)>>>0):0;if(0==0?(b[f+4>>2]&2146435072|0)==2146435072:0){g=1;T=m;return g|0}l=(d|0)==0&(h|0)==0;b[g>>2]=l?1:d;b[g+4>>2]=l?0:h;g=0;T=m;return g|0}function Ba(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;b[a>>2]=c;b[a+4>>2]=d;b[a+8>>2]=e;return}function Ca(a,c){a=a|0;c=c|0;var d=0,f=0,g=0,h=0,i=0.0,j=0.0,k=0.0,l=0.0,m=0,n=0,o=0.0;n=c+8|0;b[n>>2]=0;k=+e[a>>3];i=+q(+k);l=+e[a+8>>3];j=+q(+l)/.8660254037844386;i=i+j*.5;d=~~i;a=~~j;i=i-+(d|0);j=j-+(a|0);do if(i<.5)if(i<.3333333333333333){b[c>>2]=d;if(j<(i+1.0)*.5){b[c+4>>2]=a;break}else{a=a+1|0;b[c+4>>2]=a;break}}else{o=1.0-i;a=(!(j<o)&1)+a|0;b[c+4>>2]=a;if(o<=j&j<i*2.0){d=d+1|0;b[c>>2]=d;break}else{b[c>>2]=d;break}}else{if(!(i<.6666666666666666)){d=d+1|0;b[c>>2]=d;if(j<i*.5){b[c+4>>2]=a;break}else{a=a+1|0;b[c+4>>2]=a;break}}if(j<1.0-i){b[c+4>>2]=a;if(i*2.0+-1.0<j){b[c>>2]=d;break}}else{a=a+1|0;b[c+4>>2]=a}d=d+1|0;b[c>>2]=d}while(0);do if(k<0.0)if(!(a&1)){m=(a|0)/2|0;m=md(d|0,((d|0)<0)<<31>>31|0,m|0,((m|0)<0)<<31>>31|0)|0;d=~~(+(d|0)-(+(m>>>0)+4294967296.0*+(H()|0))*2.0);b[c>>2]=d;break}else{m=(a+1|0)/2|0;m=md(d|0,((d|0)<0)<<31>>31|0,m|0,((m|0)<0)<<31>>31|0)|0;d=~~(+(d|0)-((+(m>>>0)+4294967296.0*+(H()|0))*2.0+1.0));b[c>>2]=d;break}while(0);m=c+4|0;if(l<0.0){d=d-((a<<1|1|0)/2|0)|0;b[c>>2]=d;a=0-a|0;b[m>>2]=a}f=a-d|0;if((d|0)<0){g=0-d|0;b[m>>2]=f;b[n>>2]=g;b[c>>2]=0;a=f;d=0}else g=0;if((a|0)<0){d=d-a|0;b[c>>2]=d;g=g-a|0;b[n>>2]=g;b[m>>2]=0;a=0}h=d-g|0;f=a-g|0;if((g|0)<0){b[c>>2]=h;b[m>>2]=f;b[n>>2]=0;a=f;d=h;g=0}f=(a|0)<(d|0)?a:d;f=(g|0)<(f|0)?g:f;if((f|0)<=0)return;b[c>>2]=d-f;b[m>>2]=a-f;b[n>>2]=g-f;return}function Da(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0;c=b[a>>2]|0;h=a+4|0;d=b[h>>2]|0;if((c|0)<0){d=d-c|0;b[h>>2]=d;g=a+8|0;b[g>>2]=(b[g>>2]|0)-c;b[a>>2]=0;c=0}if((d|0)<0){c=c-d|0;b[a>>2]=c;g=a+8|0;f=(b[g>>2]|0)-d|0;b[g>>2]=f;b[h>>2]=0;d=0}else{f=a+8|0;g=f;f=b[f>>2]|0}if((f|0)<0){c=c-f|0;b[a>>2]=c;d=d-f|0;b[h>>2]=d;b[g>>2]=0;f=0}e=(d|0)<(c|0)?d:c;e=(f|0)<(e|0)?f:e;if((e|0)<=0)return;b[a>>2]=c-e;b[h>>2]=d-e;b[g>>2]=f-e;return}function Ea(a,c){a=a|0;c=c|0;var d=0.0,f=0;f=b[a+8>>2]|0;d=+((b[a+4>>2]|0)-f|0);e[c>>3]=+((b[a>>2]|0)-f|0)-d*.5;e[c+8>>3]=d*.8660254037844386;return}function Fa(a,c,d){a=a|0;c=c|0;d=d|0;b[d>>2]=(b[c>>2]|0)+(b[a>>2]|0);b[d+4>>2]=(b[c+4>>2]|0)+(b[a+4>>2]|0);b[d+8>>2]=(b[c+8>>2]|0)+(b[a+8>>2]|0);return}function Ga(a,c,d){a=a|0;c=c|0;d=d|0;b[d>>2]=(b[a>>2]|0)-(b[c>>2]|0);b[d+4>>2]=(b[a+4>>2]|0)-(b[c+4>>2]|0);b[d+8>>2]=(b[a+8>>2]|0)-(b[c+8>>2]|0);return}function Ha(a,c){a=a|0;c=c|0;var d=0,e=0;d=B(b[a>>2]|0,c)|0;b[a>>2]=d;d=a+4|0;e=B(b[d>>2]|0,c)|0;b[d>>2]=e;a=a+8|0;c=B(b[a>>2]|0,c)|0;b[a>>2]=c;return}function Ia(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;h=b[a>>2]|0;i=(h|0)<0;e=(b[a+4>>2]|0)-(i?h:0)|0;g=(e|0)<0;f=(g?0-e|0:0)+((b[a+8>>2]|0)-(i?h:0))|0;d=(f|0)<0;a=d?0:f;c=(g?0:e)-(d?f:0)|0;f=(i?0:h)-(g?e:0)-(d?f:0)|0;d=(c|0)<(f|0)?c:f;d=(a|0)<(d|0)?a:d;e=(d|0)>0;a=a-(e?d:0)|0;c=c-(e?d:0)|0;a:do switch(f-(e?d:0)|0){case 0:switch(c|0){case 0:{i=(a|0)==0?0:(a|0)==1?1:7;return i|0}case 1:{i=(a|0)==0?2:(a|0)==1?3:7;return i|0}default:break a}case 1:switch(c|0){case 0:{i=(a|0)==0?4:(a|0)==1?5:7;return i|0}case 1:{if(!a)a=6;else break a;return a|0}default:break a}default:{}}while(0);i=7;return i|0}function Ja(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;h=a+8|0;f=b[h>>2]|0;g=(b[a>>2]|0)-f|0;i=a+4|0;f=(b[i>>2]|0)-f|0;do if(g>>>0>715827881|f>>>0>715827881){d=(g|0)>0;if(d){if((2147483647-g|0)<(g|0)){i=1;return i|0}if((2147483647-(g<<1)|0)<(g|0)){i=1;return i|0}}else{if((-2147483648-g|0)>(g|0)){i=1;return i|0}if((-2147483648-(g<<1)|0)>(g|0)){i=1;return i|0}}c=g*3|0;if((f|0)>0){if((2147483647-f|0)<(f|0)){i=1;return i|0}}else if((-2147483648-f|0)>(f|0)){i=1;return i|0}e=f<<1;if((g|0)>-1){if((c|-2147483648|0)>=(f|0)){i=1;return i|0}}else if((c^-2147483648|0)<(f|0)){i=1;return i|0}if(d){if((2147483647-g|0)<(e|0))c=1;else{d=e;break}return c|0}else{if((-2147483648-g|0)>(e|0))c=1;else{d=e;break}return c|0}}else{d=f<<1;c=g*3|0}while(0);e=hd(+(c-f|0)/7.0)|0;b[a>>2]=e;f=hd(+(d+g|0)/7.0)|0;b[i>>2]=f;b[h>>2]=0;d=(f|0)<(e|0);c=d?e:f;d=d?f:e;do if((d|0)<0){if((c|0)>0){if((c|-2147483648|0)<(d|0)&((d|0)!=-2147483648&(2147483647-c|0)>=(d|0)))break;I(23313,22444,355,22455)}if((d|0)==-2147483648|(-2147483648-c|0)>(d|0))I(23313,22444,355,22455);if((c|0)>-1){if((c|-2147483648|0)<(d|0))break;I(23313,22444,355,22455)}else{if((c^-2147483648|0)>=(d|0))break;I(23313,22444,355,22455)}}while(0);c=f-e|0;if((e|0)<0){d=0-e|0;b[i>>2]=c;b[h>>2]=d;b[a>>2]=0;e=0}else{c=f;d=0}if((c|0)<0){e=e-c|0;b[a>>2]=e;d=d-c|0;b[h>>2]=d;b[i>>2]=0;c=0}g=e-d|0;f=c-d|0;if((d|0)<0){b[a>>2]=g;b[i>>2]=f;b[h>>2]=0;c=f;f=g;d=0}else f=e;e=(c|0)<(f|0)?c:f;e=(d|0)<(e|0)?d:e;if((e|0)<=0){i=0;return i|0}b[a>>2]=f-e;b[i>>2]=c-e;b[h>>2]=d-e;i=0;return i|0}function Ka(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;h=a+8|0;f=b[h>>2]|0;g=(b[a>>2]|0)-f|0;i=a+4|0;f=(b[i>>2]|0)-f|0;do if(g>>>0>715827881|f>>>0>715827881){d=(g|0)>0;if(d){if((2147483647-g|0)<(g|0)){i=1;return i|0}}else if((-2147483648-g|0)>(g|0)){i=1;return i|0}c=g<<1;if((f|0)>0){if((2147483647-f|0)<(f|0)){i=1;return i|0}if((2147483647-(f<<1)|0)<(f|0)){i=1;return i|0}}else{if((-2147483648-f|0)>(f|0)){i=1;return i|0}if((-2147483648-(f<<1)|0)>(f|0)){i=1;return i|0}}e=f*3|0;if(d){if((2147483647-c|0)<(f|0)){i=1;return i|0}}else if((-2147483648-c|0)>(f|0)){i=1;return i|0}if((f|0)>-1){if((e|-2147483648|0)<(g|0)){d=e;break}else c=1;return c|0}else{if((e^-2147483648|0)<(g|0))c=1;else{d=e;break}return c|0}}else{d=f*3|0;c=g<<1}while(0);e=hd(+(c+f|0)/7.0)|0;b[a>>2]=e;f=hd(+(d-g|0)/7.0)|0;b[i>>2]=f;b[h>>2]=0;d=(f|0)<(e|0);c=d?e:f;d=d?f:e;do if((d|0)<0){if((c|0)>0){if((c|-2147483648|0)<(d|0)&((d|0)!=-2147483648&(2147483647-c|0)>=(d|0)))break;I(23313,22444,404,22469)}if((d|0)==-2147483648|(-2147483648-c|0)>(d|0))I(23313,22444,404,22469);if((c|0)>-1){if((c|-2147483648|0)<(d|0))break;I(23313,22444,404,22469)}else{if((c^-2147483648|0)>=(d|0))break;I(23313,22444,404,22469)}}while(0);c=f-e|0;if((e|0)<0){d=0-e|0;b[i>>2]=c;b[h>>2]=d;b[a>>2]=0;e=0}else{c=f;d=0}if((c|0)<0){e=e-c|0;b[a>>2]=e;d=d-c|0;b[h>>2]=d;b[i>>2]=0;c=0}g=e-d|0;f=c-d|0;if((d|0)<0){b[a>>2]=g;b[i>>2]=f;b[h>>2]=0;c=f;f=g;d=0}else f=e;e=(c|0)<(f|0)?c:f;e=(d|0)<(e|0)?d:e;if((e|0)<=0){i=0;return i|0}b[a>>2]=f-e;b[i>>2]=c-e;b[h>>2]=d-e;i=0;return i|0}function La(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;h=a+8|0;d=b[h>>2]|0;c=(b[a>>2]|0)-d|0;i=a+4|0;d=(b[i>>2]|0)-d|0;e=hd(+((c*3|0)-d|0)/7.0)|0;b[a>>2]=e;c=hd(+((d<<1)+c|0)/7.0)|0;b[i>>2]=c;b[h>>2]=0;d=c-e|0;if((e|0)<0){g=0-e|0;b[i>>2]=d;b[h>>2]=g;b[a>>2]=0;c=d;e=0;d=g}else d=0;if((c|0)<0){e=e-c|0;b[a>>2]=e;d=d-c|0;b[h>>2]=d;b[i>>2]=0;c=0}g=e-d|0;f=c-d|0;if((d|0)<0){b[a>>2]=g;b[i>>2]=f;b[h>>2]=0;c=f;f=g;d=0}else f=e;e=(c|0)<(f|0)?c:f;e=(d|0)<(e|0)?d:e;if((e|0)<=0)return;b[a>>2]=f-e;b[i>>2]=c-e;b[h>>2]=d-e;return}function Ma(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;h=a+8|0;d=b[h>>2]|0;c=(b[a>>2]|0)-d|0;i=a+4|0;d=(b[i>>2]|0)-d|0;e=hd(+((c<<1)+d|0)/7.0)|0;b[a>>2]=e;c=hd(+((d*3|0)-c|0)/7.0)|0;b[i>>2]=c;b[h>>2]=0;d=c-e|0;if((e|0)<0){g=0-e|0;b[i>>2]=d;b[h>>2]=g;b[a>>2]=0;c=d;e=0;d=g}else d=0;if((c|0)<0){e=e-c|0;b[a>>2]=e;d=d-c|0;b[h>>2]=d;b[i>>2]=0;c=0}g=e-d|0;f=c-d|0;if((d|0)<0){b[a>>2]=g;b[i>>2]=f;b[h>>2]=0;c=f;f=g;d=0}else f=e;e=(c|0)<(f|0)?c:f;e=(d|0)<(e|0)?d:e;if((e|0)<=0)return;b[a>>2]=f-e;b[i>>2]=c-e;b[h>>2]=d-e;return}function Na(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;c=b[a>>2]|0;h=a+4|0;d=b[h>>2]|0;i=a+8|0;e=b[i>>2]|0;f=d+(c*3|0)|0;b[a>>2]=f;d=e+(d*3|0)|0;b[h>>2]=d;c=(e*3|0)+c|0;b[i>>2]=c;e=d-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=e;b[i>>2]=c;b[a>>2]=0;d=e;e=0}else e=f;if((d|0)<0){e=e-d|0;b[a>>2]=e;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=e-c|0;f=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=f;b[i>>2]=0;e=g;c=0}else f=d;d=(f|0)<(e|0)?f:e;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=e-d;b[h>>2]=f-d;b[i>>2]=c-d;return}function Oa(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;f=b[a>>2]|0;h=a+4|0;c=b[h>>2]|0;i=a+8|0;d=b[i>>2]|0;e=(c*3|0)+f|0;f=d+(f*3|0)|0;b[a>>2]=f;b[h>>2]=e;c=(d*3|0)+c|0;b[i>>2]=c;d=e-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=d;b[i>>2]=c;b[a>>2]=0;f=0}else d=e;if((d|0)<0){f=f-d|0;b[a>>2]=f;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=f-c|0;e=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=e;b[i>>2]=0;f=g;c=0}else e=d;d=(e|0)<(f|0)?e:f;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=f-d;b[h>>2]=e-d;b[i>>2]=c-d;return}function Pa(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;if((c+-1|0)>>>0>=6)return;f=(b[15440+(c*12|0)>>2]|0)+(b[a>>2]|0)|0;b[a>>2]=f;i=a+4|0;e=(b[15440+(c*12|0)+4>>2]|0)+(b[i>>2]|0)|0;b[i>>2]=e;h=a+8|0;c=(b[15440+(c*12|0)+8>>2]|0)+(b[h>>2]|0)|0;b[h>>2]=c;d=e-f|0;if((f|0)<0){c=c-f|0;b[i>>2]=d;b[h>>2]=c;b[a>>2]=0;e=0}else{d=e;e=f}if((d|0)<0){e=e-d|0;b[a>>2]=e;c=c-d|0;b[h>>2]=c;b[i>>2]=0;d=0}g=e-c|0;f=d-c|0;if((c|0)<0){b[a>>2]=g;b[i>>2]=f;b[h>>2]=0;e=g;c=0}else f=d;d=(f|0)<(e|0)?f:e;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=e-d;b[i>>2]=f-d;b[h>>2]=c-d;return}function Qa(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;f=b[a>>2]|0;h=a+4|0;c=b[h>>2]|0;i=a+8|0;d=b[i>>2]|0;e=c+f|0;f=d+f|0;b[a>>2]=f;b[h>>2]=e;c=d+c|0;b[i>>2]=c;d=e-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=d;b[i>>2]=c;b[a>>2]=0;e=0}else{d=e;e=f}if((d|0)<0){e=e-d|0;b[a>>2]=e;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=e-c|0;f=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=f;b[i>>2]=0;e=g;c=0}else f=d;d=(f|0)<(e|0)?f:e;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=e-d;b[h>>2]=f-d;b[i>>2]=c-d;return}function Ra(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;c=b[a>>2]|0;h=a+4|0;e=b[h>>2]|0;i=a+8|0;d=b[i>>2]|0;f=e+c|0;b[a>>2]=f;e=d+e|0;b[h>>2]=e;c=d+c|0;b[i>>2]=c;d=e-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=d;b[i>>2]=c;b[a>>2]=0;e=0}else{d=e;e=f}if((d|0)<0){e=e-d|0;b[a>>2]=e;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=e-c|0;f=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=f;b[i>>2]=0;e=g;c=0}else f=d;d=(f|0)<(e|0)?f:e;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=e-d;b[h>>2]=f-d;b[i>>2]=c-d;return}function Sa(a){a=a|0;switch(a|0){case 1:{a=5;break}case 5:{a=4;break}case 4:{a=6;break}case 6:{a=2;break}case 2:{a=3;break}case 3:{a=1;break}default:{}}return a|0}function Ta(a){a=a|0;switch(a|0){case 1:{a=3;break}case 3:{a=2;break}case 2:{a=6;break}case 6:{a=4;break}case 4:{a=5;break}case 5:{a=1;break}default:{}}return a|0}function Ua(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;c=b[a>>2]|0;h=a+4|0;d=b[h>>2]|0;i=a+8|0;e=b[i>>2]|0;f=d+(c<<1)|0;b[a>>2]=f;d=e+(d<<1)|0;b[h>>2]=d;c=(e<<1)+c|0;b[i>>2]=c;e=d-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=e;b[i>>2]=c;b[a>>2]=0;d=e;e=0}else e=f;if((d|0)<0){e=e-d|0;b[a>>2]=e;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=e-c|0;f=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=f;b[i>>2]=0;e=g;c=0}else f=d;d=(f|0)<(e|0)?f:e;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=e-d;b[h>>2]=f-d;b[i>>2]=c-d;return}function Va(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;f=b[a>>2]|0;h=a+4|0;c=b[h>>2]|0;i=a+8|0;d=b[i>>2]|0;e=(c<<1)+f|0;f=d+(f<<1)|0;b[a>>2]=f;b[h>>2]=e;c=(d<<1)+c|0;b[i>>2]=c;d=e-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=d;b[i>>2]=c;b[a>>2]=0;f=0}else d=e;if((d|0)<0){f=f-d|0;b[a>>2]=f;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=f-c|0;e=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=e;b[i>>2]=0;f=g;c=0}else e=d;d=(e|0)<(f|0)?e:f;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=f-d;b[h>>2]=e-d;b[i>>2]=c-d;return}function Wa(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;h=(b[a>>2]|0)-(b[c>>2]|0)|0;i=(h|0)<0;e=(b[a+4>>2]|0)-(b[c+4>>2]|0)-(i?h:0)|0;g=(e|0)<0;f=(i?0-h|0:0)+(b[a+8>>2]|0)-(b[c+8>>2]|0)+(g?0-e|0:0)|0;a=(f|0)<0;c=a?0:f;d=(g?0:e)-(a?f:0)|0;f=(i?0:h)-(g?e:0)-(a?f:0)|0;a=(d|0)<(f|0)?d:f;a=(c|0)<(a|0)?c:a;e=(a|0)>0;c=c-(e?a:0)|0;d=d-(e?a:0)|0;a=f-(e?a:0)|0;a=(a|0)>-1?a:0-a|0;d=(d|0)>-1?d:0-d|0;c=(c|0)>-1?c:0-c|0;c=(d|0)>(c|0)?d:c;return ((a|0)>(c|0)?a:c)|0}function Xa(a,c){a=a|0;c=c|0;var d=0;d=b[a+8>>2]|0;b[c>>2]=(b[a>>2]|0)-d;b[c+4>>2]=(b[a+4>>2]|0)-d;return}function Ya(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;e=b[a>>2]|0;b[c>>2]=e;f=b[a+4>>2]|0;h=c+4|0;b[h>>2]=f;i=c+8|0;b[i>>2]=0;d=(f|0)<(e|0);a=d?e:f;d=d?f:e;do if((d|0)<0){if((a|0)>0){if((a|-2147483648|0)<(d|0)&((d|0)!=-2147483648&(2147483647-a|0)>=(d|0)))break;else a=1;return a|0}if((d|0)==-2147483648|(-2147483648-a|0)>(d|0)){c=1;return c|0}if((a|0)>-1){if((a|-2147483648|0)<(d|0))break;else a=1;return a|0}else{if((a^-2147483648|0)<(d|0))a=1;else break;return a|0}}while(0);a=f-e|0;if((e|0)<0){d=0-e|0;b[h>>2]=a;b[i>>2]=d;b[c>>2]=0;e=0}else{a=f;d=0}if((a|0)<0){e=e-a|0;b[c>>2]=e;d=d-a|0;b[i>>2]=d;b[h>>2]=0;a=0}g=e-d|0;f=a-d|0;if((d|0)<0){b[c>>2]=g;b[h>>2]=f;b[i>>2]=0;a=f;f=g;d=0}else f=e;e=(a|0)<(f|0)?a:f;e=(d|0)<(e|0)?d:e;if((e|0)<=0){c=0;return c|0}b[c>>2]=f-e;b[h>>2]=a-e;b[i>>2]=d-e;c=0;return c|0}function Za(a){a=a|0;var c=0,d=0,e=0,f=0;c=a+8|0;f=b[c>>2]|0;d=f-(b[a>>2]|0)|0;b[a>>2]=d;e=a+4|0;a=(b[e>>2]|0)-f|0;b[e>>2]=a;b[c>>2]=0-(a+d);return}function _a(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;d=b[a>>2]|0;c=0-d|0;b[a>>2]=c;h=a+8|0;b[h>>2]=0;i=a+4|0;e=b[i>>2]|0;f=e+d|0;if((d|0)>0){b[i>>2]=f;b[h>>2]=d;b[a>>2]=0;c=0;e=f}else d=0;if((e|0)<0){g=c-e|0;b[a>>2]=g;d=d-e|0;b[h>>2]=d;b[i>>2]=0;f=g-d|0;c=0-d|0;if((d|0)<0){b[a>>2]=f;b[i>>2]=c;b[h>>2]=0;e=c;d=0}else{e=0;f=g}}else f=c;c=(e|0)<(f|0)?e:f;c=(d|0)<(c|0)?d:c;if((c|0)<=0)return;b[a>>2]=f-c;b[i>>2]=e-c;b[h>>2]=d-c;return}function $a(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=T;T=T+64|0;l=m;i=m+56|0;if(!(0==0&(c&2013265920|0)==134217728&(0==0&(e&2013265920|0)==134217728))){f=5;T=m;return f|0}if((a|0)==(d|0)&(c|0)==(e|0)){b[f>>2]=0;f=0;T=m;return f|0}h=vd(a|0,c|0,52)|0;H()|0;h=h&15;k=vd(d|0,e|0,52)|0;H()|0;if((h|0)!=(k&15|0)){f=12;T=m;return f|0}g=h+-1|0;if(h>>>0>1){vb(a,c,g,l)|0;vb(d,e,g,i)|0;k=l;j=b[k>>2]|0;k=b[k+4>>2]|0;a:do if((j|0)==(b[i>>2]|0)?(k|0)==(b[i+4>>2]|0):0){h=(h^15)*3|0;g=vd(a|0,c|0,h|0)|0;H()|0;g=g&7;h=vd(d|0,e|0,h|0)|0;H()|0;h=h&7;do if(!((g|0)==0|(h|0)==0))if((g|0)==7)g=5;else{if((g|0)==1|(h|0)==1?xb(j,k)|0:0){g=5;break}if((b[15536+(g<<2)>>2]|0)!=(h|0)?(b[15568+(g<<2)>>2]|0)!=(h|0):0)break a;b[f>>2]=1;g=0}else{b[f>>2]=1;g=0}while(0);f=g;T=m;return f|0}while(0)}g=l;h=g+56|0;do{b[g>>2]=0;g=g+4|0}while((g|0)<(h|0));aa(a,c,1,l)|0;c=l;if(((((!((b[c>>2]|0)==(d|0)?(b[c+4>>2]|0)==(e|0):0)?(c=l+8|0,!((b[c>>2]|0)==(d|0)?(b[c+4>>2]|0)==(e|0):0)):0)?(c=l+16|0,!((b[c>>2]|0)==(d|0)?(b[c+4>>2]|0)==(e|0):0)):0)?(c=l+24|0,!((b[c>>2]|0)==(d|0)?(b[c+4>>2]|0)==(e|0):0)):0)?(c=l+32|0,!((b[c>>2]|0)==(d|0)?(b[c+4>>2]|0)==(e|0):0)):0)?(c=l+40|0,!((b[c>>2]|0)==(d|0)?(b[c+4>>2]|0)==(e|0):0)):0){g=l+48|0;g=((b[g>>2]|0)==(d|0)?(b[g+4>>2]|0)==(e|0):0)&1}else g=1;b[f>>2]=g;f=0;T=m;return f|0}function ab(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;d=fa(a,c,d,e)|0;if((d|0)==7){f=11;return f|0}e=wd(d|0,0,56)|0;c=c&-2130706433|(H()|0)|268435456;b[f>>2]=a|e;b[f+4>>2]=c;f=0;return f|0}function bb(a,c,d){a=a|0;c=c|0;d=d|0;if(!(0==0&(c&2013265920|0)==268435456)){d=6;return d|0}b[d>>2]=a;b[d+4>>2]=c&-2130706433|134217728;d=0;return d|0}function cb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0;f=T;T=T+16|0;e=f;b[e>>2]=0;if(!(0==0&(c&2013265920|0)==268435456)){e=6;T=f;return e|0}g=vd(a|0,c|0,56)|0;H()|0;e=ea(a,c&-2130706433|134217728,g&7,e,d)|0;T=f;return e|0}function db(a,b){a=a|0;b=b|0;var c=0;c=vd(a|0,b|0,56)|0;H()|0;switch(c&7){case 0:case 7:{c=0;return c|0}default:{}}c=b&-2130706433|134217728;if(!(0==0&(b&2013265920|0)==268435456)){c=0;return c|0}if(0==0&(b&117440512|0)==16777216&(xb(a,c)|0)!=0){c=0;return c|0}c=ub(a,c)|0;return c|0}function eb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;f=T;T=T+16|0;e=f;if(!(0==0&(c&2013265920|0)==268435456)){e=6;T=f;return e|0}g=c&-2130706433|134217728;h=d;b[h>>2]=a;b[h+4>>2]=g;b[e>>2]=0;c=vd(a|0,c|0,56)|0;H()|0;e=ea(a,g,c&7,e,d+8|0)|0;T=f;return e|0}function fb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0;f=(xb(a,c)|0)==0;c=c&-2130706433;e=d;b[e>>2]=f?a:0;b[e+4>>2]=f?c|285212672:0;e=d+8|0;b[e>>2]=a;b[e+4>>2]=c|301989888;e=d+16|0;b[e>>2]=a;b[e+4>>2]=c|318767104;e=d+24|0;b[e>>2]=a;b[e+4>>2]=c|335544320;e=d+32|0;b[e>>2]=a;b[e+4>>2]=c|352321536;d=d+40|0;b[d>>2]=a;b[d+4>>2]=c|369098752;return 0}function gb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;h=T;T=T+16|0;f=h;g=c&-2130706433|134217728;if(!(0==0&(c&2013265920|0)==268435456)){g=6;T=h;return g|0}e=vd(a|0,c|0,56)|0;H()|0;e=Uc(a,g,e&7)|0;if((e|0)==-1){b[d>>2]=0;g=6;T=h;return g|0}if(Ob(a,g,f)|0)I(23313,22484,282,22499);c=vd(a|0,c|0,52)|0;H()|0;c=c&15;if(!(xb(a,g)|0))qb(f,c,e,2,d);else mb(f,c,e,2,d);g=0;T=h;return g|0}function hb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=T;T=T+16|0;e=d;ib(a,b,c,e);Ca(e,c+4|0);T=d;return}function ib(a,c,d,f){a=a|0;c=c|0;d=d|0;f=f|0;var g=0.0,h=0.0,i=0.0,j=0,k=0;j=T;T=T+16|0;k=j;jb(a,d,k);h=+w(+(1.0-+e[k>>3]*.5));if(h<1.0e-16){b[f>>2]=0;b[f+4>>2]=0;b[f+8>>2]=0;b[f+12>>2]=0;T=j;return}k=b[d>>2]|0;g=+e[15920+(k*24|0)>>3];g=+Zb(g-+Zb(+cc(15600+(k<<4)|0,a)));if(!(Lb(c)|0))i=g;else i=+Zb(g+-.3334731722518321);g=+v(+h)/.381966011250105;if((c|0)>0){a=0;do{g=g*2.6457513110645907;a=a+1|0}while((a|0)!=(c|0))}h=+t(+i)*g;e[f>>3]=h;i=+u(+i)*g;e[f+8>>3]=i;T=j;return}function jb(a,c,d){a=a|0;c=c|0;d=d|0;var f=0.0,g=0,h=0;h=T;T=T+32|0;g=h;Tc(a,g);b[c>>2]=0;e[d>>3]=5.0;f=+Sc(16400,g);if(f<+e[d>>3]){b[c>>2]=0;e[d>>3]=f}f=+Sc(16424,g);if(f<+e[d>>3]){b[c>>2]=1;e[d>>3]=f}f=+Sc(16448,g);if(f<+e[d>>3]){b[c>>2]=2;e[d>>3]=f}f=+Sc(16472,g);if(f<+e[d>>3]){b[c>>2]=3;e[d>>3]=f}f=+Sc(16496,g);if(f<+e[d>>3]){b[c>>2]=4;e[d>>3]=f}f=+Sc(16520,g);if(f<+e[d>>3]){b[c>>2]=5;e[d>>3]=f}f=+Sc(16544,g);if(f<+e[d>>3]){b[c>>2]=6;e[d>>3]=f}f=+Sc(16568,g);if(f<+e[d>>3]){b[c>>2]=7;e[d>>3]=f}f=+Sc(16592,g);if(f<+e[d>>3]){b[c>>2]=8;e[d>>3]=f}f=+Sc(16616,g);if(f<+e[d>>3]){b[c>>2]=9;e[d>>3]=f}f=+Sc(16640,g);if(f<+e[d>>3]){b[c>>2]=10;e[d>>3]=f}f=+Sc(16664,g);if(f<+e[d>>3]){b[c>>2]=11;e[d>>3]=f}f=+Sc(16688,g);if(f<+e[d>>3]){b[c>>2]=12;e[d>>3]=f}f=+Sc(16712,g);if(f<+e[d>>3]){b[c>>2]=13;e[d>>3]=f}f=+Sc(16736,g);if(f<+e[d>>3]){b[c>>2]=14;e[d>>3]=f}f=+Sc(16760,g);if(f<+e[d>>3]){b[c>>2]=15;e[d>>3]=f}f=+Sc(16784,g);if(f<+e[d>>3]){b[c>>2]=16;e[d>>3]=f}f=+Sc(16808,g);if(f<+e[d>>3]){b[c>>2]=17;e[d>>3]=f}f=+Sc(16832,g);if(f<+e[d>>3]){b[c>>2]=18;e[d>>3]=f}f=+Sc(16856,g);if(!(f<+e[d>>3])){T=h;return}b[c>>2]=19;e[d>>3]=f;T=h;return}function kb(a,c,d,f,g){a=a|0;c=c|0;d=d|0;f=f|0;g=g|0;var h=0.0,i=0.0;h=+Pc(a);if(h<1.0e-16){c=15600+(c<<4)|0;b[g>>2]=b[c>>2];b[g+4>>2]=b[c+4>>2];b[g+8>>2]=b[c+8>>2];b[g+12>>2]=b[c+12>>2];return}i=+z(+(+e[a+8>>3]),+(+e[a>>3]));if((d|0)>0){a=0;do{h=h/2.6457513110645907;a=a+1|0}while((a|0)!=(d|0))}if(!f){h=+y(+(h*.381966011250105));if(Lb(d)|0)i=+Zb(i+.3334731722518321)}else{h=h/3.0;d=(Lb(d)|0)==0;h=+y(+((d?h:h/2.6457513110645907)*.381966011250105))}dc(15600+(c<<4)|0,+Zb(+e[15920+(c*24|0)>>3]-i),h,g);return}function lb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0;e=T;T=T+16|0;f=e;Ea(a+4|0,f);kb(f,b[a>>2]|0,c,0,d);T=e;return}function mb(a,c,d,f,g){a=a|0;c=c|0;d=d|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0.0,J=0.0;G=T;T=T+272|0;h=G+256|0;u=G+240|0;D=G;E=G+224|0;F=G+208|0;v=G+176|0;w=G+160|0;x=G+192|0;y=G+144|0;z=G+128|0;A=G+112|0;B=G+96|0;C=G+80|0;b[h>>2]=c;b[u>>2]=b[a>>2];b[u+4>>2]=b[a+4>>2];b[u+8>>2]=b[a+8>>2];b[u+12>>2]=b[a+12>>2];nb(u,h,D);b[g>>2]=0;u=f+d+((f|0)==5&1)|0;if((u|0)<=(d|0)){T=G;return}k=b[h>>2]|0;l=E+4|0;m=v+4|0;n=d+5|0;o=16880+(k<<2)|0;p=16960+(k<<2)|0;q=z+8|0;r=A+8|0;s=B+8|0;t=F+4|0;j=d;a:while(1){i=D+(((j|0)%5|0)<<4)|0;b[F>>2]=b[i>>2];b[F+4>>2]=b[i+4>>2];b[F+8>>2]=b[i+8>>2];b[F+12>>2]=b[i+12>>2];do{}while((ob(F,k,0,1)|0)==2);if((j|0)>(d|0)&(Lb(c)|0)!=0){b[v>>2]=b[F>>2];b[v+4>>2]=b[F+4>>2];b[v+8>>2]=b[F+8>>2];b[v+12>>2]=b[F+12>>2];Ea(l,w);f=b[v>>2]|0;h=b[17040+(f*80|0)+(b[E>>2]<<2)>>2]|0;b[v>>2]=b[18640+(f*80|0)+(h*20|0)>>2];i=b[18640+(f*80|0)+(h*20|0)+16>>2]|0;if((i|0)>0){a=0;do{Qa(m);a=a+1|0}while((a|0)<(i|0))}i=18640+(f*80|0)+(h*20|0)+4|0;b[x>>2]=b[i>>2];b[x+4>>2]=b[i+4>>2];b[x+8>>2]=b[i+8>>2];Ha(x,(b[o>>2]|0)*3|0);Fa(m,x,m);Da(m);Ea(m,y);H=+(b[p>>2]|0);e[z>>3]=H*3.0;e[q>>3]=0.0;J=H*-1.5;e[A>>3]=J;e[r>>3]=H*2.598076211353316;e[B>>3]=J;e[s>>3]=H*-2.598076211353316;switch(b[17040+((b[v>>2]|0)*80|0)+(b[F>>2]<<2)>>2]|0){case 1:{a=A;f=z;break}case 3:{a=B;f=A;break}case 2:{a=z;f=B;break}default:{a=12;break a}}Qc(w,y,f,a,C);kb(C,b[v>>2]|0,k,1,g+8+(b[g>>2]<<4)|0);b[g>>2]=(b[g>>2]|0)+1}if((j|0)<(n|0)){Ea(t,v);kb(v,b[F>>2]|0,k,1,g+8+(b[g>>2]<<4)|0);b[g>>2]=(b[g>>2]|0)+1};b[E>>2]=b[F>>2];b[E+4>>2]=b[F+4>>2];b[E+8>>2]=b[F+8>>2];b[E+12>>2]=b[F+12>>2];j=j+1|0;if((j|0)>=(u|0)){a=3;break}}if((a|0)==3){T=G;return}else if((a|0)==12)I(22522,22569,571,22579)}function nb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=T;T=T+128|0;e=j+64|0;f=j;g=e;h=20240;i=g+60|0;do{b[g>>2]=b[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=f;h=20304;i=g+60|0;do{b[g>>2]=b[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));i=(Lb(b[c>>2]|0)|0)==0;e=i?e:f;f=a+4|0;Ua(f);Va(f);if(Lb(b[c>>2]|0)|0){Oa(f);b[c>>2]=(b[c>>2]|0)+1}b[d>>2]=b[a>>2];c=d+4|0;Fa(f,e,c);Da(c);b[d+16>>2]=b[a>>2];c=d+20|0;Fa(f,e+12|0,c);Da(c);b[d+32>>2]=b[a>>2];c=d+36|0;Fa(f,e+24|0,c);Da(c);b[d+48>>2]=b[a>>2];c=d+52|0;Fa(f,e+36|0,c);Da(c);b[d+64>>2]=b[a>>2];d=d+68|0;Fa(f,e+48|0,d);Da(d);T=j;return}function ob(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=T;T=T+32|0;n=p+12|0;i=p;o=a+4|0;m=b[16960+(c<<2)>>2]|0;l=(e|0)!=0;m=l?m*3|0:m;f=b[o>>2]|0;k=a+8|0;h=b[k>>2]|0;if(l){g=a+12|0;e=b[g>>2]|0;f=h+f+e|0;if((f|0)==(m|0)){o=1;T=p;return o|0}else j=g}else{j=a+12|0;e=b[j>>2]|0;f=h+f+e|0}if((f|0)<=(m|0)){o=0;T=p;return o|0}do if((e|0)>0){e=b[a>>2]|0;if((h|0)>0){g=18640+(e*80|0)+60|0;e=a;break}e=18640+(e*80|0)+40|0;if(!d){g=e;e=a}else{Ba(n,m,0,0);Ga(o,n,i);Ra(i);Fa(i,n,o);g=e;e=a}}else{g=18640+((b[a>>2]|0)*80|0)+20|0;e=a}while(0);b[e>>2]=b[g>>2];f=g+16|0;if((b[f>>2]|0)>0){e=0;do{Qa(o);e=e+1|0}while((e|0)<(b[f>>2]|0))}a=g+4|0;b[n>>2]=b[a>>2];b[n+4>>2]=b[a+4>>2];b[n+8>>2]=b[a+8>>2];c=b[16880+(c<<2)>>2]|0;Ha(n,l?c*3|0:c);Fa(o,n,o);Da(o);if(l)e=((b[k>>2]|0)+(b[o>>2]|0)+(b[j>>2]|0)|0)==(m|0)?1:2;else e=2;o=e;T=p;return o|0}function pb(a,b){a=a|0;b=b|0;var c=0;do c=ob(a,b,0,1)|0;while((c|0)==2);return c|0}function qb(a,c,d,f,g){a=a|0;c=c|0;d=d|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0.0;B=T;T=T+240|0;h=B+224|0;x=B+208|0;y=B;z=B+192|0;A=B+176|0;s=B+160|0;t=B+144|0;u=B+128|0;v=B+112|0;w=B+96|0;b[h>>2]=c;b[x>>2]=b[a>>2];b[x+4>>2]=b[a+4>>2];b[x+8>>2]=b[a+8>>2];b[x+12>>2]=b[a+12>>2];rb(x,h,y);b[g>>2]=0;r=f+d+((f|0)==6&1)|0;if((r|0)<=(d|0)){T=B;return}k=b[h>>2]|0;l=d+6|0;m=16960+(k<<2)|0;n=t+8|0;o=u+8|0;p=v+8|0;q=z+4|0;i=0;j=d;f=-1;a:while(1){h=(j|0)%6|0;a=y+(h<<4)|0;b[z>>2]=b[a>>2];b[z+4>>2]=b[a+4>>2];b[z+8>>2]=b[a+8>>2];b[z+12>>2]=b[a+12>>2];a=i;i=ob(z,k,0,1)|0;if((j|0)>(d|0)&(Lb(c)|0)!=0?((a|0)!=1?(b[z>>2]|0)!=(f|0):0):0){Ea(y+(((h+5|0)%6|0)<<4)+4|0,A);Ea(y+(h<<4)+4|0,s);C=+(b[m>>2]|0);e[t>>3]=C*3.0;e[n>>3]=0.0;D=C*-1.5;e[u>>3]=D;e[o>>3]=C*2.598076211353316;e[v>>3]=D;e[p>>3]=C*-2.598076211353316;h=b[x>>2]|0;switch(b[17040+(h*80|0)+(((f|0)==(h|0)?b[z>>2]|0:f)<<2)>>2]|0){case 1:{a=u;f=t;break}case 3:{a=v;f=u;break}case 2:{a=t;f=v;break}default:{a=8;break a}}Qc(A,s,f,a,w);if(!(Rc(A,w)|0)?!(Rc(s,w)|0):0){kb(w,b[x>>2]|0,k,1,g+8+(b[g>>2]<<4)|0);b[g>>2]=(b[g>>2]|0)+1}}if((j|0)<(l|0)){Ea(q,A);kb(A,b[z>>2]|0,k,1,g+8+(b[g>>2]<<4)|0);b[g>>2]=(b[g>>2]|0)+1}j=j+1|0;if((j|0)>=(r|0)){a=3;break}else f=b[z>>2]|0}if((a|0)==3){T=B;return}else if((a|0)==8)I(22606,22569,736,22651)}function rb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=T;T=T+160|0;e=j+80|0;f=j;g=e;h=20368;i=g+72|0;do{b[g>>2]=b[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=f;h=20448;i=g+72|0;do{b[g>>2]=b[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));i=(Lb(b[c>>2]|0)|0)==0;e=i?e:f;f=a+4|0;Ua(f);Va(f);if(Lb(b[c>>2]|0)|0){Oa(f);b[c>>2]=(b[c>>2]|0)+1}b[d>>2]=b[a>>2];c=d+4|0;Fa(f,e,c);Da(c);b[d+16>>2]=b[a>>2];c=d+20|0;Fa(f,e+12|0,c);Da(c);b[d+32>>2]=b[a>>2];c=d+36|0;Fa(f,e+24|0,c);Da(c);b[d+48>>2]=b[a>>2];c=d+52|0;Fa(f,e+36|0,c);Da(c);b[d+64>>2]=b[a>>2];c=d+68|0;Fa(f,e+48|0,c);Da(c);b[d+80>>2]=b[a>>2];d=d+84|0;Fa(f,e+60|0,d);Da(d);T=j;return}function sb(a,b){a=a|0;b=b|0;b=vd(a|0,b|0,52)|0;H()|0;return b&15|0}function tb(a,b){a=a|0;b=b|0;b=vd(a|0,b|0,45)|0;H()|0;return b&127|0}function ub(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;if(!(0==0&(b&-16777216|0)==134217728)){b=0;return b|0}g=vd(a|0,b|0,45)|0;H()|0;g=g&127;if(g>>>0>121){b=0;return b|0}c=vd(a|0,b|0,52)|0;H()|0;c=c&15;do if(c|0){e=1;d=0;while(1){f=vd(a|0,b|0,(15-e|0)*3|0)|0;H()|0;f=f&7;if((f|0)!=0&(d^1))if((f|0)==1&(ma(g)|0)!=0){h=0;d=13;break}else d=1;if((f|0)==7){h=0;d=13;break}if(e>>>0<c>>>0)e=e+1|0;else{d=9;break}}if((d|0)==9){if((c|0)==15)h=1;else break;return h|0}else if((d|0)==13)return h|0}while(0);while(1){h=vd(a|0,b|0,(14-c|0)*3|0)|0;H()|0;if(!((h&7|0)==7&0==0)){h=0;d=13;break}if(c>>>0<14)c=c+1|0;else{h=1;d=13;break}}if((d|0)==13)return h|0;return 0}function vb(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;g=vd(a|0,c|0,52)|0;H()|0;g=g&15;if(d>>>0>15){e=4;return e|0}if((g|0)<(d|0)){e=12;return e|0}if((g|0)==(d|0)){b[e>>2]=a;b[e+4>>2]=c;e=0;return e|0}f=wd(d|0,0,52)|0;f=f|a;a=H()|0|c&-15728641;if((g|0)>(d|0))do{c=wd(7,0,(14-d|0)*3|0)|0;d=d+1|0;f=c|f;a=H()|0|a}while((d|0)<(g|0));b[e>>2]=f;b[e+4>>2]=a;e=0;return e|0}function wb(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;g=vd(a|0,c|0,52)|0;H()|0;g=g&15;if(!((d|0)<16&(g|0)<=(d|0))){e=4;return e|0}f=d-g|0;d=vd(a|0,c|0,45)|0;H()|0;a:do if(!(ma(d&127)|0)){d=Cc(7,0,f,((f|0)<0)<<31>>31)|0;f=H()|0}else{b:do if(g|0){d=1;while(1){h=wd(7,0,(15-d|0)*3|0)|0;if(!((h&a|0)==0&((H()|0)&c|0)==0))break;if(d>>>0<g>>>0)d=d+1|0;else break b}d=Cc(7,0,f,((f|0)<0)<<31>>31)|0;f=H()|0;break a}while(0);d=Cc(7,0,f,((f|0)<0)<<31>>31)|0;d=rd(d|0,H()|0,5,0)|0;d=ld(d|0,H()|0,-5,-1)|0;d=pd(d|0,H()|0,6,0)|0;d=ld(d|0,H()|0,1,0)|0;f=H()|0}while(0);h=e;b[h>>2]=d;b[h+4>>2]=f;h=0;return h|0}function xb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=vd(a|0,b|0,45)|0;H()|0;if(!(ma(e&127)|0)){e=0;return e|0}e=vd(a|0,b|0,52)|0;H()|0;e=e&15;a:do if(!e)c=0;else{d=1;while(1){c=vd(a|0,b|0,(15-d|0)*3|0)|0;H()|0;c=c&7;if(c|0)break a;if(d>>>0<e>>>0)d=d+1|0;else{c=0;break}}}while(0);e=(c|0)==0&1;return e|0}function yb(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;h=T;T=T+16|0;g=h;Xb(g,a,c,d);c=g;a=b[c>>2]|0;c=b[c+4>>2]|0;if((a|0)==0&(c|0)==0){T=h;return 0}f=0;d=0;do{i=e+(f<<3)|0;b[i>>2]=a;b[i+4>>2]=c;f=ld(f|0,d|0,1,0)|0;d=H()|0;Yb(g);i=g;a=b[i>>2]|0;c=b[i+4>>2]|0}while(!((a|0)==0&(c|0)==0));T=h;return 0}function zb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if((d|0)<(c|0)){c=b;d=a;G(c|0);return d|0}c=wd(-1,-1,((d-c|0)*3|0)+3|0)|0;d=wd(~c|0,~(H()|0)|0,(15-d|0)*3|0)|0;c=~(H()|0)&b;d=~d&a;G(c|0);return d|0}function Ab(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0;f=vd(a|0,c|0,52)|0;H()|0;f=f&15;if(!((d|0)<16&(f|0)<=(d|0))){e=4;return e|0}if((f|0)<(d|0)){f=wd(-1,-1,((d+-1-f|0)*3|0)+3|0)|0;f=wd(~f|0,~(H()|0)|0,(15-d|0)*3|0)|0;c=~(H()|0)&c;a=~f&a}f=wd(d|0,0,52)|0;d=c&-15728641|(H()|0);b[e>>2]=a|f;b[e+4>>2]=d;e=0;return e|0}function Bb(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;if((d|0)==0&(e|0)==0){y=0;return y|0}f=a;g=b[f>>2]|0;f=b[f+4>>2]|0;if(0==0&(f&15728640|0)==0){if(!((e|0)>0|(e|0)==0&d>>>0>0)){y=0;return y|0}y=c;b[y>>2]=g;b[y+4>>2]=f;if((d|0)==1&(e|0)==0){y=0;return y|0}f=1;do{w=a+(f<<3)|0;x=b[w+4>>2]|0;y=c+(f<<3)|0;b[y>>2]=b[w>>2];b[y+4>>2]=x;f=f+1|0}while(0<(e|0)|0==(e|0)&f>>>0<d>>>0);f=0;return f|0}v=d<<3;x=id(v)|0;if(!x){y=13;return y|0}Ad(x|0,a|0,v|0)|0;w=kd(d,8)|0;if(!w){jd(x);y=13;return y|0}a:do if(d|0){b:while(1){f=x;s=b[f>>2]|0;f=b[f+4>>2]|0;t=vd(s|0,f|0,52)|0;H()|0;t=t&15;u=t+-1|0;r=(d|0)>0;c:do if((t|0)!=0&r){o=((d|0)<0)<<31>>31;p=wd(u|0,0,52)|0;q=H()|0;if(u>>>0>15){if(!((s|0)==0&(f|0)==0)){y=17;break b}g=0;while(1){g=g+1|0;if((g|0)>=(d|0))break c;e=x+(g<<3)|0;q=b[e>>2]|0;e=b[e+4>>2]|0;if(!((q|0)==0&(e|0)==0)){f=e;y=17;break b}}}g=0;a=s;e=f;while(1){if(!((a|0)==0&(e|0)==0)){if(!(0==0&(e&117440512|0)==0)){y=22;break b}i=vd(a|0,e|0,52)|0;H()|0;i=i&15;if((i|0)<(u|0)){f=12;y=28;break b}if((i|0)!=(u|0)){a=a|p;e=e&-15728641|q;if(i>>>0>=t>>>0){h=u;do{n=wd(7,0,(14-h|0)*3|0)|0;h=h+1|0;a=n|a;e=H()|0|e}while(h>>>0<i>>>0)}}h=td(a|0,e|0,d|0,o|0)|0;H()|0;k=w+(h<<3)|0;i=k;j=b[i>>2]|0;i=b[i+4>>2]|0;if((j|0)==0&(i|0)==0)h=k;else{n=0;while(1){if((n|0)>(d|0)){y=32;break b}if((j|0)==(a|0)&(i&-117440513|0)==(e|0)){l=vd(j|0,i|0,56)|0;H()|0;l=l&7;m=l+1|0;z=vd(j|0,i|0,45)|0;H()|0;d:do if(!(ma(z&127)|0))i=7;else{j=vd(j|0,i|0,52)|0;H()|0;j=j&15;if(!j){i=6;break}i=1;while(1){z=wd(7,0,(15-i|0)*3|0)|0;if(!((z&a|0)==0&((H()|0)&e|0)==0)){i=7;break d}if(i>>>0<j>>>0)i=i+1|0;else{i=6;break}}}while(0);if((l+2|0)>>>0>i>>>0){y=42;break b}z=wd(m|0,0,56)|0;e=H()|0|e&-117440513;m=k;b[m>>2]=0;b[m+4>>2]=0;a=z|a}else h=(h+1|0)%(d|0)|0;k=w+(h<<3)|0;i=k;j=b[i>>2]|0;i=b[i+4>>2]|0;if((j|0)==0&(i|0)==0){h=k;break}else n=n+1|0}}z=h;b[z>>2]=a;b[z+4>>2]=e}g=g+1|0;if((g|0)>=(d|0))break c;e=x+(g<<3)|0;a=b[e>>2]|0;e=b[e+4>>2]|0}}while(0);if((d+5|0)>>>0<11){y=85;break}q=kd((d|0)/6|0,8)|0;if(!q){y=49;break}e:do if(r){n=0;m=0;do{i=w+(n<<3)|0;e=i;g=b[e>>2]|0;e=b[e+4>>2]|0;if(!((g|0)==0&(e|0)==0)){j=vd(g|0,e|0,56)|0;H()|0;j=j&7;a=j+1|0;k=e&-117440513;z=vd(g|0,e|0,45)|0;H()|0;f:do if(ma(z&127)|0){l=vd(g|0,e|0,52)|0;H()|0;l=l&15;if(l|0){h=1;while(1){z=wd(7,0,(15-h|0)*3|0)|0;if(!((g&z|0)==0&(k&(H()|0)|0)==0))break f;if(h>>>0<l>>>0)h=h+1|0;else break}}e=wd(a|0,0,56)|0;g=e|g;e=H()|0|k;a=i;b[a>>2]=g;b[a+4>>2]=e;a=j+2|0}while(0);if((a|0)==7){z=q+(m<<3)|0;b[z>>2]=g;b[z+4>>2]=e&-117440513;m=m+1|0}}n=n+1|0}while((n|0)!=(d|0));if(r){n=((d|0)<0)<<31>>31;o=wd(u|0,0,52)|0;p=H()|0;if(u>>>0>15){if(!((s|0)==0&(f|0)==0)){f=4;y=84;break b}f=0;while(1){f=f+1|0;if((f|0)>=(d|0)){g=0;f=m;break e}z=x+(f<<3)|0;if(!((b[z>>2]|0)==0&(b[z+4>>2]|0)==0)){f=4;y=84;break b}}}l=0;g=0;k=s;while(1){do if(!((k|0)==0&(f|0)==0)){i=vd(k|0,f|0,52)|0;H()|0;i=i&15;if((i|0)<(u|0)){f=12;y=84;break b}do if((i|0)==(u|0)){e=k;i=f}else{e=k|o;a=f&-15728641|p;if(i>>>0<t>>>0){i=a;break}h=u;do{z=wd(7,0,(14-h|0)*3|0)|0;h=h+1|0;e=z|e;a=H()|0|a}while(h>>>0<i>>>0);i=a}while(0);h=td(e|0,i|0,d|0,n|0)|0;H()|0;a=0;while(1){if((a|0)>(d|0)){y=77;break b}z=w+(h<<3)|0;j=b[z+4>>2]|0;if((j&-117440513|0)==(i|0)?(b[z>>2]|0)==(e|0):0){y=79;break}h=(h+1|0)%(d|0)|0;z=w+(h<<3)|0;if((b[z>>2]|0)==(e|0)?(b[z+4>>2]|0)==(i|0):0)break;else a=a+1|0}if((y|0)==79?(y=0,0==0&(j&117440512|0)==100663296):0)break;z=c+(g<<3)|0;b[z>>2]=k;b[z+4>>2]=f;g=g+1|0}while(0);f=l+1|0;if((f|0)>=(d|0)){f=m;break e}z=x+(f<<3)|0;l=f;k=b[z>>2]|0;f=b[z+4>>2]|0}}else{g=0;f=m}}else{g=0;f=0}while(0);Bd(w|0,0,v|0)|0;Ad(x|0,q|0,f<<3|0)|0;jd(q);if(!f)break a;else{c=c+(g<<3)|0;d=f}}if((y|0)==17)if(0==0&(f&117440512|0)==0){f=4;y=28}else y=22;else if((y|0)==32)I(23313,22674,362,22684);else if((y|0)==42){jd(x);jd(w);z=10;return z|0}else if((y|0)==49){jd(x);jd(w);z=13;return z|0}else if((y|0)==77)I(23313,22674,462,22684);else if((y|0)==84){jd(q);jd(x);jd(w);z=f;return z|0}else if((y|0)==85){Ad(c|0,x|0,d<<3|0)|0;break}if((y|0)==22){jd(x);jd(w);z=5;return z|0}else if((y|0)==28){jd(x);jd(w);z=f;return z|0}}while(0);jd(x);jd(w);z=0;return z|0}function Cb(a,c,d,e,f,g,h){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=T;T=T+16|0;p=q;if(!((d|0)>0|(d|0)==0&c>>>0>0)){p=0;T=q;return p|0}if((h|0)>=16){p=12;T=q;return p|0}n=0;o=0;m=0;i=0;a:while(1){k=a+(n<<3)|0;j=b[k>>2]|0;k=b[k+4>>2]|0;l=vd(j|0,k|0,52)|0;H()|0;if((l&15|0)>(h|0)){i=12;j=11;break}Xb(p,j,k,h);l=p;k=b[l>>2]|0;l=b[l+4>>2]|0;if((k|0)==0&(l|0)==0)j=m;else{j=m;do{if(!((i|0)<(g|0)|(i|0)==(g|0)&j>>>0<f>>>0)){j=10;break a}m=e+(j<<3)|0;b[m>>2]=k;b[m+4>>2]=l;j=ld(j|0,i|0,1,0)|0;i=H()|0;Yb(p);m=p;k=b[m>>2]|0;l=b[m+4>>2]|0}while(!((k|0)==0&(l|0)==0))}n=ld(n|0,o|0,1,0)|0;o=H()|0;if(!((o|0)<(d|0)|(o|0)==(d|0)&n>>>0<c>>>0)){i=0;j=11;break}else m=j}if((j|0)==10){p=14;T=q;return p|0}else if((j|0)==11){T=q;return i|0}return 0}function Db(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=T;T=T+16|0;m=n;a:do if((d|0)>0|(d|0)==0&c>>>0>0){k=0;h=0;g=0;l=0;while(1){j=a+(k<<3)|0;i=b[j>>2]|0;j=b[j+4>>2]|0;if(!((i|0)==0&(j|0)==0)){j=(wb(i,j,e,m)|0)==0;i=m;h=ld(b[i>>2]|0,b[i+4>>2]|0,h|0,g|0)|0;g=H()|0;if(!j){g=12;break}}k=ld(k|0,l|0,1,0)|0;l=H()|0;if(!((l|0)<(d|0)|(l|0)==(d|0)&k>>>0<c>>>0))break a}T=n;return g|0}else{h=0;g=0}while(0);b[f>>2]=h;b[f+4>>2]=g;f=0;T=n;return f|0}function Eb(a,b){a=a|0;b=b|0;b=vd(a|0,b|0,52)|0;H()|0;return b&1|0}function Fb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=vd(a|0,b|0,52)|0;H()|0;e=e&15;if(!e){e=0;return e|0}d=1;while(1){c=vd(a|0,b|0,(15-d|0)*3|0)|0;H()|0;c=c&7;if(c|0){d=5;break}if(d>>>0<e>>>0)d=d+1|0;else{c=0;d=5;break}}if((d|0)==5)return c|0;return 0}function Gb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;i=vd(a|0,b|0,52)|0;H()|0;i=i&15;if(!i){h=b;i=a;G(h|0);return i|0}h=1;c=0;while(1){f=(15-h|0)*3|0;d=wd(7,0,f|0)|0;e=H()|0;g=vd(a|0,b|0,f|0)|0;H()|0;f=wd(Sa(g&7)|0,0,f|0)|0;g=H()|0;a=f|a&~d;b=g|b&~e;a:do if(!c)if(!((f&d|0)==0&(g&e|0)==0)){d=vd(a|0,b|0,52)|0;H()|0;d=d&15;if(!d)c=1;else{c=1;b:while(1){g=vd(a|0,b|0,(15-c|0)*3|0)|0;H()|0;switch(g&7){case 1:break b;case 0:break;default:{c=1;break a}}if(c>>>0<d>>>0)c=c+1|0;else{c=1;break a}}c=1;while(1){g=(15-c|0)*3|0;e=vd(a|0,b|0,g|0)|0;H()|0;f=wd(7,0,g|0)|0;b=b&~(H()|0);g=wd(Sa(e&7)|0,0,g|0)|0;a=a&~f|g;b=b|(H()|0);if(c>>>0<d>>>0)c=c+1|0;else{c=1;break}}}}else c=0;while(0);if(h>>>0<i>>>0)h=h+1|0;else break}G(b|0);return a|0}function Hb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;d=vd(a|0,b|0,52)|0;H()|0;d=d&15;if(!d){c=b;d=a;G(c|0);return d|0}c=1;while(1){f=(15-c|0)*3|0;g=vd(a|0,b|0,f|0)|0;H()|0;e=wd(7,0,f|0)|0;b=b&~(H()|0);f=wd(Sa(g&7)|0,0,f|0)|0;a=f|a&~e;b=H()|0|b;if(c>>>0<d>>>0)c=c+1|0;else break}G(b|0);return a|0}function Ib(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;i=vd(a|0,b|0,52)|0;H()|0;i=i&15;if(!i){h=b;i=a;G(h|0);return i|0}h=1;c=0;while(1){f=(15-h|0)*3|0;d=wd(7,0,f|0)|0;e=H()|0;g=vd(a|0,b|0,f|0)|0;H()|0;f=wd(Ta(g&7)|0,0,f|0)|0;g=H()|0;a=f|a&~d;b=g|b&~e;a:do if(!c)if(!((f&d|0)==0&(g&e|0)==0)){d=vd(a|0,b|0,52)|0;H()|0;d=d&15;if(!d)c=1;else{c=1;b:while(1){g=vd(a|0,b|0,(15-c|0)*3|0)|0;H()|0;switch(g&7){case 1:break b;case 0:break;default:{c=1;break a}}if(c>>>0<d>>>0)c=c+1|0;else{c=1;break a}}c=1;while(1){e=(15-c|0)*3|0;f=wd(7,0,e|0)|0;g=b&~(H()|0);b=vd(a|0,b|0,e|0)|0;H()|0;b=wd(Ta(b&7)|0,0,e|0)|0;a=a&~f|b;b=g|(H()|0);if(c>>>0<d>>>0)c=c+1|0;else{c=1;break}}}}else c=0;while(0);if(h>>>0<i>>>0)h=h+1|0;else break}G(b|0);return a|0}function Jb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;d=vd(a|0,b|0,52)|0;H()|0;d=d&15;if(!d){c=b;d=a;G(c|0);return d|0}c=1;while(1){g=(15-c|0)*3|0;f=wd(7,0,g|0)|0;e=b&~(H()|0);b=vd(a|0,b|0,g|0)|0;H()|0;b=wd(Ta(b&7)|0,0,g|0)|0;a=b|a&~f;b=H()|0|e;if(c>>>0<d>>>0)c=c+1|0;else break}G(b|0);return a|0}function Kb(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;j=T;T=T+64|0;i=j+40|0;e=j+24|0;f=j+12|0;g=j;wd(c|0,0,52)|0;d=H()|0|134225919;if(!c){if((b[a+4>>2]|0)>2){h=0;i=0;G(h|0);T=j;return i|0}if((b[a+8>>2]|0)>2){h=0;i=0;G(h|0);T=j;return i|0}if((b[a+12>>2]|0)>2){h=0;i=0;G(h|0);T=j;return i|0}wd(oa(a)|0,0,45)|0;h=H()|0|d;i=-1;G(h|0);T=j;return i|0};b[i>>2]=b[a>>2];b[i+4>>2]=b[a+4>>2];b[i+8>>2]=b[a+8>>2];b[i+12>>2]=b[a+12>>2];h=i+4|0;if((c|0)>0){a=-1;while(1){b[e>>2]=b[h>>2];b[e+4>>2]=b[h+4>>2];b[e+8>>2]=b[h+8>>2];if(!(c&1)){Ma(h);b[f>>2]=b[h>>2];b[f+4>>2]=b[h+4>>2];b[f+8>>2]=b[h+8>>2];Oa(f)}else{La(h);b[f>>2]=b[h>>2];b[f+4>>2]=b[h+4>>2];b[f+8>>2]=b[h+8>>2];Na(f)}Ga(e,f,g);Da(g);l=(15-c|0)*3|0;k=wd(7,0,l|0)|0;d=d&~(H()|0);l=wd(Ia(g)|0,0,l|0)|0;a=l|a&~k;d=H()|0|d;if((c|0)>1)c=c+-1|0;else break}}else a=-1;a:do if(((b[h>>2]|0)<=2?(b[i+8>>2]|0)<=2:0)?(b[i+12>>2]|0)<=2:0){e=oa(i)|0;c=wd(e|0,0,45)|0;c=c|a;a=H()|0|d&-1040385;g=pa(i)|0;if(!(ma(e)|0)){if((g|0)<=0)break;f=0;while(1){e=vd(c|0,a|0,52)|0;H()|0;e=e&15;if(e){d=1;while(1){l=(15-d|0)*3|0;i=vd(c|0,a|0,l|0)|0;H()|0;k=wd(7,0,l|0)|0;a=a&~(H()|0);l=wd(Sa(i&7)|0,0,l|0)|0;c=c&~k|l;a=a|(H()|0);if(d>>>0<e>>>0)d=d+1|0;else break}}f=f+1|0;if((f|0)==(g|0))break a}}f=vd(c|0,a|0,52)|0;H()|0;f=f&15;b:do if(f){d=1;c:while(1){l=vd(c|0,a|0,(15-d|0)*3|0)|0;H()|0;switch(l&7){case 1:break c;case 0:break;default:break b}if(d>>>0<f>>>0)d=d+1|0;else break b}if(sa(e,b[i>>2]|0)|0){d=1;while(1){i=(15-d|0)*3|0;k=wd(7,0,i|0)|0;l=a&~(H()|0);a=vd(c|0,a|0,i|0)|0;H()|0;a=wd(Ta(a&7)|0,0,i|0)|0;c=c&~k|a;a=l|(H()|0);if(d>>>0<f>>>0)d=d+1|0;else break}}else{d=1;while(1){l=(15-d|0)*3|0;i=vd(c|0,a|0,l|0)|0;H()|0;k=wd(7,0,l|0)|0;a=a&~(H()|0);l=wd(Sa(i&7)|0,0,l|0)|0;c=c&~k|l;a=a|(H()|0);if(d>>>0<f>>>0)d=d+1|0;else break}}}while(0);if((g|0)>0){d=0;do{c=Gb(c,a)|0;a=H()|0;d=d+1|0}while((d|0)!=(g|0))}}else{c=0;a=0}while(0);k=a;l=c;G(k|0);T=j;return l|0}function Lb(a){a=a|0;return (a|0)%2|0|0}function Mb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0;f=T;T=T+16|0;e=f;if(c>>>0>15){e=4;T=f;return e|0}if(0==0?(b[a+4>>2]&2146435072|0)==2146435072:0){e=3;T=f;return e|0}if(0==0?(b[a+8+4>>2]&2146435072|0)==2146435072:0){e=3;T=f;return e|0}hb(a,c,e);c=Kb(e,c)|0;e=H()|0;b[d>>2]=c;b[d+4>>2]=e;if((c|0)==0&(e|0)==0)I(23313,22674,786,22697);e=0;T=f;return e|0}function Nb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;f=d+4|0;g=vd(a|0,c|0,52)|0;H()|0;g=g&15;h=vd(a|0,c|0,45)|0;H()|0;e=(g|0)==0;if(!(ma(h&127)|0)){if(e){h=0;return h|0}if((b[f>>2]|0)==0?(b[d+8>>2]|0)==0:0)e=(b[d+12>>2]|0)!=0&1;else e=1}else if(e){h=1;return h|0}else e=1;d=1;while(1){if(!(d&1))Oa(f);else Na(f);h=vd(a|0,c|0,(15-d|0)*3|0)|0;H()|0;Pa(f,h&7);if(d>>>0<g>>>0)d=d+1|0;else break}return e|0}function Ob(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=T;T=T+16|0;j=l;k=vd(a|0,c|0,45)|0;H()|0;k=k&127;if(k>>>0>121){b[d>>2]=0;b[d+4>>2]=0;b[d+8>>2]=0;b[d+12>>2]=0;k=5;T=l;return k|0}a:do if((ma(k)|0)!=0?(g=vd(a|0,c|0,52)|0,H()|0,g=g&15,(g|0)!=0):0){e=1;b:while(1){i=vd(a|0,c|0,(15-e|0)*3|0)|0;H()|0;switch(i&7){case 5:break b;case 0:break;default:{e=c;break a}}if(e>>>0<g>>>0)e=e+1|0;else{e=c;break a}}f=1;e=c;while(1){c=(15-f|0)*3|0;h=wd(7,0,c|0)|0;i=e&~(H()|0);e=vd(a|0,e|0,c|0)|0;H()|0;e=wd(Ta(e&7)|0,0,c|0)|0;a=a&~h|e;e=i|(H()|0);if(f>>>0<g>>>0)f=f+1|0;else break}}else e=c;while(0);i=7696+(k*28|0)|0;b[d>>2]=b[i>>2];b[d+4>>2]=b[i+4>>2];b[d+8>>2]=b[i+8>>2];b[d+12>>2]=b[i+12>>2];if(!(Nb(a,e,d)|0)){k=0;T=l;return k|0}h=d+4|0;b[j>>2]=b[h>>2];b[j+4>>2]=b[h+4>>2];b[j+8>>2]=b[h+8>>2];g=vd(a|0,e|0,52)|0;H()|0;i=g&15;if(!(g&1))g=i;else{Oa(h);g=i+1|0}if(!(ma(k)|0))e=0;else{c:do if(!i)e=0;else{c=1;while(1){f=vd(a|0,e|0,(15-c|0)*3|0)|0;H()|0;f=f&7;if(f|0){e=f;break c}if(c>>>0<i>>>0)c=c+1|0;else{e=0;break}}}while(0);e=(e|0)==4&1}if(!(ob(d,g,e,0)|0)){if((g|0)!=(i|0)){b[h>>2]=b[j>>2];b[h+4>>2]=b[j+4>>2];b[h+8>>2]=b[j+8>>2]}}else{if(ma(k)|0)do{}while((ob(d,g,0,0)|0)!=0);if((g|0)!=(i|0))Ma(h)}k=0;T=l;return k|0}function Pb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;f=T;T=T+16|0;d=f;e=Ob(a,b,d)|0;if(e|0){T=f;return e|0}e=vd(a|0,b|0,52)|0;H()|0;lb(d,e&15,c);e=0;T=f;return e|0}function Qb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;g=T;T=T+16|0;f=g;d=Ob(a,b,f)|0;if(d|0){f=d;T=g;return f|0}d=vd(a|0,b|0,45)|0;H()|0;d=(ma(d&127)|0)==0;e=vd(a|0,b|0,52)|0;H()|0;e=e&15;a:do if(!d){if(e|0){d=1;while(1){h=wd(7,0,(15-d|0)*3|0)|0;if(!((h&a|0)==0&((H()|0)&b|0)==0))break a;if(d>>>0<e>>>0)d=d+1|0;else break}}mb(f,e,0,5,c);h=0;T=g;return h|0}while(0);qb(f,e,0,6,c);h=0;T=g;return h|0}function Rb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0;f=vd(a|0,c|0,45)|0;H()|0;if(!(ma(f&127)|0)){f=2;b[d>>2]=f;return 0}f=vd(a|0,c|0,52)|0;H()|0;f=f&15;if(!f){f=5;b[d>>2]=f;return 0}e=1;while(1){g=wd(7,0,(15-e|0)*3|0)|0;if(!((g&a|0)==0&((H()|0)&c|0)==0)){e=2;a=6;break}if(e>>>0<f>>>0)e=e+1|0;else{e=5;a=6;break}}if((a|0)==6){b[d>>2]=e;return 0}return 0}function Sb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=T;T=T+128|0;k=m+112|0;g=m+96|0;l=m;f=vd(a|0,c|0,52)|0;H()|0;i=f&15;b[k>>2]=i;h=vd(a|0,c|0,45)|0;H()|0;h=h&127;a:do if(ma(h)|0){if(i|0){e=1;while(1){j=wd(7,0,(15-e|0)*3|0)|0;if(!((j&a|0)==0&((H()|0)&c|0)==0)){f=0;break a}if(e>>>0<i>>>0)e=e+1|0;else break}}if(!(f&1)){j=wd(i+1|0,0,52)|0;l=H()|0|c&-15728641;k=wd(7,0,(14-i|0)*3|0)|0;l=Sb((j|a)&~k,l&~(H()|0),d)|0;T=m;return l|0}else f=1}else f=0;while(0);e=Ob(a,c,g)|0;if(!e){if(f){nb(g,k,l);j=5}else{rb(g,k,l);j=6}b:do if(ma(h)|0)if(!i)a=5;else{e=1;while(1){h=wd(7,0,(15-e|0)*3|0)|0;if(!((h&a|0)==0&((H()|0)&c|0)==0)){a=2;break b}if(e>>>0<i>>>0)e=e+1|0;else{a=5;break}}}else a=2;while(0);Bd(d|0,-1,a<<2|0)|0;c:do if(f){g=0;while(1){h=l+(g<<4)|0;pb(h,b[k>>2]|0)|0;h=b[h>>2]|0;i=b[d>>2]|0;if((i|0)==-1|(i|0)==(h|0))e=d;else{f=0;do{f=f+1|0;if(f>>>0>=a>>>0){e=1;break c}e=d+(f<<2)|0;i=b[e>>2]|0}while(!((i|0)==-1|(i|0)==(h|0)))}b[e>>2]=h;g=g+1|0;if(g>>>0>=j>>>0){e=0;break}}}else{g=0;while(1){h=l+(g<<4)|0;ob(h,b[k>>2]|0,0,1)|0;h=b[h>>2]|0;i=b[d>>2]|0;if((i|0)==-1|(i|0)==(h|0))e=d;else{f=0;do{f=f+1|0;if(f>>>0>=a>>>0){e=1;break c}e=d+(f<<2)|0;i=b[e>>2]|0}while(!((i|0)==-1|(i|0)==(h|0)))}b[e>>2]=h;g=g+1|0;if(g>>>0>=j>>>0){e=0;break}}}while(0)}l=e;T=m;return l|0}function Tb(){return 12}function Ub(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;if(a>>>0>15){i=4;return i|0}wd(a|0,0,52)|0;i=H()|0|134225919;if(!a){d=0;e=0;do{if(ma(e)|0){wd(e|0,0,45)|0;h=i|(H()|0);a=c+(d<<3)|0;b[a>>2]=-1;b[a+4>>2]=h;d=d+1|0}e=e+1|0}while((e|0)!=122);d=0;return d|0}d=0;h=0;do{if(ma(h)|0){wd(h|0,0,45)|0;e=1;f=-1;g=i|(H()|0);while(1){j=wd(7,0,(15-e|0)*3|0)|0;f=f&~j;g=g&~(H()|0);if((e|0)==(a|0))break;else e=e+1|0}j=c+(d<<3)|0;b[j>>2]=f;b[j+4>>2]=g;d=d+1|0}h=h+1|0}while((h|0)!=122);d=0;return d|0}function Vb(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=T;T=T+16|0;r=t;s=vd(a|0,c|0,52)|0;H()|0;s=s&15;if(d>>>0>15){s=4;T=t;return s|0}if((s|0)<(d|0)){s=12;T=t;return s|0}if((s|0)!=(d|0)){g=wd(d|0,0,52)|0;g=g|a;i=H()|0|c&-15728641;if((s|0)>(d|0)){j=d;do{q=wd(7,0,(14-j|0)*3|0)|0;j=j+1|0;g=q|g;i=H()|0|i}while((j|0)<(s|0));q=g}else q=g}else{q=a;i=c}p=vd(q|0,i|0,45)|0;H()|0;a:do if(ma(p&127)|0){j=vd(q|0,i|0,52)|0;H()|0;j=j&15;if(j|0){g=1;while(1){p=wd(7,0,(15-g|0)*3|0)|0;if(!((p&q|0)==0&((H()|0)&i|0)==0)){k=33;break a}if(g>>>0<j>>>0)g=g+1|0;else break}}p=e;b[p>>2]=0;b[p+4>>2]=0;if((s|0)>(d|0)){p=c&-15728641;o=s;while(1){n=o;o=o+-1|0;if(o>>>0>15|(s|0)<(o|0)){k=19;break}if((s|0)!=(o|0)){g=wd(o|0,0,52)|0;g=g|a;j=H()|0|p;if((s|0)<(n|0))m=g;else{k=o;do{m=wd(7,0,(14-k|0)*3|0)|0;k=k+1|0;g=m|g;j=H()|0|j}while((k|0)<(s|0));m=g}}else{m=a;j=c}l=vd(m|0,j|0,45)|0;H()|0;if(!(ma(l&127)|0))g=0;else{l=vd(m|0,j|0,52)|0;H()|0;l=l&15;b:do if(!l)g=0;else{k=1;while(1){g=vd(m|0,j|0,(15-k|0)*3|0)|0;H()|0;g=g&7;if(g|0)break b;if(k>>>0<l>>>0)k=k+1|0;else{g=0;break}}}while(0);g=(g|0)==0&1}j=vd(a|0,c|0,(15-n|0)*3|0)|0;H()|0;j=j&7;if((j|0)==7){f=5;k=42;break}g=(g|0)!=0;if((j|0)==1&g){f=5;k=42;break}m=j+(((j|0)!=0&g)<<31>>31)|0;if(m|0){k=s-n|0;k=Cc(7,0,k,((k|0)<0)<<31>>31)|0;l=H()|0;if(g){g=rd(k|0,l|0,5,0)|0;g=ld(g|0,H()|0,-5,-1)|0;g=pd(g|0,H()|0,6,0)|0;g=ld(g|0,H()|0,1,0)|0;j=H()|0}else{g=k;j=l}n=m+-1|0;n=rd(k|0,l|0,n|0,((n|0)<0)<<31>>31|0)|0;n=ld(g|0,j|0,n|0,H()|0)|0;m=H()|0;l=e;l=ld(n|0,m|0,b[l>>2]|0,b[l+4>>2]|0)|0;m=H()|0;n=e;b[n>>2]=l;b[n+4>>2]=m}if((o|0)<=(d|0)){k=37;break}}if((k|0)==19)I(23313,22674,1099,22710);else if((k|0)==37){h=e;f=b[h+4>>2]|0;h=b[h>>2]|0;break}else if((k|0)==42){T=t;return f|0}}else{f=0;h=0}}else k=33;while(0);c:do if((k|0)==33){p=e;b[p>>2]=0;b[p+4>>2]=0;if((s|0)>(d|0)){g=s;while(1){f=vd(a|0,c|0,(15-g|0)*3|0)|0;H()|0;f=f&7;if((f|0)==7){f=5;break}h=s-g|0;h=Cc(7,0,h,((h|0)<0)<<31>>31)|0;f=rd(h|0,H()|0,f|0,0)|0;h=H()|0;p=e;h=ld(b[p>>2]|0,b[p+4>>2]|0,f|0,h|0)|0;f=H()|0;p=e;b[p>>2]=h;b[p+4>>2]=f;g=g+-1|0;if((g|0)<=(d|0))break c}T=t;return f|0}else{f=0;h=0}}while(0);if(wb(q,i,s,r)|0)I(23313,22674,1063,22725);s=r;r=b[s+4>>2]|0;if(((f|0)>-1|(f|0)==-1&h>>>0>4294967295)&((r|0)>(f|0)|((r|0)==(f|0)?(b[s>>2]|0)>>>0>h>>>0:0))){s=0;T=t;return s|0}else I(23313,22674,1139,22710);return 0}function Wb(a,c,d,e,f,g){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;m=T;T=T+16|0;h=m;if(f>>>0>15){g=4;T=m;return g|0}i=vd(d|0,e|0,52)|0;H()|0;i=i&15;if((i|0)>(f|0)){g=12;T=m;return g|0}if(wb(d,e,f,h)|0)I(23313,22674,1063,22725);l=h;k=b[l+4>>2]|0;if(!(((c|0)>-1|(c|0)==-1&a>>>0>4294967295)&((k|0)>(c|0)|((k|0)==(c|0)?(b[l>>2]|0)>>>0>a>>>0:0)))){g=2;T=m;return g|0}l=f-i|0;f=wd(f|0,0,52)|0;j=H()|0|e&-15728641;k=g;b[k>>2]=f|d;b[k+4>>2]=j;k=vd(d|0,e|0,45)|0;H()|0;a:do if(ma(k&127)|0){if(i|0){h=1;while(1){k=wd(7,0,(15-h|0)*3|0)|0;if(!((k&d|0)==0&((H()|0)&e|0)==0))break a;if(h>>>0<i>>>0)h=h+1|0;else break}}if((l|0)<1){g=0;T=m;return g|0}k=i^15;e=-1;j=1;h=1;while(1){i=l-j|0;i=Cc(7,0,i,((i|0)<0)<<31>>31)|0;d=H()|0;do if(h){h=rd(i|0,d|0,5,0)|0;h=ld(h|0,H()|0,-5,-1)|0;h=pd(h|0,H()|0,6,0)|0;f=H()|0;if((c|0)>(f|0)|(c|0)==(f|0)&a>>>0>h>>>0){c=ld(a|0,c|0,-1,-1)|0;c=md(c|0,H()|0,h|0,f|0)|0;h=H()|0;n=g;p=b[n>>2]|0;n=b[n+4>>2]|0;q=(k+e|0)*3|0;o=wd(7,0,q|0)|0;n=n&~(H()|0);e=pd(c|0,h|0,i|0,d|0)|0;a=H()|0;f=ld(e|0,a|0,2,0)|0;q=wd(f|0,H()|0,q|0)|0;n=H()|0|n;f=g;b[f>>2]=q|p&~o;b[f+4>>2]=n;a=rd(e|0,a|0,i|0,d|0)|0;a=md(c|0,h|0,a|0,H()|0)|0;h=0;c=H()|0;break}else{q=g;o=b[q>>2]|0;q=b[q+4>>2]|0;p=wd(7,0,(k+e|0)*3|0)|0;q=q&~(H()|0);h=g;b[h>>2]=o&~p;b[h+4>>2]=q;h=1;break}}else{o=g;f=b[o>>2]|0;o=b[o+4>>2]|0;e=(k+e|0)*3|0;n=wd(7,0,e|0)|0;o=o&~(H()|0);q=pd(a|0,c|0,i|0,d|0)|0;h=H()|0;e=wd(q|0,h|0,e|0)|0;o=H()|0|o;p=g;b[p>>2]=e|f&~n;b[p+4>>2]=o;h=rd(q|0,h|0,i|0,d|0)|0;a=md(a|0,c|0,h|0,H()|0)|0;h=0;c=H()|0}while(0);if((l|0)>(j|0)){e=~j;j=j+1|0}else{c=0;break}}T=m;return c|0}while(0);if((l|0)<1){q=0;T=m;return q|0}f=i^15;h=1;while(1){p=l-h|0;p=Cc(7,0,p,((p|0)<0)<<31>>31)|0;q=H()|0;j=g;d=b[j>>2]|0;j=b[j+4>>2]|0;i=(f-h|0)*3|0;e=wd(7,0,i|0)|0;j=j&~(H()|0);n=pd(a|0,c|0,p|0,q|0)|0;o=H()|0;i=wd(n|0,o|0,i|0)|0;j=H()|0|j;k=g;b[k>>2]=i|d&~e;b[k+4>>2]=j;q=rd(n|0,o|0,p|0,q|0)|0;a=md(a|0,c|0,q|0,H()|0)|0;c=H()|0;if((l|0)<=(h|0)){c=0;break}else h=h+1|0}T=m;return c|0}function Xb(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=vd(c|0,d|0,52)|0;H()|0;f=f&15;if((c|0)==0&(d|0)==0|((e|0)>15|(f|0)>(e|0))){e=-1;f=-1;c=0;d=0}else{g=zb(c,d,f+1|0,e)|0;d=(H()|0)&-15728641;c=wd(e|0,0,52)|0;c=g|c;d=d|(H()|0);g=(xb(c,d)|0)==0;e=g?-1:e}g=a;b[g>>2]=c;b[g+4>>2]=d;b[a+8>>2]=f;b[a+12>>2]=e;return}function Yb(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=a;c=b[d>>2]|0;d=b[d+4>>2]|0;if((c|0)==0&(d|0)==0)return;e=vd(c|0,d|0,52)|0;H()|0;e=e&15;i=wd(1,0,(e^15)*3|0)|0;c=ld(i|0,H()|0,c|0,d|0)|0;d=H()|0;i=a;b[i>>2]=c;b[i+4>>2]=d;i=a+8|0;h=b[i>>2]|0;if((e|0)<(h|0))return;j=a+12|0;g=e;while(1){if((g|0)==(h|0)){e=5;break}k=(g|0)==(b[j>>2]|0);f=(15-g|0)*3|0;e=vd(c|0,d|0,f|0)|0;H()|0;e=e&7;if(k&((e|0)==1&0==0)){e=7;break}if(!((e|0)==7&0==0)){e=10;break}k=wd(1,0,f|0)|0;c=ld(c|0,d|0,k|0,H()|0)|0;d=H()|0;k=a;b[k>>2]=c;b[k+4>>2]=d;if((g|0)>(h|0))g=g+-1|0;else{e=10;break}}if((e|0)==5){k=a;b[k>>2]=0;b[k+4>>2]=0;b[i>>2]=-1;b[j>>2]=-1;return}else if((e|0)==7){h=wd(1,0,f|0)|0;h=ld(c|0,d|0,h|0,H()|0)|0;i=H()|0;k=a;b[k>>2]=h;b[k+4>>2]=i;b[j>>2]=g+-1;return}else if((e|0)==10)return}function Zb(a){a=+a;var b=0.0;b=a<0.0?a+6.283185307179586:a;return +(!(a>=6.283185307179586)?b:b+-6.283185307179586)}function _b(a,b){a=a|0;b=b|0;if(!(+q(+(+e[a>>3]-+e[b>>3]))<1.7453292519943298e-11)){b=0;return b|0}b=+q(+(+e[a+8>>3]-+e[b+8>>3]))<1.7453292519943298e-11;return b|0}function $b(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0,g=0.0;f=+e[b>>3];d=+e[a>>3];g=+u(+((f-d)*.5));c=+u(+((+e[b+8>>3]-+e[a+8>>3])*.5));c=g*g+c*(+t(+f)*+t(+d)*c);return +(+z(+(+r(+c)),+(+r(+(1.0-c))))*2.0)}function ac(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0,g=0.0;f=+e[b>>3];d=+e[a>>3];g=+u(+((f-d)*.5));c=+u(+((+e[b+8>>3]-+e[a+8>>3])*.5));c=g*g+c*(+t(+f)*+t(+d)*c);return +(+z(+(+r(+c)),+(+r(+(1.0-c))))*2.0*6371.007180918475)}function bc(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0,g=0.0;f=+e[b>>3];d=+e[a>>3];g=+u(+((f-d)*.5));c=+u(+((+e[b+8>>3]-+e[a+8>>3])*.5));c=g*g+c*(+t(+f)*+t(+d)*c);return +(+z(+(+r(+c)),+(+r(+(1.0-c))))*2.0*6371.007180918475*1.0e3)}function cc(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0,g=0.0,h=0.0;g=+e[b>>3];d=+t(+g);f=+e[b+8>>3]-+e[a+8>>3];h=d*+u(+f);c=+e[a>>3];return +(+z(+h,+(+u(+g)*+t(+c)-+t(+f)*(d*+u(+c)))))}function dc(a,c,d,f){a=a|0;c=+c;d=+d;f=f|0;var g=0,h=0.0,i=0.0,j=0.0;if(d<1.0e-16){b[f>>2]=b[a>>2];b[f+4>>2]=b[a+4>>2];b[f+8>>2]=b[a+8>>2];b[f+12>>2]=b[a+12>>2];return}h=c<0.0?c+6.283185307179586:c;h=!(c>=6.283185307179586)?h:h+-6.283185307179586;do if(h<1.0e-16){c=+e[a>>3]+d;e[f>>3]=c;g=f}else{g=+q(+(h+-3.141592653589793))<1.0e-16;c=+e[a>>3];if(g){c=c-d;e[f>>3]=c;g=f;break}i=+t(+d);d=+u(+d);c=i*+u(+c)+ +t(+h)*(d*+t(+c));c=c>1.0?1.0:c;c=+x(+(c<-1.0?-1.0:c));e[f>>3]=c;if(+q(+(c+-1.5707963267948966))<1.0e-16){e[f>>3]=1.5707963267948966;e[f+8>>3]=0.0;return}if(+q(+(c+1.5707963267948966))<1.0e-16){e[f>>3]=-1.5707963267948966;e[f+8>>3]=0.0;return}j=+t(+c);h=d*+u(+h)/j;d=+e[a>>3];c=(i-+u(+c)*+u(+d))/+t(+d)/j;i=h>1.0?1.0:h;c=c>1.0?1.0:c;c=+e[a+8>>3]+ +z(+(i<-1.0?-1.0:i),+(c<-1.0?-1.0:c));if(c>3.141592653589793)do c=c+-6.283185307179586;while(c>3.141592653589793);if(c<-3.141592653589793)do c=c+6.283185307179586;while(c<-3.141592653589793);e[f+8>>3]=c;return}while(0);if(+q(+(c+-1.5707963267948966))<1.0e-16){e[g>>3]=1.5707963267948966;e[f+8>>3]=0.0;return}if(+q(+(c+1.5707963267948966))<1.0e-16){e[g>>3]=-1.5707963267948966;e[f+8>>3]=0.0;return}c=+e[a+8>>3];if(c>3.141592653589793)do c=c+-6.283185307179586;while(c>3.141592653589793);if(c<-3.141592653589793)do c=c+6.283185307179586;while(c<-3.141592653589793);e[f+8>>3]=c;return}function ec(a,b){a=a|0;b=b|0;if(a>>>0>15){b=4;return b|0}e[b>>3]=+e[20528+(a<<3)>>3];b=0;return b|0}function fc(a,b){a=a|0;b=b|0;if(a>>>0>15){b=4;return b|0}e[b>>3]=+e[20656+(a<<3)>>3];b=0;return b|0}function gc(a,b){a=a|0;b=b|0;if(a>>>0>15){b=4;return b|0}e[b>>3]=+e[20784+(a<<3)>>3];b=0;return b|0}function hc(a,b){a=a|0;b=b|0;if(a>>>0>15){b=4;return b|0}e[b>>3]=+e[20912+(a<<3)>>3];b=0;return b|0}function ic(a,c){a=a|0;c=c|0;var d=0;if(a>>>0>15){c=4;return c|0}d=Cc(7,0,a,((a|0)<0)<<31>>31)|0;d=rd(d|0,H()|0,120,0)|0;a=H()|0;b[c>>2]=d|2;b[c+4>>2]=a;c=0;return c|0}function jc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;n=+e[b>>3];l=+e[a>>3];j=+u(+((n-l)*.5));g=+e[b+8>>3];k=+e[a+8>>3];h=+u(+((g-k)*.5));i=+t(+l);m=+t(+n);h=j*j+h*(m*i*h);h=+z(+(+r(+h)),+(+r(+(1.0-h))))*2.0;j=+e[c>>3];n=+u(+((j-n)*.5));d=+e[c+8>>3];g=+u(+((d-g)*.5));f=+t(+j);g=n*n+g*(m*f*g);g=+z(+(+r(+g)),+(+r(+(1.0-g))))*2.0;j=+u(+((l-j)*.5));d=+u(+((k-d)*.5));d=j*j+d*(i*f*d);d=+z(+(+r(+d)),+(+r(+(1.0-d))))*2.0;f=(h+g+d)*.5;return +(+y(+(+r(+(+v(+(f*.5))*+v(+((f-h)*.5))*+v(+((f-g)*.5))*+v(+((f-d)*.5))))))*4.0)}function kc(a,c,d){a=a|0;c=c|0;d=d|0;var f=0.0,g=0,h=0,i=0,j=0;j=T;T=T+192|0;h=j+168|0;i=j;g=Pb(a,c,h)|0;if(g|0){d=g;T=j;return d|0}if(Qb(a,c,i)|0)I(23313,22742,386,22751);c=b[i>>2]|0;if((c|0)>0){f=+jc(i+8|0,i+8+(((c|0)!=1&1)<<4)|0,h)+0.0;if((c|0)!=1){a=1;do{g=a;a=a+1|0;f=f+ +jc(i+8+(g<<4)|0,i+8+(((a|0)%(c|0)|0)<<4)|0,h)}while((a|0)<(c|0))}}else f=0.0;e[d>>3]=f;d=0;T=j;return d|0}function lc(a,b,c){a=a|0;b=b|0;c=c|0;a=kc(a,b,c)|0;if(a|0)return a|0;e[c>>3]=+e[c>>3]*6371.007180918475*6371.007180918475;return a|0}function mc(a,b,c){a=a|0;b=b|0;c=c|0;a=kc(a,b,c)|0;if(a|0)return a|0;e[c>>3]=+e[c>>3]*6371.007180918475*6371.007180918475*1.0e3*1.0e3;return a|0}function nc(a,c,d){a=a|0;c=c|0;d=d|0;var f=0.0,g=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0;j=T;T=T+176|0;i=j;a=gb(a,c,i)|0;if(a|0){i=a;T=j;return i|0}e[d>>3]=0.0;a=b[i>>2]|0;if((a|0)<=1){i=0;T=j;return i|0}c=a+-1|0;a=0;f=+e[i+8>>3];g=+e[i+16>>3];h=0.0;do{a=a+1|0;l=f;f=+e[i+8+(a<<4)>>3];m=+u(+((f-l)*.5));k=g;g=+e[i+8+(a<<4)+8>>3];k=+u(+((g-k)*.5));k=m*m+k*(+t(+f)*+t(+l)*k);h=h+ +z(+(+r(+k)),+(+r(+(1.0-k))))*2.0}while((a|0)<(c|0));e[d>>3]=h;i=0;T=j;return i|0}function oc(a,c,d){a=a|0;c=c|0;d=d|0;var f=0.0,g=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0;j=T;T=T+176|0;i=j;a=gb(a,c,i)|0;if(a|0){i=a;h=+e[d>>3];h=h*6371.007180918475;e[d>>3]=h;T=j;return i|0}e[d>>3]=0.0;a=b[i>>2]|0;if((a|0)<=1){i=0;h=0.0;h=h*6371.007180918475;e[d>>3]=h;T=j;return i|0}c=a+-1|0;a=0;f=+e[i+8>>3];g=+e[i+16>>3];h=0.0;do{a=a+1|0;l=f;f=+e[i+8+(a<<4)>>3];m=+u(+((f-l)*.5));k=g;g=+e[i+8+(a<<4)+8>>3];k=+u(+((g-k)*.5));k=m*m+k*(+t(+l)*+t(+f)*k);h=h+ +z(+(+r(+k)),+(+r(+(1.0-k))))*2.0}while((a|0)!=(c|0));e[d>>3]=h;i=0;m=h;m=m*6371.007180918475;e[d>>3]=m;T=j;return i|0}function pc(a,c,d){a=a|0;c=c|0;d=d|0;var f=0.0,g=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0;j=T;T=T+176|0;i=j;a=gb(a,c,i)|0;if(a|0){i=a;h=+e[d>>3];h=h*6371.007180918475;h=h*1.0e3;e[d>>3]=h;T=j;return i|0}e[d>>3]=0.0;a=b[i>>2]|0;if((a|0)<=1){i=0;h=0.0;h=h*6371.007180918475;h=h*1.0e3;e[d>>3]=h;T=j;return i|0}c=a+-1|0;a=0;f=+e[i+8>>3];g=+e[i+16>>3];h=0.0;do{a=a+1|0;l=f;f=+e[i+8+(a<<4)>>3];m=+u(+((f-l)*.5));k=g;g=+e[i+8+(a<<4)+8>>3];k=+u(+((g-k)*.5));k=m*m+k*(+t(+l)*+t(+f)*k);h=h+ +z(+(+r(+k)),+(+r(+(1.0-k))))*2.0}while((a|0)!=(c|0));e[d>>3]=h;i=0;m=h;m=m*6371.007180918475;m=m*1.0e3;e[d>>3]=m;T=j;return i|0}function qc(a){a=a|0;var c=0,d=0,e=0;c=kd(1,12)|0;if(!c)I(22832,22787,49,22845);d=a+4|0;e=b[d>>2]|0;if(e|0){e=e+8|0;b[e>>2]=c;b[d>>2]=c;return c|0}if(b[a>>2]|0)I(22862,22787,61,22885);e=a;b[e>>2]=c;b[d>>2]=c;return c|0}function rc(a,c){a=a|0;c=c|0;var d=0,e=0;e=id(24)|0;if(!e)I(22899,22787,78,22913);b[e>>2]=b[c>>2];b[e+4>>2]=b[c+4>>2];b[e+8>>2]=b[c+8>>2];b[e+12>>2]=b[c+12>>2];b[e+16>>2]=0;c=a+4|0;d=b[c>>2]|0;if(d|0){b[d+16>>2]=e;b[c>>2]=e;return e|0}if(b[a>>2]|0)I(22928,22787,82,22913);b[a>>2]=e;b[c>>2]=e;return e|0}function sc(a){a=a|0;var c=0,d=0,e=0,f=0;if(!a)return;e=1;while(1){c=b[a>>2]|0;if(c|0)do{d=b[c>>2]|0;if(d|0)do{f=d;d=b[d+16>>2]|0;jd(f)}while((d|0)!=0);f=c;c=b[c+8>>2]|0;jd(f)}while((c|0)!=0);c=a;a=b[a+8>>2]|0;if(!e)jd(c);if(!a)break;else e=0}return}function tc(a){a=a|0;var c=0,d=0,f=0,g=0,h=0.0,i=0,j=0.0,k=0.0,l=0,m=0,n=0,o=0,p=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,J=0,K=0;g=a+8|0;if(b[g>>2]|0){K=1;return K|0}f=b[a>>2]|0;if(!f){K=0;return K|0}c=f;d=0;do{d=d+1|0;c=b[c+8>>2]|0}while((c|0)!=0);if(d>>>0<2){K=0;return K|0}H=id(d<<2)|0;if(!H)I(22948,22787,317,22967);G=id(d<<5)|0;if(!G)I(22989,22787,321,22967);b[a>>2]=0;z=a+4|0;b[z>>2]=0;b[g>>2]=0;d=0;F=0;y=0;n=0;a:while(1){m=b[f>>2]|0;if(m){h=0.0;i=m;do{k=+e[i+8>>3];c=i;i=b[i+16>>2]|0;l=(i|0)==0;g=l?m:i;j=+e[g+8>>3];if(+q(+(k-j))>3.141592653589793){K=14;break}h=h+(j-k)*(+e[c>>3]+ +e[g>>3])}while(!l);if((K|0)==14){K=0;h=0.0;c=m;do{x=+e[c+8>>3];E=c+16|0;D=b[E>>2]|0;D=(D|0)==0?m:D;w=+e[D+8>>3];h=h+(+e[c>>3]+ +e[D>>3])*((w<0.0?w+6.283185307179586:w)-(x<0.0?x+6.283185307179586:x));c=b[((c|0)==0?f:E)>>2]|0}while((c|0)!=0)}if(h>0.0){b[H+(F<<2)>>2]=f;F=F+1|0;g=y;c=n}else K=19}else K=19;if((K|0)==19){K=0;do if(!d)if(!n)if(!(b[a>>2]|0)){g=z;i=a;c=f;d=a;break}else{K=27;break a}else{g=z;i=n+8|0;c=f;d=a;break}else{c=d+8|0;if(b[c>>2]|0){K=21;break a}d=kd(1,12)|0;if(!d){K=23;break a}b[c>>2]=d;g=d+4|0;i=d;c=n}while(0);b[i>>2]=f;b[g>>2]=f;i=G+(y<<5)|0;l=b[f>>2]|0;if(l){m=G+(y<<5)+8|0;e[m>>3]=1797693134862315708145274.0e284;n=G+(y<<5)+24|0;e[n>>3]=1797693134862315708145274.0e284;e[i>>3]=-1797693134862315708145274.0e284;o=G+(y<<5)+16|0;e[o>>3]=-1797693134862315708145274.0e284;u=1797693134862315708145274.0e284;v=-1797693134862315708145274.0e284;g=0;p=l;k=1797693134862315708145274.0e284;s=1797693134862315708145274.0e284;t=-1797693134862315708145274.0e284;j=-1797693134862315708145274.0e284;while(1){h=+e[p>>3];x=+e[p+8>>3];p=b[p+16>>2]|0;r=(p|0)==0;w=+e[(r?l:p)+8>>3];if(h<k){e[m>>3]=h;k=h}if(x<s){e[n>>3]=x;s=x}if(h>t)e[i>>3]=h;else h=t;if(x>j){e[o>>3]=x;j=x}u=x>0.0&x<u?x:u;v=x<0.0&x>v?x:v;g=g|+q(+(x-w))>3.141592653589793;if(r)break;else t=h}if(g){e[o>>3]=v;e[n>>3]=u}}else{b[i>>2]=0;b[i+4>>2]=0;b[i+8>>2]=0;b[i+12>>2]=0;b[i+16>>2]=0;b[i+20>>2]=0;b[i+24>>2]=0;b[i+28>>2]=0}g=y+1|0}E=f+8|0;f=b[E>>2]|0;b[E>>2]=0;if(!f){K=45;break}else{y=g;n=c}}if((K|0)==21)I(22765,22787,35,22799);else if((K|0)==23)I(22819,22787,37,22799);else if((K|0)==27)I(22862,22787,61,22885);else if((K|0)==45){b:do if((F|0)>0){E=(g|0)==0;C=g<<2;D=(a|0)==0;B=0;c=0;while(1){A=b[H+(B<<2)>>2]|0;if(!E){y=id(C)|0;if(!y){K=50;break}z=id(C)|0;if(!z){K=52;break}c:do if(!D){g=0;d=0;i=a;while(1){f=G+(g<<5)|0;if(uc(b[i>>2]|0,f,b[A>>2]|0)|0){b[y+(d<<2)>>2]=i;b[z+(d<<2)>>2]=f;r=d+1|0}else r=d;i=b[i+8>>2]|0;if(!i)break;else{g=g+1|0;d=r}}if((r|0)>0){f=b[y>>2]|0;if((r|0)==1)d=f;else{o=0;p=-1;d=f;n=f;while(1){l=b[n>>2]|0;f=0;i=0;while(1){g=b[b[y+(i<<2)>>2]>>2]|0;if((g|0)==(l|0))m=f;else m=f+((uc(g,b[z+(i<<2)>>2]|0,b[l>>2]|0)|0)&1)|0;i=i+1|0;if((i|0)==(r|0))break;else f=m}g=(m|0)>(p|0);d=g?n:d;f=o+1|0;if((f|0)==(r|0))break c;o=f;p=g?m:p;n=b[y+(f<<2)>>2]|0}}}else d=0}else d=0;while(0);jd(y);jd(z);if(d){g=d+4|0;f=b[g>>2]|0;if(!f){if(b[d>>2]|0){K=70;break}}else d=f+8|0;b[d>>2]=A;b[g>>2]=A}else K=73}else K=73;if((K|0)==73){K=0;c=b[A>>2]|0;if(c|0)do{z=c;c=b[c+16>>2]|0;jd(z)}while((c|0)!=0);jd(A);c=1}B=B+1|0;if((B|0)>=(F|0)){J=c;break b}}if((K|0)==50)I(23004,22787,249,23023);else if((K|0)==52)I(23042,22787,252,23023);else if((K|0)==70)I(22862,22787,61,22885)}else J=0;while(0);jd(H);jd(G);K=J;return K|0}return 0}function uc(a,c,d){a=a|0;c=c|0;d=d|0;var f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0;if(!(ya(c,d)|0)){a=0;return a|0}c=xa(c)|0;f=+e[d>>3];g=+e[d+8>>3];g=c&g<0.0?g+6.283185307179586:g;a=b[a>>2]|0;if(!a){a=0;return a|0}if(c){c=0;l=g;d=a;a:while(1){while(1){i=+e[d>>3];g=+e[d+8>>3];d=d+16|0;m=b[d>>2]|0;m=(m|0)==0?a:m;h=+e[m>>3];j=+e[m+8>>3];if(i>h){k=i;i=j}else{k=h;h=i;i=g;g=j}f=f==h|f==k?f+2.220446049250313e-16:f;if(!(f<h|f>k))break;d=b[d>>2]|0;if(!d){d=22;break a}}j=i<0.0?i+6.283185307179586:i;i=g<0.0?g+6.283185307179586:g;l=j==l|i==l?l+-2.220446049250313e-16:l;k=j+(i-j)*((f-h)/(k-h));if((k<0.0?k+6.283185307179586:k)>l)c=c^1;d=b[d>>2]|0;if(!d){d=22;break}}if((d|0)==22)return c|0}else{c=0;l=g;d=a;b:while(1){while(1){i=+e[d>>3];g=+e[d+8>>3];d=d+16|0;m=b[d>>2]|0;m=(m|0)==0?a:m;h=+e[m>>3];j=+e[m+8>>3];if(i>h){k=i;i=j}else{k=h;h=i;i=g;g=j}f=f==h|f==k?f+2.220446049250313e-16:f;if(!(f<h|f>k))break;d=b[d>>2]|0;if(!d){d=22;break b}}l=i==l|g==l?l+-2.220446049250313e-16:l;if(i+(g-i)*((f-h)/(k-h))>l)c=c^1;d=b[d>>2]|0;if(!d){d=22;break}}if((d|0)==22)return c|0}return 0}function vc(c,d,e,f,g){c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;u=T;T=T+32|0;t=u+16|0;s=u;h=vd(c|0,d|0,52)|0;H()|0;h=h&15;p=vd(e|0,f|0,52)|0;H()|0;if((h|0)!=(p&15|0)){t=12;T=u;return t|0}l=vd(c|0,d|0,45)|0;H()|0;l=l&127;m=vd(e|0,f|0,45)|0;H()|0;m=m&127;if(l>>>0>121|m>>>0>121){t=5;T=u;return t|0}p=(l|0)!=(m|0);if(p){j=ua(l,m)|0;if((j|0)==7){t=1;T=u;return t|0}k=ua(m,l)|0;if((k|0)==7)I(23066,23090,161,23100);else{q=j;i=k}}else{q=0;i=0}n=ma(l)|0;o=ma(m)|0;b[t>>2]=0;b[t+4>>2]=0;b[t+8>>2]=0;b[t+12>>2]=0;do if(!q){Nb(e,f,t)|0;if((n|0)!=0&(o|0)!=0){if((m|0)!=(l|0))I(23173,23090,261,23100);i=Fb(c,d)|0;h=Fb(e,f)|0;if(!((i|0)==7|(h|0)==7))if(!(a[21872+(i*7|0)+h>>0]|0)){i=b[21040+(i*28|0)+(h<<2)>>2]|0;if((i|0)>0){j=t+4|0;h=0;do{Ra(j);h=h+1|0}while((h|0)!=(i|0));r=51}else r=51}else h=1;else h=5}else r=51}else{m=b[4272+(l*28|0)+(q<<2)>>2]|0;j=(m|0)>0;if(!o)if(j){l=0;k=e;j=f;do{k=Jb(k,j)|0;j=H()|0;i=Ta(i)|0;l=l+1|0}while((l|0)!=(m|0));m=i;l=k;k=j}else{m=i;l=e;k=f}else if(j){l=0;k=e;j=f;do{k=Ib(k,j)|0;j=H()|0;i=Ta(i)|0;if((i|0)==1)i=Ta(1)|0;l=l+1|0}while((l|0)!=(m|0));m=i;l=k;k=j}else{m=i;l=e;k=f}Nb(l,k,t)|0;if(!p)I(23115,23090,191,23100);j=(n|0)!=0;i=(o|0)!=0;if(j&i)I(23142,23090,192,23100);if(!j)if(i){i=Fb(l,k)|0;if((i|0)==7){h=5;break}if(a[21872+(i*7|0)+m>>0]|0){h=1;break}l=0;k=b[21040+(m*28|0)+(i<<2)>>2]|0}else{l=0;k=0}else{i=Fb(c,d)|0;if((i|0)==7){h=5;break}if(a[21872+(i*7|0)+q>>0]|0){h=1;break}k=b[21040+(i*28|0)+(q<<2)>>2]|0;l=k}if((l|k|0)<0)h=5;else{if((k|0)>0){j=t+4|0;i=0;do{Ra(j);i=i+1|0}while((i|0)!=(k|0))};b[s>>2]=0;b[s+4>>2]=0;b[s+8>>2]=0;Pa(s,q);if(h|0)while(1){if(!(Lb(h)|0))Oa(s);else Na(s);if((h|0)>1)h=h+-1|0;else break}if((l|0)>0){h=0;do{Ra(s);h=h+1|0}while((h|0)!=(l|0))}r=t+4|0;Fa(r,s,r);Da(r);r=51}}while(0);if((r|0)==51){h=t+4|0;b[g>>2]=b[h>>2];b[g+4>>2]=b[h+4>>2];b[g+8>>2]=b[h+8>>2];h=0}t=h;T=u;return t|0}function wc(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;q=T;T=T+48|0;k=q+36|0;h=q+24|0;i=q+12|0;j=q;f=vd(a|0,c|0,52)|0;H()|0;f=f&15;n=vd(a|0,c|0,45)|0;H()|0;n=n&127;if(n>>>0>121){e=5;T=q;return e|0}l=ma(n)|0;wd(f|0,0,52)|0;r=H()|0|134225919;g=e;b[g>>2]=-1;b[g+4>>2]=r;if(!f){f=Ia(d)|0;if((f|0)==7){r=1;T=q;return r|0}f=ta(n,f)|0;if((f|0)==127){r=1;T=q;return r|0}o=wd(f|0,0,45)|0;p=H()|0;n=e;p=b[n+4>>2]&-1040385|p;r=e;b[r>>2]=b[n>>2]|o;b[r+4>>2]=p;r=0;T=q;return r|0};b[k>>2]=b[d>>2];b[k+4>>2]=b[d+4>>2];b[k+8>>2]=b[d+8>>2];d=f;while(1){g=d;d=d+-1|0;b[h>>2]=b[k>>2];b[h+4>>2]=b[k+4>>2];b[h+8>>2]=b[k+8>>2];if(!(Lb(g)|0)){f=Ka(k)|0;if(f|0){d=13;break};b[i>>2]=b[k>>2];b[i+4>>2]=b[k+4>>2];b[i+8>>2]=b[k+8>>2];Oa(i)}else{f=Ja(k)|0;if(f|0){d=13;break};b[i>>2]=b[k>>2];b[i+4>>2]=b[k+4>>2];b[i+8>>2]=b[k+8>>2];Na(i)}Ga(h,i,j);Da(j);f=e;t=b[f>>2]|0;f=b[f+4>>2]|0;u=(15-g|0)*3|0;s=wd(7,0,u|0)|0;f=f&~(H()|0);u=wd(Ia(j)|0,0,u|0)|0;f=H()|0|f;r=e;b[r>>2]=u|t&~s;b[r+4>>2]=f;if((g|0)<=1){d=14;break}}a:do if((d|0)!=13)if((d|0)==14)if(((b[k>>2]|0)<=1?(b[k+4>>2]|0)<=1:0)?(b[k+8>>2]|0)<=1:0){d=Ia(k)|0;f=ta(n,d)|0;if((f|0)==127)j=0;else j=ma(f)|0;b:do if(!d)if((l|0)!=0&(j|0)!=0){d=Fb(a,c)|0;g=e;g=Fb(b[g>>2]|0,b[g+4>>2]|0)|0;if((d|0)==7|(g|0)==7){f=5;break a}g=b[21248+(d*28|0)+(g<<2)>>2]|0;if((g|0)<0){f=5;break a}if(!g)d=59;else{i=e;d=0;h=b[i>>2]|0;i=b[i+4>>2]|0;do{h=Hb(h,i)|0;i=H()|0;u=e;b[u>>2]=h;b[u+4>>2]=i;d=d+1|0}while((d|0)<(g|0));d=58}}else d=58;else{if(l){f=Fb(a,c)|0;if((f|0)==7){f=5;break a}g=b[21248+(f*28|0)+(d<<2)>>2]|0;if((g|0)>0){f=d;d=0;do{f=Sa(f)|0;d=d+1|0}while((d|0)!=(g|0))}else f=d;if((f|0)==1){f=9;break a}d=ta(n,f)|0;if((d|0)==127)I(23200,23090,411,23230);if(!(ma(d)|0)){p=d;o=g;m=f}else I(23245,23090,412,23230)}else{p=f;o=0;m=d}i=b[4272+(n*28|0)+(m<<2)>>2]|0;if((i|0)<=-1)I(23276,23090,419,23230);if(!j){if((o|0)<0){f=5;break a}if(o|0){g=e;f=0;d=b[g>>2]|0;g=b[g+4>>2]|0;do{d=Hb(d,g)|0;g=H()|0;u=e;b[u>>2]=d;b[u+4>>2]=g;f=f+1|0}while((f|0)<(o|0))}if((i|0)<=0){f=p;d=58;break}g=e;f=0;d=b[g>>2]|0;g=b[g+4>>2]|0;while(1){d=Hb(d,g)|0;g=H()|0;u=e;b[u>>2]=d;b[u+4>>2]=g;f=f+1|0;if((f|0)==(i|0)){f=p;d=58;break b}}}h=ua(p,n)|0;if((h|0)==7)I(23066,23090,428,23230);f=e;d=b[f>>2]|0;f=b[f+4>>2]|0;if((i|0)>0){g=0;do{d=Hb(d,f)|0;f=H()|0;u=e;b[u>>2]=d;b[u+4>>2]=f;g=g+1|0}while((g|0)!=(i|0))}f=Fb(d,f)|0;if((f|0)==7)I(23313,23090,440,23230);d=na(p)|0;d=b[(d?21664:21456)+(h*28|0)+(f<<2)>>2]|0;if((d|0)<0)I(23313,23090,454,23230);if(!d){f=p;d=58}else{h=e;f=0;g=b[h>>2]|0;h=b[h+4>>2]|0;do{g=Gb(g,h)|0;h=H()|0;u=e;b[u>>2]=g;b[u+4>>2]=h;f=f+1|0}while((f|0)<(d|0));f=p;d=58}}while(0);if((d|0)==58)if(j)d=59;if((d|0)==59){u=e;if((Fb(b[u>>2]|0,b[u+4>>2]|0)|0)==1){f=9;break}}u=e;s=b[u>>2]|0;u=b[u+4>>2]&-1040385;t=wd(f|0,0,45)|0;u=u|(H()|0);f=e;b[f>>2]=s|t;b[f+4>>2]=u;f=0}else f=1;while(0);u=f;T=q;return u|0}function xc(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;h=T;T=T+16|0;g=h;if(!e){a=vc(a,b,c,d,g)|0;if(!a){Xa(g,f);a=0}}else a=15;T=h;return a|0}function yc(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;g=T;T=T+16|0;f=g;if(!d){c=Ya(c,f)|0;if(!c)c=wc(a,b,f,e)|0}else c=15;T=g;return c|0}function zc(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=T;T=T+32|0;h=j+12|0;i=j;g=vc(a,c,a,c,h)|0;if(g|0){i=g;T=j;return i|0}a=vc(a,c,d,e,i)|0;if(a|0){i=a;T=j;return i|0}h=Wa(h,i)|0;i=f;b[i>>2]=h;b[i+4>>2]=((h|0)<0)<<31>>31;i=0;T=j;return i|0}function Ac(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=T;T=T+32|0;h=j+12|0;i=j;g=vc(a,c,a,c,h)|0;if(!g){g=vc(a,c,d,e,i)|0;if(!g){e=Wa(h,i)|0;e=ld(e|0,((e|0)<0)<<31>>31|0,1,0)|0;h=H()|0;i=f;b[i>>2]=e;b[i+4>>2]=h;i=0;T=j;return i|0}}i=g;T=j;return i|0}function Bc(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0.0,k=0.0,l=0,m=0,n=0,o=0,p=0.0,r=0.0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0;z=T;T=T+48|0;h=z+24|0;i=z+12|0;y=z;g=vc(a,c,a,c,h)|0;if(!g){g=vc(a,c,d,e,i)|0;if(!g){w=Wa(h,i)|0;x=((w|0)<0)<<31>>31;b[h>>2]=0;b[h+4>>2]=0;b[h+8>>2]=0;b[i>>2]=0;b[i+4>>2]=0;b[i+8>>2]=0;if(vc(a,c,a,c,h)|0)I(23313,23090,691,23299);if(vc(a,c,d,e,i)|0)I(23313,23090,696,23299);Za(h);Za(i);if(!w){g=h+4|0;d=h+8|0;t=g;u=d;v=h;e=b[h>>2]|0;g=b[g>>2]|0;d=b[d>>2]|0;r=0.0;s=0.0;p=0.0}else{m=b[h>>2]|0;p=+(w|0);t=h+4|0;n=b[t>>2]|0;u=h+8|0;o=b[u>>2]|0;v=h;e=m;g=n;d=o;r=+((b[i>>2]|0)-m|0)/p;s=+((b[i+4>>2]|0)-n|0)/p;p=+((b[i+8>>2]|0)-o|0)/p}b[y>>2]=e;o=y+4|0;b[o>>2]=g;n=y+8|0;b[n>>2]=d;a:do if((w|0)<0)g=0;else{l=0;m=0;g=e;while(1){k=+(m>>>0)+4294967296.0*+(l|0);A=r*k+ +(g|0);j=s*k+ +(b[t>>2]|0);k=p*k+ +(b[u>>2]|0);d=~~+zd(+A);h=~~+zd(+j);g=~~+zd(+k);A=+q(+(+(d|0)-A));j=+q(+(+(h|0)-j));k=+q(+(+(g|0)-k));do if(!(A>j&A>k)){i=0-d|0;if(j>k){e=i-g|0;break}else{e=h;g=i-h|0;break}}else{d=0-(h+g)|0;e=h}while(0);b[y>>2]=d;b[o>>2]=e;b[n>>2]=g;_a(y);g=wc(a,c,y,f+(m<<3)|0)|0;if(g|0)break a;if(!((l|0)<(x|0)|(l|0)==(x|0)&m>>>0<w>>>0)){g=0;break a}g=ld(m|0,l|0,1,0)|0;i=H()|0;l=i;m=g;g=b[v>>2]|0}}while(0);y=g;T=z;return y|0}}y=g;T=z;return y|0}function Cc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;if((c|0)==0&(d|0)==0){e=0;f=1;G(e|0);return f|0}f=a;e=b;a=1;b=0;do{g=(c&1|0)==0&0==0;a=rd((g?1:f)|0,(g?0:e)|0,a|0,b|0)|0;b=H()|0;c=ud(c|0,d|0,1)|0;d=H()|0;f=rd(f|0,e|0,f|0,e|0)|0;e=H()|0}while(!((c|0)==0&(d|0)==0));G(b|0);return a|0}function Dc(a,c,d){a=a|0;c=c|0;d=d|0;var f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0,m=0.0,n=0,o=0;if(!(ya(c,d)|0)){o=0;return o|0}c=xa(c)|0;f=+e[d>>3];g=+e[d+8>>3];g=c&g<0.0?g+6.283185307179586:g;o=b[a>>2]|0;if((o|0)<=0){o=0;return o|0}n=b[a+4>>2]|0;if(c){c=0;m=g;d=-1;a=0;a:while(1){l=a;while(1){i=+e[n+(l<<4)>>3];g=+e[n+(l<<4)+8>>3];a=(d+2|0)%(o|0)|0;h=+e[n+(a<<4)>>3];j=+e[n+(a<<4)+8>>3];if(i>h){k=i;i=j}else{k=h;h=i;i=g;g=j}f=f==h|f==k?f+2.220446049250313e-16:f;if(!(f<h|f>k))break;d=l+1|0;if((d|0)>=(o|0)){d=22;break a}else{a=l;l=d;d=a}}j=i<0.0?i+6.283185307179586:i;i=g<0.0?g+6.283185307179586:g;m=j==m|i==m?m+-2.220446049250313e-16:m;k=j+(i-j)*((f-h)/(k-h));if((k<0.0?k+6.283185307179586:k)>m)c=c^1;a=l+1|0;if((a|0)>=(o|0)){d=22;break}else d=l}if((d|0)==22)return c|0}else{c=0;m=g;d=-1;a=0;b:while(1){l=a;while(1){i=+e[n+(l<<4)>>3];g=+e[n+(l<<4)+8>>3];a=(d+2|0)%(o|0)|0;h=+e[n+(a<<4)>>3];j=+e[n+(a<<4)+8>>3];if(i>h){k=i;i=j}else{k=h;h=i;i=g;g=j}f=f==h|f==k?f+2.220446049250313e-16:f;if(!(f<h|f>k))break;d=l+1|0;if((d|0)>=(o|0)){d=22;break b}else{a=l;l=d;d=a}}m=i==m|g==m?m+-2.220446049250313e-16:m;if(i+(g-i)*((f-h)/(k-h))>m)c=c^1;a=l+1|0;if((a|0)>=(o|0)){d=22;break}else d=l}if((d|0)==22)return c|0}return 0}function Ec(a,c){a=a|0;c=c|0;var d=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0,r=0,s=0,t=0,u=0,v=0;r=b[a>>2]|0;if(!r){b[c>>2]=0;b[c+4>>2]=0;b[c+8>>2]=0;b[c+12>>2]=0;b[c+16>>2]=0;b[c+20>>2]=0;b[c+24>>2]=0;b[c+28>>2]=0;return}s=c+8|0;e[s>>3]=1797693134862315708145274.0e284;t=c+24|0;e[t>>3]=1797693134862315708145274.0e284;e[c>>3]=-1797693134862315708145274.0e284;u=c+16|0;e[u>>3]=-1797693134862315708145274.0e284;if((r|0)<=0)return;o=b[a+4>>2]|0;l=1797693134862315708145274.0e284;m=-1797693134862315708145274.0e284;n=0;a=-1;h=1797693134862315708145274.0e284;i=1797693134862315708145274.0e284;k=-1797693134862315708145274.0e284;f=-1797693134862315708145274.0e284;p=0;while(1){d=+e[o+(p<<4)>>3];j=+e[o+(p<<4)+8>>3];a=a+2|0;g=+e[o+(((a|0)==(r|0)?0:a)<<4)+8>>3];if(d<h){e[s>>3]=d;h=d}if(j<i){e[t>>3]=j;i=j}if(d>k)e[c>>3]=d;else d=k;if(j>f){e[u>>3]=j;f=j}l=j>0.0&j<l?j:l;m=j<0.0&j>m?j:m;n=n|+q(+(j-g))>3.141592653589793;a=p+1|0;if((a|0)==(r|0))break;else{v=p;k=d;p=a;a=v}}if(!n)return;e[u>>3]=m;e[t>>3]=l;return}function Fc(a,c){a=a|0;c=c|0;var d=0,f=0,g=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;r=b[a>>2]|0;if(r){s=c+8|0;e[s>>3]=1797693134862315708145274.0e284;t=c+24|0;e[t>>3]=1797693134862315708145274.0e284;e[c>>3]=-1797693134862315708145274.0e284;u=c+16|0;e[u>>3]=-1797693134862315708145274.0e284;if((r|0)>0){g=b[a+4>>2]|0;o=1797693134862315708145274.0e284;p=-1797693134862315708145274.0e284;f=0;d=-1;k=1797693134862315708145274.0e284;l=1797693134862315708145274.0e284;n=-1797693134862315708145274.0e284;i=-1797693134862315708145274.0e284;v=0;while(1){h=+e[g+(v<<4)>>3];m=+e[g+(v<<4)+8>>3];z=d+2|0;j=+e[g+(((z|0)==(r|0)?0:z)<<4)+8>>3];if(h<k){e[s>>3]=h;k=h}if(m<l){e[t>>3]=m;l=m}if(h>n)e[c>>3]=h;else h=n;if(m>i){e[u>>3]=m;i=m}o=m>0.0&m<o?m:o;p=m<0.0&m>p?m:p;f=f|+q(+(m-j))>3.141592653589793;d=v+1|0;if((d|0)==(r|0))break;else{z=v;n=h;v=d;d=z}}if(f){e[u>>3]=p;e[t>>3]=o}}}else{b[c>>2]=0;b[c+4>>2]=0;b[c+8>>2]=0;b[c+12>>2]=0;b[c+16>>2]=0;b[c+20>>2]=0;b[c+24>>2]=0;b[c+28>>2]=0}z=a+8|0;d=b[z>>2]|0;if((d|0)<=0)return;y=a+12|0;x=0;do{g=b[y>>2]|0;f=x;x=x+1|0;t=c+(x<<5)|0;u=b[g+(f<<3)>>2]|0;if(u){v=c+(x<<5)+8|0;e[v>>3]=1797693134862315708145274.0e284;a=c+(x<<5)+24|0;e[a>>3]=1797693134862315708145274.0e284;e[t>>3]=-1797693134862315708145274.0e284;w=c+(x<<5)+16|0;e[w>>3]=-1797693134862315708145274.0e284;if((u|0)>0){r=b[g+(f<<3)+4>>2]|0;o=1797693134862315708145274.0e284;p=-1797693134862315708145274.0e284;g=0;f=-1;s=0;k=1797693134862315708145274.0e284;l=1797693134862315708145274.0e284;m=-1797693134862315708145274.0e284;i=-1797693134862315708145274.0e284;while(1){h=+e[r+(s<<4)>>3];n=+e[r+(s<<4)+8>>3];f=f+2|0;j=+e[r+(((f|0)==(u|0)?0:f)<<4)+8>>3];if(h<k){e[v>>3]=h;k=h}if(n<l){e[a>>3]=n;l=n}if(h>m)e[t>>3]=h;else h=m;if(n>i){e[w>>3]=n;i=n}o=n>0.0&n<o?n:o;p=n<0.0&n>p?n:p;g=g|+q(+(n-j))>3.141592653589793;f=s+1|0;if((f|0)==(u|0))break;else{A=s;s=f;m=h;f=A}}if(g){e[w>>3]=p;e[a>>3]=o}}}else{b[t>>2]=0;b[t+4>>2]=0;b[t+8>>2]=0;b[t+12>>2]=0;b[t+16>>2]=0;b[t+20>>2]=0;b[t+24>>2]=0;b[t+28>>2]=0;d=b[z>>2]|0}}while((x|0)<(d|0));return}function Gc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0;if(!(Dc(a,c,d)|0)){f=0;return f|0}f=a+8|0;if((b[f>>2]|0)<=0){f=1;return f|0}e=a+12|0;a=0;while(1){g=a;a=a+1|0;if(Dc((b[e>>2]|0)+(g<<3)|0,c+(a<<5)|0,d)|0){a=0;e=6;break}if((a|0)>=(b[f>>2]|0)){a=1;e=6;break}}if((e|0)==6)return a|0;return 0}function Hc(){return 8}function Ic(){return 16}function Jc(){return 168}function Kc(){return 8}function Lc(){return 16}function Mc(){return 12}function Nc(){return 8}function Oc(a){a=a|0;return +(+((b[a>>2]|0)>>>0)+4294967296.0*+(b[a+4>>2]|0))}function Pc(a){a=a|0;var b=0.0,c=0.0;c=+e[a>>3];b=+e[a+8>>3];return +(+r(+(c*c+b*b)))}function Qc(a,b,c,d,f){a=a|0;b=b|0;c=c|0;d=d|0;f=f|0;var g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;k=+e[a>>3];j=+e[b>>3]-k;i=+e[a+8>>3];h=+e[b+8>>3]-i;m=+e[c>>3];g=+e[d>>3]-m;n=+e[c+8>>3];l=+e[d+8>>3]-n;g=(g*(i-n)-(k-m)*l)/(j*l-h*g);e[f>>3]=k+j*g;e[f+8>>3]=i+h*g;return}function Rc(a,b){a=a|0;b=b|0;if(!(+q(+(+e[a>>3]-+e[b>>3]))<1.1920928955078125e-07)){b=0;return b|0}b=+q(+(+e[a+8>>3]-+e[b+8>>3]))<1.1920928955078125e-07;return b|0}function Sc(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0;f=+e[a>>3]-+e[b>>3];d=+e[a+8>>3]-+e[b+8>>3];c=+e[a+16>>3]-+e[b+16>>3];return +(f*f+d*d+c*c)}function Tc(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0;c=+e[a>>3];d=+t(+c);c=+u(+c);e[b+16>>3]=c;c=+e[a+8>>3];f=d*+t(+c);e[b>>3]=f;c=d*+u(+c);e[b+8>>3]=c;return}function Uc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0;g=T;T=T+16|0;f=g;e=xb(a,c)|0;if((d+-1|0)>>>0>5){f=-1;T=g;return f|0}e=(e|0)!=0;if((d|0)==1&e){f=-1;T=g;return f|0}do if(!(Vc(a,c,f)|0))if(e){e=((b[21936+(d<<2)>>2]|0)+5-(b[f>>2]|0)|0)%5|0;break}else{e=((b[21968+(d<<2)>>2]|0)+6-(b[f>>2]|0)|0)%6|0;break}else e=-1;while(0);f=e;T=g;return f|0}function Vc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;k=T;T=T+32|0;h=k+16|0;i=k;e=Ob(a,c,h)|0;if(e|0){d=e;T=k;return d|0}g=tb(a,c)|0;j=Fb(a,c)|0;qa(g,i);e=ra(g,b[h>>2]|0)|0;a:do if(ma(g)|0){do switch(g|0){case 4:{a=0;break}case 14:{a=1;break}case 24:{a=2;break}case 38:{a=3;break}case 49:{a=4;break}case 58:{a=5;break}case 63:{a=6;break}case 72:{a=7;break}case 83:{a=8;break}case 97:{a=9;break}case 107:{a=10;break}case 117:{a=11;break}default:{e=1;break a}}while(0);f=b[22e3+(a*24|0)+8>>2]|0;c=b[22e3+(a*24|0)+16>>2]|0;a=b[h>>2]|0;if((a|0)!=(b[i>>2]|0)){i=na(g)|0;a=b[h>>2]|0;if(i|(a|0)==(c|0))e=(e+1|0)%6|0}if((j|0)==3&(a|0)==(c|0)){e=(e+5|0)%6|0;f=22;break}if((j|0)==5&(a|0)==(f|0)){e=(e+1|0)%6|0;f=22}else f=22}else f=22;while(0);if((f|0)==22){b[d>>2]=e;e=0}d=e;T=k;return d|0}function Wc(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;u=T;T=T+32|0;t=u+24|0;r=u+20|0;p=u+8|0;o=u+16|0;n=u;j=(xb(a,c)|0)==0;j=j?6:5;l=vd(a|0,c|0,52)|0;H()|0;l=l&15;if(j>>>0<=d>>>0){e=2;T=u;return e|0}m=(l|0)==0;if(!m?(q=wd(7,0,(l^15)*3|0)|0,(q&a|0)==0&((H()|0)&c|0)==0):0)f=d;else g=4;a:do if((g|0)==4){f=(xb(a,c)|0)!=0;if(((f?4:5)|0)<(d|0)){e=1;T=u;return e|0}if(Vc(a,c,t)|0){e=1;T=u;return e|0}g=(b[t>>2]|0)+d|0;if(f)f=22288+(((g|0)%5|0)<<2)|0;else f=22320+(((g|0)%6|0)<<2)|0;q=b[f>>2]|0;if((q|0)==7){e=1;T=u;return e|0}b[r>>2]=0;f=ea(a,c,q,r,p)|0;do if(!f){i=p;k=b[i>>2]|0;i=b[i+4>>2]|0;h=i>>>0<c>>>0|(i|0)==(c|0)&k>>>0<a>>>0;g=h?k:a;h=h?i:c;if(!m?(m=wd(7,0,(l^15)*3|0)|0,(k&m|0)==0&(i&(H()|0)|0)==0):0)f=d;else{i=(d+-1+j|0)%(j|0)|0;f=xb(a,c)|0;if((i|0)<0)I(23313,23315,245,23324);j=(f|0)!=0;if(((j?4:5)|0)<(i|0))I(23313,23315,245,23324);if(Vc(a,c,t)|0)I(23313,23315,245,23324);f=(b[t>>2]|0)+i|0;if(j)f=22288+(((f|0)%5|0)<<2)|0;else f=22320+(((f|0)%6|0)<<2)|0;i=b[f>>2]|0;if((i|0)==7)I(23313,23315,245,23324);b[o>>2]=0;f=ea(a,c,i,o,n)|0;if(f|0)break;k=n;j=b[k>>2]|0;k=b[k+4>>2]|0;do if(k>>>0<h>>>0|(k|0)==(h|0)&j>>>0<g>>>0){if(!(xb(j,k)|0))g=b[22384+((((b[o>>2]|0)+(b[22352+(i<<2)>>2]|0)|0)%6|0)<<2)>>2]|0;else g=fa(j,k,a,c)|0;f=xb(j,k)|0;if((g+-1|0)>>>0>5){f=-1;g=j;h=k;break}f=(f|0)!=0;if((g|0)==1&f){f=-1;g=j;h=k;break}do if(!(Vc(j,k,t)|0))if(f){f=((b[21936+(g<<2)>>2]|0)+5-(b[t>>2]|0)|0)%5|0;break}else{f=((b[21968+(g<<2)>>2]|0)+6-(b[t>>2]|0)|0)%6|0;break}else f=-1;while(0);g=j;h=k}else f=d;while(0);i=p;k=b[i>>2]|0;i=b[i+4>>2]|0}if((g|0)==(k|0)&(h|0)==(i|0)){j=(xb(k,i)|0)!=0;if(j)a=fa(k,i,a,c)|0;else a=b[22384+((((b[r>>2]|0)+(b[22352+(q<<2)>>2]|0)|0)%6|0)<<2)>>2]|0;f=xb(k,i)|0;if((a+-1|0)>>>0<=5?(s=(f|0)!=0,!((a|0)==1&s)):0)do if(!(Vc(k,i,t)|0))if(s){f=((b[21936+(a<<2)>>2]|0)+5-(b[t>>2]|0)|0)%5|0;break}else{f=((b[21968+(a<<2)>>2]|0)+6-(b[t>>2]|0)|0)%6|0;break}else f=-1;while(0);else f=-1;f=f+1|0;f=(f|0)==6|j&(f|0)==5?0:f}c=h;a=g;break a}while(0);e=f;T=u;return e|0}while(0);s=wd(f|0,0,56)|0;t=H()|0|c&-2130706433|536870912;b[e>>2]=s|a;b[e+4>>2]=t;e=0;T=u;return e|0}function Xc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0;g=(xb(a,c)|0)==0;e=Wc(a,c,0,d)|0;f=(e|0)==0;if(g){if(!f){g=e;return g|0}e=Wc(a,c,1,d+8|0)|0;if(e|0){g=e;return g|0}e=Wc(a,c,2,d+16|0)|0;if(e|0){g=e;return g|0}e=Wc(a,c,3,d+24|0)|0;if(e|0){g=e;return g|0}e=Wc(a,c,4,d+32|0)|0;if(!e)return Wc(a,c,5,d+40|0)|0;else{g=e;return g|0}}if(!f){g=e;return g|0}e=Wc(a,c,1,d+8|0)|0;if(e|0){g=e;return g|0}e=Wc(a,c,2,d+16|0)|0;if(e|0){g=e;return g|0}e=Wc(a,c,3,d+24|0)|0;if(e|0){g=e;return g|0}e=Wc(a,c,4,d+32|0)|0;if(e|0){g=e;return g|0}g=d+40|0;b[g>>2]=0;b[g+4>>2]=0;g=0;return g|0}function Yc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=T;T=T+192|0;f=j;g=j+168|0;h=vd(a|0,c|0,56)|0;H()|0;h=h&7;i=c&-2130706433|134217728;e=Ob(a,i,g)|0;if(e|0){i=e;T=j;return i|0}c=vd(a|0,c|0,52)|0;H()|0;c=c&15;if(!(xb(a,i)|0))qb(g,c,h,1,f);else mb(g,c,h,1,f);i=f+8|0;b[d>>2]=b[i>>2];b[d+4>>2]=b[i+4>>2];b[d+8>>2]=b[i+8>>2];b[d+12>>2]=b[i+12>>2];i=0;T=j;return i|0}function Zc(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0;f=T;T=T+16|0;d=f;if(!(0==0&(c&2013265920|0)==536870912)){e=0;T=f;return e|0}e=c&-2130706433|134217728;if(!(ub(a,e)|0)){e=0;T=f;return e|0}g=vd(a|0,c|0,56)|0;H()|0;g=(Wc(a,e,g&7,d)|0)==0;e=d;e=g&((b[e>>2]|0)==(a|0)?(b[e+4>>2]|0)==(c|0):0)&1;T=f;return e|0}function _c(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;if((c|0)>0){e=kd(c,4)|0;b[a>>2]=e;if(!e)I(23337,23360,40,23374)}else b[a>>2]=0;b[a+4>>2]=c;b[a+8>>2]=0;b[a+12>>2]=d;return}function $c(a){a=a|0;var c=0,d=0,f=0,g=0,h=0,i=0,j=0;g=a+4|0;h=a+12|0;i=a+8|0;a:while(1){d=b[g>>2]|0;c=0;while(1){if((c|0)>=(d|0))break a;f=b[a>>2]|0;j=b[f+(c<<2)>>2]|0;if(!j)c=c+1|0;else break}c=f+(~~(+q(+(+s(10.0,+(+(15-(b[h>>2]|0)|0)))*(+e[j>>3]+ +e[j+8>>3])))%+(d|0))>>>0<<2)|0;d=b[c>>2]|0;b:do if(d|0){f=j+32|0;if((d|0)==(j|0))b[c>>2]=b[f>>2];else{d=d+32|0;c=b[d>>2]|0;if(!c)break;while(1){if((c|0)==(j|0))break;d=c+32|0;c=b[d>>2]|0;if(!c)break b}b[d>>2]=b[f>>2]}jd(j);b[i>>2]=(b[i>>2]|0)+-1}while(0)}jd(b[a>>2]|0);return}function ad(a){a=a|0;var c=0,d=0,e=0;e=b[a+4>>2]|0;d=0;while(1){if((d|0)>=(e|0)){c=0;d=4;break}c=b[(b[a>>2]|0)+(d<<2)>>2]|0;if(!c)d=d+1|0;else{d=4;break}}if((d|0)==4)return c|0;return 0}function bd(a,c){a=a|0;c=c|0;var d=0,f=0,g=0,h=0;d=~~(+q(+(+s(10.0,+(+(15-(b[a+12>>2]|0)|0)))*(+e[c>>3]+ +e[c+8>>3])))%+(b[a+4>>2]|0))>>>0;d=(b[a>>2]|0)+(d<<2)|0;f=b[d>>2]|0;if(!f){h=1;return h|0}h=c+32|0;do if((f|0)!=(c|0)){d=b[f+32>>2]|0;if(!d){h=1;return h|0}g=d;while(1){if((g|0)==(c|0)){g=8;break}d=b[g+32>>2]|0;if(!d){d=1;g=10;break}else{f=g;g=d}}if((g|0)==8){b[f+32>>2]=b[h>>2];break}else if((g|0)==10)return d|0}else b[d>>2]=b[h>>2];while(0);jd(c);h=a+8|0;b[h>>2]=(b[h>>2]|0)+-1;h=0;return h|0}function cd(a,c,d){a=a|0;c=c|0;d=d|0;var f=0,g=0,h=0,i=0;h=id(40)|0;if(!h)I(23390,23360,98,23403);b[h>>2]=b[c>>2];b[h+4>>2]=b[c+4>>2];b[h+8>>2]=b[c+8>>2];b[h+12>>2]=b[c+12>>2];g=h+16|0;b[g>>2]=b[d>>2];b[g+4>>2]=b[d+4>>2];b[g+8>>2]=b[d+8>>2];b[g+12>>2]=b[d+12>>2];b[h+32>>2]=0;g=~~(+q(+(+s(10.0,+(+(15-(b[a+12>>2]|0)|0)))*(+e[c>>3]+ +e[c+8>>3])))%+(b[a+4>>2]|0))>>>0;g=(b[a>>2]|0)+(g<<2)|0;f=b[g>>2]|0;do if(!f)b[g>>2]=h;else{while(1){if(_b(f,c)|0?_b(f+16|0,d)|0:0)break;g=b[f+32>>2]|0;f=(g|0)==0?f:g;if(!(b[f+32>>2]|0)){i=10;break}}if((i|0)==10){b[f+32>>2]=h;break}jd(h);i=f;return i|0}while(0);i=a+8|0;b[i>>2]=(b[i>>2]|0)+1;i=h;return i|0}function dd(a,c,d){a=a|0;c=c|0;d=d|0;var f=0,g=0;g=~~(+q(+(+s(10.0,+(+(15-(b[a+12>>2]|0)|0)))*(+e[c>>3]+ +e[c+8>>3])))%+(b[a+4>>2]|0))>>>0;g=b[(b[a>>2]|0)+(g<<2)>>2]|0;if(!g){d=0;return d|0}if(!d){a=g;while(1){if(_b(a,c)|0){f=10;break}a=b[a+32>>2]|0;if(!a){a=0;f=10;break}}if((f|0)==10)return a|0}a=g;while(1){if(_b(a,c)|0?_b(a+16|0,d)|0:0){f=10;break}a=b[a+32>>2]|0;if(!a){a=0;f=10;break}}if((f|0)==10)return a|0;return 0}function ed(a,c){a=a|0;c=c|0;var d=0;d=~~(+q(+(+s(10.0,+(+(15-(b[a+12>>2]|0)|0)))*(+e[c>>3]+ +e[c+8>>3])))%+(b[a+4>>2]|0))>>>0;a=b[(b[a>>2]|0)+(d<<2)>>2]|0;if(!a){d=0;return d|0}while(1){if(_b(a,c)|0){c=5;break}a=b[a+32>>2]|0;if(!a){a=0;c=5;break}}if((c|0)==5)return a|0;return 0}function fd(){return 23424}function gd(a){a=+a;return +(+Cd(+a))}function hd(a){a=+a;return ~~+gd(a)|0}function id(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=T;T=T+16|0;n=w;do if(a>>>0<245){k=a>>>0<11?16:a+11&-8;a=k>>>3;m=b[5857]|0;d=m>>>a;if(d&3|0){c=(d&1^1)+a|0;a=23468+(c<<1<<2)|0;d=a+8|0;e=b[d>>2]|0;f=e+8|0;g=b[f>>2]|0;if((g|0)==(a|0))b[5857]=m&~(1<<c);else{b[g+12>>2]=a;b[d>>2]=g}v=c<<3;b[e+4>>2]=v|3;v=e+v+4|0;b[v>>2]=b[v>>2]|1;v=f;T=w;return v|0}l=b[5859]|0;if(k>>>0>l>>>0){if(d|0){c=2<<a;c=d<<a&(c|0-c);c=(c&0-c)+-1|0;i=c>>>12&16;c=c>>>i;d=c>>>5&8;c=c>>>d;g=c>>>2&4;c=c>>>g;a=c>>>1&2;c=c>>>a;e=c>>>1&1;e=(d|i|g|a|e)+(c>>>e)|0;c=23468+(e<<1<<2)|0;a=c+8|0;g=b[a>>2]|0;i=g+8|0;d=b[i>>2]|0;if((d|0)==(c|0)){a=m&~(1<<e);b[5857]=a}else{b[d+12>>2]=c;b[a>>2]=d;a=m}v=e<<3;h=v-k|0;b[g+4>>2]=k|3;f=g+k|0;b[f+4>>2]=h|1;b[g+v>>2]=h;if(l|0){e=b[5862]|0;c=l>>>3;d=23468+(c<<1<<2)|0;c=1<<c;if(!(a&c)){b[5857]=a|c;c=d;a=d+8|0}else{a=d+8|0;c=b[a>>2]|0}b[a>>2]=e;b[c+12>>2]=e;b[e+8>>2]=c;b[e+12>>2]=d}b[5859]=h;b[5862]=f;v=i;T=w;return v|0}g=b[5858]|0;if(g){d=(g&0-g)+-1|0;f=d>>>12&16;d=d>>>f;e=d>>>5&8;d=d>>>e;h=d>>>2&4;d=d>>>h;i=d>>>1&2;d=d>>>i;j=d>>>1&1;j=b[23732+((e|f|h|i|j)+(d>>>j)<<2)>>2]|0;d=j;i=j;j=(b[j+4>>2]&-8)-k|0;while(1){a=b[d+16>>2]|0;if(!a){a=b[d+20>>2]|0;if(!a)break}h=(b[a+4>>2]&-8)-k|0;f=h>>>0<j>>>0;d=a;i=f?a:i;j=f?h:j}h=i+k|0;if(h>>>0>i>>>0){f=b[i+24>>2]|0;c=b[i+12>>2]|0;do if((c|0)==(i|0)){a=i+20|0;c=b[a>>2]|0;if(!c){a=i+16|0;c=b[a>>2]|0;if(!c){d=0;break}}while(1){e=c+20|0;d=b[e>>2]|0;if(!d){e=c+16|0;d=b[e>>2]|0;if(!d)break;else{c=d;a=e}}else{c=d;a=e}}b[a>>2]=0;d=c}else{d=b[i+8>>2]|0;b[d+12>>2]=c;b[c+8>>2]=d;d=c}while(0);do if(f|0){c=b[i+28>>2]|0;a=23732+(c<<2)|0;if((i|0)==(b[a>>2]|0)){b[a>>2]=d;if(!d){b[5858]=g&~(1<<c);break}}else{v=f+16|0;b[((b[v>>2]|0)==(i|0)?v:f+20|0)>>2]=d;if(!d)break}b[d+24>>2]=f;c=b[i+16>>2]|0;if(c|0){b[d+16>>2]=c;b[c+24>>2]=d}c=b[i+20>>2]|0;if(c|0){b[d+20>>2]=c;b[c+24>>2]=d}}while(0);if(j>>>0<16){v=j+k|0;b[i+4>>2]=v|3;v=i+v+4|0;b[v>>2]=b[v>>2]|1}else{b[i+4>>2]=k|3;b[h+4>>2]=j|1;b[h+j>>2]=j;if(l|0){e=b[5862]|0;c=l>>>3;d=23468+(c<<1<<2)|0;c=1<<c;if(!(c&m)){b[5857]=c|m;c=d;a=d+8|0}else{a=d+8|0;c=b[a>>2]|0}b[a>>2]=e;b[c+12>>2]=e;b[e+8>>2]=c;b[e+12>>2]=d}b[5859]=j;b[5862]=h}v=i+8|0;T=w;return v|0}else m=k}else m=k}else m=k}else if(a>>>0<=4294967231){a=a+11|0;k=a&-8;e=b[5858]|0;if(e){f=0-k|0;a=a>>>8;if(a)if(k>>>0>16777215)j=31;else{m=(a+1048320|0)>>>16&8;q=a<<m;i=(q+520192|0)>>>16&4;q=q<<i;j=(q+245760|0)>>>16&2;j=14-(i|m|j)+(q<<j>>>15)|0;j=k>>>(j+7|0)&1|j<<1}else j=0;d=b[23732+(j<<2)>>2]|0;a:do if(!d){d=0;a=0;q=61}else{a=0;i=k<<((j|0)==31?0:25-(j>>>1)|0);g=0;while(1){h=(b[d+4>>2]&-8)-k|0;if(h>>>0<f>>>0)if(!h){a=d;f=0;q=65;break a}else{a=d;f=h}q=b[d+20>>2]|0;d=b[d+16+(i>>>31<<2)>>2]|0;g=(q|0)==0|(q|0)==(d|0)?g:q;if(!d){d=g;q=61;break}else i=i<<1}}while(0);if((q|0)==61){if((d|0)==0&(a|0)==0){a=2<<j;a=(a|0-a)&e;if(!a){m=k;break}m=(a&0-a)+-1|0;h=m>>>12&16;m=m>>>h;g=m>>>5&8;m=m>>>g;i=m>>>2&4;m=m>>>i;j=m>>>1&2;m=m>>>j;d=m>>>1&1;a=0;d=b[23732+((g|h|i|j|d)+(m>>>d)<<2)>>2]|0}if(!d){i=a;h=f}else q=65}if((q|0)==65){g=d;while(1){m=(b[g+4>>2]&-8)-k|0;d=m>>>0<f>>>0;f=d?m:f;a=d?g:a;d=b[g+16>>2]|0;if(!d)d=b[g+20>>2]|0;if(!d){i=a;h=f;break}else g=d}}if(((i|0)!=0?h>>>0<((b[5859]|0)-k|0)>>>0:0)?(l=i+k|0,l>>>0>i>>>0):0){g=b[i+24>>2]|0;c=b[i+12>>2]|0;do if((c|0)==(i|0)){a=i+20|0;c=b[a>>2]|0;if(!c){a=i+16|0;c=b[a>>2]|0;if(!c){c=0;break}}while(1){f=c+20|0;d=b[f>>2]|0;if(!d){f=c+16|0;d=b[f>>2]|0;if(!d)break;else{c=d;a=f}}else{c=d;a=f}}b[a>>2]=0}else{v=b[i+8>>2]|0;b[v+12>>2]=c;b[c+8>>2]=v}while(0);do if(g){a=b[i+28>>2]|0;d=23732+(a<<2)|0;if((i|0)==(b[d>>2]|0)){b[d>>2]=c;if(!c){e=e&~(1<<a);b[5858]=e;break}}else{v=g+16|0;b[((b[v>>2]|0)==(i|0)?v:g+20|0)>>2]=c;if(!c)break}b[c+24>>2]=g;a=b[i+16>>2]|0;if(a|0){b[c+16>>2]=a;b[a+24>>2]=c}a=b[i+20>>2]|0;if(a){b[c+20>>2]=a;b[a+24>>2]=c}}while(0);b:do if(h>>>0<16){v=h+k|0;b[i+4>>2]=v|3;v=i+v+4|0;b[v>>2]=b[v>>2]|1}else{b[i+4>>2]=k|3;b[l+4>>2]=h|1;b[l+h>>2]=h;c=h>>>3;if(h>>>0<256){d=23468+(c<<1<<2)|0;a=b[5857]|0;c=1<<c;if(!(a&c)){b[5857]=a|c;c=d;a=d+8|0}else{a=d+8|0;c=b[a>>2]|0}b[a>>2]=l;b[c+12>>2]=l;b[l+8>>2]=c;b[l+12>>2]=d;break}c=h>>>8;if(c)if(h>>>0>16777215)d=31;else{u=(c+1048320|0)>>>16&8;v=c<<u;t=(v+520192|0)>>>16&4;v=v<<t;d=(v+245760|0)>>>16&2;d=14-(t|u|d)+(v<<d>>>15)|0;d=h>>>(d+7|0)&1|d<<1}else d=0;c=23732+(d<<2)|0;b[l+28>>2]=d;a=l+16|0;b[a+4>>2]=0;b[a>>2]=0;a=1<<d;if(!(e&a)){b[5858]=e|a;b[c>>2]=l;b[l+24>>2]=c;b[l+12>>2]=l;b[l+8>>2]=l;break}c=b[c>>2]|0;c:do if((b[c+4>>2]&-8|0)!=(h|0)){e=h<<((d|0)==31?0:25-(d>>>1)|0);while(1){d=c+16+(e>>>31<<2)|0;a=b[d>>2]|0;if(!a)break;if((b[a+4>>2]&-8|0)==(h|0)){c=a;break c}else{e=e<<1;c=a}}b[d>>2]=l;b[l+24>>2]=c;b[l+12>>2]=l;b[l+8>>2]=l;break b}while(0);u=c+8|0;v=b[u>>2]|0;b[v+12>>2]=l;b[u>>2]=l;b[l+8>>2]=v;b[l+12>>2]=c;b[l+24>>2]=0}while(0);v=i+8|0;T=w;return v|0}else m=k}else m=k}else m=-1;while(0);d=b[5859]|0;if(d>>>0>=m>>>0){c=d-m|0;a=b[5862]|0;if(c>>>0>15){v=a+m|0;b[5862]=v;b[5859]=c;b[v+4>>2]=c|1;b[a+d>>2]=c;b[a+4>>2]=m|3}else{b[5859]=0;b[5862]=0;b[a+4>>2]=d|3;v=a+d+4|0;b[v>>2]=b[v>>2]|1}v=a+8|0;T=w;return v|0}h=b[5860]|0;if(h>>>0>m>>>0){t=h-m|0;b[5860]=t;v=b[5863]|0;u=v+m|0;b[5863]=u;b[u+4>>2]=t|1;b[v+4>>2]=m|3;v=v+8|0;T=w;return v|0}if(!(b[5975]|0)){b[5977]=4096;b[5976]=4096;b[5978]=-1;b[5979]=-1;b[5980]=0;b[5968]=0;b[5975]=n&-16^1431655768;a=4096}else a=b[5977]|0;i=m+48|0;j=m+47|0;g=a+j|0;f=0-a|0;k=g&f;if(k>>>0<=m>>>0){v=0;T=w;return v|0}a=b[5967]|0;if(a|0?(l=b[5965]|0,n=l+k|0,n>>>0<=l>>>0|n>>>0>a>>>0):0){v=0;T=w;return v|0}d:do if(!(b[5968]&4)){d=b[5863]|0;e:do if(d){e=23876;while(1){n=b[e>>2]|0;if(n>>>0<=d>>>0?(n+(b[e+4>>2]|0)|0)>>>0>d>>>0:0)break;a=b[e+8>>2]|0;if(!a){q=128;break e}else e=a}c=g-h&f;if(c>>>0<2147483647){a=Dd(c|0)|0;if((a|0)==((b[e>>2]|0)+(b[e+4>>2]|0)|0)){if((a|0)!=(-1|0)){h=c;g=a;q=145;break d}}else{e=a;q=136}}else c=0}else q=128;while(0);do if((q|0)==128){d=Dd(0)|0;if((d|0)!=(-1|0)?(c=d,o=b[5976]|0,p=o+-1|0,c=((p&c|0)==0?0:(p+c&0-o)-c|0)+k|0,o=b[5965]|0,p=c+o|0,c>>>0>m>>>0&c>>>0<2147483647):0){n=b[5967]|0;if(n|0?p>>>0<=o>>>0|p>>>0>n>>>0:0){c=0;break}a=Dd(c|0)|0;if((a|0)==(d|0)){h=c;g=d;q=145;break d}else{e=a;q=136}}else c=0}while(0);do if((q|0)==136){d=0-c|0;if(!(i>>>0>c>>>0&(c>>>0<2147483647&(e|0)!=(-1|0))))if((e|0)==(-1|0)){c=0;break}else{h=c;g=e;q=145;break d}a=b[5977]|0;a=j-c+a&0-a;if(a>>>0>=2147483647){h=c;g=e;q=145;break d}if((Dd(a|0)|0)==(-1|0)){Dd(d|0)|0;c=0;break}else{h=a+c|0;g=e;q=145;break d}}while(0);b[5968]=b[5968]|4;q=143}else{c=0;q=143}while(0);if(((q|0)==143?k>>>0<2147483647:0)?(t=Dd(k|0)|0,p=Dd(0)|0,r=p-t|0,s=r>>>0>(m+40|0)>>>0,!((t|0)==(-1|0)|s^1|t>>>0<p>>>0&((t|0)!=(-1|0)&(p|0)!=(-1|0))^1)):0){h=s?r:c;g=t;q=145}if((q|0)==145){c=(b[5965]|0)+h|0;b[5965]=c;if(c>>>0>(b[5966]|0)>>>0)b[5966]=c;j=b[5863]|0;f:do if(j){c=23876;while(1){a=b[c>>2]|0;d=b[c+4>>2]|0;if((g|0)==(a+d|0)){q=154;break}e=b[c+8>>2]|0;if(!e)break;else c=e}if(((q|0)==154?(u=c+4|0,(b[c+12>>2]&8|0)==0):0)?g>>>0>j>>>0&a>>>0<=j>>>0:0){b[u>>2]=d+h;v=(b[5860]|0)+h|0;t=j+8|0;t=(t&7|0)==0?0:0-t&7;u=j+t|0;t=v-t|0;b[5863]=u;b[5860]=t;b[u+4>>2]=t|1;b[j+v+4>>2]=40;b[5864]=b[5979];break}if(g>>>0<(b[5861]|0)>>>0)b[5861]=g;d=g+h|0;c=23876;while(1){if((b[c>>2]|0)==(d|0)){q=162;break}a=b[c+8>>2]|0;if(!a)break;else c=a}if((q|0)==162?(b[c+12>>2]&8|0)==0:0){b[c>>2]=g;l=c+4|0;b[l>>2]=(b[l>>2]|0)+h;l=g+8|0;l=g+((l&7|0)==0?0:0-l&7)|0;c=d+8|0;c=d+((c&7|0)==0?0:0-c&7)|0;k=l+m|0;i=c-l-m|0;b[l+4>>2]=m|3;g:do if((j|0)==(c|0)){v=(b[5860]|0)+i|0;b[5860]=v;b[5863]=k;b[k+4>>2]=v|1}else{if((b[5862]|0)==(c|0)){v=(b[5859]|0)+i|0;b[5859]=v;b[5862]=k;b[k+4>>2]=v|1;b[k+v>>2]=v;break}a=b[c+4>>2]|0;if((a&3|0)==1){h=a&-8;e=a>>>3;h:do if(a>>>0<256){a=b[c+8>>2]|0;d=b[c+12>>2]|0;if((d|0)==(a|0)){b[5857]=b[5857]&~(1<<e);break}else{b[a+12>>2]=d;b[d+8>>2]=a;break}}else{g=b[c+24>>2]|0;a=b[c+12>>2]|0;do if((a|0)==(c|0)){d=c+16|0;e=d+4|0;a=b[e>>2]|0;if(!a){a=b[d>>2]|0;if(!a){a=0;break}}else d=e;while(1){f=a+20|0;e=b[f>>2]|0;if(!e){f=a+16|0;e=b[f>>2]|0;if(!e)break;else{a=e;d=f}}else{a=e;d=f}}b[d>>2]=0}else{v=b[c+8>>2]|0;b[v+12>>2]=a;b[a+8>>2]=v}while(0);if(!g)break;d=b[c+28>>2]|0;e=23732+(d<<2)|0;do if((b[e>>2]|0)!=(c|0)){v=g+16|0;b[((b[v>>2]|0)==(c|0)?v:g+20|0)>>2]=a;if(!a)break h}else{b[e>>2]=a;if(a|0)break;b[5858]=b[5858]&~(1<<d);break h}while(0);b[a+24>>2]=g;d=c+16|0;e=b[d>>2]|0;if(e|0){b[a+16>>2]=e;b[e+24>>2]=a}d=b[d+4>>2]|0;if(!d)break;b[a+20>>2]=d;b[d+24>>2]=a}while(0);c=c+h|0;f=h+i|0}else f=i;c=c+4|0;b[c>>2]=b[c>>2]&-2;b[k+4>>2]=f|1;b[k+f>>2]=f;c=f>>>3;if(f>>>0<256){d=23468+(c<<1<<2)|0;a=b[5857]|0;c=1<<c;if(!(a&c)){b[5857]=a|c;c=d;a=d+8|0}else{a=d+8|0;c=b[a>>2]|0}b[a>>2]=k;b[c+12>>2]=k;b[k+8>>2]=c;b[k+12>>2]=d;break}c=f>>>8;do if(!c)e=0;else{if(f>>>0>16777215){e=31;break}u=(c+1048320|0)>>>16&8;v=c<<u;t=(v+520192|0)>>>16&4;v=v<<t;e=(v+245760|0)>>>16&2;e=14-(t|u|e)+(v<<e>>>15)|0;e=f>>>(e+7|0)&1|e<<1}while(0);c=23732+(e<<2)|0;b[k+28>>2]=e;a=k+16|0;b[a+4>>2]=0;b[a>>2]=0;a=b[5858]|0;d=1<<e;if(!(a&d)){b[5858]=a|d;b[c>>2]=k;b[k+24>>2]=c;b[k+12>>2]=k;b[k+8>>2]=k;break}c=b[c>>2]|0;i:do if((b[c+4>>2]&-8|0)!=(f|0)){e=f<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=c+16+(e>>>31<<2)|0;a=b[d>>2]|0;if(!a)break;if((b[a+4>>2]&-8|0)==(f|0)){c=a;break i}else{e=e<<1;c=a}}b[d>>2]=k;b[k+24>>2]=c;b[k+12>>2]=k;b[k+8>>2]=k;break g}while(0);u=c+8|0;v=b[u>>2]|0;b[v+12>>2]=k;b[u>>2]=k;b[k+8>>2]=v;b[k+12>>2]=c;b[k+24>>2]=0}while(0);v=l+8|0;T=w;return v|0}c=23876;while(1){a=b[c>>2]|0;if(a>>>0<=j>>>0?(v=a+(b[c+4>>2]|0)|0,v>>>0>j>>>0):0)break;c=b[c+8>>2]|0}f=v+-47|0;a=f+8|0;a=f+((a&7|0)==0?0:0-a&7)|0;f=j+16|0;a=a>>>0<f>>>0?j:a;c=a+8|0;d=h+-40|0;t=g+8|0;t=(t&7|0)==0?0:0-t&7;u=g+t|0;t=d-t|0;b[5863]=u;b[5860]=t;b[u+4>>2]=t|1;b[g+d+4>>2]=40;b[5864]=b[5979];d=a+4|0;b[d>>2]=27;b[c>>2]=b[5969];b[c+4>>2]=b[5970];b[c+8>>2]=b[5971];b[c+12>>2]=b[5972];b[5969]=g;b[5970]=h;b[5972]=0;b[5971]=c;c=a+24|0;do{u=c;c=c+4|0;b[c>>2]=7}while((u+8|0)>>>0<v>>>0);if((a|0)!=(j|0)){g=a-j|0;b[d>>2]=b[d>>2]&-2;b[j+4>>2]=g|1;b[a>>2]=g;c=g>>>3;if(g>>>0<256){d=23468+(c<<1<<2)|0;a=b[5857]|0;c=1<<c;if(!(a&c)){b[5857]=a|c;c=d;a=d+8|0}else{a=d+8|0;c=b[a>>2]|0}b[a>>2]=j;b[c+12>>2]=j;b[j+8>>2]=c;b[j+12>>2]=d;break}c=g>>>8;if(c)if(g>>>0>16777215)e=31;else{u=(c+1048320|0)>>>16&8;v=c<<u;t=(v+520192|0)>>>16&4;v=v<<t;e=(v+245760|0)>>>16&2;e=14-(t|u|e)+(v<<e>>>15)|0;e=g>>>(e+7|0)&1|e<<1}else e=0;d=23732+(e<<2)|0;b[j+28>>2]=e;b[j+20>>2]=0;b[f>>2]=0;c=b[5858]|0;a=1<<e;if(!(c&a)){b[5858]=c|a;b[d>>2]=j;b[j+24>>2]=d;b[j+12>>2]=j;b[j+8>>2]=j;break}c=b[d>>2]|0;j:do if((b[c+4>>2]&-8|0)!=(g|0)){e=g<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=c+16+(e>>>31<<2)|0;a=b[d>>2]|0;if(!a)break;if((b[a+4>>2]&-8|0)==(g|0)){c=a;break j}else{e=e<<1;c=a}}b[d>>2]=j;b[j+24>>2]=c;b[j+12>>2]=j;b[j+8>>2]=j;break f}while(0);u=c+8|0;v=b[u>>2]|0;b[v+12>>2]=j;b[u>>2]=j;b[j+8>>2]=v;b[j+12>>2]=c;b[j+24>>2]=0}}else{v=b[5861]|0;if((v|0)==0|g>>>0<v>>>0)b[5861]=g;b[5969]=g;b[5970]=h;b[5972]=0;b[5866]=b[5975];b[5865]=-1;b[5870]=23468;b[5869]=23468;b[5872]=23476;b[5871]=23476;b[5874]=23484;b[5873]=23484;b[5876]=23492;b[5875]=23492;b[5878]=23500;b[5877]=23500;b[5880]=23508;b[5879]=23508;b[5882]=23516;b[5881]=23516;b[5884]=23524;b[5883]=23524;b[5886]=23532;b[5885]=23532;b[5888]=23540;b[5887]=23540;b[5890]=23548;b[5889]=23548;b[5892]=23556;b[5891]=23556;b[5894]=23564;b[5893]=23564;b[5896]=23572;b[5895]=23572;b[5898]=23580;b[5897]=23580;b[5900]=23588;b[5899]=23588;b[5902]=23596;b[5901]=23596;b[5904]=23604;b[5903]=23604;b[5906]=23612;b[5905]=23612;b[5908]=23620;b[5907]=23620;b[5910]=23628;b[5909]=23628;b[5912]=23636;b[5911]=23636;b[5914]=23644;b[5913]=23644;b[5916]=23652;b[5915]=23652;b[5918]=23660;b[5917]=23660;b[5920]=23668;b[5919]=23668;b[5922]=23676;b[5921]=23676;b[5924]=23684;b[5923]=23684;b[5926]=23692;b[5925]=23692;b[5928]=23700;b[5927]=23700;b[5930]=23708;b[5929]=23708;b[5932]=23716;b[5931]=23716;v=h+-40|0;t=g+8|0;t=(t&7|0)==0?0:0-t&7;u=g+t|0;t=v-t|0;b[5863]=u;b[5860]=t;b[u+4>>2]=t|1;b[g+v+4>>2]=40;b[5864]=b[5979]}while(0);c=b[5860]|0;if(c>>>0>m>>>0){t=c-m|0;b[5860]=t;v=b[5863]|0;u=v+m|0;b[5863]=u;b[u+4>>2]=t|1;b[v+4>>2]=m|3;v=v+8|0;T=w;return v|0}}v=fd()|0;b[v>>2]=12;v=0;T=w;return v|0}function jd(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;if(!a)return;d=a+-8|0;f=b[5861]|0;a=b[a+-4>>2]|0;c=a&-8;j=d+c|0;do if(!(a&1)){e=b[d>>2]|0;if(!(a&3))return;h=d+(0-e)|0;g=e+c|0;if(h>>>0<f>>>0)return;if((b[5862]|0)==(h|0)){a=j+4|0;c=b[a>>2]|0;if((c&3|0)!=3){i=h;c=g;break}b[5859]=g;b[a>>2]=c&-2;b[h+4>>2]=g|1;b[h+g>>2]=g;return}d=e>>>3;if(e>>>0<256){a=b[h+8>>2]|0;c=b[h+12>>2]|0;if((c|0)==(a|0)){b[5857]=b[5857]&~(1<<d);i=h;c=g;break}else{b[a+12>>2]=c;b[c+8>>2]=a;i=h;c=g;break}}f=b[h+24>>2]|0;a=b[h+12>>2]|0;do if((a|0)==(h|0)){c=h+16|0;d=c+4|0;a=b[d>>2]|0;if(!a){a=b[c>>2]|0;if(!a){a=0;break}}else c=d;while(1){e=a+20|0;d=b[e>>2]|0;if(!d){e=a+16|0;d=b[e>>2]|0;if(!d)break;else{a=d;c=e}}else{a=d;c=e}}b[c>>2]=0}else{i=b[h+8>>2]|0;b[i+12>>2]=a;b[a+8>>2]=i}while(0);if(f){c=b[h+28>>2]|0;d=23732+(c<<2)|0;if((b[d>>2]|0)==(h|0)){b[d>>2]=a;if(!a){b[5858]=b[5858]&~(1<<c);i=h;c=g;break}}else{i=f+16|0;b[((b[i>>2]|0)==(h|0)?i:f+20|0)>>2]=a;if(!a){i=h;c=g;break}}b[a+24>>2]=f;c=h+16|0;d=b[c>>2]|0;if(d|0){b[a+16>>2]=d;b[d+24>>2]=a}c=b[c+4>>2]|0;if(c){b[a+20>>2]=c;b[c+24>>2]=a;i=h;c=g}else{i=h;c=g}}else{i=h;c=g}}else{i=d;h=d}while(0);if(h>>>0>=j>>>0)return;a=j+4|0;e=b[a>>2]|0;if(!(e&1))return;if(!(e&2)){if((b[5863]|0)==(j|0)){j=(b[5860]|0)+c|0;b[5860]=j;b[5863]=i;b[i+4>>2]=j|1;if((i|0)!=(b[5862]|0))return;b[5862]=0;b[5859]=0;return}if((b[5862]|0)==(j|0)){j=(b[5859]|0)+c|0;b[5859]=j;b[5862]=h;b[i+4>>2]=j|1;b[h+j>>2]=j;return}f=(e&-8)+c|0;d=e>>>3;do if(e>>>0<256){c=b[j+8>>2]|0;a=b[j+12>>2]|0;if((a|0)==(c|0)){b[5857]=b[5857]&~(1<<d);break}else{b[c+12>>2]=a;b[a+8>>2]=c;break}}else{g=b[j+24>>2]|0;a=b[j+12>>2]|0;do if((a|0)==(j|0)){c=j+16|0;d=c+4|0;a=b[d>>2]|0;if(!a){a=b[c>>2]|0;if(!a){d=0;break}}else c=d;while(1){e=a+20|0;d=b[e>>2]|0;if(!d){e=a+16|0;d=b[e>>2]|0;if(!d)break;else{a=d;c=e}}else{a=d;c=e}}b[c>>2]=0;d=a}else{d=b[j+8>>2]|0;b[d+12>>2]=a;b[a+8>>2]=d;d=a}while(0);if(g|0){a=b[j+28>>2]|0;c=23732+(a<<2)|0;if((b[c>>2]|0)==(j|0)){b[c>>2]=d;if(!d){b[5858]=b[5858]&~(1<<a);break}}else{e=g+16|0;b[((b[e>>2]|0)==(j|0)?e:g+20|0)>>2]=d;if(!d)break}b[d+24>>2]=g;a=j+16|0;c=b[a>>2]|0;if(c|0){b[d+16>>2]=c;b[c+24>>2]=d}a=b[a+4>>2]|0;if(a|0){b[d+20>>2]=a;b[a+24>>2]=d}}}while(0);b[i+4>>2]=f|1;b[h+f>>2]=f;if((i|0)==(b[5862]|0)){b[5859]=f;return}}else{b[a>>2]=e&-2;b[i+4>>2]=c|1;b[h+c>>2]=c;f=c}a=f>>>3;if(f>>>0<256){d=23468+(a<<1<<2)|0;c=b[5857]|0;a=1<<a;if(!(c&a)){b[5857]=c|a;a=d;c=d+8|0}else{c=d+8|0;a=b[c>>2]|0}b[c>>2]=i;b[a+12>>2]=i;b[i+8>>2]=a;b[i+12>>2]=d;return}a=f>>>8;if(a)if(f>>>0>16777215)e=31;else{h=(a+1048320|0)>>>16&8;j=a<<h;g=(j+520192|0)>>>16&4;j=j<<g;e=(j+245760|0)>>>16&2;e=14-(g|h|e)+(j<<e>>>15)|0;e=f>>>(e+7|0)&1|e<<1}else e=0;a=23732+(e<<2)|0;b[i+28>>2]=e;b[i+20>>2]=0;b[i+16>>2]=0;c=b[5858]|0;d=1<<e;a:do if(!(c&d)){b[5858]=c|d;b[a>>2]=i;b[i+24>>2]=a;b[i+12>>2]=i;b[i+8>>2]=i}else{a=b[a>>2]|0;b:do if((b[a+4>>2]&-8|0)!=(f|0)){e=f<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=a+16+(e>>>31<<2)|0;c=b[d>>2]|0;if(!c)break;if((b[c+4>>2]&-8|0)==(f|0)){a=c;break b}else{e=e<<1;a=c}}b[d>>2]=i;b[i+24>>2]=a;b[i+12>>2]=i;b[i+8>>2]=i;break a}while(0);h=a+8|0;j=b[h>>2]|0;b[j+12>>2]=i;b[h>>2]=i;b[i+8>>2]=j;b[i+12>>2]=a;b[i+24>>2]=0}while(0);j=(b[5865]|0)+-1|0;b[5865]=j;if(j|0)return;a=23884;while(1){a=b[a>>2]|0;if(!a)break;else a=a+8|0}b[5865]=-1;return}function kd(a,c){a=a|0;c=c|0;var d=0;if(a){d=B(c,a)|0;if((c|a)>>>0>65535)d=((d>>>0)/(a>>>0)|0|0)==(c|0)?d:-1}else d=0;a=id(d)|0;if(!a)return a|0;if(!(b[a+-4>>2]&3))return a|0;Bd(a|0,0,d|0)|0;return a|0}function ld(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=a+c>>>0;return (G(b+d+(c>>>0<a>>>0|0)>>>0|0),c|0)|0}function md(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=b-d-(c>>>0>a>>>0|0)>>>0;return (G(d|0),a-c>>>0|0)|0}function nd(a){a=a|0;return (a?31-(E(a^a-1)|0)|0:32)|0}function od(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=a;j=c;k=j;h=d;n=e;i=n;if(!k){g=(f|0)!=0;if(!i){if(g){b[f>>2]=(l>>>0)%(h>>>0);b[f+4>>2]=0}n=0;f=(l>>>0)/(h>>>0)>>>0;return (G(n|0),f)|0}else{if(!g){n=0;f=0;return (G(n|0),f)|0}b[f>>2]=a|0;b[f+4>>2]=c&0;n=0;f=0;return (G(n|0),f)|0}}g=(i|0)==0;do if(h){if(!g){g=(E(i|0)|0)-(E(k|0)|0)|0;if(g>>>0<=31){m=g+1|0;i=31-g|0;c=g-31>>31;h=m;a=l>>>(m>>>0)&c|k<<i;c=k>>>(m>>>0)&c;g=0;i=l<<i;break}if(!f){n=0;f=0;return (G(n|0),f)|0}b[f>>2]=a|0;b[f+4>>2]=j|c&0;n=0;f=0;return (G(n|0),f)|0}g=h-1|0;if(g&h|0){i=(E(h|0)|0)+33-(E(k|0)|0)|0;p=64-i|0;m=32-i|0;j=m>>31;o=i-32|0;c=o>>31;h=i;a=m-1>>31&k>>>(o>>>0)|(k<<m|l>>>(i>>>0))&c;c=c&k>>>(i>>>0);g=l<<p&j;i=(k<<p|l>>>(o>>>0))&j|l<<m&i-33>>31;break}if(f|0){b[f>>2]=g&l;b[f+4>>2]=0}if((h|0)==1){o=j|c&0;p=a|0|0;return (G(o|0),p)|0}else{p=nd(h|0)|0;o=k>>>(p>>>0)|0;p=k<<32-p|l>>>(p>>>0)|0;return (G(o|0),p)|0}}else{if(g){if(f|0){b[f>>2]=(k>>>0)%(h>>>0);b[f+4>>2]=0}o=0;p=(k>>>0)/(h>>>0)>>>0;return (G(o|0),p)|0}if(!l){if(f|0){b[f>>2]=0;b[f+4>>2]=(k>>>0)%(i>>>0)}o=0;p=(k>>>0)/(i>>>0)>>>0;return (G(o|0),p)|0}g=i-1|0;if(!(g&i)){if(f|0){b[f>>2]=a|0;b[f+4>>2]=g&k|c&0}o=0;p=k>>>((nd(i|0)|0)>>>0);return (G(o|0),p)|0}g=(E(i|0)|0)-(E(k|0)|0)|0;if(g>>>0<=30){c=g+1|0;i=31-g|0;h=c;a=k<<i|l>>>(c>>>0);c=k>>>(c>>>0);g=0;i=l<<i;break}if(!f){o=0;p=0;return (G(o|0),p)|0}b[f>>2]=a|0;b[f+4>>2]=j|c&0;o=0;p=0;return (G(o|0),p)|0}while(0);if(!h){k=i;j=0;i=0}else{m=d|0|0;l=n|e&0;k=ld(m|0,l|0,-1,-1)|0;d=H()|0;j=i;i=0;do{e=j;j=g>>>31|j<<1;g=i|g<<1;e=a<<1|e>>>31|0;n=a>>>31|c<<1|0;md(k|0,d|0,e|0,n|0)|0;p=H()|0;o=p>>31|((p|0)<0?-1:0)<<1;i=o&1;a=md(e|0,n|0,o&m|0,(((p|0)<0?-1:0)>>31|((p|0)<0?-1:0)<<1)&l|0)|0;c=H()|0;h=h-1|0}while((h|0)!=0);k=j;j=0}h=0;if(f|0){b[f>>2]=a;b[f+4>>2]=c}o=(g|0)>>>31|(k|h)<<1|(h<<1|g>>>31)&0|j;p=(g<<1|0>>>31)&-2|i;return (G(o|0),p)|0}function pd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=b>>31|((b|0)<0?-1:0)<<1;i=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;f=d>>31|((d|0)<0?-1:0)<<1;e=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;h=md(j^a|0,i^b|0,j|0,i|0)|0;g=H()|0;a=f^j;b=e^i;return md((od(h,g,md(f^c|0,e^d|0,f|0,e|0)|0,H()|0,0)|0)^a|0,(H()|0)^b|0,a|0,b|0)|0}function qd(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=a&65535;e=b&65535;c=B(e,f)|0;d=a>>>16;a=(c>>>16)+(B(e,d)|0)|0;e=b>>>16;b=B(e,f)|0;return (G((a>>>16)+(B(e,d)|0)+(((a&65535)+b|0)>>>16)|0),a+b<<16|c&65535|0)|0}function rd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;f=c;c=qd(e,f)|0;a=H()|0;return (G((B(b,f)|0)+(B(d,e)|0)+a|a&0|0),c|0|0)|0}function sd(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=T;T=T+16|0;i=f|0;h=c>>31|((c|0)<0?-1:0)<<1;g=((c|0)<0?-1:0)>>31|((c|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;j=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;a=md(h^a|0,g^c|0,h|0,g|0)|0;c=H()|0;od(a,c,md(k^d|0,j^e|0,k|0,j|0)|0,H()|0,i)|0;e=md(b[i>>2]^h|0,b[i+4>>2]^g|0,h|0,g|0)|0;d=H()|0;T=f;return (G(d|0),e)|0}function td(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;g=T;T=T+16|0;f=g|0;od(a,c,d,e,f)|0;T=g;return (G(b[f+4>>2]|0),b[f>>2]|0)|0}function ud(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){G(b>>c|0);return a>>>c|(b&(1<<c)-1)<<32-c}G(((b|0)<0?-1:0)|0);return b>>c-32|0}function vd(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){G(b>>>c|0);return a>>>c|(b&(1<<c)-1)<<32-c}G(0);return b>>>c-32|0}function wd(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){G(b<<c|(a&(1<<c)-1<<32-c)>>>32-c|0);return a<<c}G(a<<c-32|0);return 0}function xd(a,b){a=+a;b=+b;if(a!=a)return +b;if(b!=b)return +a;return +D(+a,+b)}function yd(a,b){a=+a;b=+b;if(a!=a)return +b;if(b!=b)return +a;return +C(+a,+b)}function zd(a){a=+a;return a>=0.0?+p(a+.5):+A(a-.5)}function Ad(c,d,e){c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((e|0)>=8192){L(c|0,d|0,e|0)|0;return c|0}h=c|0;g=c+e|0;if((c&3)==(d&3)){while(c&3){if(!e)return h|0;a[c>>0]=a[d>>0]|0;c=c+1|0;d=d+1|0;e=e-1|0}e=g&-4|0;f=e-64|0;while((c|0)<=(f|0)){b[c>>2]=b[d>>2];b[c+4>>2]=b[d+4>>2];b[c+8>>2]=b[d+8>>2];b[c+12>>2]=b[d+12>>2];b[c+16>>2]=b[d+16>>2];b[c+20>>2]=b[d+20>>2];b[c+24>>2]=b[d+24>>2];b[c+28>>2]=b[d+28>>2];b[c+32>>2]=b[d+32>>2];b[c+36>>2]=b[d+36>>2];b[c+40>>2]=b[d+40>>2];b[c+44>>2]=b[d+44>>2];b[c+48>>2]=b[d+48>>2];b[c+52>>2]=b[d+52>>2];b[c+56>>2]=b[d+56>>2];b[c+60>>2]=b[d+60>>2];c=c+64|0;d=d+64|0}while((c|0)<(e|0)){b[c>>2]=b[d>>2];c=c+4|0;d=d+4|0}}else{e=g-4|0;while((c|0)<(e|0)){a[c>>0]=a[d>>0]|0;a[c+1>>0]=a[d+1>>0]|0;a[c+2>>0]=a[d+2>>0]|0;a[c+3>>0]=a[d+3>>0]|0;c=c+4|0;d=d+4|0}}while((c|0)<(g|0)){a[c>>0]=a[d>>0]|0;c=c+1|0;d=d+1|0}return h|0}function Bd(c,d,e){c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;h=c+e|0;d=d&255;if((e|0)>=67){while(c&3){a[c>>0]=d;c=c+1|0}f=h&-4|0;i=d|d<<8|d<<16|d<<24;g=f-64|0;while((c|0)<=(g|0)){b[c>>2]=i;b[c+4>>2]=i;b[c+8>>2]=i;b[c+12>>2]=i;b[c+16>>2]=i;b[c+20>>2]=i;b[c+24>>2]=i;b[c+28>>2]=i;b[c+32>>2]=i;b[c+36>>2]=i;b[c+40>>2]=i;b[c+44>>2]=i;b[c+48>>2]=i;b[c+52>>2]=i;b[c+56>>2]=i;b[c+60>>2]=i;c=c+64|0}while((c|0)<(f|0)){b[c>>2]=i;c=c+4|0}}while((c|0)<(h|0)){a[c>>0]=d;c=c+1|0}return h-e|0}function Cd(a){a=+a;return a>=0.0?+p(a+.5):+A(a-.5)}function Dd(a){a=a|0;var c=0,d=0,e=0;e=K()|0;d=b[g>>2]|0;c=d+a|0;if((a|0)>0&(c|0)<(d|0)|(c|0)<0){N(c|0)|0;J(12);return -1}if((c|0)>(e|0))if(!(M(c|0)|0)){J(12);return -1}b[g>>2]=c;return d|0}\n\n// EMSCRIPTEN_END_FUNCS\nreturn{___divdi3:pd,___muldi3:rd,___remdi3:sd,___uremdi3:td,_areNeighborCells:$a,_bitshift64Ashr:ud,_bitshift64Lshr:vd,_bitshift64Shl:wd,_calloc:kd,_cellAreaKm2:lc,_cellAreaM2:mc,_cellAreaRads2:kc,_cellToBoundary:Qb,_cellToCenterChild:Ab,_cellToChildPos:Vb,_cellToChildren:yb,_cellToChildrenSize:wb,_cellToLatLng:Pb,_cellToLocalIj:xc,_cellToParent:vb,_cellToVertex:Wc,_cellToVertexes:Xc,_cellsToDirectedEdge:ab,_cellsToLinkedMultiPolygon:la,_childPosToCell:Wb,_compactCells:Bb,_destroyLinkedMultiPolygon:sc,_directedEdgeToBoundary:gb,_directedEdgeToCells:eb,_edgeLengthKm:oc,_edgeLengthM:pc,_edgeLengthRads:nc,_emscripten_replace_memory:W,_free:jd,_getBaseCellNumber:tb,_getDirectedEdgeDestination:cb,_getDirectedEdgeOrigin:bb,_getHexagonAreaAvgKm2:ec,_getHexagonAreaAvgM2:fc,_getHexagonEdgeLengthAvgKm:gc,_getHexagonEdgeLengthAvgM:hc,_getIcosahedronFaces:Sb,_getNumCells:ic,_getPentagons:Ub,_getRes0Cells:wa,_getResolution:sb,_greatCircleDistanceKm:ac,_greatCircleDistanceM:bc,_greatCircleDistanceRads:$b,_gridDisk:aa,_gridDiskDistances:ba,_gridDistance:zc,_gridPathCells:Bc,_gridPathCellsSize:Ac,_gridRingUnsafe:ga,_i64Add:ld,_i64Subtract:md,_isPentagon:xb,_isResClassIII:Eb,_isValidCell:ub,_isValidDirectedEdge:db,_isValidVertex:Zc,_latLngToCell:Mb,_llvm_maxnum_f64:xd,_llvm_minnum_f64:yd,_llvm_round_f64:zd,_localIjToCell:yc,_malloc:id,_maxFaceCount:Rb,_maxGridDiskSize:$,_maxPolygonToCellsSize:ha,_memcpy:Ad,_memset:Bd,_originToDirectedEdges:fb,_pentagonCount:Tb,_polygonToCells:ja,_readInt64AsDoubleFromPointer:Oc,_res0CellCount:va,_round:Cd,_sbrk:Dd,_sizeOfCellBoundary:Jc,_sizeOfCoordIJ:Nc,_sizeOfGeoLoop:Kc,_sizeOfGeoPolygon:Lc,_sizeOfH3Index:Hc,_sizeOfLatLng:Ic,_sizeOfLinkedGeoPolygon:Mc,_uncompactCells:Cb,_uncompactCellsSize:Db,_vertexToLatLng:Yc,establishStackSpace:_,stackAlloc:X,stackRestore:Z,stackSave:Y}})\n\n\n// EMSCRIPTEN_END_ASM\n(asmGlobalArg,asmLibraryArg,buffer);var ___divdi3=Module[\"___divdi3\"]=asm[\"___divdi3\"];var ___muldi3=Module[\"___muldi3\"]=asm[\"___muldi3\"];var ___remdi3=Module[\"___remdi3\"]=asm[\"___remdi3\"];var ___uremdi3=Module[\"___uremdi3\"]=asm[\"___uremdi3\"];var _areNeighborCells=Module[\"_areNeighborCells\"]=asm[\"_areNeighborCells\"];var _bitshift64Ashr=Module[\"_bitshift64Ashr\"]=asm[\"_bitshift64Ashr\"];var _bitshift64Lshr=Module[\"_bitshift64Lshr\"]=asm[\"_bitshift64Lshr\"];var _bitshift64Shl=Module[\"_bitshift64Shl\"]=asm[\"_bitshift64Shl\"];var _calloc=Module[\"_calloc\"]=asm[\"_calloc\"];var _cellAreaKm2=Module[\"_cellAreaKm2\"]=asm[\"_cellAreaKm2\"];var _cellAreaM2=Module[\"_cellAreaM2\"]=asm[\"_cellAreaM2\"];var _cellAreaRads2=Module[\"_cellAreaRads2\"]=asm[\"_cellAreaRads2\"];var _cellToBoundary=Module[\"_cellToBoundary\"]=asm[\"_cellToBoundary\"];var _cellToCenterChild=Module[\"_cellToCenterChild\"]=asm[\"_cellToCenterChild\"];var _cellToChildPos=Module[\"_cellToChildPos\"]=asm[\"_cellToChildPos\"];var _cellToChildren=Module[\"_cellToChildren\"]=asm[\"_cellToChildren\"];var _cellToChildrenSize=Module[\"_cellToChildrenSize\"]=asm[\"_cellToChildrenSize\"];var _cellToLatLng=Module[\"_cellToLatLng\"]=asm[\"_cellToLatLng\"];var _cellToLocalIj=Module[\"_cellToLocalIj\"]=asm[\"_cellToLocalIj\"];var _cellToParent=Module[\"_cellToParent\"]=asm[\"_cellToParent\"];var _cellToVertex=Module[\"_cellToVertex\"]=asm[\"_cellToVertex\"];var _cellToVertexes=Module[\"_cellToVertexes\"]=asm[\"_cellToVertexes\"];var _cellsToDirectedEdge=Module[\"_cellsToDirectedEdge\"]=asm[\"_cellsToDirectedEdge\"];var _cellsToLinkedMultiPolygon=Module[\"_cellsToLinkedMultiPolygon\"]=asm[\"_cellsToLinkedMultiPolygon\"];var _childPosToCell=Module[\"_childPosToCell\"]=asm[\"_childPosToCell\"];var _compactCells=Module[\"_compactCells\"]=asm[\"_compactCells\"];var _destroyLinkedMultiPolygon=Module[\"_destroyLinkedMultiPolygon\"]=asm[\"_destroyLinkedMultiPolygon\"];var _directedEdgeToBoundary=Module[\"_directedEdgeToBoundary\"]=asm[\"_directedEdgeToBoundary\"];var _directedEdgeToCells=Module[\"_directedEdgeToCells\"]=asm[\"_directedEdgeToCells\"];var _edgeLengthKm=Module[\"_edgeLengthKm\"]=asm[\"_edgeLengthKm\"];var _edgeLengthM=Module[\"_edgeLengthM\"]=asm[\"_edgeLengthM\"];var _edgeLengthRads=Module[\"_edgeLengthRads\"]=asm[\"_edgeLengthRads\"];var _emscripten_replace_memory=Module[\"_emscripten_replace_memory\"]=asm[\"_emscripten_replace_memory\"];var _free=Module[\"_free\"]=asm[\"_free\"];var _getBaseCellNumber=Module[\"_getBaseCellNumber\"]=asm[\"_getBaseCellNumber\"];var _getDirectedEdgeDestination=Module[\"_getDirectedEdgeDestination\"]=asm[\"_getDirectedEdgeDestination\"];var _getDirectedEdgeOrigin=Module[\"_getDirectedEdgeOrigin\"]=asm[\"_getDirectedEdgeOrigin\"];var _getHexagonAreaAvgKm2=Module[\"_getHexagonAreaAvgKm2\"]=asm[\"_getHexagonAreaAvgKm2\"];var _getHexagonAreaAvgM2=Module[\"_getHexagonAreaAvgM2\"]=asm[\"_getHexagonAreaAvgM2\"];var _getHexagonEdgeLengthAvgKm=Module[\"_getHexagonEdgeLengthAvgKm\"]=asm[\"_getHexagonEdgeLengthAvgKm\"];var _getHexagonEdgeLengthAvgM=Module[\"_getHexagonEdgeLengthAvgM\"]=asm[\"_getHexagonEdgeLengthAvgM\"];var _getIcosahedronFaces=Module[\"_getIcosahedronFaces\"]=asm[\"_getIcosahedronFaces\"];var _getNumCells=Module[\"_getNumCells\"]=asm[\"_getNumCells\"];var _getPentagons=Module[\"_getPentagons\"]=asm[\"_getPentagons\"];var _getRes0Cells=Module[\"_getRes0Cells\"]=asm[\"_getRes0Cells\"];var _getResolution=Module[\"_getResolution\"]=asm[\"_getResolution\"];var _greatCircleDistanceKm=Module[\"_greatCircleDistanceKm\"]=asm[\"_greatCircleDistanceKm\"];var _greatCircleDistanceM=Module[\"_greatCircleDistanceM\"]=asm[\"_greatCircleDistanceM\"];var _greatCircleDistanceRads=Module[\"_greatCircleDistanceRads\"]=asm[\"_greatCircleDistanceRads\"];var _gridDisk=Module[\"_gridDisk\"]=asm[\"_gridDisk\"];var _gridDiskDistances=Module[\"_gridDiskDistances\"]=asm[\"_gridDiskDistances\"];var _gridDistance=Module[\"_gridDistance\"]=asm[\"_gridDistance\"];var _gridPathCells=Module[\"_gridPathCells\"]=asm[\"_gridPathCells\"];var _gridPathCellsSize=Module[\"_gridPathCellsSize\"]=asm[\"_gridPathCellsSize\"];var _gridRingUnsafe=Module[\"_gridRingUnsafe\"]=asm[\"_gridRingUnsafe\"];var _i64Add=Module[\"_i64Add\"]=asm[\"_i64Add\"];var _i64Subtract=Module[\"_i64Subtract\"]=asm[\"_i64Subtract\"];var _isPentagon=Module[\"_isPentagon\"]=asm[\"_isPentagon\"];var _isResClassIII=Module[\"_isResClassIII\"]=asm[\"_isResClassIII\"];var _isValidCell=Module[\"_isValidCell\"]=asm[\"_isValidCell\"];var _isValidDirectedEdge=Module[\"_isValidDirectedEdge\"]=asm[\"_isValidDirectedEdge\"];var _isValidVertex=Module[\"_isValidVertex\"]=asm[\"_isValidVertex\"];var _latLngToCell=Module[\"_latLngToCell\"]=asm[\"_latLngToCell\"];var _llvm_maxnum_f64=Module[\"_llvm_maxnum_f64\"]=asm[\"_llvm_maxnum_f64\"];var _llvm_minnum_f64=Module[\"_llvm_minnum_f64\"]=asm[\"_llvm_minnum_f64\"];var _llvm_round_f64=Module[\"_llvm_round_f64\"]=asm[\"_llvm_round_f64\"];var _localIjToCell=Module[\"_localIjToCell\"]=asm[\"_localIjToCell\"];var _malloc=Module[\"_malloc\"]=asm[\"_malloc\"];var _maxFaceCount=Module[\"_maxFaceCount\"]=asm[\"_maxFaceCount\"];var _maxGridDiskSize=Module[\"_maxGridDiskSize\"]=asm[\"_maxGridDiskSize\"];var _maxPolygonToCellsSize=Module[\"_maxPolygonToCellsSize\"]=asm[\"_maxPolygonToCellsSize\"];var _memcpy=Module[\"_memcpy\"]=asm[\"_memcpy\"];var _memset=Module[\"_memset\"]=asm[\"_memset\"];var _originToDirectedEdges=Module[\"_originToDirectedEdges\"]=asm[\"_originToDirectedEdges\"];var _pentagonCount=Module[\"_pentagonCount\"]=asm[\"_pentagonCount\"];var _polygonToCells=Module[\"_polygonToCells\"]=asm[\"_polygonToCells\"];var _readInt64AsDoubleFromPointer=Module[\"_readInt64AsDoubleFromPointer\"]=asm[\"_readInt64AsDoubleFromPointer\"];var _res0CellCount=Module[\"_res0CellCount\"]=asm[\"_res0CellCount\"];var _round=Module[\"_round\"]=asm[\"_round\"];var _sbrk=Module[\"_sbrk\"]=asm[\"_sbrk\"];var _sizeOfCellBoundary=Module[\"_sizeOfCellBoundary\"]=asm[\"_sizeOfCellBoundary\"];var _sizeOfCoordIJ=Module[\"_sizeOfCoordIJ\"]=asm[\"_sizeOfCoordIJ\"];var _sizeOfGeoLoop=Module[\"_sizeOfGeoLoop\"]=asm[\"_sizeOfGeoLoop\"];var _sizeOfGeoPolygon=Module[\"_sizeOfGeoPolygon\"]=asm[\"_sizeOfGeoPolygon\"];var _sizeOfH3Index=Module[\"_sizeOfH3Index\"]=asm[\"_sizeOfH3Index\"];var _sizeOfLatLng=Module[\"_sizeOfLatLng\"]=asm[\"_sizeOfLatLng\"];var _sizeOfLinkedGeoPolygon=Module[\"_sizeOfLinkedGeoPolygon\"]=asm[\"_sizeOfLinkedGeoPolygon\"];var _uncompactCells=Module[\"_uncompactCells\"]=asm[\"_uncompactCells\"];var _uncompactCellsSize=Module[\"_uncompactCellsSize\"]=asm[\"_uncompactCellsSize\"];var _vertexToLatLng=Module[\"_vertexToLatLng\"]=asm[\"_vertexToLatLng\"];var establishStackSpace=Module[\"establishStackSpace\"]=asm[\"establishStackSpace\"];var stackAlloc=Module[\"stackAlloc\"]=asm[\"stackAlloc\"];var stackRestore=Module[\"stackRestore\"]=asm[\"stackRestore\"];var stackSave=Module[\"stackSave\"]=asm[\"stackSave\"];Module[\"asm\"]=asm;Module[\"cwrap\"]=cwrap;Module[\"setValue\"]=setValue;Module[\"getValue\"]=getValue;if(memoryInitializer){if(!isDataURI(memoryInitializer)){memoryInitializer=locateFile(memoryInitializer)}if(ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL){var data=readBinary(memoryInitializer);HEAPU8.set(data,GLOBAL_BASE)}else{addRunDependency(\"memory initializer\");var applyMemoryInitializer=function(data){if(data.byteLength)data=new Uint8Array(data);HEAPU8.set(data,GLOBAL_BASE);if(Module[\"memoryInitializerRequest\"])delete Module[\"memoryInitializerRequest\"].response;removeRunDependency(\"memory initializer\")};var doBrowserLoad=function(){readAsync(memoryInitializer,applyMemoryInitializer,function(){throw\"could not load memory initializer \"+memoryInitializer})};var memoryInitializerBytes=tryParseAsDataURI(memoryInitializer);if(memoryInitializerBytes){applyMemoryInitializer(memoryInitializerBytes.buffer)}else if(Module[\"memoryInitializerRequest\"]){var useRequest=function(){var request=Module[\"memoryInitializerRequest\"];var response=request.response;if(request.status!==200&&request.status!==0){var data=tryParseAsDataURI(Module[\"memoryInitializerRequestURL\"]);if(data){response=data.buffer}else{console.warn(\"a problem seems to have happened with Module.memoryInitializerRequest, status: \"+request.status+\", retrying \"+memoryInitializer);doBrowserLoad();return}}applyMemoryInitializer(response)};if(Module[\"memoryInitializerRequest\"].response){setTimeout(useRequest,0)}else{Module[\"memoryInitializerRequest\"].addEventListener(\"load\",useRequest)}}else{doBrowserLoad()}}}var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0)return;function doRun(){if(calledRun)return;calledRun=true;if(ABORT)return;initRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";out(what);err(what);ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}noExitRuntime=true;run();\n\n\n\n  return libh3\n}\n)(typeof libh3 === 'object' ? libh3 : {});\nexport default libh3;", "/*\n * Copyright 2018-2019, 2022 Uber Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Define the C bindings for the h3 library\n\n// Add some aliases to make the function definitions more intelligible\nconst NUMBER = 'number';\nconst H3_ERROR = NUMBER;\nconst BOOLEAN = NUMBER;\nconst H3_LOWER = NUMBER;\nconst H3_UPPER = NUMBER;\nconst RESOLUTION = NUMBER;\nconst POINTER = NUMBER;\n\n// Define the bindings to functions in the C lib. Functions are defined as\n// [name, return type, [arg types]]. You must run `npm run build-emscripten`\n// before new functions added here will be available.\n/** @type {([string, string] | [string, string | null, string[]])[]} */\nexport default [\n    // The size functions are inserted via build/sizes.h\n    ['sizeOfH3Index', NUMBER],\n    ['sizeOfLatLng', NUMBER],\n    ['sizeOfCellBoundary', NUMBER],\n    ['sizeOfGeoLoop', NUMBER],\n    ['sizeOfGeoPolygon', NUMBER],\n    ['sizeOfLinkedGeoPolygon', NUMBER],\n    ['sizeOfCoordIJ', NUMBER],\n    ['readInt64AsDoubleFromPointer', NUMBER],\n    // The remaining functions are defined in the core lib in h3Api.h\n    ['isValidCell', BOOLEAN, [H3_LOWER, H3_UPPER]],\n    ['latLngToCell', H3_ERROR, [NUMBER, NUMBER, RESOLUTION, POINTER]],\n    ['cellToLatLng', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['cellToBoundary', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['maxGridDiskSize', H3_ERROR, [NUMBER, POINTER]],\n    ['gridDisk', H3_ERROR, [H3_LOWER, H3_UPPER, NUMBER, POINTER]],\n    ['gridDiskDistances', H3_ERROR, [H3_LOWER, H3_UPPER, NUMBER, POINTER, POINTER]],\n    ['gridRingUnsafe', H3_ERROR, [H3_LOWER, H3_UPPER, NUMBER, POINTER]],\n    ['maxPolygonToCellsSize', H3_ERROR, [POINTER, RESOLUTION, NUMBER, POINTER]],\n    ['polygonToCells', H3_ERROR, [POINTER, RESOLUTION, NUMBER, POINTER]],\n    ['cellsToLinkedMultiPolygon', H3_ERROR, [POINTER, NUMBER, POINTER]],\n    ['destroyLinkedMultiPolygon', null, [POINTER]],\n    ['compactCells', H3_ERROR, [POINTER, POINTER, NUMBER, NUMBER]],\n    ['uncompactCells', H3_ERROR, [POINTER, NUMBER, NUMBER, POINTER, NUMBER, RESOLUTION]],\n    ['uncompactCellsSize', H3_ERROR, [POINTER, NUMBER, NUMBER, RESOLUTION, POINTER]],\n    ['isPentagon', BOOLEAN, [H3_LOWER, H3_UPPER]],\n    ['isResClassIII', BOOLEAN, [H3_LOWER, H3_UPPER]],\n    ['getBaseCellNumber', NUMBER, [H3_LOWER, H3_UPPER]],\n    ['getResolution', NUMBER, [H3_LOWER, H3_UPPER]],\n    ['maxFaceCount', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['getIcosahedronFaces', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['cellToParent', H3_ERROR, [H3_LOWER, H3_UPPER, RESOLUTION, POINTER]],\n    ['cellToChildren', H3_ERROR, [H3_LOWER, H3_UPPER, RESOLUTION, POINTER]],\n    ['cellToCenterChild', H3_ERROR, [H3_LOWER, H3_UPPER, RESOLUTION, POINTER]],\n    ['cellToChildrenSize', H3_ERROR, [H3_LOWER, H3_UPPER, RESOLUTION, POINTER]],\n    ['cellToChildPos', H3_ERROR, [H3_LOWER, H3_UPPER, RESOLUTION, POINTER]],\n    ['childPosToCell', H3_ERROR, [NUMBER, NUMBER, H3_LOWER, H3_UPPER, RESOLUTION, POINTER]],\n    ['areNeighborCells', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, POINTER]],\n    ['cellsToDirectedEdge', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, POINTER]],\n    ['getDirectedEdgeOrigin', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['getDirectedEdgeDestination', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['isValidDirectedEdge', BOOLEAN, [H3_LOWER, H3_UPPER]],\n    ['directedEdgeToCells', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['originToDirectedEdges', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['directedEdgeToBoundary', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['gridDistance', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, POINTER]],\n    ['gridPathCells', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, POINTER]],\n    ['gridPathCellsSize', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, POINTER]],\n    ['cellToLocalIj', H3_ERROR, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, NUMBER, POINTER]],\n    ['localIjToCell', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER, NUMBER, POINTER]],\n    ['getHexagonAreaAvgM2', H3_ERROR, [RESOLUTION, POINTER]],\n    ['getHexagonAreaAvgKm2', H3_ERROR, [RESOLUTION, POINTER]],\n    ['getHexagonEdgeLengthAvgM', H3_ERROR, [RESOLUTION, POINTER]],\n    ['getHexagonEdgeLengthAvgKm', H3_ERROR, [RESOLUTION, POINTER]],\n    ['greatCircleDistanceM', NUMBER, [POINTER, POINTER]],\n    ['greatCircleDistanceKm', NUMBER, [POINTER, POINTER]],\n    ['greatCircleDistanceRads', NUMBER, [POINTER, POINTER]],\n    ['cellAreaM2', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['cellAreaKm2', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['cellAreaRads2', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['edgeLengthM', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['edgeLengthKm', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['edgeLengthRads', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['getNumCells', H3_ERROR, [RESOLUTION, POINTER]],\n    ['getRes0Cells', H3_ERROR, [POINTER]],\n    ['res0CellCount', NUMBER],\n    ['getPentagons', H3_ERROR, [NUMBER, POINTER]],\n    ['pentagonCount', NUMBER],\n    ['cellToVertex', H3_ERROR, [H3_LOWER, H3_UPPER, NUMBER, POINTER]],\n    ['cellToVertexes', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['vertexToLatLng', H3_ERROR, [H3_LOWER, H3_UPPER, POINTER]],\n    ['isValidVertex', BOOLEAN, [H3_LOWER, H3_UPPER]]\n];\n", "/*\n * Copyright 2018-2019, 2022 Uber Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Error codes from the code library, aliased here for legibility\nexport const E_SUCCESS = 0;\nexport const E_FAILED = 1;\nexport const E_DOMAIN = 2;\nexport const E_LATLNG_DOMAIN = 3;\nexport const E_RES_DOMAIN = 4;\nexport const E_CELL_INVALID = 5;\nexport const E_DIR_EDGE_INVALID = 6;\nexport const E_UNDIR_EDGE_INVALID = 7;\nexport const E_VERTEX_INVALID = 8;\nexport const E_PENTAGON = 9;\nexport const E_DUPLICATE_INPUT = 10;\nexport const E_NOT_NEIGHBORS = 11;\nexport const E_RES_MISMATCH = 12;\nexport const E_MEMORY_ALLOC = 13;\nexport const E_MEMORY_BOUNDS = 14;\nexport const E_OPTION_INVALID = 15;\n\n/**\n * Error messages corresponding to the core library error codes. See\n * https://h3geo.org/docs/library/errors#table-of-error-codes\n * @private\n */\nconst H3_ERROR_MSGS = {\n    [E_SUCCESS]: 'Success',\n    [E_FAILED]: 'The operation failed but a more specific error is not available',\n    [E_DOMAIN]: 'Argument was outside of acceptable range',\n    [E_LATLNG_DOMAIN]: 'Latitude or longitude arguments were outside of acceptable range',\n    [E_RES_DOMAIN]: 'Resolution argument was outside of acceptable range',\n    [E_CELL_INVALID]: 'Cell argument was not valid',\n    [E_DIR_EDGE_INVALID]: 'Directed edge argument was not valid',\n    [E_UNDIR_EDGE_INVALID]: 'Undirected edge argument was not valid',\n    [E_VERTEX_INVALID]: 'Vertex argument was not valid',\n    [E_PENTAGON]: 'Pentagon distortion was encountered',\n    [E_DUPLICATE_INPUT]: 'Duplicate input',\n    [E_NOT_NEIGHBORS]: 'Cell arguments were not neighbors',\n    [E_RES_MISMATCH]: 'Cell arguments had incompatible resolutions',\n    [E_MEMORY_ALLOC]: 'Memory allocation failed',\n    [E_MEMORY_BOUNDS]: 'Bounds of provided memory were insufficient',\n    [E_OPTION_INVALID]: 'Mode or flags argument was not valid'\n};\n\n// Error codes for JS errors thrown in the bindings\nexport const E_UNKNOWN_UNIT = 1000;\nexport const E_ARRAY_LENGTH = 1001;\nexport const E_NULL_INDEX = 1002;\n\n/**\n * Error messages for errors thrown in the binding code. These don't strictly\n * need error codes, but it's simpler to treat all of the errors consistently\n * @private\n */\nconst JS_ERROR_MESSAGES = {\n    [E_UNKNOWN_UNIT]: 'Unknown unit',\n    [E_ARRAY_LENGTH]: 'Array length out of bounds',\n    [E_NULL_INDEX]: 'Got unexpected null value for H3 index'\n};\n\nconst UNKNOWN_ERROR_MSG = 'Unknown error';\n\n/**\n * Create an error with an attached code\n * @private\n * @param {Record<number, string>} messages  Map of code-to-messages to use\n * @param {number} errCode                   Numeric error code\n * @param {{value: unknown} | {}} [meta]     Metadata with value to associate with the error\n */\nfunction createError(messages, errCode, meta) {\n    // The error value may be \"undefined\", so check if the argument was provided\n    const hasValue = meta && 'value' in meta;\n    // Throw a custom error type with the code attached\n    const err = new Error(\n        `${messages[errCode] || UNKNOWN_ERROR_MSG} (code: ${errCode}${\n            hasValue ? `, value: ${meta.value}` : ''\n        })`\n    );\n    // @ts-expect-error - TS doesn't like extending Error\n    err.code = errCode;\n    return err;\n}\n\n/**\n * Custom error for H3Error codes\n * @private\n * @param {number} errCode     Error code from the H3 library\n * @param {unknown} [value]    Value to associate with the error, if any\n * @returns {Error}\n */\nexport function H3LibraryError(errCode, value) {\n    // The error value may be \"undefined\", so check if the argument was provided\n    const meta = arguments.length === 2 ? {value} : {};\n    return createError(H3_ERROR_MSGS, errCode, meta);\n}\n\n/**\n * Custom errors thrown from the JS bindings.\n * @private\n * @param {number} errCode     Error code from the H3 library\n * @param {unknown} [value]    Value to associate with the error, if any\n * @returns {Error}\n */\nexport function JSBindingError(errCode, value) {\n    // The error value may be \"undefined\", so check if the argument was provided\n    const meta = arguments.length === 2 ? {value} : {};\n    return createError(JS_ERROR_MESSAGES, errCode, meta);\n}\n\n/**\n * Throw a JavaScript error if the C library return code is an error\n * @private\n * @param {number} errCode     Error code from the H3 library\n * @throws {Error} Error if err is not E_SUCCESS (0)\n */\nexport function throwIfError(errCode) {\n    if (errCode !== 0) {\n        throw H3LibraryError(errCode);\n    }\n}\n", "/*\n * Copyright 2018-2019, 2022 Uber Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module h3\n */\n\nimport C from '../out/libh3';\nimport BINDINGS from './bindings';\nimport {\n    throwIfError,\n    H3LibraryError,\n    JSBindingError,\n    E_RES_DOMAIN,\n    E_UNKNOWN_UNIT,\n    E_ARRAY_LENGTH,\n    E_NULL_INDEX,\n    E_CELL_INVALID\n} from './errors';\n\n/**\n * Map of C-defined functions\n * @type {any}\n * @private\n */\nconst H3 = {};\n\n// Create the bound functions themselves\nBINDINGS.forEach(function bind(def) {\n    H3[def[0]] = C.cwrap(...def);\n});\n\n// Alias the hexidecimal base for legibility\nconst BASE_16 = 16;\n\n// Alias unused bits for legibility\nconst UNUSED_UPPER_32_BITS = 0;\n\n// ----------------------------------------------------------------------------\n// Byte size imports\n\nconst SZ_INT = 4;\nconst SZ_PTR = 4;\nconst SZ_DBL = 8;\nconst SZ_INT64 = 8;\nconst SZ_H3INDEX = H3.sizeOfH3Index();\nconst SZ_LATLNG = H3.sizeOfLatLng();\nconst SZ_CELLBOUNDARY = H3.sizeOfCellBoundary();\nconst SZ_GEOPOLYGON = H3.sizeOfGeoPolygon();\nconst SZ_GEOLOOP = H3.sizeOfGeoLoop();\nconst SZ_LINKED_GEOPOLYGON = H3.sizeOfLinkedGeoPolygon();\nconst SZ_COORDIJ = H3.sizeOfCoordIJ();\n\n// ----------------------------------------------------------------------------\n// Custom types\n\n/**\n * 64-bit hexidecimal string representation of an H3 index\n * @static\n * @typedef {string} H3Index\n */\n\n/**\n * 64-bit hexidecimal string representation of an H3 index,\n * or two 32-bit integers in little endian order in an array.\n * @static\n * @typedef {string | number[]} H3IndexInput\n */\n\n/**\n * Coordinates as an `{i, j}` pair\n * @static\n * @typedef CoordIJ\n * @property {number} i\n * @property {number} j\n */\n\n/**\n * Custom JS Error instance with an attached error code. Error codes come from the\n * core H3 library and can be found [in the H3 docs](https://h3geo.org/docs/library/errors#table-of-error-codes).\n * @static\n * @typedef H3Error\n * @property {string} message\n * @property {number} code\n */\n\n/**\n * Pair of lat,lng coordinates (or lng,lat if GeoJSON output is specified)\n * @static\n * @typedef {number[]} CoordPair\n */\n\n/**\n * Pair of lower,upper 32-bit ints representing a 64-bit value\n * @static\n * @typedef {number[]} SplitLong\n */\n\n// ----------------------------------------------------------------------------\n// Unit constants\n\n/**\n * Length/Area units\n * @static\n * @property {string} m\n * @property {string} m2\n * @property {string} km\n * @property {string} km2\n * @property {string} rads\n * @property {string} rads2\n */\nexport const UNITS = {\n    m: 'm',\n    m2: 'm2',\n    km: 'km',\n    km2: 'km2',\n    rads: 'rads',\n    rads2: 'rads2'\n};\n\n// ----------------------------------------------------------------------------\n// Utilities and helpers\n\n/**\n * Validate a resolution, throwing an error if invalid\n * @private\n * @param  {unknown} res Value to validate\n * @return {number}      Valid res\n * @throws {H3Error}     If invalid\n */\nfunction validateRes(res) {\n    if (typeof res !== 'number' || res < 0 || res > 15 || Math.floor(res) !== res) {\n        throw H3LibraryError(E_RES_DOMAIN, res);\n    }\n    return res;\n}\n\n/**\n * Assert H3 index output, throwing an error if null\n * @private\n * @param {H3Index | null} h3Index    Index to validate\n * @return {H3Index}\n * @throws {H3Error}     If invalid\n */\nfunction validateH3Index(h3Index) {\n    if (!h3Index) throw JSBindingError(E_NULL_INDEX);\n    return h3Index;\n}\n\nconst MAX_JS_ARRAY_LENGTH = Math.pow(2, 32) - 1;\n\n/**\n * Validate an array length. JS will throw its own error if you try\n * to create an array larger than 2^32 - 1, but validating beforehand\n * allows us to exit early before we try to process large amounts\n * of data that won't even fit in an output array\n * @private\n * @param  {number} length  Length to validate\n * @return {number}         Valid array length\n * @throws {H3Error}        If invalid\n */\nfunction validateArrayLength(length) {\n    if (length > MAX_JS_ARRAY_LENGTH) {\n        throw JSBindingError(E_ARRAY_LENGTH, length);\n    }\n    return length;\n}\n\nconst INVALID_HEXIDECIMAL_CHAR = /[^0-9a-fA-F]/;\n\n/**\n * Convert an H3 index (64-bit hexidecimal string) into a \"split long\" - a pair of 32-bit ints\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {SplitLong}             A two-element array with 32 lower bits and 32 upper bits\n */\nexport function h3IndexToSplitLong(h3Index) {\n    if (\n        Array.isArray(h3Index) &&\n        h3Index.length === 2 &&\n        Number.isInteger(h3Index[0]) &&\n        Number.isInteger(h3Index[1])\n    ) {\n        return h3Index;\n    }\n    if (typeof h3Index !== 'string' || INVALID_HEXIDECIMAL_CHAR.test(h3Index)) {\n        return [0, 0];\n    }\n    const upper = parseInt(h3Index.substring(0, h3Index.length - 8), BASE_16);\n    const lower = parseInt(h3Index.substring(h3Index.length - 8), BASE_16);\n    return [lower, upper];\n}\n\n/**\n * Convert a 32-bit int to a hexdecimal string\n * @private\n * @param  {number} num  Integer to convert\n * @return {H3Index}     Hexidecimal string\n */\nfunction hexFrom32Bit(num) {\n    if (num >= 0) {\n        return num.toString(BASE_16);\n    }\n\n    // Handle negative numbers\n    num = num & 0x7fffffff;\n    let tempStr = zeroPad(8, num.toString(BASE_16));\n    const topNum = (parseInt(tempStr[0], BASE_16) + 8).toString(BASE_16);\n    tempStr = topNum + tempStr.substring(1);\n    return tempStr;\n}\n\n/**\n * Get a H3 index string from a split long (pair of 32-bit ints)\n * @param  {number} lower Lower 32 bits\n * @param  {number} upper Upper 32 bits\n * @return {H3Index}       H3 index\n */\nexport function splitLongToH3Index(lower, upper) {\n    return hexFrom32Bit(upper) + zeroPad(8, hexFrom32Bit(lower));\n}\n\n/**\n * Zero-pad a string to a given length\n * @private\n * @param  {number} fullLen Target length\n * @param  {string} numStr  String to zero-pad\n * @return {string}         Zero-padded string\n */\nfunction zeroPad(fullLen, numStr) {\n    const numZeroes = fullLen - numStr.length;\n    let outStr = '';\n    for (let i = 0; i < numZeroes; i++) {\n        outStr += '0';\n    }\n    outStr = outStr + numStr;\n    return outStr;\n}\n\n// One more than the max size of an unsigned 32-bit int.\n// Dividing by this number is equivalent to num >>> 32\nconst UPPER_BIT_DIVISOR = Math.pow(2, 32);\n\n/**\n * Convert a JS double-precision floating point number to a split long\n * @private\n * @param  {number} num  Number to convert\n * @return {SplitLong}     A two-element array with 32 lower bits and 32 upper bits\n */\nfunction numberToSplitLong(num) {\n    if (typeof num !== 'number') {\n        return [0, 0];\n    }\n    return [num | 0, (num / UPPER_BIT_DIVISOR) | 0];\n}\n\n/**\n * Populate a C-appropriate GeoLoop struct from a polygon array\n * @private\n * @param  {number[][]} polygonArray  Polygon, as an array of coordinate pairs\n * @param  {number}  geoLoop          C pointer to a GeoLoop struct\n * @param  {boolean} isGeoJson        Whether coordinates are in [lng, lat] order per GeoJSON spec\n * @return {number}                   C pointer to populated GeoLoop struct\n */\nfunction polygonArrayToGeoLoop(polygonArray, geoLoop, isGeoJson) {\n    const numVerts = polygonArray.length;\n    const geoCoordArray = C._calloc(numVerts, SZ_LATLNG);\n    // Support [lng, lat] pairs if GeoJSON is specified\n    const latIndex = isGeoJson ? 1 : 0;\n    const lngIndex = isGeoJson ? 0 : 1;\n    for (let i = 0; i < numVerts * 2; i += 2) {\n        C.HEAPF64.set(\n            [polygonArray[i / 2][latIndex], polygonArray[i / 2][lngIndex]].map(degsToRads),\n            geoCoordArray / SZ_DBL + i\n        );\n    }\n    C.HEAPU32.set([numVerts, geoCoordArray], geoLoop / SZ_INT);\n    return geoLoop;\n}\n\n/**\n * Create a C-appropriate GeoPolygon struct from an array of polygons\n * @private\n * @param  {number[][][]} coordinates Array of polygons, each an array of coordinate pairs\n * @param  {boolean} isGeoJson        Whether coordinates are in [lng, lat] order per GeoJSON spec\n * @return {number}                   C pointer to populated GeoPolygon struct\n */\nfunction coordinatesToGeoPolygon(coordinates, isGeoJson) {\n    // Any loops beyond the first loop are holes\n    const numHoles = coordinates.length - 1;\n    const geoPolygon = C._calloc(SZ_GEOPOLYGON);\n    // Byte positions within the struct\n    const geoLoopOffset = 0;\n    const numHolesOffset = geoLoopOffset + SZ_GEOLOOP;\n    const holesOffset = numHolesOffset + SZ_INT;\n    // geoLoop is first part of struct\n    polygonArrayToGeoLoop(coordinates[0], geoPolygon + geoLoopOffset, isGeoJson);\n    let holes;\n    if (numHoles > 0) {\n        holes = C._calloc(numHoles, SZ_GEOLOOP);\n        for (let i = 0; i < numHoles; i++) {\n            polygonArrayToGeoLoop(coordinates[i + 1], holes + SZ_GEOLOOP * i, isGeoJson);\n        }\n    }\n    C.setValue(geoPolygon + numHolesOffset, numHoles, 'i32');\n    C.setValue(geoPolygon + holesOffset, holes, 'i32');\n    return geoPolygon;\n}\n\n/**\n * Free memory allocated for a GeoPolygon struct. It is an error to access the struct\n * after passing it to this method.\n * @private\n * @param {number} geoPolygon     C pointer to GeoPolygon struct\n * @return {void}\n */\nfunction destroyGeoPolygon(geoPolygon) {\n    // Byte positions within the struct\n    const geoLoopOffset = 0;\n    const numHolesOffset = geoLoopOffset + SZ_GEOLOOP;\n    const holesOffset = numHolesOffset + SZ_INT;\n    // Offset of the geoLoop vertex array pointer within the GeoLoop struct\n    const geoLoopArrayOffset = SZ_INT;\n    // Free the outer vertex array\n    C._free(C.getValue(geoPolygon + geoLoopOffset + geoLoopArrayOffset, 'i8*'));\n    // Free the vertex array for the holes, if any\n    const numHoles = C.getValue(geoPolygon + numHolesOffset, 'i32');\n    if (numHoles > 0) {\n        const holes = C.getValue(geoPolygon + holesOffset, 'i32');\n        for (let i = 0; i < numHoles; i++) {\n            C._free(C.getValue(holes + SZ_GEOLOOP * i + geoLoopArrayOffset, 'i8*'));\n        }\n        C._free(holes);\n    }\n    C._free(geoPolygon);\n}\n\n/**\n * Read an H3 index from a pointer to C memory.\n * @private\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of H3 indexes, in case we're\n *                            reading an array\n * @return {H3Index | null}   H3 index, or null if index was invalid\n */\nfunction readH3IndexFromPointer(cAddress, offset = 0) {\n    const lower = C.getValue(cAddress + SZ_H3INDEX * offset, 'i32');\n    const upper = C.getValue(cAddress + SZ_H3INDEX * offset + SZ_INT, 'i32');\n    // The lower bits are allowed to be 0s, but if the upper bits are 0\n    // this represents an invalid H3 index\n    return upper ? splitLongToH3Index(lower, upper) : null;\n}\n\n/**\n * Read a boolean (32 bit) from a pointer to C memory.\n * @private\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of booleans, in case we're\n *                            reading an array\n * @return {Boolean} Boolean value\n */\nfunction readBooleanFromPointer(cAddress, offset = 0) {\n    const val = C.getValue(cAddress + SZ_INT * offset, 'i32');\n    return Boolean(val);\n}\n\n/**\n * Read a double from a pointer to C memory.\n * @private\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of doubles, in case we're\n *                            reading an array\n * @return {number} Double value\n */\nfunction readDoubleFromPointer(cAddress, offset = 0) {\n    return C.getValue(cAddress + SZ_DBL * offset, 'double');\n}\n\n/**\n * Read a 64-bit int from a pointer to C memory into a JS 64-bit float.\n * Note that this may lose precision if larger than MAX_SAFE_INTEGER\n * @private\n * @param  {number} cAddress  Pointer to allocated C memory\n * @return {number} Double value\n */\nfunction readInt64AsDoubleFromPointer(cAddress) {\n    return H3.readInt64AsDoubleFromPointer(cAddress);\n}\n\n/**\n * Store an H3 index in C memory. Primarily used as an efficient way to\n * write sets of hexagons.\n * @private\n * @param  {H3IndexInput} h3Index  H3 index to store\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of H3 indexes from beginning\n *                            of the current array\n */\nfunction storeH3Index(h3Index, cAddress, offset) {\n    // HEAPU32 is a typed array projection on the index space\n    // as unsigned 32-bit integers. This means the index needs\n    // to be divided by SZ_INT (4) to access correctly. Also,\n    // the H3 index is 64 bits, so we skip by twos as we're writing\n    // to 32-bit integers in the proper order.\n    C.HEAPU32.set(h3IndexToSplitLong(h3Index), cAddress / SZ_INT + 2 * offset);\n}\n\n/**\n * Read an array of 64-bit H3 indexes from C and convert to a JS array of\n * H3 index strings\n * @private\n * @param  {number} cAddress    Pointer to C ouput array\n * @param  {number} maxCount    Max number of hexagons in array. Hexagons with\n *                              the value 0 will be skipped, so this isn't\n *                              necessarily the length of the output array.\n * @return {H3Index[]}          Array of H3 indexes\n */\nfunction readArrayOfH3Indexes(cAddress, maxCount) {\n    const out = [];\n    for (let i = 0; i < maxCount; i++) {\n        const h3Index = readH3IndexFromPointer(cAddress, i);\n        if (h3Index !== null) {\n            out.push(h3Index);\n        }\n    }\n    return out;\n}\n\n/**\n * Store an array of H3 index strings as a C array of 64-bit integers.\n * @private\n * @param  {number} cAddress    Pointer to C input array\n * @param  {H3IndexInput[]} hexagons H3 indexes to pass to the C lib\n */\nfunction storeArrayOfH3Indexes(cAddress, hexagons) {\n    // Assuming the cAddress points to an already appropriately\n    // allocated space\n    const count = hexagons.length;\n    for (let i = 0; i < count; i++) {\n        storeH3Index(hexagons[i], cAddress, i);\n    }\n}\n\n/**\n * Populate a C-appropriate LatLng struct from a [lat, lng] array\n * @private\n * @param {number} lat     Coordinate latitude\n * @param {number} lng     Coordinate longitude\n * @return {number}        C pointer to populated LatLng struct\n */\nfunction storeLatLng(lat, lng) {\n    const geoCoord = C._calloc(1, SZ_LATLNG);\n    C.HEAPF64.set([lat, lng].map(degsToRads), geoCoord / SZ_DBL);\n    return geoCoord;\n}\n\n/**\n * Read a single lat or lng value\n * @private\n * @param  {number} cAddress Pointer to C value\n * @return {number}\n */\nfunction readSingleCoord(cAddress) {\n    return radsToDegs(C.getValue(cAddress, 'double'));\n}\n\n/**\n * Read a LatLng from C and return a [lat, lng] pair.\n * @private\n * @param  {number} cAddress    Pointer to C struct\n * @return {CoordPair}          [lat, lng] pair\n */\nfunction readLatLng(cAddress) {\n    return [readSingleCoord(cAddress), readSingleCoord(cAddress + SZ_DBL)];\n}\n\n/**\n * Read a LatLng from C and return a GeoJSON-style [lng, lat] pair.\n * @private\n * @param  {number} cAddress    Pointer to C struct\n * @return {CoordPair}          [lng, lat] pair\n */\nfunction readLatLngGeoJson(cAddress) {\n    return [readSingleCoord(cAddress + SZ_DBL), readSingleCoord(cAddress)];\n}\n\n/**\n * Read the CellBoundary structure into a list of geo coordinate pairs\n * @private\n * @param {number}  cellBoundary       C pointer to CellBoundary struct\n * @param {boolean} [geoJsonCoords]    Whether to provide GeoJSON coordinate order: [lng, lat]\n * @param {boolean} [closedLoop]       Whether to close the loop\n * @return {CoordPair[]}               Array of geo coordinate pairs\n */\nfunction readCellBoundary(cellBoundary, geoJsonCoords, closedLoop) {\n    const numVerts = C.getValue(cellBoundary, 'i32');\n    // Note that though numVerts is an int, the coordinate doubles have to be\n    // aligned to 8 bytes, hence the 8-byte offset here\n    const vertsPos = cellBoundary + SZ_DBL;\n    const out = [];\n    // Support [lng, lat] pairs if GeoJSON is specified\n    const readCoord = geoJsonCoords ? readLatLngGeoJson : readLatLng;\n    for (let i = 0; i < numVerts * 2; i += 2) {\n        out.push(readCoord(vertsPos + SZ_DBL * i));\n    }\n    if (closedLoop) {\n        // Close loop if GeoJSON is specified\n        out.push(out[0]);\n    }\n    return out;\n}\n\n/**\n * Read the LinkedGeoPolygon structure into a nested array of MultiPolygon coordinates\n * @private\n * @param {number}  polygon           C pointer to LinkedGeoPolygon struct\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat], closed loops\n * @return {CoordPair[][][]}          MultiPolygon-style output.\n */\nfunction readMultiPolygon(polygon, formatAsGeoJson) {\n    const output = [];\n    const readCoord = formatAsGeoJson ? readLatLngGeoJson : readLatLng;\n    let loops;\n    let loop;\n    let coords;\n    let coord;\n    // Loop through the linked structure, building the output\n    while (polygon) {\n        output.push((loops = []));\n        // Follow ->first pointer\n        loop = C.getValue(polygon, 'i8*');\n        while (loop) {\n            loops.push((coords = []));\n            // Follow ->first pointer\n            coord = C.getValue(loop, 'i8*');\n            while (coord) {\n                coords.push(readCoord(coord));\n                // Follow ->next pointer\n                coord = C.getValue(coord + SZ_DBL * 2, 'i8*');\n            }\n            if (formatAsGeoJson) {\n                // Close loop if GeoJSON is requested\n                coords.push(coords[0]);\n            }\n            // Follow ->next pointer\n            loop = C.getValue(loop + SZ_PTR * 2, 'i8*');\n        }\n        // Follow ->next pointer\n        polygon = C.getValue(polygon + SZ_PTR * 2, 'i8*');\n    }\n    return output;\n}\n\n/**\n * Read a CoordIJ from C and return an {i, j} pair.\n * @private\n * @param  {number} cAddress    Pointer to C struct\n * @return {CoordIJ}            {i, j} pair\n */\nfunction readCoordIJ(cAddress) {\n    return {\n        i: C.getValue(cAddress, 'i32'),\n        j: C.getValue(cAddress + SZ_INT, 'i32')\n    };\n}\n\n/**\n * Store an {i, j} pair to a C CoordIJ struct.\n * @private\n * @param  {number} cAddress    Pointer to C memory\n * @param {CoordIJ} ij          {i,j} pair to store\n * @return {void}\n */\nfunction storeCoordIJ(cAddress, {i, j}) {\n    C.setValue(cAddress, i, 'i32');\n    C.setValue(cAddress + SZ_INT, j, 'i32');\n}\n\n/**\n * Read an array of positive integers array from C. Negative\n * values are considered invalid and ignored in output.\n * @private\n * @param  {number} cAddress    Pointer to C array\n * @param  {number} count       Length of C array\n * @return {number[]}           Javascript integer array\n */\nfunction readArrayOfPositiveIntegers(cAddress, count) {\n    const out = [];\n    for (let i = 0; i < count; i++) {\n        const int = C.getValue(cAddress + SZ_INT * i, 'i32');\n        if (int >= 0) {\n            out.push(int);\n        }\n    }\n    return out;\n}\n\n// ----------------------------------------------------------------------------\n// Public API functions: Core\n\n/**\n * Whether a given string represents a valid H3 index\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {boolean}          Whether the index is valid\n */\nexport function isValidCell(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    return Boolean(H3.isValidCell(lower, upper));\n}\n\n/**\n * Whether the given H3 index is a pentagon\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {boolean}          isPentagon\n */\nexport function isPentagon(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    return Boolean(H3.isPentagon(lower, upper));\n}\n\n/**\n * Whether the given H3 index is in a Class III resolution (rotated versus\n * the icosahedron and subject to shape distortion adding extra points on\n * icosahedron edges, making them not true hexagons).\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {boolean}          isResClassIII\n */\nexport function isResClassIII(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    return Boolean(H3.isResClassIII(lower, upper));\n}\n\n/**\n * Get the number of the base cell for a given H3 index\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get the base cell for\n * @return {number}           Index of the base cell (0-121)\n */\nexport function getBaseCellNumber(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    return H3.getBaseCellNumber(lower, upper);\n}\n\n/**\n * Get the indices of all icosahedron faces intersected by a given H3 index\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get faces for\n * @return {number[]}              Indices (0-19) of all intersected faces\n * @throws {H3Error}               If input is invalid\n */\nexport function getIcosahedronFaces(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const countPtr = C._malloc(SZ_INT);\n    try {\n        throwIfError(H3.maxFaceCount(lower, upper, countPtr));\n        const count = C.getValue(countPtr, 'i32');\n        const faces = C._malloc(SZ_INT * count);\n        try {\n            throwIfError(H3.getIcosahedronFaces(lower, upper, faces));\n            return readArrayOfPositiveIntegers(faces, count);\n        } finally {\n            C._free(faces);\n        }\n    } finally {\n        C._free(countPtr);\n    }\n}\n\n/**\n * Returns the resolution of an H3 index\n * @static\n * @param  {H3IndexInput} h3Index H3 index to get resolution\n * @return {number}          The number (0-15) resolution, or -1 if invalid\n */\nexport function getResolution(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    if (!H3.isValidCell(lower, upper)) {\n        // Compatability with stated API\n        return -1;\n    }\n    return H3.getResolution(lower, upper);\n}\n\n/**\n * Get the hexagon containing a lat,lon point\n * @static\n * @param  {number} lat Latitude of point\n * @param  {number} lng Longtitude of point\n * @param  {number} res Resolution of hexagons to return\n * @return {H3Index}    H3 index\n * @throws {H3Error}    If input is invalid\n */\nexport function latLngToCell(lat, lng, res) {\n    const latLng = C._malloc(SZ_LATLNG);\n    // Slightly more efficient way to set the memory\n    C.HEAPF64.set([lat, lng].map(degsToRads), latLng / SZ_DBL);\n    // Read value as a split long\n    const h3Index = C._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.latLngToCell(latLng, res, h3Index));\n        return validateH3Index(readH3IndexFromPointer(h3Index));\n    } finally {\n        C._free(h3Index);\n        C._free(latLng);\n    }\n}\n\n/**\n * Get the lat,lon center of a given hexagon\n * @static\n * @param  {H3IndexInput} h3Index  H3 index\n * @return {CoordPair}             Point as a [lat, lng] pair\n * @throws {H3Error}               If input is invalid\n */\nexport function cellToLatLng(h3Index) {\n    const latLng = C._malloc(SZ_LATLNG);\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    try {\n        throwIfError(H3.cellToLatLng(lower, upper, latLng));\n        return readLatLng(latLng);\n    } finally {\n        C._free(latLng);\n    }\n}\n\n/**\n * Get the vertices of a given hexagon (or pentagon), as an array of [lat, lng]\n * points. For pentagons and hexagons on the edge of an icosahedron face, this\n * function may return up to 10 vertices.\n * @static\n * @param  {H3IndexInput} h3Index          H3 index\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat], closed loops\n * @return {CoordPair[]}              Array of [lat, lng] pairs\n * @throws {H3Error}                  If input is invalid\n */\nexport function cellToBoundary(h3Index, formatAsGeoJson) {\n    const cellBoundary = C._malloc(SZ_CELLBOUNDARY);\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    try {\n        throwIfError(H3.cellToBoundary(lower, upper, cellBoundary));\n        return readCellBoundary(cellBoundary, formatAsGeoJson, formatAsGeoJson);\n    } finally {\n        C._free(cellBoundary);\n    }\n}\n\n// ----------------------------------------------------------------------------\n// Public API functions: Algorithms\n\n/**\n * Get the parent of the given hexagon at a particular resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get parent for\n * @param  {number} res       Resolution of hexagon to return\n * @return {H3Index}          H3 index of parent, or null for invalid input\n * @throws {H3Error}          If input is invalid\n */\nexport function cellToParent(h3Index, res) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const parent = C._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellToParent(lower, upper, res, parent));\n        return validateH3Index(readH3IndexFromPointer(parent));\n    } finally {\n        C._free(parent);\n    }\n}\n\n/**\n * Get the children/descendents of the given hexagon at a particular resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get children for\n * @param  {number} res       Resolution of hexagons to return\n * @return {H3Index[]}        H3 indexes of children, or empty array for invalid input\n * @throws {H3Error}          If resolution is invalid or output is too large for JS\n */\nexport function cellToChildren(h3Index, res) {\n    // Bad input in this case can potentially result in high computation volume\n    // using the current C algorithm. Validate and return an empty array on failure.\n    if (!isValidCell(h3Index)) {\n        return [];\n    }\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const count = validateArrayLength(cellToChildrenSize(h3Index, res));\n    const hexagons = C._calloc(count, SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellToChildren(lower, upper, res, hexagons));\n        return readArrayOfH3Indexes(hexagons, count);\n    } finally {\n        C._free(hexagons);\n    }\n}\n\n/**\n * Get the number of children for a cell at a given resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get child count for\n * @param  {number} res            Child resolution\n * @return {number}                Number of children at res for the given cell\n * @throws {H3Error}               If cell or parentRes are invalid\n */\nexport function cellToChildrenSize(h3Index, res) {\n    if (!isValidCell(h3Index)) {\n        throw H3LibraryError(E_CELL_INVALID);\n    }\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const countPtr = C._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.cellToChildrenSize(lower, upper, res, countPtr));\n        return readInt64AsDoubleFromPointer(countPtr);\n    } finally {\n        C._free(countPtr);\n    }\n}\n\n/**\n * Get the center child of the given hexagon at a particular resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get center child for\n * @param  {number} res       Resolution of cell to return\n * @return {H3Index}          H3 index of child, or null for invalid input\n * @throws {H3Error}          If resolution is invalid\n */\nexport function cellToCenterChild(h3Index, res) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const centerChild = C._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellToCenterChild(lower, upper, res, centerChild));\n        return validateH3Index(readH3IndexFromPointer(centerChild));\n    } finally {\n        C._free(centerChild);\n    }\n}\n\n/**\n * Get the position of the cell within an ordered list of all children of the\n * cell's parent at the specified resolution.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get child pos for\n * @param  {number} parentRes      Resolution of reference parent\n * @return {number}                Position of child within parent at parentRes\n * @throws {H3Error}               If cell or parentRes are invalid\n */\nexport function cellToChildPos(h3Index, parentRes) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const childPos = C._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.cellToChildPos(lower, upper, parentRes, childPos));\n        return readInt64AsDoubleFromPointer(childPos);\n    } finally {\n        C._free(childPos);\n    }\n}\n\n/**\n * Get the child cell at a given position within an ordered list of all children\n * at the specified resolution\n * @static\n * @param  {number} childPos       Position of the child cell to get\n * @param  {H3IndexInput} h3Index  H3 index of the parent cell\n * @param  {number} childRes       Resolution of child cell to return\n * @return {H3Index}          H3 index of child\n * @throws {H3Error}          If input is invalid\n */\nexport function childPosToCell(childPos, h3Index, childRes) {\n    const [cpLower, cpUpper] = numberToSplitLong(childPos);\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const child = C._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.childPosToCell(cpLower, cpUpper, lower, upper, childRes, child));\n        return validateH3Index(readH3IndexFromPointer(child));\n    } finally {\n        C._free(child);\n    }\n}\n\n/**\n * Get all hexagons in a k-ring around a given center. The order of the hexagons is undefined.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of center hexagon\n * @param  {number} ringSize  Radius of k-ring\n * @return {H3Index[]}        H3 indexes for all hexagons in ring\n * @throws {H3Error}          If input is invalid or output is too large for JS\n */\nexport function gridDisk(h3Index, ringSize) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const countPtr = C._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.maxGridDiskSize(ringSize, countPtr));\n        const count = validateArrayLength(readInt64AsDoubleFromPointer(countPtr));\n        const hexagons = C._calloc(count, SZ_H3INDEX);\n        try {\n            throwIfError(H3.gridDisk(lower, upper, ringSize, hexagons));\n            return readArrayOfH3Indexes(hexagons, count);\n        } finally {\n            C._free(hexagons);\n        }\n    } finally {\n        C._free(countPtr);\n    }\n}\n\n/**\n * Get all hexagons in a k-ring around a given center, in an array of arrays\n * ordered by distance from the origin. The order of the hexagons within each ring is undefined.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of center hexagon\n * @param  {number} ringSize  Radius of k-ring\n * @return {H3Index[][]}      Array of arrays with H3 indexes for all hexagons each ring\n * @throws {H3Error}          If input is invalid or output is too large for JS\n */\nexport function gridDiskDistances(h3Index, ringSize) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const countPtr = C._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.maxGridDiskSize(ringSize, countPtr));\n        const count = validateArrayLength(readInt64AsDoubleFromPointer(countPtr));\n        const kRings = C._calloc(count, SZ_H3INDEX);\n        const distances = C._calloc(count, SZ_INT);\n        try {\n            throwIfError(H3.gridDiskDistances(lower, upper, ringSize, kRings, distances));\n            /**\n             * An array of empty arrays to hold the output\n             * @type {string[][]}\n             * @private\n             */\n            const out = [];\n            for (let i = 0; i < ringSize + 1; i++) {\n                out.push([]);\n            }\n            // Read the array of hexagons, putting them into the appropriate rings\n            for (let i = 0; i < count; i++) {\n                const cell = readH3IndexFromPointer(kRings, i);\n                const index = C.getValue(distances + SZ_INT * i, 'i32');\n                // eslint-disable-next-line max-depth\n                if (cell !== null) {\n                    out[index].push(cell);\n                }\n            }\n            return out;\n        } finally {\n            C._free(kRings);\n            C._free(distances);\n        }\n    } finally {\n        C._free(countPtr);\n    }\n}\n\n/**\n * Get all hexagons in a hollow hexagonal ring centered at origin with sides of a given length.\n * Unlike kRing, this function will throw an error if there is a pentagon anywhere in the ring.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of center hexagon\n * @param  {number} ringSize  Radius of ring\n * @return {H3Index[]}        H3 indexes for all hexagons in ring\n * @throws {Error}            If the algorithm could not calculate the ring\n * @throws {H3Error}          If input is invalid\n */\nexport function gridRingUnsafe(h3Index, ringSize) {\n    const maxCount = ringSize === 0 ? 1 : 6 * ringSize;\n    const hexagons = C._calloc(maxCount, SZ_H3INDEX);\n    try {\n        throwIfError(H3.gridRingUnsafe(...h3IndexToSplitLong(h3Index), ringSize, hexagons));\n        return readArrayOfH3Indexes(hexagons, maxCount);\n    } finally {\n        C._free(hexagons);\n    }\n}\n\n/**\n * Get all hexagons with centers contained in a given polygon. The polygon\n * is specified with GeoJson semantics as an array of loops. Each loop is\n * an array of [lat, lng] pairs (or [lng, lat] if isGeoJson is specified).\n * The first loop is the perimeter of the polygon, and subsequent loops are\n * expected to be holes.\n * @static\n * @param  {number[][] | number[][][]} coordinates\n *                                  Array of loops, or a single loop\n * @param  {number} res             Resolution of hexagons to return\n * @param  {boolean} [isGeoJson]    Whether to expect GeoJson-style [lng, lat]\n *                                  pairs instead of [lat, lng]\n * @return {H3Index[]}              H3 indexes for all hexagons in polygon\n * @throws {H3Error}                If input is invalid or output is too large for JS\n */\nexport function polygonToCells(coordinates, res, isGeoJson) {\n    validateRes(res);\n    isGeoJson = Boolean(isGeoJson);\n    // Guard against empty input\n    if (coordinates.length === 0 || coordinates[0].length === 0) {\n        return [];\n    }\n    // Wrap to expected format if a single loop is provided\n    const polygon = typeof coordinates[0][0] === 'number' ? [coordinates] : coordinates;\n    const geoPolygon = coordinatesToGeoPolygon(\n        // @ts-expect-error - There's no way to convince TS that polygon is now number[][][]\n        polygon,\n        isGeoJson\n    );\n    const countPtr = C._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.maxPolygonToCellsSize(geoPolygon, res, 0, countPtr));\n        const count = validateArrayLength(readInt64AsDoubleFromPointer(countPtr));\n        const hexagons = C._calloc(count, SZ_H3INDEX);\n        try {\n            throwIfError(H3.polygonToCells(geoPolygon, res, 0, hexagons));\n            return readArrayOfH3Indexes(hexagons, count);\n        } finally {\n            C._free(hexagons);\n        }\n    } finally {\n        C._free(countPtr);\n        destroyGeoPolygon(geoPolygon);\n    }\n}\n\n/**\n * Get the outlines of a set of H3 hexagons, returned in GeoJSON MultiPolygon\n * format (an array of polygons, each with an array of loops, each an array of\n * coordinates). Coordinates are returned as [lat, lng] pairs unless GeoJSON\n * is requested.\n *\n * It is the responsibility of the caller to ensure that all hexagons in the\n * set have the same resolution and that the set contains no duplicates. Behavior\n * is undefined if duplicates or multiple resolutions are present, and the\n * algorithm may produce unexpected or invalid polygons.\n *\n * @static\n * @param {H3IndexInput[]} h3Indexes  H3 indexes to get outlines for\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat], closed loops\n * @return {CoordPair[][][]}          MultiPolygon-style output.\n * @throws {H3Error}                  If input is invalid\n */\nexport function cellsToMultiPolygon(h3Indexes, formatAsGeoJson) {\n    // Early exit on empty input\n    if (!h3Indexes || !h3Indexes.length) {\n        return [];\n    }\n    // Set up input set\n    const indexCount = h3Indexes.length;\n    const set = C._calloc(indexCount, SZ_H3INDEX);\n    storeArrayOfH3Indexes(set, h3Indexes);\n    // Allocate memory for output linked polygon\n    const polygon = C._calloc(SZ_LINKED_GEOPOLYGON);\n    try {\n        throwIfError(H3.cellsToLinkedMultiPolygon(set, indexCount, polygon));\n        return readMultiPolygon(polygon, formatAsGeoJson);\n    } finally {\n        // Clean up\n        H3.destroyLinkedMultiPolygon(polygon);\n        C._free(polygon);\n        C._free(set);\n    }\n}\n\n/**\n * Compact a set of hexagons of the same resolution into a set of hexagons across\n * multiple levels that represents the same area.\n * @static\n * @param  {H3IndexInput[]} h3Set H3 indexes to compact\n * @return {H3Index[]}       Compacted H3 indexes\n * @throws {H3Error}         If the input is invalid (e.g. duplicate hexagons)\n */\nexport function compactCells(h3Set) {\n    if (!h3Set || !h3Set.length) {\n        return [];\n    }\n    // Set up input set\n    const count = h3Set.length;\n    const set = C._calloc(count, SZ_H3INDEX);\n    storeArrayOfH3Indexes(set, h3Set);\n    // Allocate memory for compacted hexagons, worst-case is no compaction\n    const compactedSet = C._calloc(count, SZ_H3INDEX);\n    try {\n        throwIfError(H3.compactCells(set, compactedSet, count, UNUSED_UPPER_32_BITS));\n        return readArrayOfH3Indexes(compactedSet, count);\n    } finally {\n        C._free(set);\n        C._free(compactedSet);\n    }\n}\n\n/**\n * Uncompact a compacted set of hexagons to hexagons of the same resolution\n * @static\n * @param  {H3IndexInput[]} compactedSet H3 indexes to uncompact\n * @param  {number}    res          The resolution to uncompact to\n * @return {H3Index[]}              The uncompacted H3 indexes\n * @throws {H3Error}                If the input is invalid (e.g. invalid resolution)\n */\nexport function uncompactCells(compactedSet, res) {\n    validateRes(res);\n    if (!compactedSet || !compactedSet.length) {\n        return [];\n    }\n    // Set up input set\n    const count = compactedSet.length;\n    const set = C._calloc(count, SZ_H3INDEX);\n    storeArrayOfH3Indexes(set, compactedSet);\n    // Estimate how many hexagons we need (always overestimates if in error)\n    const uncompactCellSizePtr = C._malloc(SZ_INT64);\n    try {\n        throwIfError(\n            H3.uncompactCellsSize(set, count, UNUSED_UPPER_32_BITS, res, uncompactCellSizePtr)\n        );\n        const uncompactCellSize = validateArrayLength(\n            readInt64AsDoubleFromPointer(uncompactCellSizePtr)\n        );\n        // Allocate memory for uncompacted hexagons\n        const uncompactedSet = C._calloc(uncompactCellSize, SZ_H3INDEX);\n        try {\n            throwIfError(\n                H3.uncompactCells(\n                    set,\n                    count,\n                    UNUSED_UPPER_32_BITS,\n                    uncompactedSet,\n                    uncompactCellSize,\n                    UNUSED_UPPER_32_BITS,\n                    res\n                )\n            );\n            return readArrayOfH3Indexes(uncompactedSet, uncompactCellSize);\n        } finally {\n            C._free(set);\n            C._free(uncompactedSet);\n        }\n    } finally {\n        C._free(uncompactCellSizePtr);\n    }\n}\n\n// ----------------------------------------------------------------------------\n// Public API functions: Directed edges\n\n/**\n * Whether two H3 indexes are neighbors (share an edge)\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {boolean}             Whether the hexagons share an edge\n * @throws {H3Error}             If the input is invalid\n */\nexport function areNeighborCells(origin, destination) {\n    const [oLower, oUpper] = h3IndexToSplitLong(origin);\n    const [dLower, dUpper] = h3IndexToSplitLong(destination);\n    const out = C._malloc(SZ_INT);\n    try {\n        throwIfError(H3.areNeighborCells(oLower, oUpper, dLower, dUpper, out));\n        return readBooleanFromPointer(out);\n    } finally {\n        C._free(out);\n    }\n}\n\n/**\n * Get an H3 index representing a unidirectional edge for a given origin and destination\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {H3Index}             H3 index of the edge, or null if no edge is shared\n * @throws {H3Error}             If the input is invalid\n */\nexport function cellsToDirectedEdge(origin, destination) {\n    const [oLower, oUpper] = h3IndexToSplitLong(origin);\n    const [dLower, dUpper] = h3IndexToSplitLong(destination);\n    const h3Index = C._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellsToDirectedEdge(oLower, oUpper, dLower, dUpper, h3Index));\n        return validateH3Index(readH3IndexFromPointer(h3Index));\n    } finally {\n        C._free(h3Index);\n    }\n}\n\n/**\n * Get the origin hexagon from an H3 index representing a unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {H3Index}           H3 index of the edge origin\n * @throws {H3Error}           If the input is invalid\n */\nexport function getDirectedEdgeOrigin(edgeIndex) {\n    const [lower, upper] = h3IndexToSplitLong(edgeIndex);\n    const h3Index = C._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.getDirectedEdgeOrigin(lower, upper, h3Index));\n        return validateH3Index(readH3IndexFromPointer(h3Index));\n    } finally {\n        C._free(h3Index);\n    }\n}\n\n/**\n * Get the destination hexagon from an H3 index representing a unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {H3Index}           H3 index of the edge destination\n * @throws {H3Error}           If the input is invalid\n */\nexport function getDirectedEdgeDestination(edgeIndex) {\n    const [lower, upper] = h3IndexToSplitLong(edgeIndex);\n    const h3Index = C._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.getDirectedEdgeDestination(lower, upper, h3Index));\n        return validateH3Index(readH3IndexFromPointer(h3Index));\n    } finally {\n        C._free(h3Index);\n    }\n}\n\n/**\n * Whether the input is a valid unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {boolean}           Whether the index is valid\n */\nexport function isValidDirectedEdge(edgeIndex) {\n    const [lower, upper] = h3IndexToSplitLong(edgeIndex);\n    return Boolean(H3.isValidDirectedEdge(lower, upper));\n}\n\n/**\n * Get the [origin, destination] pair represented by a unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {H3Index[]}         [origin, destination] pair as H3 indexes\n * @throws {H3Error}           If the input is invalid\n */\nexport function directedEdgeToCells(edgeIndex) {\n    const [lower, upper] = h3IndexToSplitLong(edgeIndex);\n    const count = 2;\n    const hexagons = C._calloc(count, SZ_H3INDEX);\n    try {\n        throwIfError(H3.directedEdgeToCells(lower, upper, hexagons));\n        return readArrayOfH3Indexes(hexagons, count);\n    } finally {\n        C._free(hexagons);\n    }\n}\n\n/**\n * Get all of the unidirectional edges with the given H3 index as the origin (i.e. an edge to\n * every neighbor)\n * @static\n * @param  {H3IndexInput} h3Index   H3 index of the origin hexagon\n * @return {H3Index[]}         List of unidirectional edges\n * @throws {H3Error}           If the input is invalid\n */\nexport function originToDirectedEdges(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const count = 6;\n    const edges = C._calloc(count, SZ_H3INDEX);\n    try {\n        throwIfError(H3.originToDirectedEdges(lower, upper, edges));\n        return readArrayOfH3Indexes(edges, count);\n    } finally {\n        C._free(edges);\n    }\n}\n\n/**\n * Get the vertices of a given edge as an array of [lat, lng] points. Note that for edges that\n * cross the edge of an icosahedron face, this may return 3 coordinates.\n * @static\n * @param  {H3IndexInput} edgeIndex        H3 index of the edge\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat]\n * @return {CoordPair[]}              Array of geo coordinate pairs\n * @throws {H3Error}                  If the input is invalid\n */\nexport function directedEdgeToBoundary(edgeIndex, formatAsGeoJson) {\n    const cellBoundary = C._malloc(SZ_CELLBOUNDARY);\n    const [lower, upper] = h3IndexToSplitLong(edgeIndex);\n    try {\n        throwIfError(H3.directedEdgeToBoundary(lower, upper, cellBoundary));\n        return readCellBoundary(cellBoundary, formatAsGeoJson);\n    } finally {\n        C._free(cellBoundary);\n    }\n}\n\n/**\n * Get the grid distance between two hex indexes. This function may fail\n * to find the distance between two indexes if they are very far apart or\n * on opposite sides of a pentagon.\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {number}          Distance between hexagons\n * @throws {H3Error}         If input is invalid or the distance could not be calculated\n */\nexport function gridDistance(origin, destination) {\n    const [oLower, oUpper] = h3IndexToSplitLong(origin);\n    const [dLower, dUpper] = h3IndexToSplitLong(destination);\n    const countPtr = C._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.gridDistance(oLower, oUpper, dLower, dUpper, countPtr));\n        return readInt64AsDoubleFromPointer(countPtr);\n    } finally {\n        C._free(countPtr);\n    }\n}\n\n/**\n * Given two H3 indexes, return the line of indexes between them (inclusive).\n *\n * This function may fail to find the line between two indexes, for\n * example if they are very far apart. It may also fail when finding\n * distances for indexes on opposite sides of a pentagon.\n *\n * Notes:\n *\n *  - The specific output of this function should not be considered stable\n *    across library versions. The only guarantees the library provides are\n *    that the line length will be `h3Distance(start, end) + 1` and that\n *    every index in the line will be a neighbor of the preceding index.\n *  - Lines are drawn in grid space, and may not correspond exactly to either\n *    Cartesian lines or great arcs.\n *\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {H3Index[]}           H3 indexes connecting origin and destination\n * @throws {H3Error}             If input is invalid or the line cannot be calculated\n */\nexport function gridPathCells(origin, destination) {\n    const [oLower, oUpper] = h3IndexToSplitLong(origin);\n    const [dLower, dUpper] = h3IndexToSplitLong(destination);\n    const countPtr = C._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.gridPathCellsSize(oLower, oUpper, dLower, dUpper, countPtr));\n        const count = validateArrayLength(readInt64AsDoubleFromPointer(countPtr));\n        const hexagons = C._calloc(count, SZ_H3INDEX);\n        try {\n            H3.gridPathCells(oLower, oUpper, dLower, dUpper, hexagons);\n            return readArrayOfH3Indexes(hexagons, count);\n        } finally {\n            C._free(hexagons);\n        }\n    } finally {\n        C._free(countPtr);\n    }\n}\n\nconst LOCAL_IJ_DEFAULT_MODE = 0;\n\n/**\n * Produces IJ coordinates for an H3 index anchored by an origin.\n *\n * - The coordinate space used by this function may have deleted\n * regions or warping due to pentagonal distortion.\n * - Coordinates are only comparable if they come from the same\n * origin index.\n * - Failure may occur if the index is too far away from the origin\n * or if the index is on the other side of a pentagon.\n * - This function is experimental, and its output is not guaranteed\n * to be compatible across different versions of H3.\n * @static\n * @param  {H3IndexInput} origin      Origin H3 index\n * @param  {H3IndexInput} destination H3 index for which to find relative coordinates\n * @return {CoordIJ}             Coordinates as an `{i, j}` pair\n * @throws {H3Error}             If the IJ coordinates cannot be calculated\n */\nexport function cellToLocalIj(origin, destination) {\n    const ij = C._malloc(SZ_COORDIJ);\n    try {\n        throwIfError(\n            H3.cellToLocalIj(\n                ...h3IndexToSplitLong(origin),\n                ...h3IndexToSplitLong(destination),\n                LOCAL_IJ_DEFAULT_MODE,\n                ij\n            )\n        );\n        return readCoordIJ(ij);\n    } finally {\n        C._free(ij);\n    }\n}\n\n/**\n * Produces an H3 index for IJ coordinates anchored by an origin.\n *\n * - The coordinate space used by this function may have deleted\n * regions or warping due to pentagonal distortion.\n * - Coordinates are only comparable if they come from the same\n * origin index.\n * - Failure may occur if the index is too far away from the origin\n * or if the index is on the other side of a pentagon.\n * - This function is experimental, and its output is not guaranteed\n * to be compatible across different versions of H3.\n * @static\n * @param  {H3IndexInput} origin     Origin H3 index\n * @param  {CoordIJ} coords     Coordinates as an `{i, j}` pair\n * @return {H3Index}            H3 index at the relative coordinates\n * @throws {H3Error}            If the H3 index cannot be calculated\n */\nexport function localIjToCell(origin, coords) {\n    // Validate input coords\n    if (!coords || typeof coords.i !== 'number' || typeof coords.j !== 'number') {\n        throw new Error('Coordinates must be provided as an {i, j} object');\n    }\n    // Allocate memory for the CoordIJ struct and an H3 index to hold the return value\n    const ij = C._malloc(SZ_COORDIJ);\n    const out = C._malloc(SZ_H3INDEX);\n    storeCoordIJ(ij, coords);\n    try {\n        throwIfError(\n            H3.localIjToCell(...h3IndexToSplitLong(origin), ij, LOCAL_IJ_DEFAULT_MODE, out)\n        );\n        return validateH3Index(readH3IndexFromPointer(out));\n    } finally {\n        C._free(ij);\n        C._free(out);\n    }\n}\n\n// ----------------------------------------------------------------------------\n// Public API functions: Distance/area utilities\n\n/**\n * Great circle distance between two geo points. This is not specific to H3,\n * but is implemented in the library and provided here as a convenience.\n * @static\n * @param  {number[]} latLng1 Origin coordinate as [lat, lng]\n * @param  {number[]} latLng2 Destination coordinate as [lat, lng]\n * @param  {string}   unit    Distance unit (either UNITS.m, UNITS.km, or UNITS.rads)\n * @return {number}           Great circle distance\n * @throws {H3Error}          If the unit is invalid\n */\nexport function greatCircleDistance(latLng1, latLng2, unit) {\n    const coord1 = storeLatLng(latLng1[0], latLng1[1]);\n    const coord2 = storeLatLng(latLng2[0], latLng2[1]);\n    let result;\n    switch (unit) {\n        case UNITS.m:\n            result = H3.greatCircleDistanceM(coord1, coord2);\n            break;\n        case UNITS.km:\n            result = H3.greatCircleDistanceKm(coord1, coord2);\n            break;\n        case UNITS.rads:\n            result = H3.greatCircleDistanceRads(coord1, coord2);\n            break;\n        default:\n            result = null;\n    }\n    C._free(coord1);\n    C._free(coord2);\n    if (result === null) {\n        throw JSBindingError(E_UNKNOWN_UNIT, unit);\n    }\n    return result;\n}\n\n/**\n * Exact area of a given cell\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of the hexagon to measure\n * @param  {string}  unit     Distance unit (either UNITS.m2, UNITS.km2, or UNITS.rads2)\n * @return {number}           Cell area\n * @throws {H3Error}          If the input is invalid\n */\nexport function cellArea(h3Index, unit) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const out = C._malloc(SZ_DBL);\n    try {\n        switch (unit) {\n            case UNITS.m2:\n                throwIfError(H3.cellAreaM2(lower, upper, out));\n                break;\n            case UNITS.km2:\n                throwIfError(H3.cellAreaKm2(lower, upper, out));\n                break;\n            case UNITS.rads2:\n                throwIfError(H3.cellAreaRads2(lower, upper, out));\n                break;\n            default:\n                throw JSBindingError(E_UNKNOWN_UNIT, unit);\n        }\n        return readDoubleFromPointer(out);\n    } finally {\n        C._free(out);\n    }\n}\n\n/**\n * Calculate length of a given unidirectional edge\n * @static\n * @param  {H3IndexInput} edge     H3 index of the edge to measure\n * @param  {string}  unit     Distance unit (either UNITS.m, UNITS.km, or UNITS.rads)\n * @return {number}           Cell area\n * @throws {H3Error}          If the input is invalid\n */\nexport function edgeLength(edge, unit) {\n    const [lower, upper] = h3IndexToSplitLong(edge);\n    const out = C._malloc(SZ_DBL);\n    try {\n        switch (unit) {\n            case UNITS.m:\n                throwIfError(H3.edgeLengthM(lower, upper, out));\n                break;\n            case UNITS.km:\n                throwIfError(H3.edgeLengthKm(lower, upper, out));\n                break;\n            case UNITS.rads:\n                throwIfError(H3.edgeLengthRads(lower, upper, out));\n                break;\n            default:\n                throw JSBindingError(E_UNKNOWN_UNIT, unit);\n        }\n        return readDoubleFromPointer(out);\n    } finally {\n        C._free(out);\n    }\n}\n\n/**\n * Average hexagon area at a given resolution\n * @static\n * @param  {number} res  Hexagon resolution\n * @param  {string} unit Area unit (either UNITS.m2, UNITS.km2, or UNITS.rads2)\n * @return {number}      Average area\n * @throws {H3Error}     If the input is invalid\n */\nexport function getHexagonAreaAvg(res, unit) {\n    validateRes(res);\n    const out = C._malloc(SZ_DBL);\n    try {\n        switch (unit) {\n            case UNITS.m2:\n                throwIfError(H3.getHexagonAreaAvgM2(res, out));\n                break;\n            case UNITS.km2:\n                throwIfError(H3.getHexagonAreaAvgKm2(res, out));\n                break;\n            default:\n                throw JSBindingError(E_UNKNOWN_UNIT, unit);\n        }\n        return readDoubleFromPointer(out);\n    } finally {\n        C._free(out);\n    }\n}\n\n/**\n * Average hexagon edge length at a given resolution\n * @static\n * @param  {number} res  Hexagon resolution\n * @param  {string} unit Distance unit (either UNITS.m, UNITS.km, or UNITS.rads)\n * @return {number}      Average edge length\n * @throws {H3Error}     If the input is invalid\n */\nexport function getHexagonEdgeLengthAvg(res, unit) {\n    validateRes(res);\n    const out = C._malloc(SZ_DBL);\n    try {\n        switch (unit) {\n            case UNITS.m:\n                throwIfError(H3.getHexagonEdgeLengthAvgM(res, out));\n                break;\n            case UNITS.km:\n                throwIfError(H3.getHexagonEdgeLengthAvgKm(res, out));\n                break;\n            default:\n                throw JSBindingError(E_UNKNOWN_UNIT, unit);\n        }\n        return readDoubleFromPointer(out);\n    } finally {\n        C._free(out);\n    }\n}\n\n// ----------------------------------------------------------------------------\n// Public API functions: Vertex mode\n\n/**\n * Find the index for a vertex of a cell.\n * @static\n * @param {H3IndexInput} h3Index     Cell to find the vertex for\n * @param {number} vertexNum         Number (index) of the vertex to calculate\n * @return {H3Index}     Vertex index\n * @throws {H3Error}     If the input is invalid\n */\nexport function cellToVertex(h3Index, vertexNum) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const vertexIndex = C._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellToVertex(lower, upper, vertexNum, vertexIndex));\n        return validateH3Index(readH3IndexFromPointer(vertexIndex));\n    } finally {\n        C._free(vertexIndex);\n    }\n}\n\n/**\n * Find the indexes for all vertexes of a cell.\n * @static\n * @param {H3IndexInput} h3Index     Cell to find all vertexes for\n * @return {H3Index[]}   All vertex indexes of this cell\n * @throws {H3Error}     If the input is invalid\n */\nexport function cellToVertexes(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const maxNumVertexes = 6;\n    const vertexIndexes = C._calloc(maxNumVertexes, SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellToVertexes(lower, upper, vertexIndexes));\n        return readArrayOfH3Indexes(vertexIndexes, maxNumVertexes);\n    } finally {\n        C._free(vertexIndexes);\n    }\n}\n\n/**\n * Get the lat, lng of a given vertex\n * @static\n * @param {H3IndexInput} h3Index A vertex index\n * @returns {CoordPair}          Latitude, longitude coordinates of the vertex\n * @throws {H3Error}             If the input is invalid\n */\nexport function vertexToLatLng(h3Index) {\n    const latlng = C._malloc(SZ_LATLNG);\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    try {\n        throwIfError(H3.vertexToLatLng(lower, upper, latlng));\n        return readLatLng(latlng);\n    } finally {\n        C._free(latlng);\n    }\n}\n\n/**\n * Returns true if the input is a valid vertex index.\n * @static\n * @param {H3IndexInput} h3Index An index to test for being a vertex index\n * @returns {boolean} True if the index represents a vertex\n */\nexport function isValidVertex(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    return Boolean(H3.isValidVertex(lower, upper));\n}\n\n// ----------------------------------------------------------------------------\n// Public informational utilities\n\n/**\n * The total count of hexagons in the world at a given resolution. Note that above\n * resolution 8 the exact count cannot be represented in a JavaScript 32-bit number,\n * so consumers should use caution when applying further operations to the output.\n * @static\n * @param  {number} res  Hexagon resolution\n * @return {number}      Count\n * @throws {H3Error}     If the resolution is invalid\n */\nexport function getNumCells(res) {\n    validateRes(res);\n    const countPtr = C._malloc(SZ_INT64);\n    try {\n        // Get number as a long value\n        throwIfError(H3.getNumCells(res, countPtr));\n        return readInt64AsDoubleFromPointer(countPtr);\n    } finally {\n        C._free(countPtr);\n    }\n}\n\n/**\n * Get all H3 indexes at resolution 0. As every index at every resolution > 0 is\n * the descendant of a res 0 index, this can be used with h3ToChildren to iterate\n * over H3 indexes at any resolution.\n * @static\n * @return {H3Index[]}  All H3 indexes at res 0\n */\nexport function getRes0Cells() {\n    const count = H3.res0CellCount();\n    const hexagons = C._malloc(SZ_H3INDEX * count);\n    try {\n        throwIfError(H3.getRes0Cells(hexagons));\n        return readArrayOfH3Indexes(hexagons, count);\n    } finally {\n        C._free(hexagons);\n    }\n}\n\n/**\n * Get the twelve pentagon indexes at a given resolution.\n * @static\n * @param  {number} res  Hexagon resolution\n * @return {H3Index[]}   All H3 pentagon indexes at res\n * @throws {H3Error}     If the resolution is invalid\n */\nexport function getPentagons(res) {\n    validateRes(res);\n    const count = H3.pentagonCount();\n    const hexagons = C._malloc(SZ_H3INDEX * count);\n    try {\n        throwIfError(H3.getPentagons(res, hexagons));\n        return readArrayOfH3Indexes(hexagons, count);\n    } finally {\n        C._free(hexagons);\n    }\n}\n\n/**\n * Convert degrees to radians\n * @static\n * @param  {number} deg Value in degrees\n * @return {number}     Value in radians\n */\nexport function degsToRads(deg) {\n    return (deg * Math.PI) / 180;\n}\n\n/**\n * Convert radians to degrees\n * @static\n * @param  {number} rad Value in radians\n * @return {number}     Value in degrees\n */\nexport function radsToDegs(rad) {\n    return (rad * 180) / Math.PI;\n}\n", "import { cellToBoundary, cellToLatLng } from 'h3-js';\nimport { lerp } from '@math.gl/core';\n// normalize longitudes w.r.t center (refLng), when not provided first vertex\nexport function normalizeLongitudes(vertices, refLng) {\n    refLng = refLng === undefined ? vertices[0][0] : refLng;\n    for (const pt of vertices) {\n        const deltaLng = pt[0] - refLng;\n        if (deltaLng > 180) {\n            pt[0] -= 360;\n        }\n        else if (deltaLng < -180) {\n            pt[0] += 360;\n        }\n    }\n}\n// scale polygon vertices w.r.t center (hexId)\nexport function scalePolygon(hexId, vertices, factor) {\n    const [lat, lng] = cellToLatLng(hexId);\n    const actualCount = vertices.length;\n    // normalize with respect to center\n    normalizeLongitudes(vertices, lng);\n    // `cellToBoundary` returns same array object for first and last vertex (closed polygon),\n    // if so skip scaling the last vertex\n    const vertexCount = vertices[0] === vertices[actualCount - 1] ? actualCount - 1 : actualCount;\n    for (let i = 0; i < vertexCount; i++) {\n        vertices[i][0] = lerp(lng, vertices[i][0], factor);\n        vertices[i][1] = lerp(lat, vertices[i][1], factor);\n    }\n}\n// gets hexagon centroid\nexport function getHexagonCentroid(getHexagon, object, objectInfo) {\n    const hexagonId = getHexagon(object, objectInfo);\n    const [lat, lng] = cellToLatLng(hexagonId);\n    return [lng, lat];\n}\nexport function h3ToPolygon(hexId, coverage = 1) {\n    const vertices = cellToBoundary(hexId, true);\n    if (coverage !== 1) {\n        // scale and normalize vertices w.r.t to center\n        scalePolygon(hexId, vertices, coverage);\n    }\n    else {\n        // normalize w.r.t to start vertex\n        normalizeLongitudes(vertices);\n    }\n    return vertices;\n}\nexport function flattenPolygon(vertices) {\n    const positions = new Float64Array(vertices.length * 2);\n    let i = 0;\n    for (const pt of vertices) {\n        positions[i++] = pt[0];\n        positions[i++] = pt[1];\n    }\n    return positions;\n}\n", "import { getResolution, cellToLatLng, latLngToCell, isPentagon, gridDistance, getHexagonEdgeLengthAvg } from 'h3-js';\nimport { CompositeLayer, createIterable } from '@deck.gl/core';\nimport { ColumnLayer, PolygonLayer } from '@deck.gl/layers';\nimport { flattenPolygon, getHexagonCentroid, h3ToPolygon } from \"./h3-utils.js\";\n// There is a cost to updating the instanced geometries when using highPrecision: false\n// This constant defines the distance between two hexagons that leads to \"significant\n// distortion.\" Smaller value makes the column layer more sensitive to viewport change.\nconst UPDATE_THRESHOLD_KM = 10;\nfunction mergeTriggers(getHexagon, coverage) {\n    let trigger;\n    if (getHexagon === undefined || getHexagon === null) {\n        trigger = coverage;\n    }\n    else if (typeof getHexagon === 'object') {\n        trigger = { ...getHexagon, coverage };\n    }\n    else {\n        trigger = { getHexagon, coverage };\n    }\n    return trigger;\n}\nconst defaultProps = {\n    ...PolygonLayer.defaultProps,\n    highPrecision: 'auto',\n    coverage: { type: 'number', min: 0, max: 1, value: 1 },\n    centerHexagon: null,\n    getHexagon: { type: 'accessor', value: (x) => x.hexagon },\n    extruded: true\n};\n/**\n * Render hexagons from the [H3](https://h3geo.org/) geospatial indexing system.\n */\nexport default class H3HexagonLayer extends CompositeLayer {\n    static { this.defaultProps = defaultProps; }\n    static { this.layerName = 'H3HexagonLayer'; }\n    // See `main/bundle.ts`\n    static { this._checkH3Lib = () => { }; }\n    initializeState() {\n        H3HexagonLayer._checkH3Lib();\n        this.state = {\n            edgeLengthKM: 0,\n            resolution: -1\n        };\n    }\n    shouldUpdateState({ changeFlags }) {\n        return this._shouldUseHighPrecision()\n            ? changeFlags.propsOrDataChanged\n            : changeFlags.somethingChanged;\n    }\n    updateState({ props, changeFlags }) {\n        if (props.highPrecision !== true &&\n            (changeFlags.dataChanged ||\n                (changeFlags.updateTriggersChanged && changeFlags.updateTriggersChanged.getHexagon))) {\n            const dataProps = this._calculateH3DataProps();\n            this.setState(dataProps);\n        }\n        this._updateVertices(this.context.viewport);\n    }\n    _calculateH3DataProps() {\n        let resolution = -1;\n        let hasPentagon = false;\n        let hasMultipleRes = false;\n        const { iterable, objectInfo } = createIterable(this.props.data);\n        for (const object of iterable) {\n            objectInfo.index++;\n            const hexId = this.props.getHexagon(object, objectInfo);\n            // Take the resolution of the first hex\n            const hexResolution = getResolution(hexId);\n            if (resolution < 0) {\n                resolution = hexResolution;\n                if (!this.props.highPrecision)\n                    break;\n            }\n            else if (resolution !== hexResolution) {\n                hasMultipleRes = true;\n                break;\n            }\n            if (isPentagon(hexId)) {\n                hasPentagon = true;\n                break;\n            }\n        }\n        return {\n            resolution,\n            edgeLengthKM: resolution >= 0 ? getHexagonEdgeLengthAvg(resolution, 'km') : 0,\n            hasMultipleRes,\n            hasPentagon\n        };\n    }\n    _shouldUseHighPrecision() {\n        if (this.props.highPrecision === 'auto') {\n            const { resolution, hasPentagon, hasMultipleRes } = this.state;\n            const { viewport } = this.context;\n            return (Boolean(viewport?.resolution) ||\n                hasMultipleRes ||\n                hasPentagon ||\n                (resolution >= 0 && resolution <= 5));\n        }\n        return this.props.highPrecision;\n    }\n    _updateVertices(viewport) {\n        if (this._shouldUseHighPrecision()) {\n            return;\n        }\n        const { resolution, edgeLengthKM, centerHex } = this.state;\n        if (resolution < 0) {\n            return;\n        }\n        const hex = this.props.centerHexagon || latLngToCell(viewport.latitude, viewport.longitude, resolution);\n        if (centerHex === hex) {\n            return;\n        }\n        if (centerHex) {\n            try {\n                const distance = gridDistance(centerHex, hex);\n                if (distance * edgeLengthKM < UPDATE_THRESHOLD_KM) {\n                    return;\n                }\n            }\n            catch {\n                // gridDistance throws if the distance could not be computed\n                // due to the two indexes very far apart or on opposite sides of a pentagon.\n            }\n        }\n        const { unitsPerMeter } = viewport.distanceScales;\n        let vertices = h3ToPolygon(hex);\n        const [centerLat, centerLng] = cellToLatLng(hex);\n        const [centerX, centerY] = viewport.projectFlat([centerLng, centerLat]);\n        vertices = vertices.map(p => {\n            const worldPosition = viewport.projectFlat(p);\n            return [\n                (worldPosition[0] - centerX) / unitsPerMeter[0],\n                (worldPosition[1] - centerY) / unitsPerMeter[1]\n            ];\n        });\n        this.setState({ centerHex: hex, vertices });\n    }\n    renderLayers() {\n        return this._shouldUseHighPrecision() ? this._renderPolygonLayer() : this._renderColumnLayer();\n    }\n    _getForwardProps() {\n        const { elevationScale, material, coverage, extruded, wireframe, stroked, filled, lineWidthUnits, lineWidthScale, lineWidthMinPixels, lineWidthMaxPixels, getFillColor, getElevation, getLineColor, getLineWidth, transitions, updateTriggers } = this.props;\n        return {\n            elevationScale,\n            extruded,\n            coverage,\n            wireframe,\n            stroked,\n            filled,\n            lineWidthUnits,\n            lineWidthScale,\n            lineWidthMinPixels,\n            lineWidthMaxPixels,\n            material,\n            getElevation,\n            getFillColor,\n            getLineColor,\n            getLineWidth,\n            transitions,\n            updateTriggers: {\n                getFillColor: updateTriggers.getFillColor,\n                getElevation: updateTriggers.getElevation,\n                getLineColor: updateTriggers.getLineColor,\n                getLineWidth: updateTriggers.getLineWidth\n            }\n        };\n    }\n    _renderPolygonLayer() {\n        const { data, getHexagon, updateTriggers, coverage } = this.props;\n        const SubLayerClass = this.getSubLayerClass('hexagon-cell-hifi', PolygonLayer);\n        const forwardProps = this._getForwardProps();\n        forwardProps.updateTriggers.getPolygon = mergeTriggers(updateTriggers.getHexagon, coverage);\n        return new SubLayerClass(forwardProps, this.getSubLayerProps({\n            id: 'hexagon-cell-hifi',\n            updateTriggers: forwardProps.updateTriggers\n        }), {\n            data,\n            _normalize: false,\n            _windingOrder: 'CCW',\n            positionFormat: 'XY',\n            getPolygon: (object, objectInfo) => {\n                const hexagonId = getHexagon(object, objectInfo);\n                return flattenPolygon(h3ToPolygon(hexagonId, coverage));\n            }\n        });\n    }\n    _renderColumnLayer() {\n        const { data, getHexagon, updateTriggers } = this.props;\n        const SubLayerClass = this.getSubLayerClass('hexagon-cell', ColumnLayer);\n        const forwardProps = this._getForwardProps();\n        forwardProps.updateTriggers.getPosition = updateTriggers.getHexagon;\n        return new SubLayerClass(forwardProps, this.getSubLayerProps({\n            id: 'hexagon-cell',\n            flatShading: true,\n            updateTriggers: forwardProps.updateTriggers\n        }), {\n            data,\n            diskResolution: 6, // generate an extruded hexagon as the base geometry\n            radius: 1,\n            vertices: this.state.vertices,\n            getPosition: getHexagonCentroid.bind(null, getHexagon)\n        });\n    }\n}\n", "import { cellsToMultiPolygon } from 'h3-js';\nimport { createIterable } from '@deck.gl/core';\nimport { default as H3HexagonLayer } from \"./h3-hexagon-layer.js\";\nimport GeoCellLayer from \"../geo-cell-layer/GeoCellLayer.js\";\nimport { normalizeLongitudes } from \"./h3-utils.js\";\nconst defaultProps = {\n    getHexagons: { type: 'accessor', value: (d) => d.hexagons }\n};\nexport default class H3ClusterLayer extends GeoCellLayer {\n    static { this.layerName = 'H3ClusterLayer'; }\n    static { this.defaultProps = defaultProps; }\n    initializeState() {\n        H3HexagonLayer._checkH3Lib();\n    }\n    updateState({ props, changeFlags }) {\n        if (changeFlags.dataChanged ||\n            (changeFlags.updateTriggersChanged && changeFlags.updateTriggersChanged.getHexagons)) {\n            const { data, getHexagons } = props;\n            const polygons = [];\n            const { iterable, objectInfo } = createIterable(data);\n            for (const object of iterable) {\n                objectInfo.index++;\n                const hexagons = getHexagons(object, objectInfo);\n                const multiPolygon = cellsToMultiPolygon(hexagons, true);\n                for (const polygon of multiPolygon) {\n                    // Normalize polygons to prevent wrapping over the anti-meridian\n                    for (const ring of polygon) {\n                        normalizeLongitudes(ring);\n                    }\n                    polygons.push(this.getSubLayerRow({ polygon }, object, objectInfo.index));\n                }\n            }\n            this.setState({ polygons });\n        }\n    }\n    indexToBounds() {\n        const { getElevation, getFillColor, getLineColor, getLineWidth } = this.props;\n        return {\n            data: this.state.polygons,\n            getPolygon: d => d.polygon,\n            getElevation: this.getSubLayerAccessor(getElevation),\n            getFillColor: this.getSubLayerAccessor(getFillColor),\n            getLineColor: this.getSubLayerAccessor(getLineColor),\n            getLineWidth: this.getSubLayerAccessor(getLineWidth)\n        };\n    }\n}\n", "import { COORDINATE_SYSTEM, createIterable } from '@deck.gl/core';\n/* eslint-disable max-statements, complexity, camelcase */\nconst RADIAN_PER_DEGREE = Math.PI / 180;\nconst modelMatrix = new Float32Array(16);\nconst valueArray = new Float32Array(12);\nfunction calculateTransformMatrix(targetMatrix, orientation, scale) {\n    const pitch = orientation[0] * RADIAN_PER_DEGREE;\n    const yaw = orientation[1] * RADIAN_PER_DEGREE;\n    const roll = orientation[2] * RADIAN_PER_DEGREE;\n    const sr = Math.sin(roll);\n    const sp = Math.sin(pitch);\n    const sw = Math.sin(yaw);\n    const cr = Math.cos(roll);\n    const cp = Math.cos(pitch);\n    const cw = Math.cos(yaw);\n    const scx = scale[0];\n    const scy = scale[1];\n    const scz = scale[2];\n    targetMatrix[0] = scx * cw * cp; // 0,0\n    targetMatrix[1] = scx * sw * cp; // 1,0\n    targetMatrix[2] = scx * -sp; // 2,0\n    targetMatrix[3] = scy * (-sw * cr + cw * sp * sr); // 0,1\n    targetMatrix[4] = scy * (cw * cr + sw * sp * sr); // 1,1\n    targetMatrix[5] = scy * cp * sr; // 2,1\n    targetMatrix[6] = scz * (sw * sr + cw * sp * cr); // 0,2\n    targetMatrix[7] = scz * (-cw * sr + sw * sp * cr); // 1,2\n    targetMatrix[8] = scz * cp * cr; // 2,2\n}\nfunction getExtendedMat3FromMat4(mat4) {\n    mat4[0] = mat4[0];\n    mat4[1] = mat4[1];\n    mat4[2] = mat4[2];\n    mat4[3] = mat4[4];\n    mat4[4] = mat4[5];\n    mat4[5] = mat4[6];\n    mat4[6] = mat4[8];\n    mat4[7] = mat4[9];\n    mat4[8] = mat4[10];\n    mat4[9] = mat4[12];\n    mat4[10] = mat4[13];\n    mat4[11] = mat4[14];\n    return mat4.subarray(0, 12);\n}\nexport const MATRIX_ATTRIBUTES = {\n    size: 12,\n    accessor: ['getOrientation', 'getScale', 'getTranslation', 'getTransformMatrix'],\n    shaderAttributes: {\n        instanceModelMatrixCol0: {\n            size: 3,\n            elementOffset: 0\n        },\n        instanceModelMatrixCol1: {\n            size: 3,\n            elementOffset: 3\n        },\n        instanceModelMatrixCol2: {\n            size: 3,\n            elementOffset: 6\n        },\n        instanceTranslation: {\n            size: 3,\n            elementOffset: 9\n        }\n    },\n    update(attribute, { startRow, endRow }) {\n        // @ts-expect-error: \"this\" will be bound to a layer when this  function is called\n        const { data, getOrientation, getScale, getTranslation, getTransformMatrix } = this.props;\n        const arrayMatrix = Array.isArray(getTransformMatrix);\n        const constantMatrix = arrayMatrix && getTransformMatrix.length === 16;\n        const constantScale = Array.isArray(getScale);\n        const constantOrientation = Array.isArray(getOrientation);\n        const constantTranslation = Array.isArray(getTranslation);\n        const hasMatrix = constantMatrix || (!arrayMatrix && Boolean(getTransformMatrix(data[0])));\n        if (hasMatrix) {\n            attribute.constant = constantMatrix;\n        }\n        else {\n            attribute.constant = constantOrientation && constantScale && constantTranslation;\n        }\n        const instanceModelMatrixData = attribute.value;\n        if (attribute.constant) {\n            let matrix;\n            if (hasMatrix) {\n                modelMatrix.set(getTransformMatrix);\n                matrix = getExtendedMat3FromMat4(modelMatrix);\n            }\n            else {\n                matrix = valueArray;\n                const orientation = getOrientation;\n                const scale = getScale;\n                calculateTransformMatrix(matrix, orientation, scale);\n                matrix.set(getTranslation, 9);\n            }\n            attribute.value = new Float32Array(matrix);\n        }\n        else {\n            let i = startRow * attribute.size;\n            const { iterable, objectInfo } = createIterable(data, startRow, endRow);\n            for (const object of iterable) {\n                objectInfo.index++;\n                let matrix;\n                if (hasMatrix) {\n                    modelMatrix.set(constantMatrix ? getTransformMatrix : getTransformMatrix(object, objectInfo));\n                    matrix = getExtendedMat3FromMat4(modelMatrix);\n                }\n                else {\n                    matrix = valueArray;\n                    const orientation = constantOrientation\n                        ? getOrientation\n                        : getOrientation(object, objectInfo);\n                    const scale = constantScale ? getScale : getScale(object, objectInfo);\n                    calculateTransformMatrix(matrix, orientation, scale);\n                    matrix.set(constantTranslation ? getTranslation : getTranslation(object, objectInfo), 9);\n                }\n                instanceModelMatrixData[i++] = matrix[0];\n                instanceModelMatrixData[i++] = matrix[1];\n                instanceModelMatrixData[i++] = matrix[2];\n                instanceModelMatrixData[i++] = matrix[3];\n                instanceModelMatrixData[i++] = matrix[4];\n                instanceModelMatrixData[i++] = matrix[5];\n                instanceModelMatrixData[i++] = matrix[6];\n                instanceModelMatrixData[i++] = matrix[7];\n                instanceModelMatrixData[i++] = matrix[8];\n                instanceModelMatrixData[i++] = matrix[9];\n                instanceModelMatrixData[i++] = matrix[10];\n                instanceModelMatrixData[i++] = matrix[11];\n            }\n        }\n    }\n};\n// only apply composeModelMatrix when in cartesian or meter_offsets coordinate system\n// with `composeModelMatrix` enabled, the rotation part of the layer's modelMatrix will be composed to instance's transformations\n// since rotating latitude and longitude can not provide meaningful results, hence `composeModelMatrix` is disabled\n// when in LNGLAT and LNGLAT_OFFSET coordinates.\nexport function shouldComposeModelMatrix(viewport, coordinateSystem) {\n    return (coordinateSystem === COORDINATE_SYSTEM.CARTESIAN ||\n        coordinateSystem === COORDINATE_SYSTEM.METER_OFFSETS ||\n        (coordinateSystem === COORDINATE_SYSTEM.DEFAULT && !viewport.isGeospatial));\n}\n", "export default `#version 300 es\n#define SHADER_NAME simple-mesh-layer-vs\nuniform float sizeScale;\nuniform bool composeModelMatrix;\nin vec3 positions;\nin vec3 normals;\nin vec3 colors;\nin vec2 texCoords;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin vec3 instanceModelMatrixCol0;\nin vec3 instanceModelMatrixCol1;\nin vec3 instanceModelMatrixCol2;\nin vec3 instanceTranslation;\nout vec2 vTexCoord;\nout vec3 cameraPosition;\nout vec3 normals_commonspace;\nout vec4 position_commonspace;\nout vec4 vColor;\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\ngeometry.uv = texCoords;\ngeometry.pickingColor = instancePickingColors;\nvTexCoord = texCoords;\ncameraPosition = project_uCameraPosition;\nvColor = vec4(colors * instanceColors.rgb, instanceColors.a);\nmat3 instanceModelMatrix = mat3(instanceModelMatrixCol0, instanceModelMatrixCol1, instanceModelMatrixCol2);\nvec3 pos = (instanceModelMatrix * positions) * sizeScale + instanceTranslation;\nif (composeModelMatrix) {\nDECKGL_FILTER_SIZE(pos, geometry);\nnormals_commonspace = project_normal(instanceModelMatrix * normals);\ngeometry.worldPosition += pos;\ngl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64Low, vec3(0.0), position_commonspace);\ngeometry.position = position_commonspace;\n}\nelse {\npos = project_size(pos);\nDECKGL_FILTER_SIZE(pos, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, pos, position_commonspace);\ngeometry.position = position_commonspace;\nnormals_commonspace = project_normal(instanceModelMatrix * normals);\n}\ngeometry.normal = normals_commonspace;\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n", "export default `#version 300 es\n#define SHADER_NAME simple-mesh-layer-fs\nprecision highp float;\nuniform bool hasTexture;\nuniform sampler2D sampler;\nuniform bool flatShading;\nuniform float opacity;\nin vec2 vTexCoord;\nin vec3 cameraPosition;\nin vec3 normals_commonspace;\nin vec4 position_commonspace;\nin vec4 vColor;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = vTexCoord;\nvec3 normal;\nif (flatShading) {\nnormal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n} else {\nnormal = normals_commonspace;\n}\nvec4 color = hasTexture ? texture(sampler, vTexCoord) : vColor;\nDECKGL_FILTER_COLOR(color, geometry);\nvec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);\nfragColor = vec4(lightColor, color.a * opacity);\n}\n`;\n", "// Note: This file will either be moved back to deck.gl or reformatted to web-monorepo standards\n// Disabling lint temporarily to facilitate copying code in and out of this repo\n/* eslint-disable */\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { Layer, project32, phongLighting, picking, log } from '@deck.gl/core';\nimport { Texture } from '@luma.gl/core';\nimport { Model, Geometry } from '@luma.gl/engine';\nimport { MATRIX_ATTRIBUTES, shouldComposeModelMatrix } from \"../utils/matrix.js\";\nimport vs from \"./simple-mesh-layer-vertex.glsl.js\";\nimport fs from \"./simple-mesh-layer-fragment.glsl.js\";\nimport { getMeshBoundingBox } from '@loaders.gl/schema';\nfunction normalizeGeometryAttributes(attributes) {\n    const positionAttribute = attributes.positions || attributes.POSITION;\n    log.assert(positionAttribute, 'no \"postions\" or \"POSITION\" attribute in mesh');\n    const vertexCount = positionAttribute.value.length / positionAttribute.size;\n    let colorAttribute = attributes.COLOR_0 || attributes.colors;\n    if (!colorAttribute) {\n        colorAttribute = { size: 3, value: new Float32Array(vertexCount * 3).fill(1) };\n    }\n    let normalAttribute = attributes.NORMAL || attributes.normals;\n    if (!normalAttribute) {\n        normalAttribute = { size: 3, value: new Float32Array(vertexCount * 3).fill(0) };\n    }\n    let texCoordAttribute = attributes.TEXCOORD_0 || attributes.texCoords;\n    if (!texCoordAttribute) {\n        texCoordAttribute = { size: 2, value: new Float32Array(vertexCount * 2).fill(0) };\n    }\n    return {\n        positions: positionAttribute,\n        colors: colorAttribute,\n        normals: normalAttribute,\n        texCoords: texCoordAttribute\n    };\n}\n/*\n * Convert mesh data into geometry\n * @returns {Geometry} geometry\n */\nfunction getGeometry(data) {\n    if (data instanceof Geometry) {\n        // @ts-expect-error data.attributes is readonly\n        data.attributes = normalizeGeometryAttributes(data.attributes);\n        return data;\n    }\n    else if (data.attributes) {\n        return new Geometry({\n            ...data,\n            topology: 'triangle-list',\n            attributes: normalizeGeometryAttributes(data.attributes)\n        });\n    }\n    else {\n        return new Geometry({\n            topology: 'triangle-list',\n            attributes: normalizeGeometryAttributes(data)\n        });\n    }\n}\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n    mesh: { type: 'object', value: null, async: true },\n    texture: { type: 'image', value: null, async: true },\n    sizeScale: { type: 'number', value: 1, min: 0 },\n    // _instanced is a hack to use world position instead of meter offsets in mesh\n    // TODO - formalize API\n    _instanced: true,\n    // NOTE(Tarek): Quick and dirty wireframe. Just draws\n    // the same mesh with LINE_STRIPS. Won't follow edges\n    // of the original mesh.\n    wireframe: false,\n    // Optional material for 'lighting' shader module\n    material: true,\n    getPosition: { type: 'accessor', value: (x) => x.position },\n    getColor: { type: 'accessor', value: DEFAULT_COLOR },\n    // yaw, pitch and roll are in degrees\n    // https://en.wikipedia.org/wiki/Euler_angles\n    // [pitch, yaw, roll]\n    getOrientation: { type: 'accessor', value: [0, 0, 0] },\n    getScale: { type: 'accessor', value: [1, 1, 1] },\n    getTranslation: { type: 'accessor', value: [0, 0, 0] },\n    // 4x4 matrix\n    getTransformMatrix: { type: 'accessor', value: [] },\n    textureParameters: { type: 'object', ignore: true, value: null }\n};\n/** Render a number of instances of an arbitrary 3D geometry. */\nexport default class SimpleMeshLayer extends Layer {\n    static { this.defaultProps = defaultProps; }\n    static { this.layerName = 'SimpleMeshLayer'; }\n    getShaders() {\n        return super.getShaders({\n            vs,\n            fs,\n            modules: [project32, phongLighting, picking]\n        });\n    }\n    getBounds() {\n        if (this.props._instanced) {\n            return super.getBounds();\n        }\n        let result = this.state.positionBounds;\n        if (result) {\n            return result;\n        }\n        const { mesh } = this.props;\n        if (!mesh) {\n            return null;\n        }\n        // @ts-ignore Detect if mesh is generated by loaders.gl\n        result = mesh.header?.boundingBox;\n        if (!result) {\n            // Otherwise, calculate bounding box from positions\n            const { attributes } = getGeometry(mesh);\n            attributes.POSITION = attributes.POSITION || attributes.positions;\n            //@ts-expect-error\n            result = getMeshBoundingBox(attributes);\n        }\n        this.state.positionBounds = result;\n        return result;\n    }\n    initializeState() {\n        const attributeManager = this.getAttributeManager();\n        // attributeManager is always defined in a primitive layer\n        attributeManager.addInstanced({\n            instancePositions: {\n                transition: true,\n                type: 'float64',\n                fp64: this.use64bitPositions(),\n                size: 3,\n                accessor: 'getPosition'\n            },\n            instanceColors: {\n                type: 'unorm8',\n                transition: true,\n                size: this.props.colorFormat.length,\n                accessor: 'getColor',\n                defaultValue: [0, 0, 0, 255]\n            },\n            instanceModelMatrix: MATRIX_ATTRIBUTES\n        });\n        this.setState({\n            // Avoid luma.gl's missing uniform warning\n            // TODO - add feature to luma.gl to specify ignored uniforms?\n            emptyTexture: this.context.device.createTexture({\n                data: new Uint8Array(4),\n                width: 1,\n                height: 1\n            })\n        });\n    }\n    updateState(params) {\n        super.updateState(params);\n        const { props, oldProps, changeFlags } = params;\n        if (props.mesh !== oldProps.mesh || changeFlags.extensionsChanged) {\n            this.state.positionBounds = null;\n            this.state.model?.destroy();\n            if (props.mesh) {\n                this.state.model = this.getModel(props.mesh);\n                const attributes = props.mesh.attributes || props.mesh;\n                this.setState({\n                    hasNormals: Boolean(attributes.NORMAL || attributes.normals)\n                });\n            }\n            // attributeManager is always defined in a primitive layer\n            this.getAttributeManager().invalidateAll();\n        }\n        if (props.texture !== oldProps.texture && props.texture instanceof Texture) {\n            this.setTexture(props.texture);\n        }\n        if (this.state.model) {\n            this.state.model.setTopology(this.props.wireframe ? 'line-strip' : 'triangle-list');\n        }\n    }\n    finalizeState(context) {\n        super.finalizeState(context);\n        this.state.emptyTexture.delete();\n    }\n    draw({ uniforms }) {\n        const { model } = this.state;\n        if (!model) {\n            return;\n        }\n        const { viewport, renderPass } = this.context;\n        const { sizeScale, coordinateSystem, _instanced } = this.props;\n        model.setUniforms(uniforms);\n        model.setUniforms({\n            sizeScale,\n            composeModelMatrix: !_instanced || shouldComposeModelMatrix(viewport, coordinateSystem),\n            flatShading: !this.state.hasNormals\n        });\n        model.draw(renderPass);\n    }\n    get isLoaded() {\n        return Boolean(this.state?.model && super.isLoaded);\n    }\n    getModel(mesh) {\n        const model = new Model(this.context.device, {\n            ...this.getShaders(),\n            id: this.props.id,\n            bufferLayout: this.getAttributeManager().getBufferLayouts(),\n            geometry: getGeometry(mesh),\n            isInstanced: true\n        });\n        const { texture } = this.props;\n        const { emptyTexture } = this.state;\n        model.setBindings({\n            sampler: texture || emptyTexture\n        });\n        model.setUniforms({\n            hasTexture: Boolean(texture)\n        });\n        return model;\n    }\n    setTexture(texture) {\n        const { emptyTexture, model } = this.state;\n        // props.mesh may not be ready at this time.\n        // The sampler will be set when `getModel` is called\n        if (model) {\n            model.setBindings({\n                sampler: texture || emptyTexture\n            });\n            model.setUniforms({\n                hasTexture: Boolean(texture)\n            });\n        }\n    }\n}\n", "import { log } from '@luma.gl/core';\n// NOTE: Modules other than `@luma.gl/webgl` should not import `GL` from\n// `@luma.gl/constants`. Locally we use `GLEnum` instead of `GL` to avoid\n// conflicts with the `babel-plugin-inline-webgl-constants` plugin.\nvar GLEnum;\n(function (GLEnum) {\n    GLEnum[GLEnum[\"FUNC_ADD\"] = 32774] = \"FUNC_ADD\";\n    GLEnum[GLEnum[\"ONE\"] = 1] = \"ONE\";\n    GLEnum[GLEnum[\"SRC_ALPHA\"] = 770] = \"SRC_ALPHA\";\n    GLEnum[GLEnum[\"ONE_MINUS_SRC_ALPHA\"] = 771] = \"ONE_MINUS_SRC_ALPHA\";\n    GLEnum[GLEnum[\"TEXTURE_MIN_FILTER\"] = 10241] = \"TEXTURE_MIN_FILTER\";\n    GLEnum[GLEnum[\"LINEAR\"] = 9729] = \"LINEAR\";\n    GLEnum[GLEnum[\"LINEAR_MIPMAP_NEAREST\"] = 9985] = \"LINEAR_MIPMAP_NEAREST\";\n    GLEnum[GLEnum[\"UNPACK_FLIP_Y_WEBGL\"] = 37440] = \"UNPACK_FLIP_Y_WEBGL\";\n})(GLEnum || (GLEnum = {}));\n/**\n * Parses a GLTF material definition into uniforms and parameters for the PBR shader module\n */\nexport function parsePBRMaterial(device, material, attributes, options) {\n    const parsedMaterial = {\n        defines: {\n            // TODO: Use EXT_sRGB if available (Standard in WebGL 2.0)\n            MANUAL_SRGB: 1,\n            SRGB_FAST_APPROXIMATION: 1\n        },\n        bindings: {},\n        uniforms: {\n            // TODO: find better values?\n            u_Camera: [0, 0, 0], // Model should override\n            u_MetallicRoughnessValues: [1, 1] // Default is 1 and 1\n        },\n        parameters: {},\n        glParameters: {},\n        generatedTextures: []\n    };\n    // TODO - always available\n    parsedMaterial.defines.USE_TEX_LOD = 1;\n    const { imageBasedLightingEnvironment } = options;\n    if (imageBasedLightingEnvironment) {\n        parsedMaterial.bindings.u_DiffuseEnvSampler = imageBasedLightingEnvironment.diffuseEnvSampler;\n        parsedMaterial.bindings.u_SpecularEnvSampler = imageBasedLightingEnvironment.specularEnvSampler;\n        parsedMaterial.bindings.u_brdfLUT = imageBasedLightingEnvironment.brdfLutTexture;\n        parsedMaterial.uniforms.u_ScaleIBLAmbient = [1, 1];\n    }\n    if (options?.pbrDebug) {\n        parsedMaterial.defines.PBR_DEBUG = 1;\n        // Override final color for reference app visualization of various parameters in the lighting equation.\n        parsedMaterial.uniforms.u_ScaleDiffBaseMR = [0, 0, 0, 0];\n        parsedMaterial.uniforms.u_ScaleFGDSpec = [0, 0, 0, 0];\n    }\n    if (attributes.NORMAL)\n        parsedMaterial.defines.HAS_NORMALS = 1;\n    if (attributes.TANGENT && options?.useTangents)\n        parsedMaterial.defines.HAS_TANGENTS = 1;\n    if (attributes.TEXCOORD_0)\n        parsedMaterial.defines.HAS_UV = 1;\n    if (options?.imageBasedLightingEnvironment)\n        parsedMaterial.defines.USE_IBL = 1;\n    if (options?.lights)\n        parsedMaterial.defines.USE_LIGHTS = 1;\n    if (material) {\n        parseMaterial(device, material, parsedMaterial);\n    }\n    return parsedMaterial;\n}\n/** Parse GLTF material record */\nfunction parseMaterial(device, material, parsedMaterial) {\n    parsedMaterial.uniforms.pbr_uUnlit = Boolean(material.unlit);\n    if (material.pbrMetallicRoughness) {\n        parsePbrMetallicRoughness(device, material.pbrMetallicRoughness, parsedMaterial);\n    }\n    if (material.normalTexture) {\n        addTexture(device, material.normalTexture, 'u_NormalSampler', 'HAS_NORMALMAP', parsedMaterial);\n        const { scale = 1 } = material.normalTexture;\n        parsedMaterial.uniforms.u_NormalScale = scale;\n    }\n    if (material.occlusionTexture) {\n        addTexture(device, material.occlusionTexture, 'u_OcclusionSampler', 'HAS_OCCLUSIONMAP', parsedMaterial);\n        const { strength = 1 } = material.occlusionTexture;\n        parsedMaterial.uniforms.u_OcclusionStrength = strength;\n    }\n    if (material.emissiveTexture) {\n        addTexture(device, material.emissiveTexture, 'u_EmissiveSampler', 'HAS_EMISSIVEMAP', parsedMaterial);\n        parsedMaterial.uniforms.u_EmissiveFactor = material.emissiveFactor || [0, 0, 0];\n    }\n    switch (material.alphaMode) {\n        case 'MASK':\n            const { alphaCutoff = 0.5 } = material;\n            parsedMaterial.defines.ALPHA_CUTOFF = 1;\n            parsedMaterial.uniforms.u_AlphaCutoff = alphaCutoff;\n            break;\n        case 'BLEND':\n            log.warn('glTF BLEND alphaMode might not work well because it requires mesh sorting')();\n            // WebGPU style parameters\n            parsedMaterial.parameters.blendColorOperation = 'add';\n            parsedMaterial.parameters.blendColorSrcFactor = 'src-alpha';\n            parsedMaterial.parameters.blendColorDstFactor = 'one-minus-src-alpha';\n            parsedMaterial.parameters.blendAlphaOperation = 'add';\n            parsedMaterial.parameters.blendAlphaSrcFactor = 'one';\n            parsedMaterial.parameters.blendAlphaDstFactor = 'one-minus-src-alpha';\n            // GL parameters\n            parsedMaterial.glParameters.blend = true;\n            parsedMaterial.glParameters.blendEquation = GLEnum.FUNC_ADD;\n            parsedMaterial.glParameters.blendFunc = [\n                GLEnum.SRC_ALPHA,\n                GLEnum.ONE_MINUS_SRC_ALPHA,\n                GLEnum.ONE,\n                GLEnum.ONE_MINUS_SRC_ALPHA\n            ];\n            break;\n    }\n}\n/** Parse GLTF material sub record */\nfunction parsePbrMetallicRoughness(device, pbrMetallicRoughness, parsedMaterial) {\n    if (pbrMetallicRoughness.baseColorTexture) {\n        addTexture(device, pbrMetallicRoughness.baseColorTexture, 'u_BaseColorSampler', 'HAS_BASECOLORMAP', parsedMaterial);\n    }\n    parsedMaterial.uniforms.u_BaseColorFactor = pbrMetallicRoughness.baseColorFactor || [1, 1, 1, 1];\n    if (pbrMetallicRoughness.metallicRoughnessTexture) {\n        addTexture(device, pbrMetallicRoughness.metallicRoughnessTexture, 'u_MetallicRoughnessSampler', 'HAS_METALROUGHNESSMAP', parsedMaterial);\n    }\n    const { metallicFactor = 1, roughnessFactor = 1 } = pbrMetallicRoughness;\n    parsedMaterial.uniforms.u_MetallicRoughnessValues = [metallicFactor, roughnessFactor];\n}\n/** Create a texture from a glTF texture/sampler/image combo and add it to bindings */\nfunction addTexture(device, gltfTexture, uniformName, define = null, parsedMaterial) {\n    const parameters = gltfTexture?.texture?.sampler?.parameters || {};\n    const image = gltfTexture.texture.source.image;\n    let textureOptions;\n    let specialTextureParameters = {};\n    if (image.compressed) {\n        textureOptions = image;\n        specialTextureParameters = {\n            [GLEnum.TEXTURE_MIN_FILTER]: image.data.length > 1 ? GLEnum.LINEAR_MIPMAP_NEAREST : GLEnum.LINEAR\n        };\n    }\n    else {\n        // Texture2D accepts a promise that returns an image as data (Async Textures)\n        textureOptions = { data: image };\n    }\n    const texture = device.createTexture({\n        id: gltfTexture.uniformName || gltfTexture.id,\n        parameters: {\n            ...parameters,\n            ...specialTextureParameters\n        },\n        pixelStore: {\n            [GLEnum.UNPACK_FLIP_Y_WEBGL]: false\n        },\n        ...textureOptions\n    });\n    parsedMaterial.bindings[uniformName] = texture;\n    if (define)\n        parsedMaterial.defines[define] = 1;\n    parsedMaterial.generatedTextures.push(texture);\n}\n/*\n/**\n * Parses a GLTF material definition into uniforms and parameters for the PBR shader module\n *\nexport class PBRMaterialParser {\n  readonly device: Device;\n\n  readonly defines: Record<string, number | boolean>;\n  readonly bindings: Record<string, Binding>;\n  readonly uniforms: Record<string, any>;\n  readonly parameters: Record<string, any>;\n\n  /** Hold on to generated textures, we destroy them in the destroy method *\n  readonly generatedTextures: Texture[];\n\n  constructor(device: Device, props: PBRMaterialParserProps) {\n    const {attributes, material, pbrDebug, imageBasedLightingEnvironment, lights, useTangents} =\n      props;\n    this.device = device;\n\n    this.defines = {\n      // TODO: Use EXT_sRGB if available (Standard in WebGL 2.0)\n      MANUAL_SRGB: 1,\n      SRGB_FAST_APPROXIMATION: 1\n    };\n\n    if (this.device.features.has('glsl-texture-lod')) {\n      this.defines.USE_TEX_LOD = 1;\n    }\n\n    this.uniforms = {\n      // TODO: find better values?\n      u_Camera: [0, 0, 0], // Model should override\n\n      u_MetallicRoughnessValues: [1, 1] // Default is 1 and 1\n    };\n\n    this.bindings = {};\n\n    this.parameters = {};\n    this.generatedTextures = [];\n\n    if (imageBasedLightingEnvironment) {\n      this.bindings.u_DiffuseEnvSampler = imageBasedLightingEnvironment.getDiffuseEnvSampler();\n      this.bindings.u_SpecularEnvSampler = imageBasedLightingEnvironment.getSpecularEnvSampler();\n      this.bindings.u_brdfLUT = imageBasedLightingEnvironment.getBrdfTexture();\n      this.uniforms.u_ScaleIBLAmbient = [1, 1];\n    }\n\n    if (pbrDebug) {\n      // Override final color for reference app visualization\n      // of various parameters in the lighting equation.\n      this.uniforms.u_ScaleDiffBaseMR = [0, 0, 0, 0];\n      this.uniforms.u_ScaleFGDSpec = [0, 0, 0, 0];\n    }\n\n    this.defineIfPresent(attributes.NORMAL, 'HAS_NORMALS');\n    this.defineIfPresent(attributes.TANGENT && useTangents, 'HAS_TANGENTS');\n    this.defineIfPresent(attributes.TEXCOORD_0, 'HAS_UV');\n\n    this.defineIfPresent(imageBasedLightingEnvironment, 'USE_IBL');\n    this.defineIfPresent(lights, 'USE_LIGHTS');\n    this.defineIfPresent(pbrDebug, 'PBR_DEBUG');\n\n    if (material) {\n      this.parseMaterial(material);\n    }\n  }\n\n  /**\n   * Destroy all generated resources to release memory.\n   *\n  destroy(): void {\n    this.generatedTextures.forEach(texture => texture.destroy());\n  }\n\n  /** Add a define if the the value is non-nullish *\n  defineIfPresent(value: unknown, name: string): void {\n    if (value) {\n      this.defines[name] = 1;\n    }\n  }\n\n  /** Parse GLTF material record *\n  parseMaterial(material) {\n    this.uniforms.pbr_uUnlit = Boolean(material.unlit);\n\n    if (material.pbrMetallicRoughness) {\n      this.parsePbrMetallicRoughness(material.pbrMetallicRoughness);\n    }\n    if (material.normalTexture) {\n      this.addTexture(material.normalTexture, 'u_NormalSampler', 'HAS_NORMALMAP');\n\n      const {scale = 1} = material.normalTexture;\n      this.uniforms.u_NormalScale = scale;\n    }\n    if (material.occlusionTexture) {\n      this.addTexture(material.occlusionTexture, 'u_OcclusionSampler', 'HAS_OCCLUSIONMAP');\n\n      const {strength = 1} = material.occlusionTexture;\n      this.uniforms.u_OcclusionStrength = strength;\n    }\n    if (material.emissiveTexture) {\n      this.addTexture(material.emissiveTexture, 'u_EmissiveSampler', 'HAS_EMISSIVEMAP');\n      this.uniforms.u_EmissiveFactor = material.emissiveFactor || [0, 0, 0];\n    }\n    if (material.alphaMode === 'MASK') {\n      const {alphaCutoff = 0.5} = material;\n      this.defines.ALPHA_CUTOFF = 1;\n      this.uniforms.u_AlphaCutoff = alphaCutoff;\n    } else if (material.alphaMode === 'BLEND') {\n      log.warn('BLEND alphaMode might not work well because it requires mesh sorting')();\n      Object.assign(this.parameters, {\n        blend: true,\n        blendEquation: GL.FUNC_ADD,\n        blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA]\n      });\n    }\n  }\n\n  /** Parse GLTF material sub record *\n  parsePbrMetallicRoughness(pbrMetallicRoughness) {\n    if (pbrMetallicRoughness.baseColorTexture) {\n      this.addTexture(\n        pbrMetallicRoughness.baseColorTexture,\n        'u_BaseColorSampler',\n        'HAS_BASECOLORMAP'\n      );\n    }\n    this.uniforms.u_BaseColorFactor = pbrMetallicRoughness.baseColorFactor || [1, 1, 1, 1];\n\n    if (pbrMetallicRoughness.metallicRoughnessTexture) {\n      this.addTexture(\n        pbrMetallicRoughness.metallicRoughnessTexture,\n        'u_MetallicRoughnessSampler',\n        'HAS_METALROUGHNESSMAP'\n      );\n    }\n    const {metallicFactor = 1, roughnessFactor = 1} = pbrMetallicRoughness;\n    this.uniforms.u_MetallicRoughnessValues = [metallicFactor, roughnessFactor];\n  }\n\n  /** Create a texture from a glTF texture/sampler/image combo and add it to bindings *\n  addTexture(gltfTexture, name, define = null) {\n    const parameters = gltfTexture?.texture?.sampler?.parameters || {};\n\n    const image = gltfTexture.texture.source.image;\n    let textureOptions;\n    let specialTextureParameters = {};\n    if (image.compressed) {\n      textureOptions = image;\n      specialTextureParameters = {\n        [GL.TEXTURE_MIN_FILTER]: image.data.length > 1 ? GL.LINEAR_MIPMAP_NEAREST : GL.LINEAR\n      };\n    } else {\n      // Texture2D accepts a promise that returns an image as data (Async Textures)\n      textureOptions = {data: image};\n    }\n\n    const texture: Texture = this.device.createTexture({\n      id: gltfTexture.name || gltfTexture.id,\n      parameters: {\n        ...parameters,\n        ...specialTextureParameters\n      },\n      pixelStore: {\n        [GL.UNPACK_FLIP_Y_WEBGL]: false\n      },\n      ...textureOptions\n    });\n    this.bindings[name] = texture;\n    this.defineIfPresent(define, define);\n    this.generatedTextures.push(texture);\n  }\n}\n*/\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof \"4.2.0-beta.2\" !== 'undefined' ? \"4.2.0-beta.2\" : 'latest';\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { registerJSModules, getJSModuleOrNull } from '@loaders.gl/loader-utils';\nimport { loadLibrary } from '@loaders.gl/worker-utils';\nexport const BASIS_EXTERNAL_LIBRARIES = {\n    /** Basis transcoder, javascript wrapper part */\n    TRANSCODER: 'basis_transcoder.js',\n    /** Basis transcoder, compiled web assembly part */\n    TRANSCODER_WASM: 'basis_transcoder.wasm',\n    /** Basis encoder, javascript wrapper part */\n    ENCODER: 'basis_encoder.js',\n    /** Basis encoder, compiled web assembly part */\n    ENCODER_WASM: 'basis_encoder.wasm'\n};\nlet loadBasisTranscoderPromise;\n/**\n * Loads wasm transcoder module\n * @param options\n * @returns {BasisFile} promise\n */\nexport async function loadBasisTranscoderModule(options) {\n    registerJSModules(options.modules);\n    const basis = getJSModuleOrNull('basis');\n    if (basis) {\n        return basis;\n    }\n    loadBasisTranscoderPromise ||= loadBasisTranscoder(options);\n    return await loadBasisTranscoderPromise;\n}\n/**\n * Loads wasm transcoder module\n * @param options\n * @returns {BasisFile} promise\n */\nasync function loadBasisTranscoder(options) {\n    let BASIS = null;\n    let wasmBinary = null;\n    [BASIS, wasmBinary] = await Promise.all([\n        await loadLibrary(BASIS_EXTERNAL_LIBRARIES.TRANSCODER, 'textures', options),\n        await loadLibrary(BASIS_EXTERNAL_LIBRARIES.TRANSCODER_WASM, 'textures', options)\n    ]);\n    // Depends on how import happened...\n    // @ts-ignore TS2339: Property does not exist on type\n    BASIS = BASIS || globalThis.BASIS;\n    return await initializeBasisTranscoderModule(BASIS, wasmBinary);\n}\n/**\n * Initialize wasm transcoder module\n * @param BasisModule - js part of the module\n * @param wasmBinary - wasm part of the module\n * @returns {BasisFile} promise\n */\nfunction initializeBasisTranscoderModule(BasisModule, wasmBinary) {\n    const options = {};\n    if (wasmBinary) {\n        options.wasmBinary = wasmBinary;\n    }\n    return new Promise((resolve) => {\n        // if you try to return BasisModule the browser crashes!\n        BasisModule(options).then((module) => {\n            const { BasisFile, initializeBasis } = module;\n            initializeBasis();\n            resolve({ BasisFile });\n        });\n    });\n}\nlet loadBasisEncoderPromise;\n/**\n * Loads wasm encoder module\n * @param options\n * @returns {BasisFile, KTX2File} promise\n */\nexport async function loadBasisEncoderModule(options) {\n    const modules = options.modules || {};\n    if (modules.basisEncoder) {\n        return modules.basisEncoder;\n    }\n    loadBasisEncoderPromise = loadBasisEncoderPromise || loadBasisEncoder(options);\n    return await loadBasisEncoderPromise;\n}\n/**\n * Loads wasm encoder module\n * @param options\n * @returns {BasisFile, KTX2File} promise\n */\nasync function loadBasisEncoder(options) {\n    let BASIS_ENCODER = null;\n    let wasmBinary = null;\n    [BASIS_ENCODER, wasmBinary] = await Promise.all([\n        await loadLibrary(BASIS_EXTERNAL_LIBRARIES.ENCODER, 'textures', options),\n        await loadLibrary(BASIS_EXTERNAL_LIBRARIES.ENCODER_WASM, 'textures', options)\n    ]);\n    // Depends on how import happened...\n    // @ts-ignore TS2339: Property does not exist on type\n    BASIS_ENCODER = BASIS_ENCODER || globalThis.BASIS;\n    return await initializeBasisEncoderModule(BASIS_ENCODER, wasmBinary);\n}\n/**\n * Initialize wasm transcoder module\n * @param BasisEncoderModule - js part of the module\n * @param wasmBinary - wasm part of the module\n * @returns {BasisFile, KTX2File} promise\n */\nfunction initializeBasisEncoderModule(BasisEncoderModule, wasmBinary) {\n    const options = {};\n    if (wasmBinary) {\n        options.wasmBinary = wasmBinary;\n    }\n    return new Promise((resolve) => {\n        // if you try to return BasisModule the browser crashes!\n        BasisEncoderModule(options).then((module) => {\n            const { BasisFile, KTX2File, initializeBasis, BasisEncoder } = module;\n            initializeBasis();\n            resolve({ BasisFile, KTX2File, BasisEncoder });\n        });\n    });\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* eslint-disable camelcase */\nexport const GL_EXTENSIONS_CONSTANTS = {\n    // WEBGL_compressed_texture_s3tc\n    COMPRESSED_RGB_S3TC_DXT1_EXT: 0x83f0,\n    COMPRESSED_RGBA_S3TC_DXT1_EXT: 0x83f1,\n    COMPRESSED_RGBA_S3TC_DXT3_EXT: 0x83f2,\n    COMPRESSED_RGBA_S3TC_DXT5_EXT: 0x83f3,\n    // WEBGL_compressed_texture_es3\n    COMPRESSED_R11_EAC: 0x9270,\n    COMPRESSED_SIGNED_R11_EAC: 0x9271,\n    COMPRESSED_RG11_EAC: 0x9272,\n    COMPRESSED_SIGNED_RG11_EAC: 0x9273,\n    COMPRESSED_RGB8_ETC2: 0x9274,\n    COMPRESSED_RGBA8_ETC2_EAC: 0x9275,\n    COMPRESSED_SRGB8_ETC2: 0x9276,\n    COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: 0x9277,\n    COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9278,\n    COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9279,\n    // WEBGL_compressed_texture_pvrtc\n    COMPRESSED_RGB_PVRTC_4BPPV1_IMG: 0x8c00,\n    COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: 0x8c02,\n    COMPRESSED_RGB_PVRTC_2BPPV1_IMG: 0x8c01,\n    COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: 0x8c03,\n    // WEBGL_compressed_texture_etc1\n    COMPRESSED_RGB_ETC1_WEBGL: 0x8d64,\n    // WEBGL_compressed_texture_atc\n    COMPRESSED_RGB_ATC_WEBGL: 0x8c92,\n    COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL: 0x8c93,\n    COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL: 0x87ee,\n    // WEBGL_compressed_texture_astc\n    COMPRESSED_RGBA_ASTC_4X4_KHR: 0x93b0,\n    COMPRESSED_RGBA_ASTC_5X4_KHR: 0x93b1,\n    COMPRESSED_RGBA_ASTC_5X5_KHR: 0x93b2,\n    COMPRESSED_RGBA_ASTC_6X5_KHR: 0x93b3,\n    COMPRESSED_RGBA_ASTC_6X6_KHR: 0x93b4,\n    COMPRESSED_RGBA_ASTC_8X5_KHR: 0x93b5,\n    COMPRESSED_RGBA_ASTC_8X6_KHR: 0x93b6,\n    COMPRESSED_RGBA_ASTC_8X8_KHR: 0x93b7,\n    COMPRESSED_RGBA_ASTC_10X5_KHR: 0x93b8,\n    COMPRESSED_RGBA_ASTC_10X6_KHR: 0x93b9,\n    COMPRESSED_RGBA_ASTC_10X8_KHR: 0x93ba,\n    COMPRESSED_RGBA_ASTC_10X10_KHR: 0x93bb,\n    COMPRESSED_RGBA_ASTC_12X10_KHR: 0x93bc,\n    COMPRESSED_RGBA_ASTC_12X12_KHR: 0x93bd,\n    COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR: 0x93d0,\n    COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR: 0x93d1,\n    COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR: 0x93d2,\n    COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR: 0x93d3,\n    COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR: 0x93d4,\n    COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR: 0x93d5,\n    COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR: 0x93d6,\n    COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR: 0x93d7,\n    COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR: 0x93d8,\n    COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR: 0x93d9,\n    COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR: 0x93da,\n    COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR: 0x93db,\n    COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR: 0x93dc,\n    COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR: 0x93dd,\n    // EXT_texture_compression_rgtc\n    COMPRESSED_RED_RGTC1_EXT: 0x8dbb,\n    COMPRESSED_SIGNED_RED_RGTC1_EXT: 0x8dbc,\n    COMPRESSED_RED_GREEN_RGTC2_EXT: 0x8dbd,\n    COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT: 0x8dbe,\n    // WEBGL_compressed_texture_s3tc_srgb\n    COMPRESSED_SRGB_S3TC_DXT1_EXT: 0x8c4c,\n    COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: 0x8c4d,\n    COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: 0x8c4e,\n    COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: 0x8c4f\n};\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst BROWSER_PREFIXES = ['', 'WEBKIT_', 'MOZ_'];\nconst WEBGL_EXTENSIONS = {\n    /* eslint-disable camelcase */\n    WEBGL_compressed_texture_s3tc: 'dxt',\n    WEBGL_compressed_texture_s3tc_srgb: 'dxt-srgb',\n    WEBGL_compressed_texture_etc1: 'etc1',\n    WEBGL_compressed_texture_etc: 'etc2',\n    WEBGL_compressed_texture_pvrtc: 'pvrtc',\n    WEBGL_compressed_texture_atc: 'atc',\n    WEBGL_compressed_texture_astc: 'astc',\n    EXT_texture_compression_rgtc: 'rgtc'\n    /* eslint-enable camelcase */\n};\nlet formats = null;\n/**\n * Returns a list of formats.\n * Creates a temporary WebGLRenderingContext if none is provided.\n *\n * @param gl - Optional context.\n */\nexport function getSupportedGPUTextureFormats(gl) {\n    if (!formats) {\n        gl = gl || getWebGLContext() || undefined;\n        formats = new Set();\n        for (const prefix of BROWSER_PREFIXES) {\n            for (const extension in WEBGL_EXTENSIONS) {\n                if (gl && gl.getExtension(`${prefix}${extension}`)) {\n                    const gpuTextureFormat = WEBGL_EXTENSIONS[extension];\n                    formats.add(gpuTextureFormat);\n                }\n            }\n        }\n    }\n    return formats;\n}\n/**\n * @returns {WebGLRenderingContext?}\n */\nfunction getWebGLContext() {\n    try {\n        const canvas = document.createElement('canvas');\n        return canvas.getContext('webgl');\n    }\n    catch (error) {\n        return null;\n    }\n}\n", "///////////////////////////////////////////////////\n// Common.\n///////////////////////////////////////////////////\n\n// Injected at compile time, from $npm_package_version.\ndeclare const PACKAGE_VERSION: string;\n\nexport const KTX_WRITER = `KTX-Parse v${PACKAGE_VERSION}`;\n\nexport const NUL = new Uint8Array([0x00]);\n\n\n///////////////////////////////////////////////////\n// KTX2 Header.\n///////////////////////////////////////////////////\n\nexport const KTX2_ID = [\n\t// '´', 'K', 'T', 'X', '2', '0', 'ª', '\\r', '\\n', '\\x1A', '\\n'\n\t0xAB, 0x4B, 0x54, 0x58, 0x20, 0x32, 0x30, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A\n];\n\nexport const HEADER_BYTE_LENGTH = 68; // 13 * 4 + 2 * 8\n\nexport enum KTX2SupercompressionScheme {\n\tNONE = 0,\n\tBASISLZ = 1,\n\tZSTD = 2,\n\tZLIB = 3,\n};\n\n\n///////////////////////////////////////////////////\n// Data Format Descriptor (DFD).\n///////////////////////////////////////////////////\n\nexport enum KTX2DataFormatType {\n    BASICFORMAT = 0x00,\n};\n\nexport const KHR_DF_VENDORID_KHRONOS = 0;\n\nexport const KHR_DF_VERSION = 2;\n\nexport const KHR_DF_BLOCKSIZE = 40;\n\nexport const VK_FORMAT_UNDEFINED = 0;\n\nexport enum KTX2DataFormatModel {\n    UNSPECIFIED = 0,\n\tETC1S = 163,\n\tUASTC = 166,\n};\n\nexport enum KTX2DataFormatPrimaries {\n    UNSPECIFIED = 0,\n    SRGB = 1,\n};\n\nexport enum KTX2DataFormatTransfer {\n    UNSPECIFIED = 0,\n    LINEAR = 1,\n    SRGB = 2,\n    ITU = 3,\n    NTSC = 4,\n    SLOG = 5,\n    SLOG2 = 6,\n};\n\nexport enum KTX2DataFormatFlags {\n    ALPHA_STRAIGHT = 0,\n    ALPHA_PREMULTIPLIED = 1,\n};\n\nexport enum KTX2DataFormatChannelETC1S {\n    RGB = 0,\n    RRR = 3,\n    GGG = 4,\n    AAA = 15,\n};\n\nexport enum KTX2DataFormatChannelUASTC {\n    RGB = 0,\n    RGBA = 3,\n    RRR = 4,\n    RRRG = 5,\n};\n", "import { KHR_DF_BLOCKSIZE, KHR_DF_VENDORID_KHRONOS, KHR_DF_VERSION, KTX2DataFormatFlags, KTX2DataFormatModel, KTX2DataFormatPrimaries, KTX2DataFormatType, KTX2SupercompressionScheme, VK_FORMAT_UNDEFINED } from './constants';\n\n/**\n * Represents an unpacked KTX 2.0 texture container. Data for individual mip levels are stored in\n * the `.levels` array, typically compressed in Basis Universal formats. Additional properties\n * provide metadata required to process, transcode, and upload these textures.\n */\nexport class KTX2Container {\n\t/**\n\t * Specifies the image format using Vulkan VkFormat enum values. When using Basis Universal\n\t * texture formats, `vkFormat` must be VK_FORMAT_UNDEFINED.\n\t */\n\tpublic vkFormat = VK_FORMAT_UNDEFINED;\n\n\t/**\n\t * Size of the data type in bytes used to upload the data to a graphics API. When `vkFormat` is\n\t * VK_FORMAT_UNDEFINED, `typeSize` must be 1.\n\t */\n\tpublic typeSize: number = 1;\n\n\t/** Width of the texture image for level 0, in pixels. */\n\tpublic pixelWidth: number = 0;\n\n\t/** Height of the texture image for level 0, in pixels. */\n\tpublic pixelHeight: number = 0;\n\n\t/** Depth of the texture image for level 0, in pixels (3D textures only). */\n\tpublic pixelDepth: number = 0;\n\n\t/** Number of array elements (array textures only). */\n\tpublic layerCount: number = 0;\n\n\t/**\n\t * Number of cubemap faces. For cubemaps and cubemap arrays, `faceCount` must be 6. For all\n\t * other textures, `faceCount` must be 1. Cubemap faces are stored in +X, -X, +Y, -Y, +Z, -Z\n\t * order.\n\t */\n\tpublic faceCount: number = 1;\n\n\t/** Indicates which supercompression scheme has been applied to mip level images, if any. */\n\tpublic supercompressionScheme = KTX2SupercompressionScheme.NONE;\n\n\t/** Mip levels, ordered largest (original) to smallest (~1px). */\n\tpublic levels: KTX2Level[] = [];\n\n\t/** Data Format Descriptor. */\n\tpublic dataFormatDescriptor: KTX2DataFormatDescriptorBasicFormat[] = [{\n\t\tvendorId: KHR_DF_VENDORID_KHRONOS,\n\t\tdescriptorType: KTX2DataFormatType.BASICFORMAT,\n\t\tversionNumber: KHR_DF_VERSION,\n\t\tdescriptorBlockSize: KHR_DF_BLOCKSIZE,\n\t\tcolorModel: KTX2DataFormatModel.UNSPECIFIED,\n\t\tcolorPrimaries: KTX2DataFormatPrimaries.SRGB,\n\t\ttransferFunction: KTX2DataFormatPrimaries.SRGB,\n\t\tflags: KTX2DataFormatFlags.ALPHA_STRAIGHT,\n\t\ttexelBlockDimension: {x: 4, y: 4, z: 1, w: 1},\n\t\tbytesPlane: [],\n\t\tsamples: [],\n\t}];\n\n\t/** Key/Value Data. */\n\tpublic keyValue: {[key: string]: string | Uint8Array} = {};\n\n\t/** Supercompression Global Data. */\n\tpublic globalData: KTX2GlobalDataBasisLZ | null = null;\n}\n\n\n///////////////////////////////////////////////////\n// Mip Levels.\n///////////////////////////////////////////////////\n\nexport interface KTX2Level {\n\t/** Compressed data of the mip level. */\n\tlevelData: Uint8Array;\n\n\t/**\n\t * Size of the mip level after reflation from supercompression, if applicable. When\n\t * `supercompressionType` is BASISLZ, `uncompressedByteLength` must be 0. When\n\t * `supercompressionType` is `NONE`, `uncompressedByteLength` must match the `levelData` byte\n\t * length.\n\t *\n\t * _**NOTICE:** this implies that for formats such as UASTC, `uncompressedByteLength` may\n\t * indicate size after ZSTD reflation (and of transcoded ASTC data), but does _not_ indicate\n\t * size of decoded RGBA32 pixels._\n\t */\n\tuncompressedByteLength: number;\n};\n\n\n///////////////////////////////////////////////////\n// Data Format Descriptor (DFD).\n///////////////////////////////////////////////////\n\nexport interface KTX2DataFormatDescriptorBasicFormat {\n\tvendorId: number;\n\tdescriptorType: number;\n\tversionNumber: number;\n\tdescriptorBlockSize: number;\n\tcolorModel: number;\n\tcolorPrimaries: number;\n\ttransferFunction: number;\n\tflags: number;\n\ttexelBlockDimension: KTX2BasicFormatTexelBlockDimensions;\n\tbytesPlane: number[];\n\tsamples: KTX2BasicFormatSample[],\n};\n\nexport interface KTX2BasicFormatTexelBlockDimensions {\n\tx: number;\n\ty: number;\n\tz: number;\n\tw: number;\n};\n\nexport interface KTX2BasicFormatSample {\n\tbitOffset: number;\n\tbitLength: number;\n\tchannelID: number;\n\tsamplePosition: number[];\n\tsampleLower: number;\n\tsampleUpper: number;\n};\n\n\n///////////////////////////////////////////////////\n// Supercompression Global Data.\n///////////////////////////////////////////////////\n\nexport interface KTX2GlobalDataBasisLZ {\n\tendpointCount: number;\n\tselectorCount: number;\n\timageDescs: KTX2GlobalDataBasisLZImageDesc[];\n\tendpointsData: Uint8Array;\n\tselectorsData: Uint8Array;\n\ttablesData: Uint8Array;\n\textendedData: Uint8Array;\n};\n\ninterface KTX2GlobalDataBasisLZImageDesc {\n\timageFlags: number;\n\trgbSliceByteOffset: number;\n\trgbSliceByteLength: number;\n\talphaSliceByteOffset: number;\n\talphaSliceByteLength: number;\n};\n", "export class BufferReader {\n\tprivate _dataView: DataView;\n\tprivate _littleEndian: boolean;\n\tpublic _offset: number;\n\n\tconstructor(data: Uint8Array, byteOffset: number, byteLength: number, littleEndian: boolean) {\n\t\tthis._dataView = new DataView(data.buffer, data.byteOffset + byteOffset, byteLength);\n\t\tthis._littleEndian = littleEndian;\n\t\tthis._offset = 0;\n\t}\n\n\t_nextUint8() {\n\t\tconst value = this._dataView.getUint8(this._offset);\n\t\tthis._offset += 1;\n\t\treturn value;\n\t}\n\n\t_nextUint16() {\n\t\tconst value = this._dataView.getUint16(this._offset, this._littleEndian);\n\t\tthis._offset += 2;\n\t\treturn value;\n\t}\n\n\t_nextUint32() {\n\t\tconst value = this._dataView.getUint32(this._offset, this._littleEndian);\n\t\tthis._offset += 4;\n\t\treturn value;\n\t}\n\n\t_nextUint64() {\n\t\tconst left = this._dataView.getUint32(this._offset, this._littleEndian);\n\t\tconst right = this._dataView.getUint32(this._offset + 4, this._littleEndian);\n\t\t// TODO(cleanup): Just test this...\n\t\t// const value = this._littleEndian ? left + (2 ** 32 * right) : (2 ** 32 * left) + right;\n\t\tconst value = left + (2 ** 32 * right);\n\t\tthis._offset += 8;\n\t\treturn value;\n\t}\n\n\t_skip(bytes: number) {\n\t\tthis._offset += bytes;\n\t\treturn this;\n\t}\n\n\t_scan(maxByteLength: number, term: number = 0x00): Uint8Array {\n\t\tconst byteOffset = this._offset;\n\t\tlet byteLength = 0;\n\t\twhile (this._dataView.getUint8(this._offset) !== term && byteLength < maxByteLength) {\n\t\t\tbyteLength++;\n\t\t\tthis._offset++;\n\t\t}\n\n\t\tif (byteLength < maxByteLength) this._offset++;\n\n\t\treturn new Uint8Array(\n\t\t\tthis._dataView.buffer,\n\t\t\tthis._dataView.byteOffset + byteOffset,\n\t\t\tbyteLength\n\t\t);\n\t}\n}\n", "\n/** Encodes text to an ArrayBuffer. */\nexport function encodeText(text: string): Uint8Array {\n\tif (typeof TextEncoder !== 'undefined') {\n\t\treturn new TextEncoder().encode(text);\n\t}\n\treturn Buffer.from(text);\n}\n\n/** Decodes an ArrayBuffer to text. */\nexport function decodeText(buffer: Uint8Array): string {\n\tif (typeof TextDecoder !== 'undefined') {\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\treturn Buffer.from(buffer).toString('utf8');\n}\n\n/** Concatenates N ArrayBuffers. */\nexport function concat (buffers: (ArrayBuffer | Uint8Array)[]): Uint8Array {\n\tlet totalByteLength = 0;\n\tfor (const buffer of buffers) {\n\t\ttotalByteLength += buffer.byteLength;\n\t}\n\n\tconst result = new Uint8Array(totalByteLength);\n\tlet byteOffset = 0;\n\n\tfor (const buffer of buffers) {\n\t\tresult.set(new Uint8Array(buffer), byteOffset);\n\t\tbyteOffset += buffer.byteLength;\n\t}\n\n\treturn result;\n}", "import { BufferReader } from './buffer-reader';\nimport { KTX2_ID } from './constants';\nimport { KTX2Container, KTX2DataFormatDescriptorBasicFormat } from './container';\nimport { decodeText } from './util';\n\n/**\n * Parses a KTX 2.0 file, returning an unpacked {@link KTX2Container} instance with all associated\n * data. The container's mip levels and other binary data are pointers into the original file, not\n * copies, so the original file should not be overwritten after reading.\n *\n * @param data Bytes of KTX 2.0 file, as Uint8Array or Buffer.\n */\nexport function read(data: Uint8Array): KTX2Container {\n\n\t///////////////////////////////////////////////////\n\t// KTX 2.0 Identifier.\n\t///////////////////////////////////////////////////\n\n\tconst id = new Uint8Array(data.buffer, data.byteOffset, KTX2_ID.length);\n\tif (id[0] !== KTX2_ID[0] || // '´'\n\t\tid[1] !== KTX2_ID[1] || // 'K'\n\t\tid[2] !== KTX2_ID[2] || // 'T'\n\t\tid[3] !== KTX2_ID[3] || // 'X'\n\t\tid[4] !== KTX2_ID[4] || // ' '\n\t\tid[5] !== KTX2_ID[5] || // '2'\n\t\tid[6] !== KTX2_ID[6] || // '0'\n\t\tid[7] !== KTX2_ID[7] || // 'ª'\n\t\tid[8] !== KTX2_ID[8] || // '\\r'\n\t\tid[9] !== KTX2_ID[9] || // '\\n'\n\t\tid[10] !== KTX2_ID[10] || // '\\x1A'\n\t\tid[11] !== KTX2_ID[11] // '\\n'\n\t) {\n\t\tthrow new Error('Missing KTX 2.0 identifier.');\n\t}\n\n\tconst container = new KTX2Container();\n\n\t///////////////////////////////////////////////////\n\t// Header.\n\t///////////////////////////////////////////////////\n\n\tconst headerByteLength = 17 * Uint32Array.BYTES_PER_ELEMENT;\n\tconst headerReader = new BufferReader(data, KTX2_ID.length, headerByteLength, true);\n\n\tcontainer.vkFormat = headerReader._nextUint32();\n\tcontainer.typeSize = headerReader._nextUint32();\n\tcontainer.pixelWidth = headerReader._nextUint32();\n\tcontainer.pixelHeight = headerReader._nextUint32();\n\tcontainer.pixelDepth = headerReader._nextUint32();\n\tcontainer.layerCount = headerReader._nextUint32();\n\tcontainer.faceCount = headerReader._nextUint32();\n\n\tconst levelCount = headerReader._nextUint32();\n\n\tcontainer.supercompressionScheme = headerReader._nextUint32();\n\n\tconst dfdByteOffset = headerReader._nextUint32();\n\tconst dfdByteLength = headerReader._nextUint32();\n\tconst kvdByteOffset = headerReader._nextUint32();\n\tconst kvdByteLength = headerReader._nextUint32();\n\tconst sgdByteOffset = headerReader._nextUint64();\n\tconst sgdByteLength = headerReader._nextUint64();\n\n\t///////////////////////////////////////////////////\n\t// Level Index.\n\t///////////////////////////////////////////////////\n\n\tconst levelByteLength = levelCount * 3 * 8;\n\tconst levelReader = new BufferReader(data, KTX2_ID.length + headerByteLength, levelByteLength, true);\n\n\tfor (let i = 0; i < levelCount; i ++) {\n\t\tcontainer.levels.push({\n\t\t\tlevelData: new Uint8Array(data.buffer, data.byteOffset + levelReader._nextUint64(), levelReader._nextUint64()),\n\t\t\tuncompressedByteLength: levelReader._nextUint64(),\n\t\t});\n\t}\n\n\n\t///////////////////////////////////////////////////\n\t// Data Format Descriptor (DFD).\n\t///////////////////////////////////////////////////\n\n\tconst dfdReader = new BufferReader(data, dfdByteOffset, dfdByteLength, true);\n\n\tconst dfd: KTX2DataFormatDescriptorBasicFormat = {\n\t\tvendorId: dfdReader._skip(4 /* totalSize */)._nextUint16(),\n\t\tdescriptorType: dfdReader._nextUint16(),\n\t\tversionNumber: dfdReader._nextUint16(),\n\t\tdescriptorBlockSize: dfdReader._nextUint16(),\n\t\tcolorModel: dfdReader._nextUint8(),\n\t\tcolorPrimaries: dfdReader._nextUint8(),\n\t\ttransferFunction: dfdReader._nextUint8(),\n\t\tflags: dfdReader._nextUint8(),\n\t\ttexelBlockDimension: {\n\t\t\tx: dfdReader._nextUint8() + 1,\n\t\t\ty: dfdReader._nextUint8() + 1,\n\t\t\tz: dfdReader._nextUint8() + 1,\n\t\t\tw: dfdReader._nextUint8() + 1,\n\t\t},\n\t\tbytesPlane: [\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t],\n\t\tsamples: [],\n\t};\n\n\tconst sampleStart = 6;\n\tconst sampleWords = 4;\n\tconst numSamples = (dfd.descriptorBlockSize / 4 - sampleStart) / sampleWords;\n\n\tfor (let i = 0; i < numSamples; i ++) {\n\t\tdfd.samples[ i ] = {\n\t\t\tbitOffset: dfdReader._nextUint16(),\n\t\t\tbitLength: dfdReader._nextUint8(),\n\t\t\tchannelID: dfdReader._nextUint8(),\n\t\t\tsamplePosition: [\n\t\t\t\tdfdReader._nextUint8(),\n\t\t\t\tdfdReader._nextUint8(),\n\t\t\t\tdfdReader._nextUint8(),\n\t\t\t\tdfdReader._nextUint8(),\n\t\t\t],\n\t\t\tsampleLower: dfdReader._nextUint32(),\n\t\t\tsampleUpper: dfdReader._nextUint32(),\n\t\t};\n\t}\n\n\tcontainer.dataFormatDescriptor.length = 0;\n\tcontainer.dataFormatDescriptor.push(dfd);\n\n\n\t///////////////////////////////////////////////////\n\t// Key/Value Data (KVD).\n\t///////////////////////////////////////////////////\n\n\tconst kvdReader = new BufferReader(data, kvdByteOffset, kvdByteLength, true);\n\n\twhile (kvdReader._offset < kvdByteLength) {\n\t\tconst keyValueByteLength = kvdReader._nextUint32();\n\t\tconst keyData = kvdReader._scan(keyValueByteLength);\n\t\tconst key = decodeText(keyData);\n\t\tconst valueData = kvdReader._scan(keyValueByteLength - keyData.byteLength);\n\t\tcontainer.keyValue[key] = key.match(/^ktx/i) ? decodeText(valueData) : valueData;\n\n\t\t// 4-byte alignment.\n\t\tif (keyValueByteLength % 4) kvdReader._skip(4 - (keyValueByteLength % 4));\n\t}\n\n\n\t///////////////////////////////////////////////////\n\t// Supercompression Global Data (SGD).\n\t///////////////////////////////////////////////////\n\n\tif (sgdByteLength <= 0) return container;\n\n\tconst sgdReader = new BufferReader(data, sgdByteOffset, sgdByteLength, true);\n\n\tconst endpointCount = sgdReader._nextUint16();\n\tconst selectorCount = sgdReader._nextUint16();\n\tconst endpointsByteLength = sgdReader._nextUint32();\n\tconst selectorsByteLength = sgdReader._nextUint32();\n\tconst tablesByteLength = sgdReader._nextUint32();\n\tconst extendedByteLength = sgdReader._nextUint32();\n\n\tconst imageDescs = [];\n\tfor (let i = 0; i < levelCount; i ++) {\n\t\timageDescs.push({\n\t\t\timageFlags: sgdReader._nextUint32(),\n\t\t\trgbSliceByteOffset: sgdReader._nextUint32(),\n\t\t\trgbSliceByteLength: sgdReader._nextUint32(),\n\t\t\talphaSliceByteOffset: sgdReader._nextUint32(),\n\t\t\talphaSliceByteLength: sgdReader._nextUint32(),\n\t\t});\n\t}\n\n\tconst endpointsByteOffset = sgdByteOffset + sgdReader._offset;\n\tconst selectorsByteOffset = endpointsByteOffset + endpointsByteLength;\n\tconst tablesByteOffset = selectorsByteOffset + selectorsByteLength;\n\tconst extendedByteOffset = tablesByteOffset + tablesByteLength;\n\n\tconst endpointsData = new Uint8Array(data.buffer, data.byteOffset + endpointsByteOffset, endpointsByteLength);\n\tconst selectorsData = new Uint8Array(data.buffer, data.byteOffset + selectorsByteOffset, selectorsByteLength);\n\tconst tablesData = new Uint8Array(data.buffer, data.byteOffset + tablesByteOffset, tablesByteLength);\n\tconst extendedData = new Uint8Array(data.buffer, data.byteOffset + extendedByteOffset, extendedByteLength);\n\n\tcontainer.globalData = {\n\t\tendpointCount,\n\t\tselectorCount,\n\t\timageDescs,\n\t\tendpointsData,\n\t\tselectorsData,\n\t\ttablesData,\n\t\textendedData,\n\t};\n\n\treturn container;\n}\n", "import { HEADER_BYTE_LENGTH, KTX2DataFormatType, KTX2_ID, KTX_WRITER, NUL } from './constants';\nimport { KTX2Container } from './container';\nimport { concat, encodeText } from './util';\n\ninterface WriteOptions {keepWriter?: boolean};\nconst DEFAULT_OPTIONS: WriteOptions = {keepWriter: false};\n\n/**\n * Serializes a {@link KTX2Container} instance to a KTX 2.0 file. Mip levels and other binary data\n * are copied into the resulting Uint8Array, so the original container can safely be edited or\n * destroyed after it is serialized.\n *\n * Options:\n * - keepWriter: If true, 'KTXWriter' key/value field is written as provided by the container.\n * \t\tOtherwise, a string for the current ktx-parse version is generated. Default: false.\n *\n * @param container\n * @param options\n */\nexport function write(container: KTX2Container, options: WriteOptions = {}): Uint8Array {\n\toptions = {...DEFAULT_OPTIONS, ...options};\n\n\t///////////////////////////////////////////////////\n\t// Supercompression Global Data (SGD).\n\t///////////////////////////////////////////////////\n\n\tlet sgdBuffer = new ArrayBuffer(0);\n\tif (container.globalData) {\n\t\tconst sgdHeaderBuffer = new ArrayBuffer(20 + container.globalData.imageDescs.length * 5 * 4);\n\t\tconst sgdHeaderView = new DataView(sgdHeaderBuffer);\n\t\tsgdHeaderView.setUint16(0, container.globalData.endpointCount, true);\n\t\tsgdHeaderView.setUint16(2, container.globalData.selectorCount, true);\n\t\tsgdHeaderView.setUint32(4, container.globalData.endpointsData.byteLength, true);\n\t\tsgdHeaderView.setUint32(8, container.globalData.selectorsData.byteLength, true);\n\t\tsgdHeaderView.setUint32(12, container.globalData.tablesData.byteLength, true);\n\t\tsgdHeaderView.setUint32(16, container.globalData.extendedData.byteLength, true);\n\n\t\tfor (let i = 0; i < container.globalData.imageDescs.length; i++) {\n\t\t\tconst imageDesc = container.globalData.imageDescs[i];\n\t\t\tsgdHeaderView.setUint32(20 + i * 5 * 4 + 0, imageDesc.imageFlags, true);\n\t\t\tsgdHeaderView.setUint32(20 + i * 5 * 4 + 4, imageDesc.rgbSliceByteOffset, true);\n\t\t\tsgdHeaderView.setUint32(20 + i * 5 * 4 + 8, imageDesc.rgbSliceByteLength, true);\n\t\t\tsgdHeaderView.setUint32(20 + i * 5 * 4 + 12, imageDesc.alphaSliceByteOffset, true);\n\t\t\tsgdHeaderView.setUint32(20 + i * 5 * 4 + 16, imageDesc.alphaSliceByteLength, true);\n\t\t}\n\n\t\tsgdBuffer = concat([\n\t\t\tsgdHeaderBuffer,\n\t\t\tcontainer.globalData.endpointsData,\n\t\t\tcontainer.globalData.selectorsData,\n\t\t\tcontainer.globalData.tablesData,\n\t\t\tcontainer.globalData.extendedData,\n\t\t]);\n\t}\n\n\n\t///////////////////////////////////////////////////\n\t// Key/Value Data (KVD).\n\t///////////////////////////////////////////////////\n\n\tconst keyValueData: Uint8Array[] = [];\n\tlet keyValue = container.keyValue;\n\n\tif (!options.keepWriter) {\n\t\tkeyValue = {...container.keyValue, 'KTXwriter': KTX_WRITER};\n\t}\n\n\tfor (const key in keyValue) {\n\t\tconst value = keyValue[key];\n\t\tconst keyData = encodeText(key);\n\t\tconst valueData = typeof value === 'string' ? encodeText(value) : value;\n\t\tconst kvByteLength = keyData.byteLength + 1 + valueData.byteLength + 1;\n\t\tconst kvPadding = kvByteLength % 4 ? (4 - (kvByteLength % 4)) : 0; // align(4)\n\t\tkeyValueData.push(concat([\n\t\t\tnew Uint32Array([kvByteLength]),\n\t\t\tkeyData,\n\t\t\tNUL,\n\t\t\tvalueData,\n\t\t\tNUL,\n\t\t\tnew Uint8Array(kvPadding).fill(0x00), // align(4)\n\t\t]));\n\t}\n\n\tconst kvdBuffer = concat(keyValueData);\n\n\n\t///////////////////////////////////////////////////\n\t// Data Format Descriptor (DFD).\n\t///////////////////////////////////////////////////\n\n\tconst dfdBuffer = new ArrayBuffer(44);\n\tconst dfdView = new DataView(dfdBuffer);\n\n\tif (container.dataFormatDescriptor.length !== 1\n\t\t\t|| container.dataFormatDescriptor[0].descriptorType !== KTX2DataFormatType.BASICFORMAT) {\n\t\tthrow new Error('Only BASICFORMAT Data Format Descriptor output supported.');\n\t}\n\n\tconst dfd = container.dataFormatDescriptor[0];\n\n\tdfdView.setUint32(0, 44, true);\n\tdfdView.setUint16(4, dfd.vendorId, true);\n\tdfdView.setUint16(6, dfd.descriptorType, true);\n\tdfdView.setUint16(8, dfd.versionNumber, true);\n\tdfdView.setUint16(10, dfd.descriptorBlockSize, true);\n\n\tdfdView.setUint8(12, dfd.colorModel);\n\tdfdView.setUint8(13, dfd.colorPrimaries);\n\tdfdView.setUint8(14, dfd.transferFunction);\n\tdfdView.setUint8(15, dfd.flags);\n\n\tdfdView.setUint8(16, dfd.texelBlockDimension.x - 1);\n\tdfdView.setUint8(17, dfd.texelBlockDimension.y - 1);\n\tdfdView.setUint8(18, dfd.texelBlockDimension.z - 1);\n\tdfdView.setUint8(19, dfd.texelBlockDimension.w - 1);\n\n\tfor (let i = 0; i < 8; i++) dfdView.setUint8(20 + i, dfd.bytesPlane[i]);\n\n\tfor (let i = 0; i < dfd.samples.length; i++) {\n\t\tconst sample = dfd.samples[i];\n\t\tconst sampleByteOffset = 28 + i * 16;\n\n\t\tdfdView.setUint16(sampleByteOffset + 0, sample.bitOffset, true);\n\t\tdfdView.setUint8(sampleByteOffset + 2, sample.bitLength);\n\t\tdfdView.setUint8(sampleByteOffset + 3, sample.channelID);\n\n\t\tdfdView.setUint8(sampleByteOffset + 4, sample.samplePosition[0]);\n\t\tdfdView.setUint8(sampleByteOffset + 5, sample.samplePosition[1]);\n\t\tdfdView.setUint8(sampleByteOffset + 6, sample.samplePosition[2]);\n\t\tdfdView.setUint8(sampleByteOffset + 7, sample.samplePosition[3]);\n\n\t\tdfdView.setUint32(sampleByteOffset + 8, sample.sampleLower, true);\n\t\tdfdView.setUint32(sampleByteOffset + 12, sample.sampleUpper, true);\n\t}\n\n\n\t///////////////////////////////////////////////////\n\t// Data alignment.\n\t///////////////////////////////////////////////////\n\n\tconst dfdByteOffset = KTX2_ID.length + HEADER_BYTE_LENGTH + container.levels.length * 3 * 8;\n\tconst kvdByteOffset = dfdByteOffset + dfdBuffer.byteLength;\n\tlet sgdByteOffset = kvdByteOffset + kvdBuffer.byteLength;\n\tif (sgdByteOffset % 8) sgdByteOffset += 8 - (sgdByteOffset % 8); // align(8)\n\n\n\t///////////////////////////////////////////////////\n\t// Level Index.\n\t///////////////////////////////////////////////////\n\n\tconst levelData: Uint8Array[] = [];\n\tconst levelIndex = new DataView(new ArrayBuffer(container.levels.length * 3 * 8));\n\n\tlet levelDataByteOffset = sgdByteOffset + sgdBuffer.byteLength;\n\tfor (let i = 0; i < container.levels.length; i++) {\n\t\tconst level = container.levels[i];\n\t\tlevelData.push(level.levelData);\n\t\tlevelIndex.setBigUint64(i * 24 + 0, BigInt(levelDataByteOffset), true);\n\t\tlevelIndex.setBigUint64(i * 24 + 8, BigInt(level.levelData.byteLength), true);\n\t\tlevelIndex.setBigUint64(i * 24 + 16, BigInt(level.uncompressedByteLength), true);\n\t\tlevelDataByteOffset += level.levelData.byteLength;\n\t}\n\n\n\t///////////////////////////////////////////////////\n\t// Header.\n\t///////////////////////////////////////////////////\n\n\tconst headerBuffer = new ArrayBuffer(HEADER_BYTE_LENGTH);\n\tconst headerView = new DataView(headerBuffer);\n\theaderView.setUint32(0, container.vkFormat, true);\n\theaderView.setUint32(4, container.typeSize, true);\n\theaderView.setUint32(8, container.pixelWidth, true);\n\theaderView.setUint32(12, container.pixelHeight, true);\n\theaderView.setUint32(16, container.pixelDepth, true);\n\theaderView.setUint32(20, container.layerCount, true);\n\theaderView.setUint32(24, container.faceCount, true);\n\theaderView.setUint32(28, container.levels.length, true);\n\theaderView.setUint32(32, container.supercompressionScheme, true);\n\n\theaderView.setUint32(36, dfdByteOffset, true);\n\theaderView.setUint32(40, dfdBuffer.byteLength, true);\n\theaderView.setUint32(44, kvdByteOffset, true);\n\theaderView.setUint32(48, kvdBuffer.byteLength, true);\n\theaderView.setBigUint64(52, BigInt(sgdByteOffset), true);\n\theaderView.setBigUint64(60, BigInt(sgdBuffer.byteLength), true);\n\n\n\t///////////////////////////////////////////////////\n\t// Compose.\n\t///////////////////////////////////////////////////\n\n\treturn new Uint8Array(concat([\n\t\tnew Uint8Array(KTX2_ID).buffer,\n\t\theaderBuffer,\n\t\tlevelIndex.buffer,\n\t\tdfdBuffer,\n\t\tkvdBuffer,\n\t\tnew ArrayBuffer(sgdByteOffset - (kvdByteOffset + kvdBuffer.byteLength)), // align(8)\n\t\tsgdBuffer,\n\t\t...levelData,\n\t]));\n}\n\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * Extract mipmap images from compressed texture buffer\n * @param data - binary data of compressed texture or Array of level objects\n * @param options.mipMapLevels - number of mipmap level inside image\n * @param options.width - width of 0 - level\n * @param options.height - height of 0 - level\n * @param options.sizeFunction - format-related function to calculate level size in bytes\n * @param options.internalFormat - WebGL compatible format code\n * @returns Array of the texture levels\n */\nexport function extractMipmapImages(data, options) {\n    const images = new Array(options.mipMapLevels);\n    let levelWidth = options.width;\n    let levelHeight = options.height;\n    let offset = 0;\n    for (let i = 0; i < options.mipMapLevels; ++i) {\n        // @ts-expect-error\n        const levelSize = getLevelSize(options, levelWidth, levelHeight, data, i);\n        // @ts-expect-error\n        const levelData = getLevelData(data, i, offset, levelSize);\n        images[i] = {\n            compressed: true,\n            format: options.internalFormat,\n            data: levelData,\n            width: levelWidth,\n            height: levelHeight,\n            levelSize\n        };\n        levelWidth = Math.max(1, levelWidth >> 1);\n        levelHeight = Math.max(1, levelHeight >> 1);\n        offset += levelSize;\n    }\n    return images;\n}\nfunction getLevelData(data, index, offset, levelSize) {\n    if (!Array.isArray(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset + offset, levelSize);\n    }\n    return data[index].levelData;\n}\nfunction getLevelSize(options, levelWidth, levelHeight, data, index) {\n    if (!Array.isArray(data)) {\n        return options.sizeFunction(levelWidth, levelHeight);\n    }\n    return options.sizeFunction(data[index]);\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { GL_EXTENSIONS_CONSTANTS } from \"../gl-extensions.js\";\nconst VULKAN_TO_WEBGL_FORMAT_MAP = {\n    131: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_S3TC_DXT1_EXT,\n    132: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB_S3TC_DXT1_EXT,\n    133: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_S3TC_DXT1_EXT,\n    134: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT,\n    135: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_S3TC_DXT3_EXT,\n    136: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT,\n    137: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_S3TC_DXT5_EXT,\n    138: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT,\n    139: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RED_RGTC1_EXT,\n    140: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SIGNED_RED_RGTC1_EXT,\n    141: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RED_GREEN_RGTC2_EXT,\n    142: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT,\n    147: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB8_ETC2,\n    148: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ETC2,\n    149: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n    150: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n    151: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA8_ETC2_EAC,\n    152: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC,\n    153: GL_EXTENSIONS_CONSTANTS.COMPRESSED_R11_EAC,\n    154: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SIGNED_R11_EAC,\n    155: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RG11_EAC,\n    156: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SIGNED_RG11_EAC,\n    // @ts-ignore\n    157: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_4x4_KHR,\n    // @ts-ignore\n    158: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR,\n    // @ts-ignore\n    159: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_5x4_KHR,\n    // @ts-ignore\n    160: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR,\n    // @ts-ignore\n    161: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_5x5_KHR,\n    // @ts-ignore\n    162: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR,\n    // @ts-ignore\n    163: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_6x5_KHR,\n    // @ts-ignore\n    164: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR,\n    // @ts-ignore\n    165: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_6x6_KHR,\n    // @ts-ignore\n    166: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR,\n    // @ts-ignore\n    167: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8x5_KHR,\n    // @ts-ignore\n    168: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR,\n    // @ts-ignore\n    169: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8x6_KHR,\n    // @ts-ignore\n    170: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR,\n    // @ts-ignore\n    171: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8x8_KHR,\n    // @ts-ignore\n    172: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR,\n    // @ts-ignore\n    173: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10x5_KHR,\n    // @ts-ignore\n    174: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR,\n    // @ts-ignore\n    175: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10x6_KHR,\n    // @ts-ignore\n    176: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR,\n    // @ts-ignore\n    177: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10x8_KHR,\n    // @ts-ignore\n    178: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR,\n    // @ts-ignore\n    179: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10x10_KHR,\n    // @ts-ignore\n    180: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR,\n    // @ts-ignore\n    181: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_12x10_KHR,\n    // @ts-ignore\n    182: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR,\n    // @ts-ignore\n    183: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_12x12_KHR,\n    // @ts-ignore\n    184: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR,\n    1000054000: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG,\n    1000054001: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\n    // @ts-ignore\n    1000066000: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_4x4_KHR,\n    // @ts-ignore\n    1000066001: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_5x4_KHR,\n    // @ts-ignore\n    1000066002: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_5x5_KHR,\n    // @ts-ignore\n    1000066003: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_6x5_KHR,\n    // @ts-ignore\n    1000066004: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_6x6_KHR,\n    // @ts-ignore\n    1000066005: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8x5_KHR,\n    // @ts-ignore\n    1000066006: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8x6_KHR,\n    // @ts-ignore\n    1000066007: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8x8_KHR,\n    // @ts-ignore\n    1000066008: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10x5_KHR,\n    // @ts-ignore\n    1000066009: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10x6_KHR,\n    // @ts-ignore\n    1000066010: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10x8_KHR,\n    // @ts-ignore\n    1000066011: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10x10_KHR,\n    // @ts-ignore\n    1000066012: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_12x10_KHR,\n    // @ts-ignore\n    1000066013: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_12x12_KHR\n};\n/**\n * Returns WebGl format based on Vulkan format\n * Vulkan to WebGl format mapping provided here http://github.khronos.org/KTX-Specification/#formatMapping\n * Vulkan name to format number mapping provided here: https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VkFormat.html\n * @param vkFormat\n * @returns WebGL / OpenGL constant\n */\nexport function mapVkFormatToWebGL(vkFormat) {\n    return VULKAN_TO_WEBGL_FORMAT_MAP[vkFormat];\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { read } from 'ktx-parse';\nimport { extractMipmapImages } from \"../utils/extract-mipmap-images.js\";\nimport { mapVkFormatToWebGL } from \"../utils/ktx-format-helper.js\";\nconst KTX2_ID = [\n    // '´', 'K', 'T', 'X', '2', '0', 'ª', '\\r', '\\n', '\\x1A', '\\n'\n    0xab, 0x4b, 0x54, 0x58, 0x20, 0x32, 0x30, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a\n];\n// eslint-disable-next-line complexity\nexport function isKTX(data) {\n    // const id = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    const id = new Uint8Array(data);\n    const notKTX = id.byteLength < KTX2_ID.length ||\n        id[0] !== KTX2_ID[0] || // '´'\n        id[1] !== KTX2_ID[1] || // 'K'\n        id[2] !== KTX2_ID[2] || // 'T'\n        id[3] !== KTX2_ID[3] || // 'X'\n        id[4] !== KTX2_ID[4] || // ' '\n        id[5] !== KTX2_ID[5] || // '2'\n        id[6] !== KTX2_ID[6] || // '0'\n        id[7] !== KTX2_ID[7] || // 'ª'\n        id[8] !== KTX2_ID[8] || // '\\r'\n        id[9] !== KTX2_ID[9] || // '\\n'\n        id[10] !== KTX2_ID[10] || // '\\x1A'\n        id[11] !== KTX2_ID[11]; // '\\n'\n    return !notKTX;\n}\nexport function parseKTX(arrayBuffer) {\n    const uint8Array = new Uint8Array(arrayBuffer);\n    const ktx = read(uint8Array);\n    const mipMapLevels = Math.max(1, ktx.levels.length);\n    const width = ktx.pixelWidth;\n    const height = ktx.pixelHeight;\n    const internalFormat = mapVkFormatToWebGL(ktx.vkFormat);\n    return extractMipmapImages(ktx.levels, {\n        mipMapLevels,\n        width,\n        height,\n        sizeFunction: (level) => level.uncompressedByteLength,\n        internalFormat\n    });\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { loadBasisEncoderModule, loadBasisTranscoderModule } from \"./basis-module-loader.js\";\nimport { GL_EXTENSIONS_CONSTANTS } from \"../gl-extensions.js\";\nimport { getSupportedGPUTextureFormats } from \"../utils/texture-formats.js\";\nimport { isKTX } from \"./parse-ktx.js\";\nconst OutputFormat = {\n    etc1: {\n        basisFormat: 0,\n        compressed: true,\n        format: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_ETC1_WEBGL\n    },\n    etc2: { basisFormat: 1, compressed: true },\n    bc1: {\n        basisFormat: 2,\n        compressed: true,\n        format: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_S3TC_DXT1_EXT\n    },\n    bc3: {\n        basisFormat: 3,\n        compressed: true,\n        format: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_S3TC_DXT5_EXT\n    },\n    bc4: { basisFormat: 4, compressed: true },\n    bc5: { basisFormat: 5, compressed: true },\n    'bc7-m6-opaque-only': { basisFormat: 6, compressed: true },\n    'bc7-m5': { basisFormat: 7, compressed: true },\n    'pvrtc1-4-rgb': {\n        basisFormat: 8,\n        compressed: true,\n        format: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_PVRTC_4BPPV1_IMG\n    },\n    'pvrtc1-4-rgba': {\n        basisFormat: 9,\n        compressed: true,\n        format: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG\n    },\n    'astc-4x4': {\n        basisFormat: 10,\n        compressed: true,\n        format: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_4X4_KHR\n    },\n    'atc-rgb': { basisFormat: 11, compressed: true },\n    'atc-rgba-interpolated-alpha': { basisFormat: 12, compressed: true },\n    rgba32: { basisFormat: 13, compressed: false },\n    rgb565: { basisFormat: 14, compressed: false },\n    bgr565: { basisFormat: 15, compressed: false },\n    rgba4444: { basisFormat: 16, compressed: false }\n};\n/**\n * parse data with a Binomial Basis_Universal module\n * @param data\n * @param options\n * @returns compressed texture data\n */\nexport default async function parseBasis(data, options) {\n    if (options.basis.containerFormat === 'auto') {\n        if (isKTX(data)) {\n            const fileConstructors = await loadBasisEncoderModule(options);\n            return parseKTX2File(fileConstructors.KTX2File, data, options);\n        }\n        const { BasisFile } = await loadBasisTranscoderModule(options);\n        return parseBasisFile(BasisFile, data, options);\n    }\n    switch (options.basis.module) {\n        case 'encoder':\n            const fileConstructors = await loadBasisEncoderModule(options);\n            switch (options.basis.containerFormat) {\n                case 'ktx2':\n                    return parseKTX2File(fileConstructors.KTX2File, data, options);\n                case 'basis':\n                default:\n                    return parseBasisFile(fileConstructors.BasisFile, data, options);\n            }\n        case 'transcoder':\n        default:\n            const { BasisFile } = await loadBasisTranscoderModule(options);\n            return parseBasisFile(BasisFile, data, options);\n    }\n}\n/**\n * Parse *.basis file data\n * @param BasisFile - initialized transcoder module\n * @param data\n * @param options\n * @returns compressed texture data\n */\nfunction parseBasisFile(BasisFile, data, options) {\n    const basisFile = new BasisFile(new Uint8Array(data));\n    try {\n        if (!basisFile.startTranscoding()) {\n            throw new Error('Failed to start basis transcoding');\n        }\n        const imageCount = basisFile.getNumImages();\n        const images = [];\n        for (let imageIndex = 0; imageIndex < imageCount; imageIndex++) {\n            const levelsCount = basisFile.getNumLevels(imageIndex);\n            const levels = [];\n            for (let levelIndex = 0; levelIndex < levelsCount; levelIndex++) {\n                levels.push(transcodeImage(basisFile, imageIndex, levelIndex, options));\n            }\n            images.push(levels);\n        }\n        return images;\n    }\n    finally {\n        basisFile.close();\n        basisFile.delete();\n    }\n}\n/**\n * Parse the particular level image of a basis file\n * @param basisFile\n * @param imageIndex\n * @param levelIndex\n * @param options\n * @returns compressed texture data\n */\nfunction transcodeImage(basisFile, imageIndex, levelIndex, options) {\n    const width = basisFile.getImageWidth(imageIndex, levelIndex);\n    const height = basisFile.getImageHeight(imageIndex, levelIndex);\n    // See https://github.com/BinomialLLC/basis_universal/pull/83\n    const hasAlpha = basisFile.getHasAlpha( /* imageIndex, levelIndex */);\n    // Check options for output format etc\n    const { compressed, format, basisFormat } = getBasisOptions(options, hasAlpha);\n    const decodedSize = basisFile.getImageTranscodedSizeInBytes(imageIndex, levelIndex, basisFormat);\n    const decodedData = new Uint8Array(decodedSize);\n    if (!basisFile.transcodeImage(decodedData, imageIndex, levelIndex, basisFormat, 0, 0)) {\n        throw new Error('failed to start Basis transcoding');\n    }\n    return {\n        // standard loaders.gl image category payload\n        width,\n        height,\n        data: decodedData,\n        compressed,\n        format,\n        // Additional fields\n        // Add levelSize field.\n        hasAlpha\n    };\n}\n/**\n * Parse *.ktx2 file data\n * @param KTX2File\n * @param data\n * @param options\n * @returns compressed texture data\n */\nfunction parseKTX2File(KTX2File, data, options) {\n    const ktx2File = new KTX2File(new Uint8Array(data));\n    try {\n        if (!ktx2File.startTranscoding()) {\n            throw new Error('failed to start KTX2 transcoding');\n        }\n        const levelsCount = ktx2File.getLevels();\n        const levels = [];\n        for (let levelIndex = 0; levelIndex < levelsCount; levelIndex++) {\n            levels.push(transcodeKTX2Image(ktx2File, levelIndex, options));\n            break; // texture app can only show one level for some reason\n        }\n        return [levels];\n    }\n    finally {\n        ktx2File.close();\n        ktx2File.delete();\n    }\n}\n/**\n * Parse the particular level image of a ktx2 file\n * @param ktx2File\n * @param levelIndex\n * @param options\n * @returns\n */\nfunction transcodeKTX2Image(ktx2File, levelIndex, options) {\n    const { alphaFlag, height, width } = ktx2File.getImageLevelInfo(levelIndex, 0, 0);\n    // Check options for output format etc\n    const { compressed, format, basisFormat } = getBasisOptions(options, alphaFlag);\n    const decodedSize = ktx2File.getImageTranscodedSizeInBytes(levelIndex, 0 /* layerIndex */, 0 /* faceIndex */, basisFormat);\n    const decodedData = new Uint8Array(decodedSize);\n    if (!ktx2File.transcodeImage(decodedData, levelIndex, 0 /* layerIndex */, 0 /* faceIndex */, basisFormat, 0, -1 /* channel0 */, -1 /* channel1 */)) {\n        throw new Error('Failed to transcode KTX2 image');\n    }\n    return {\n        // standard loaders.gl image category payload\n        width,\n        height,\n        data: decodedData,\n        compressed,\n        // Additional fields\n        levelSize: decodedSize,\n        hasAlpha: alphaFlag,\n        format\n    };\n}\n/**\n * Get BasisFormat by loader format option\n * @param options\n * @param hasAlpha\n * @returns BasisFormat data\n */\nfunction getBasisOptions(options, hasAlpha) {\n    let format = options && options.basis && options.basis.format;\n    if (format === 'auto') {\n        format = selectSupportedBasisFormat();\n    }\n    if (typeof format === 'object') {\n        format = hasAlpha ? format.alpha : format.noAlpha;\n    }\n    format = format.toLowerCase();\n    return OutputFormat[format];\n}\n/**\n * Select transcode format from the list of supported formats\n * @returns key for OutputFormat map\n */\nexport function selectSupportedBasisFormat() {\n    const supportedFormats = getSupportedGPUTextureFormats();\n    if (supportedFormats.has('astc')) {\n        return 'astc-4x4';\n    }\n    else if (supportedFormats.has('dxt')) {\n        return {\n            alpha: 'bc3',\n            noAlpha: 'bc1'\n        };\n    }\n    else if (supportedFormats.has('pvrtc')) {\n        return {\n            alpha: 'pvrtc1-4-rgba',\n            noAlpha: 'pvrtc1-4-rgb'\n        };\n    }\n    else if (supportedFormats.has('etc1')) {\n        return 'etc1';\n    }\n    else if (supportedFormats.has('etc2')) {\n        return 'etc2';\n    }\n    return 'rgb565';\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { VERSION } from \"./lib/utils/version.js\";\nimport parseBasis from \"./lib/parsers/parse-basis.js\";\n/**\n * Worker loader for Basis super compressed textures\n */\nexport const BasisWorkerLoader = {\n    dataType: null,\n    batchType: null,\n    name: 'Basis',\n    id: 'basis',\n    module: 'textures',\n    version: VERSION,\n    worker: true,\n    extensions: ['basis', 'ktx2'],\n    mimeTypes: ['application/octet-stream', 'image/ktx2'],\n    tests: ['sB'],\n    binary: true,\n    options: {\n        basis: {\n            format: 'auto',\n            libraryPath: 'libs/',\n            containerFormat: 'auto',\n            module: 'transcoder'\n        }\n    }\n};\n/**\n * Loader for Basis super compressed textures\n */\nexport const BasisLoader = {\n    ...BasisWorkerLoader,\n    parse: parseBasis\n};\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { assert } from '@loaders.gl/loader-utils';\nimport { GL_EXTENSIONS_CONSTANTS } from \"../gl-extensions.js\";\nimport { extractMipmapImages } from \"../utils/extract-mipmap-images.js\";\nconst DDS_CONSTANTS = {\n    MAGIC_NUMBER: 0x20534444,\n    HEADER_LENGTH: 31,\n    MAGIC_NUMBER_INDEX: 0,\n    HEADER_SIZE_INDEX: 1,\n    HEADER_FLAGS_INDEX: 2,\n    HEADER_HEIGHT_INDEX: 3,\n    HEADER_WIDTH_INDEX: 4,\n    MIPMAPCOUNT_INDEX: 7,\n    HEADER_PF_FLAGS_INDEX: 20,\n    HEADER_PF_FOURCC_INDEX: 21,\n    DDSD_MIPMAPCOUNT: 0x20000,\n    DDPF_FOURCC: 0x4\n};\nconst DDS_PIXEL_FORMATS = {\n    DXT1: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_S3TC_DXT1_EXT,\n    DXT3: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_S3TC_DXT3_EXT,\n    DXT5: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_S3TC_DXT5_EXT,\n    'ATC ': GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_ATC_WEBGL,\n    ATCA: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL,\n    ATCI: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL\n};\nconst getATCLevelSize = getDxt1LevelSize;\nconst getATCALevelSize = getDxtXLevelSize;\nconst getATCILevelSize = getDxtXLevelSize;\nconst DDS_SIZE_FUNCTIONS = {\n    DXT1: getDxt1LevelSize,\n    DXT3: getDxtXLevelSize,\n    DXT5: getDxtXLevelSize,\n    'ATC ': getATCLevelSize,\n    ATCA: getATCALevelSize,\n    ATCI: getATCILevelSize\n};\n/**\n * Check if data is in \"DDS\" format by its magic number\n * @param data - binary data of compressed texture\n * @returns true - data in \"DDS\" format, else - false\n */\nexport function isDDS(data) {\n    const header = new Uint32Array(data, 0, DDS_CONSTANTS.HEADER_LENGTH);\n    const magic = header[DDS_CONSTANTS.MAGIC_NUMBER_INDEX];\n    return magic === DDS_CONSTANTS.MAGIC_NUMBER;\n}\n/**\n * Parse texture data as \"DDS\" format\n * @param data - binary data of compressed texture\n * @returns Array of the texture levels\n */\nexport function parseDDS(data) {\n    const header = new Int32Array(data, 0, DDS_CONSTANTS.HEADER_LENGTH);\n    const pixelFormatNumber = header[DDS_CONSTANTS.HEADER_PF_FOURCC_INDEX];\n    assert(Boolean(header[DDS_CONSTANTS.HEADER_PF_FLAGS_INDEX] & DDS_CONSTANTS.DDPF_FOURCC), 'DDS: Unsupported format, must contain a FourCC code');\n    const fourCC = int32ToFourCC(pixelFormatNumber);\n    const internalFormat = DDS_PIXEL_FORMATS[fourCC];\n    const sizeFunction = DDS_SIZE_FUNCTIONS[fourCC];\n    assert(internalFormat && sizeFunction, `DDS: Unknown pixel format ${pixelFormatNumber}`);\n    let mipMapLevels = 1;\n    if (header[DDS_CONSTANTS.HEADER_FLAGS_INDEX] & DDS_CONSTANTS.DDSD_MIPMAPCOUNT) {\n        mipMapLevels = Math.max(1, header[DDS_CONSTANTS.MIPMAPCOUNT_INDEX]);\n    }\n    const width = header[DDS_CONSTANTS.HEADER_WIDTH_INDEX];\n    const height = header[DDS_CONSTANTS.HEADER_HEIGHT_INDEX];\n    const dataOffset = header[DDS_CONSTANTS.HEADER_SIZE_INDEX] + 4;\n    const image = new Uint8Array(data, dataOffset);\n    return extractMipmapImages(image, {\n        mipMapLevels,\n        width,\n        height,\n        sizeFunction,\n        internalFormat\n    });\n}\n/**\n * DXT1 applicable function to calculate level size\n * @param width - level width\n * @param height - level height\n * @returns level size in bytes\n */\nexport function getDxt1LevelSize(width, height) {\n    return ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n}\n/**\n * DXT3 & DXT5 applicable function to calculate level size\n * @param width - level width\n * @param height - level height\n * @returns level size in bytes\n */\nexport function getDxtXLevelSize(width, height) {\n    return ((width + 3) >> 2) * ((height + 3) >> 2) * 16;\n}\n/**\n * Convert every byte of Int32 value to char\n * @param value - Int32 number\n * @returns string of 4 characters\n */\nfunction int32ToFourCC(value) {\n    return String.fromCharCode(value & 0xff, (value >> 8) & 0xff, (value >> 16) & 0xff, (value >> 24) & 0xff);\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { GL_EXTENSIONS_CONSTANTS } from \"../gl-extensions.js\";\nimport { extractMipmapImages } from \"../utils/extract-mipmap-images.js\";\nconst PVR_CONSTANTS = {\n    MAGIC_NUMBER: 0x03525650,\n    MAGIC_NUMBER_EXTRA: 0x50565203,\n    HEADER_LENGTH: 13,\n    HEADER_SIZE: 52,\n    MAGIC_NUMBER_INDEX: 0,\n    PIXEL_FORMAT_INDEX: 2,\n    COLOUR_SPACE_INDEX: 4,\n    HEIGHT_INDEX: 6,\n    WIDTH_INDEX: 7,\n    MIPMAPCOUNT_INDEX: 11,\n    METADATA_SIZE_INDEX: 12\n};\nconst PVR_PIXEL_FORMATS = {\n    0: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_PVRTC_2BPPV1_IMG],\n    1: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG],\n    2: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_PVRTC_4BPPV1_IMG],\n    3: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG],\n    6: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_ETC1_WEBGL],\n    7: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_S3TC_DXT1_EXT],\n    9: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_S3TC_DXT3_EXT],\n    11: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_S3TC_DXT5_EXT],\n    22: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB8_ETC2],\n    23: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA8_ETC2_EAC],\n    24: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2],\n    25: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_R11_EAC],\n    26: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RG11_EAC],\n    27: [\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_4X4_KHR,\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR\n    ],\n    28: [\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_5X4_KHR,\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR\n    ],\n    29: [\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_5X5_KHR,\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR\n    ],\n    30: [\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_6X5_KHR,\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR\n    ],\n    31: [\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_6X6_KHR,\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR\n    ],\n    32: [\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8X5_KHR,\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR\n    ],\n    33: [\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8X6_KHR,\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR\n    ],\n    34: [\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8X8_KHR,\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR\n    ],\n    35: [\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10X5_KHR,\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR\n    ],\n    36: [\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10X6_KHR,\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR\n    ],\n    37: [\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10X8_KHR,\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR\n    ],\n    38: [\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10X10_KHR,\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR\n    ],\n    39: [\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_12X10_KHR,\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR\n    ],\n    40: [\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_12X12_KHR,\n        GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR\n    ]\n};\nconst PVR_SIZE_FUNCTIONS = {\n    0: pvrtc2bppSize,\n    1: pvrtc2bppSize,\n    2: pvrtc4bppSize,\n    3: pvrtc4bppSize,\n    6: dxtEtcSmallSize,\n    7: dxtEtcSmallSize,\n    9: dxtEtcAstcBigSize,\n    11: dxtEtcAstcBigSize,\n    22: dxtEtcSmallSize,\n    23: dxtEtcAstcBigSize,\n    24: dxtEtcSmallSize,\n    25: dxtEtcSmallSize,\n    26: dxtEtcAstcBigSize,\n    27: dxtEtcAstcBigSize,\n    28: atc5x4Size,\n    29: atc5x5Size,\n    30: atc6x5Size,\n    31: atc6x6Size,\n    32: atc8x5Size,\n    33: atc8x6Size,\n    34: atc8x8Size,\n    35: atc10x5Size,\n    36: atc10x6Size,\n    37: atc10x8Size,\n    38: atc10x10Size,\n    39: atc12x10Size,\n    40: atc12x12Size\n};\n/**\n * Check if data is in \"PVR\" format by its magic number\n * @param data - binary data of compressed texture\n * @returns true - data in \"PVR\" format, else - false\n */\nexport function isPVR(data) {\n    const header = new Uint32Array(data, 0, PVR_CONSTANTS.HEADER_LENGTH);\n    const version = header[PVR_CONSTANTS.MAGIC_NUMBER_INDEX];\n    return version === PVR_CONSTANTS.MAGIC_NUMBER || version === PVR_CONSTANTS.MAGIC_NUMBER_EXTRA;\n}\n/**\n * Parse texture data as \"PVR\" format\n * @param data - binary data of compressed texture\n * @returns Array of the texture levels\n * @see http://cdn.imgtec.com/sdk-documentation/PVR+File+Format.Specification.pdf\n */\nexport function parsePVR(data) {\n    const header = new Uint32Array(data, 0, PVR_CONSTANTS.HEADER_LENGTH);\n    const pvrFormat = header[PVR_CONSTANTS.PIXEL_FORMAT_INDEX];\n    const colourSpace = header[PVR_CONSTANTS.COLOUR_SPACE_INDEX];\n    const pixelFormats = PVR_PIXEL_FORMATS[pvrFormat] || [];\n    const internalFormat = pixelFormats.length > 1 && colourSpace ? pixelFormats[1] : pixelFormats[0];\n    const sizeFunction = PVR_SIZE_FUNCTIONS[pvrFormat];\n    const mipMapLevels = header[PVR_CONSTANTS.MIPMAPCOUNT_INDEX];\n    const width = header[PVR_CONSTANTS.WIDTH_INDEX];\n    const height = header[PVR_CONSTANTS.HEIGHT_INDEX];\n    const dataOffset = PVR_CONSTANTS.HEADER_SIZE + header[PVR_CONSTANTS.METADATA_SIZE_INDEX];\n    const image = new Uint8Array(data, dataOffset);\n    return extractMipmapImages(image, {\n        mipMapLevels,\n        width,\n        height,\n        sizeFunction,\n        internalFormat\n    });\n}\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/\nfunction pvrtc2bppSize(width, height) {\n    width = Math.max(width, 16);\n    height = Math.max(height, 8);\n    return (width * height) / 4;\n}\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/\nfunction pvrtc4bppSize(width, height) {\n    width = Math.max(width, 8);\n    height = Math.max(height, 8);\n    return (width * height) / 2;\n}\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc/\n// Size for:\n// COMPRESSED_RGB_S3TC_DXT1_EXT\n// COMPRESSED_R11_EAC\n// COMPRESSED_SIGNED_R11_EAC\n// COMPRESSED_RGB8_ETC2\n// COMPRESSED_SRGB8_ETC2\n// COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2\n// COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2\nfunction dxtEtcSmallSize(width, height) {\n    return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 8;\n}\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc/\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\n// Size for:\n// COMPRESSED_RGBA_S3TC_DXT3_EXT\n// COMPRESSED_RGBA_S3TC_DXT5_EXT\n// COMPRESSED_RG11_EAC\n// COMPRESSED_SIGNED_RG11_EAC\n// COMPRESSED_RGBA8_ETC2_EAC\n// COMPRESSED_SRGB8_ALPHA8_ETC2_EAC\n// COMPRESSED_RGBA_ASTC_4x4_KHR\nfunction dxtEtcAstcBigSize(width, height) {\n    return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 16;\n}\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc5x4Size(width, height) {\n    return Math.floor((width + 4) / 5) * Math.floor((height + 3) / 4) * 16;\n}\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc5x5Size(width, height) {\n    return Math.floor((width + 4) / 5) * Math.floor((height + 4) / 5) * 16;\n}\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc6x5Size(width, height) {\n    return Math.floor((width + 5) / 6) * Math.floor((height + 4) / 5) * 16;\n}\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc6x6Size(width, height) {\n    return Math.floor((width + 5) / 6) * Math.floor((height + 5) / 6) * 16;\n}\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc8x5Size(width, height) {\n    return Math.floor((width + 7) / 8) * Math.floor((height + 4) / 5) * 16;\n}\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc8x6Size(width, height) {\n    return Math.floor((width + 7) / 8) * Math.floor((height + 5) / 6) * 16;\n}\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc8x8Size(width, height) {\n    return Math.floor((width + 7) / 8) * Math.floor((height + 7) / 8) * 16;\n}\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x5Size(width, height) {\n    return Math.floor((width + 9) / 10) * Math.floor((height + 4) / 5) * 16;\n}\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x6Size(width, height) {\n    return Math.floor((width + 9) / 10) * Math.floor((height + 5) / 6) * 16;\n}\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x8Size(width, height) {\n    return Math.floor((width + 9) / 10) * Math.floor((height + 7) / 8) * 16;\n}\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x10Size(width, height) {\n    return Math.floor((width + 9) / 10) * Math.floor((height + 9) / 10) * 16;\n}\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc12x10Size(width, height) {\n    return Math.floor((width + 11) / 12) * Math.floor((height + 9) / 10) * 16;\n}\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc12x12Size(width, height) {\n    return Math.floor((width + 11) / 12) * Math.floor((height + 11) / 12) * 16;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isKTX, parseKTX } from \"./parse-ktx.js\";\nimport { isDDS, parseDDS } from \"./parse-dds.js\";\nimport { isPVR, parsePVR } from \"./parse-pvr.js\";\n/**\n * Deduces format and parses compressed texture loaded in ArrayBuffer\n * @param data - binary data of compressed texture\n * @returns Array of the texture levels\n */\nexport function parseCompressedTexture(data) {\n    if (isKTX(data)) {\n        // TODO: remove @ts-ignore when `parseKTX` output is normalized to loaders.gl texture format\n        // @ts-ignore\n        return parseKTX(data);\n    }\n    if (isDDS(data)) {\n        return parseDDS(data);\n    }\n    if (isPVR(data)) {\n        return parsePVR(data);\n    }\n    throw new Error('Texture container format not recognized');\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { VERSION } from \"./lib/utils/version.js\";\nimport { parseCompressedTexture } from \"./lib/parsers/parse-compressed-texture.js\";\nimport parseBasis from \"./lib/parsers/parse-basis.js\";\n/**\n * Worker Loader for KTX, DDS, and PVR texture container formats\n */\nexport const CompressedTextureWorkerLoader = {\n    dataType: null,\n    batchType: null,\n    name: 'Texture Containers',\n    id: 'compressed-texture',\n    module: 'textures',\n    version: VERSION,\n    worker: true,\n    extensions: [\n        'ktx',\n        'ktx2',\n        'dds', // WEBGL_compressed_texture_s3tc, WEBGL_compressed_texture_atc\n        'pvr' // WEBGL_compressed_texture_pvrtc\n    ],\n    mimeTypes: [\n        'image/ktx2',\n        'image/ktx',\n        'image/vnd-ms.dds',\n        'image/x-dds',\n        'application/octet-stream'\n    ],\n    binary: true,\n    options: {\n        'compressed-texture': {\n            libraryPath: 'libs/',\n            useBasis: false\n        }\n    }\n};\n/**\n * Loader for KTX, DDS, and PVR texture container formats\n */\nexport const CompressedTextureLoader = {\n    ...CompressedTextureWorkerLoader,\n    parse: async (arrayBuffer, options) => {\n        if (options?.['compressed-texture']?.useBasis) {\n            // @ts-expect-error TODO not allowed to modify inputs\n            options.basis = {\n                format: {\n                    alpha: 'BC3',\n                    noAlpha: 'BC1'\n                },\n                // @ts-expect-error TODO not allowed to modify inputs\n                ...options.basis,\n                containerFormat: 'ktx2',\n                module: 'encoder'\n            };\n            const result = await parseBasis(arrayBuffer, options);\n            return result[0];\n        }\n        return parseCompressedTexture(arrayBuffer);\n    }\n};\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst a = new Uint32Array([0x12345678]);\nconst b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\nconst isLittleEndian = !(b[0] === 0x12);\nconst LITTLE_ENDIAN_OS = isLittleEndian;\n/**\n * The basic string format consists of 3 characters:\n * 1. a character describing the byteorder of the data (<: little-endian, >: big-endian, |: not-relevant)\n * 2. a character code giving the basic type of the array\n * 3. an integer providing the number of bytes the type uses.\n * https://numpy.org/doc/stable/reference/arrays.interface.html\n *\n * Here I only include the second and third characters, and check endianness separately\n */\nconst DTYPES = {\n    u1: Uint8Array,\n    i1: Int8Array,\n    u2: Uint16Array,\n    i2: Int16Array,\n    u4: Uint32Array,\n    i4: Int32Array,\n    f4: Float32Array,\n    f8: Float64Array\n};\nexport function parseNPY(arrayBuffer, options) {\n    const view = new DataView(arrayBuffer);\n    const { header, headerEndOffset } = parseHeader(view);\n    const numpyType = header.descr;\n    const ArrayType = DTYPES[numpyType.slice(1, 3)];\n    if (!ArrayType) {\n        throw new Error(`Unimplemented type ${numpyType}`);\n    }\n    const nArrayElements = header.shape?.reduce((a, b) => a * b);\n    const arrayByteLength = nArrayElements * ArrayType.BYTES_PER_ELEMENT;\n    if (arrayBuffer.byteLength < headerEndOffset + arrayByteLength) {\n        throw new Error('Buffer overflow');\n    }\n    const data = new ArrayType(arrayBuffer.slice(headerEndOffset, headerEndOffset + arrayByteLength));\n    // Swap endianness if needed\n    if ((numpyType[0] === '>' && LITTLE_ENDIAN_OS) || (numpyType[0] === '<' && !LITTLE_ENDIAN_OS)) {\n        throw new Error('Incorrect endianness');\n    }\n    return {\n        data,\n        header\n    };\n}\n/**\n * Parse NPY header\n *\n * @param  view\n * @return\n */\nfunction parseHeader(view) {\n    const majorVersion = view.getUint8(6);\n    // const minorVersion = view.getUint8(7);\n    let offset = 8;\n    let headerLength;\n    if (majorVersion >= 2) {\n        headerLength = view.getUint32(offset, true);\n        offset += 4;\n    }\n    else {\n        headerLength = view.getUint16(offset, true);\n        offset += 2;\n    }\n    const encoding = majorVersion <= 2 ? 'latin1' : 'utf-8';\n    const decoder = new TextDecoder(encoding);\n    const headerArray = new Uint8Array(view.buffer, offset, headerLength);\n    const headerText = decoder.decode(headerArray);\n    offset += headerLength;\n    const header = JSON.parse(headerText\n        .replace(/'/g, '\"')\n        .replace('False', 'false')\n        .replace('(', '[')\n        .replace(/,*\\),*/g, ']'));\n    return { header, headerEndOffset: offset };\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { VERSION } from \"./lib/utils/version.js\";\nimport { parseNPY } from \"./lib/parsers/parse-npy.js\";\n// \\x93NUMPY\nconst NPY_MAGIC_NUMBER = new Uint8Array([147, 78, 85, 77, 80, 89]);\n/**\n * Worker loader for numpy \"tiles\"\n */\nexport const NPYWorkerLoader = {\n    dataType: null,\n    batchType: null,\n    name: 'NPY',\n    id: 'npy',\n    module: 'textures',\n    version: VERSION,\n    worker: true,\n    extensions: ['npy'],\n    mimeTypes: [],\n    tests: [NPY_MAGIC_NUMBER.buffer],\n    options: {\n        npy: {}\n    }\n};\n/**\n * Loader for numpy \"tiles\"\n */\nexport const NPYLoader = {\n    ...NPYWorkerLoader,\n    parseSync: parseNPY,\n    parse: async (arrayBuffer, options) => parseNPY(arrayBuffer, options)\n};\n", "import { assert, log } from '@luma.gl/core';\nimport { Matrix4, Quaternion } from '@math.gl/core';\n// TODO: import from loaders.gl?\nexport const ATTRIBUTE_TYPE_TO_COMPONENTS = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16\n};\nexport const ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY = {\n    5120: Int8Array,\n    5121: Uint8Array,\n    5122: Int16Array,\n    5123: Uint16Array,\n    5125: Uint32Array,\n    5126: Float32Array\n};\nclass GLTFAnimation {\n    name;\n    startTime = 0;\n    playing = true;\n    speed = 1;\n    channels = [];\n    constructor(props) {\n        Object.assign(this, props);\n    }\n    animate(timeMs) {\n        if (!this.playing) {\n            return;\n        }\n        const absTime = timeMs / 1000;\n        const time = (absTime - this.startTime) * this.speed;\n        this.channels.forEach(({ sampler, target, path }) => {\n            interpolate(time, sampler, target, path);\n            applyTranslationRotationScale(target, target._node);\n        });\n    }\n}\nexport class GLTFAnimator {\n    animations;\n    constructor(gltf) {\n        this.animations = gltf.animations.map((animation, index) => {\n            const name = animation.name || `Animation-${index}`;\n            const samplers = animation.samplers.map(({ input, interpolation = 'LINEAR', output }) => ({\n                input: accessorToJsArray(gltf.accessors[input]),\n                interpolation,\n                output: accessorToJsArray(gltf.accessors[output])\n            }));\n            const channels = animation.channels.map(({ sampler, target }) => ({\n                sampler: samplers[sampler],\n                target: gltf.nodes[target.node],\n                path: target.path\n            }));\n            return new GLTFAnimation({ name, channels });\n        });\n    }\n    /** @deprecated Use .setTime(). Will be removed (deck.gl is using this) */\n    animate(time) {\n        this.setTime(time);\n    }\n    setTime(time) {\n        this.animations.forEach(animation => animation.animate(time));\n    }\n    getAnimations() {\n        return this.animations;\n    }\n}\n//\nfunction accessorToJsArray(accessor) {\n    if (!accessor._animation) {\n        const ArrayType = ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY[accessor.componentType];\n        const components = ATTRIBUTE_TYPE_TO_COMPONENTS[accessor.type];\n        const length = components * accessor.count;\n        const { buffer, byteOffset } = accessor.bufferView.data;\n        const array = new ArrayType(buffer, byteOffset + (accessor.byteOffset || 0), length);\n        if (components === 1) {\n            accessor._animation = Array.from(array);\n        }\n        else {\n            // Slice array\n            const slicedArray = [];\n            for (let i = 0; i < array.length; i += components) {\n                slicedArray.push(Array.from(array.slice(i, i + components)));\n            }\n            accessor._animation = slicedArray;\n        }\n    }\n    return accessor._animation;\n}\n// TODO: share with GLTFInstantiator\nconst helperMatrix = new Matrix4();\nfunction applyTranslationRotationScale(gltfNode, node) {\n    node.matrix.identity();\n    if (gltfNode.translation) {\n        node.matrix.translate(gltfNode.translation);\n    }\n    if (gltfNode.rotation) {\n        const rotationMatrix = helperMatrix.fromQuaternion(gltfNode.rotation);\n        node.matrix.multiplyRight(rotationMatrix);\n    }\n    if (gltfNode.scale) {\n        node.matrix.scale(gltfNode.scale);\n    }\n}\nconst quaternion = new Quaternion();\nfunction linearInterpolate(target, path, start, stop, ratio) {\n    if (path === 'rotation') {\n        // SLERP when path is rotation\n        quaternion.slerp({ start, target: stop, ratio });\n        for (let i = 0; i < quaternion.length; i++) {\n            target[path][i] = quaternion[i];\n        }\n    }\n    else {\n        // regular interpolation\n        for (let i = 0; i < start.length; i++) {\n            target[path][i] = ratio * stop[i] + (1 - ratio) * start[i];\n        }\n    }\n}\nfunction cubicsplineInterpolate(target, path, { p0, outTangent0, inTangent1, p1, tDiff, ratio: t }) {\n    // TODO: Quaternion might need normalization\n    for (let i = 0; i < target[path].length; i++) {\n        const m0 = outTangent0[i] * tDiff;\n        const m1 = inTangent1[i] * tDiff;\n        target[path][i] =\n            (2 * Math.pow(t, 3) - 3 * Math.pow(t, 2) + 1) * p0[i] +\n                (Math.pow(t, 3) - 2 * Math.pow(t, 2) + t) * m0 +\n                (-2 * Math.pow(t, 3) + 3 * Math.pow(t, 2)) * p1[i] +\n                (Math.pow(t, 3) - Math.pow(t, 2)) * m1;\n    }\n}\nfunction stepInterpolate(target, path, value) {\n    for (let i = 0; i < value.length; i++) {\n        target[path][i] = value[i];\n    }\n}\nfunction interpolate(time, { input, interpolation, output }, target, path) {\n    const maxTime = input[input.length - 1];\n    const animationTime = time % maxTime;\n    const nextIndex = input.findIndex(t => t >= animationTime);\n    const previousIndex = Math.max(0, nextIndex - 1);\n    if (!Array.isArray(target[path])) {\n        switch (path) {\n            case 'translation':\n                target[path] = [0, 0, 0];\n                break;\n            case 'rotation':\n                target[path] = [0, 0, 0, 1];\n                break;\n            case 'scale':\n                target[path] = [1, 1, 1];\n                break;\n            default:\n                log.warn(`Bad animation path ${path}`)();\n        }\n    }\n    assert(target[path].length === output[previousIndex].length);\n    const previousTime = input[previousIndex];\n    const nextTime = input[nextIndex];\n    switch (interpolation) {\n        case 'STEP':\n            stepInterpolate(target, path, output[previousIndex]);\n            break;\n        case 'LINEAR':\n            if (nextTime > previousTime) {\n                const ratio = (animationTime - previousTime) / (nextTime - previousTime);\n                linearInterpolate(target, path, output[previousIndex], output[nextIndex], ratio);\n            }\n            break;\n        case 'CUBICSPLINE':\n            if (nextTime > previousTime) {\n                const ratio = (animationTime - previousTime) / (nextTime - previousTime);\n                const tDiff = nextTime - previousTime;\n                const p0 = output[3 * previousIndex + 1];\n                const outTangent0 = output[3 * previousIndex + 2];\n                const inTangent1 = output[3 * nextIndex + 0];\n                const p1 = output[3 * nextIndex + 1];\n                cubicsplineInterpolate(target, path, { p0, outTangent0, inTangent1, p1, tDiff, ratio });\n            }\n            break;\n        default:\n            log.warn(`Interpolation ${interpolation} not supported`)();\n            break;\n    }\n}\n", "import { log } from '@luma.gl/core';\nimport { pbr } from '@luma.gl/shadertools';\nimport { Model, ModelNode } from '@luma.gl/engine';\nimport { parsePBRMaterial } from \"../pbr/parse-pbr-material.js\";\n// TODO rename attributes to POSITION/NORMAL etc\n// See gpu-geometry.ts: getAttributeBuffersFromGeometry()\nconst vs = `\n#pragma vscode_glsllint_stage: vert\n#if (__VERSION__ < 300)\n  #define _attr attribute\n#else\n  #define _attr in\n#endif\n\n  // _attr vec4 POSITION;\n  _attr vec4 positions;\n\n  #ifdef HAS_NORMALS\n    // _attr vec4 NORMAL;\n    _attr vec4 normals;\n  #endif\n\n  #ifdef HAS_TANGENTS\n    _attr vec4 TANGENT;\n  #endif\n\n  #ifdef HAS_UV\n    // _attr vec2 TEXCOORD_0;\n    _attr vec2 texCoords;\n  #endif\n\n  void main(void) {\n    vec4 _NORMAL = vec4(0.);\n    vec4 _TANGENT = vec4(0.);\n    vec2 _TEXCOORD_0 = vec2(0.);\n\n    #ifdef HAS_NORMALS\n      _NORMAL = normals;\n    #endif\n\n    #ifdef HAS_TANGENTS\n      _TANGENT = TANGENT;\n    #endif\n\n    #ifdef HAS_UV\n      _TEXCOORD_0 = texCoords;\n    #endif\n\n    pbr_setPositionNormalTangentUV(positions, _NORMAL, _TANGENT, _TEXCOORD_0);\n    gl_Position = u_MVPMatrix * positions;\n  }\n`;\nconst fs = `\n#pragma vscode_glsllint_stage: frag\n#if (__VERSION__ < 300)\n  #define fragmentColor gl_FragColor\n#else\n  out vec4 fragmentColor;\n#endif\n\n  void main(void) {\n    vec3 pos = pbr_vPosition;\n    fragmentColor = pbr_filterColor(vec4(1.0));\n  }\n`;\nexport function createGLTFModel(device, options) {\n    const { id, geometry, material, vertexCount, materialOptions, modelOptions } = options;\n    const parsedMaterial = parsePBRMaterial(device, material, geometry.attributes, materialOptions);\n    log.info(4, 'createGLTFModel defines: ', parsedMaterial.defines)();\n    // Calculate managedResources\n    // TODO: Implement resource management logic that will\n    // not deallocate resources/textures/buffers that are shared\n    const managedResources = [];\n    // managedResources.push(...parsedMaterial.generatedTextures);\n    // managedResources.push(...Object.values(attributes).map((attribute) => attribute.buffer));\n    const parameters = {\n        depthWriteEnabled: true,\n        depthCompare: 'less',\n        depthFormat: 'depth24plus',\n        cullMode: 'back'\n    };\n    const modelProps = {\n        id,\n        geometry,\n        topology: geometry.topology,\n        vertexCount,\n        modules: [pbr],\n        vs: addVersionToShader(device, vs),\n        fs: addVersionToShader(device, fs),\n        ...modelOptions,\n        bindings: { ...parsedMaterial.bindings, ...modelOptions.bindings },\n        defines: { ...parsedMaterial.defines, ...modelOptions.defines },\n        parameters: { ...parameters, ...parsedMaterial.parameters, ...modelOptions.parameters },\n        uniforms: { ...parsedMaterial.uniforms, ...modelOptions.uniforms }\n    };\n    const model = new Model(device, modelProps);\n    return new ModelNode({ managedResources, model });\n}\nfunction addVersionToShader(device, source) {\n    return `#version 300 es\\n${source}`;\n}\n", "import { Geometry, GroupNode } from '@luma.gl/engine';\nimport { Matrix4 } from '@math.gl/core';\nimport { GLTFAnimator } from \"./gltf-animator.js\";\nimport { createGLTFModel } from \"./create-gltf-model.js\";\nconst DEFAULT_OPTIONS = {\n    modelOptions: {},\n    pbrDebug: false,\n    imageBasedLightingEnvironment: null,\n    lights: true,\n    useTangents: false\n};\n/**\n * GLTF instantiator for luma.gl\n * Walks the parsed and resolved glTF structure and builds a luma.gl scenegraph\n */\nexport class GLTFInstantiator {\n    device;\n    options;\n    gltf;\n    constructor(device, options = {}) {\n        this.device = device;\n        this.options = { ...DEFAULT_OPTIONS, ...options };\n    }\n    instantiate(gltf) {\n        this.gltf = gltf;\n        const scenes = (gltf.scenes || []).map(scene => this.createScene(scene));\n        return scenes;\n    }\n    createAnimator() {\n        if (Array.isArray(this.gltf.animations)) {\n            return new GLTFAnimator(this.gltf);\n        }\n        return null;\n    }\n    createScene(gltfScene) {\n        const gltfNodes = gltfScene.nodes || [];\n        const nodes = gltfNodes.map(node => this.createNode(node));\n        const scene = new GroupNode({\n            id: gltfScene.name || gltfScene.id,\n            children: nodes\n        });\n        return scene;\n    }\n    createNode(gltfNode) {\n        if (!gltfNode._node) {\n            const gltfChildren = gltfNode.children || [];\n            const children = gltfChildren.map(child => this.createNode(child));\n            // Node can have children nodes and meshes at the same time\n            if (gltfNode.mesh) {\n                children.push(this.createMesh(gltfNode.mesh));\n            }\n            const node = new GroupNode({\n                id: gltfNode.name || gltfNode.id,\n                children\n            });\n            if (gltfNode.matrix) {\n                node.setMatrix(gltfNode.matrix);\n            }\n            else {\n                node.matrix.identity();\n                if (gltfNode.translation) {\n                    node.matrix.translate(gltfNode.translation);\n                }\n                if (gltfNode.rotation) {\n                    const rotationMatrix = new Matrix4().fromQuaternion(gltfNode.rotation);\n                    node.matrix.multiplyRight(rotationMatrix);\n                }\n                if (gltfNode.scale) {\n                    node.matrix.scale(gltfNode.scale);\n                }\n            }\n            gltfNode._node = node;\n        }\n        return gltfNode._node;\n    }\n    createMesh(gltfMesh) {\n        // TODO: avoid changing the gltf\n        if (!gltfMesh._mesh) {\n            const gltfPrimitives = gltfMesh.primitives || [];\n            const primitives = gltfPrimitives.map((gltfPrimitive, i) => this.createPrimitive(gltfPrimitive, i, gltfMesh));\n            const mesh = new GroupNode({\n                id: gltfMesh.name || gltfMesh.id,\n                children: primitives\n            });\n            gltfMesh._mesh = mesh;\n        }\n        return gltfMesh._mesh;\n    }\n    createPrimitive(gltfPrimitive, i, gltfMesh) {\n        const id = gltfPrimitive.name || `${gltfMesh.name || gltfMesh.id}-primitive-${i}`;\n        const topology = convertGLDrawModeToTopology(gltfPrimitive.mode || 4);\n        const vertexCount = gltfPrimitive.indices\n            ? gltfPrimitive.indices.count\n            : this.getVertexCount(gltfPrimitive.attributes);\n        const modelNode = createGLTFModel(this.device, {\n            id,\n            geometry: this.createGeometry(id, gltfPrimitive, topology),\n            material: gltfPrimitive.material,\n            materialOptions: this.options,\n            modelOptions: this.options.modelOptions,\n            vertexCount\n        });\n        modelNode.bounds = [\n            gltfPrimitive.attributes.POSITION.min,\n            gltfPrimitive.attributes.POSITION.max\n        ];\n        // TODO this holds on to all the CPU side texture and attribute data\n        // modelNode.material =  gltfPrimitive.material;\n        return modelNode;\n    }\n    getVertexCount(attributes) {\n        throw new Error('getVertexCount not implemented');\n    }\n    createGeometry(id, gltfPrimitive, topology) {\n        const attributes = {};\n        for (const [attributeName, attribute] of Object.entries(gltfPrimitive.attributes)) {\n            const { components, size, value } = attribute;\n            attributes[attributeName] = { size: size ?? components, value };\n        }\n        return new Geometry({\n            id,\n            topology,\n            indices: gltfPrimitive.indices.value,\n            attributes\n        });\n    }\n    createBuffer(attribute, usage) {\n        if (!attribute.bufferView) {\n            // Draco decoded files do not have a bufferView\n            attribute.bufferView = {};\n        }\n        const { bufferView } = attribute;\n        if (!bufferView.lumaBuffers) {\n            bufferView.lumaBuffers = {};\n        }\n        if (!bufferView.lumaBuffers[usage]) {\n            bufferView.lumaBuffers[usage] = this.device.createBuffer({\n                id: `from-${bufferView.id}`,\n                // Draco decoded files have attribute.value\n                data: bufferView.data || attribute.value\n            });\n        }\n        return bufferView.lumaBuffers[usage];\n    }\n    // TODO - create sampler in WebGL2\n    createSampler(gltfSampler) {\n        return gltfSampler;\n    }\n    // Helper methods (move to GLTFLoader.resolve...?)\n    needsPOT() {\n        // Has a wrapping mode (either wrapS or wrapT) equal to REPEAT or MIRRORED_REPEAT, or\n        // Has a minification filter (minFilter) that uses mipmapping\n        // (NEAREST_MIPMAP_NEAREST, NEAREST_MIPMAP_LINEAR,\n        // LINEAR_MIPMAP_NEAREST, or LINEAR_MIPMAP_LINEAR).\n        return false;\n    }\n}\n// NOTE: Modules other than `@luma.gl/webgl` should not import `GL` from\n// `@luma.gl/constants`. Locally we use `GLEnum` instead of `GL` to avoid\n// conflicts with the `babel-plugin-inline-webgl-constants` plugin.\nvar GLEnum;\n(function (GLEnum) {\n    GLEnum[GLEnum[\"POINTS\"] = 0] = \"POINTS\";\n    GLEnum[GLEnum[\"LINES\"] = 1] = \"LINES\";\n    GLEnum[GLEnum[\"LINE_LOOP\"] = 2] = \"LINE_LOOP\";\n    GLEnum[GLEnum[\"LINE_STRIP\"] = 3] = \"LINE_STRIP\";\n    GLEnum[GLEnum[\"TRIANGLES\"] = 4] = \"TRIANGLES\";\n    GLEnum[GLEnum[\"TRIANGLE_STRIP\"] = 5] = \"TRIANGLE_STRIP\";\n    GLEnum[GLEnum[\"TRIANGLE_FAN\"] = 6] = \"TRIANGLE_FAN\";\n})(GLEnum || (GLEnum = {}));\nexport function convertGLDrawModeToTopology(drawMode) {\n    switch (drawMode) {\n        case GLEnum.POINTS:\n            return 'point-list';\n        case GLEnum.LINES:\n            return 'line-list';\n        case GLEnum.LINE_STRIP:\n            return 'line-strip';\n        case GLEnum.LINE_LOOP:\n            return 'line-loop-webgl';\n        case GLEnum.TRIANGLES:\n            return 'triangle-list';\n        case GLEnum.TRIANGLE_STRIP:\n            return 'triangle-strip';\n        case GLEnum.TRIANGLE_FAN:\n            return 'triangle-fan-webgl';\n        default:\n            throw new Error(drawMode);\n    }\n}\n", "import { GLTFInstantiator } from \"./gltf-instantiator.js\";\nexport function createScenegraphsFromGLTF(device, gltf, options) {\n    const instantiator = new GLTFInstantiator(device, options);\n    const scenes = instantiator.instantiate(gltf);\n    const animator = instantiator.createAnimator();\n    return { scenes, animator };\n}\n", "import { GLTFScenegraph } from \"../api/gltf-scenegraph.js\";\nimport { getPrimitiveTextureData } from \"./utils/3d-tiles-utils.js\";\nconst EXT_MESH_FEATURES_NAME = 'EXT_mesh_features';\nexport const name = EXT_MESH_FEATURES_NAME;\nexport async function decode(gltfData, options) {\n    const scenegraph = new GLTFScenegraph(gltfData);\n    decodeExtMeshFeatures(scenegraph, options);\n}\n/**\n * Decodes feature metadata from extension.\n * @param {GLTFScenegraph} scenegraph - Instance of the class for structured access to GLTF data.\n * @param {GLTFLoaderOptions} options - GLTFLoader options.\n */\nfunction decodeExtMeshFeatures(scenegraph, options) {\n    const json = scenegraph.gltf.json;\n    if (!json.meshes) {\n        return;\n    }\n    // Iterate through all meshes/primitives.\n    for (const mesh of json.meshes) {\n        for (const primitive of mesh.primitives) {\n            processMeshPrimitiveFeatures(scenegraph, primitive, options);\n        }\n    }\n}\n/**\n * Takes data from EXT_mesh_features and store it in 'data' property of featureIds.\n * If combined with EXT_structural_metadata, corresponding data are taken from the property tables of that extension.\n * @param {GLTFScenegraph} scenegraph - Instance of the class for structured access to GLTF data.\n * @param {GLTFMeshPrimitive} primitive - Primitive that contains extensions.\n * @param {GLTFLoaderOptions} options - GLTFLoader options.\n */\nfunction processMeshPrimitiveFeatures(scenegraph, primitive, options) {\n    // Processing of mesh primitive features requires buffers to be loaded.\n    if (!options?.gltf?.loadBuffers) {\n        return;\n    }\n    const extension = primitive.extensions?.[EXT_MESH_FEATURES_NAME];\n    const featureIds = extension?.featureIds;\n    if (!featureIds) {\n        return;\n    }\n    for (const featureId of featureIds) {\n        let featureIdData;\n        // Process \"Feature ID by Vertex\"\n        if (typeof featureId.attribute !== 'undefined') {\n            const accessorKey = `_FEATURE_ID_${featureId.attribute}`;\n            const accessorIndex = primitive.attributes[accessorKey];\n            featureIdData = scenegraph.getTypedArrayForAccessor(accessorIndex);\n        }\n        // Process \"Feature ID by Texture Coordinates\"\n        else if (typeof featureId.texture !== 'undefined' && options?.gltf?.loadImages) {\n            featureIdData = getPrimitiveTextureData(scenegraph, featureId.texture, primitive);\n        }\n        // Process \"Feature ID by Index\"\n        else {\n            /*\n            When both featureId.attribute and featureId.texture are undefined,\n            then the feature ID value for each vertex is given implicitly, via the index of the vertex.\n            In this case, the featureCount must match the number of vertices of the mesh primitive.\n            */\n            // TODO: At the moment of writing we don't have a tileset with the data of that kind. Implement it later.\n            featureIdData = [];\n        }\n        featureId.data = featureIdData;\n    }\n}\n", "// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\nexport function assert(condition, message) {\n    if (!condition) {\n        throw new Error(message || 'assert failed: gltf');\n    }\n}\n", "export const COMPONENTS = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16\n};\nexport const BYTES = {\n    5120: 1, // BYTE\n    5121: 1, // UNSIGNED_BYTE\n    5122: 2, // SHORT\n    5123: 2, // UNSIGNED_SHORT\n    5125: 4, // UNSIGNED_INT\n    5126: 4 // FLOAT\n};\n// ENUM LOOKUP\nexport function getBytesFromComponentType(componentType) {\n    return BYTES[componentType];\n}\nexport function getSizeFromAccessorType(type) {\n    return COMPONENTS[type];\n}\nexport function getGLEnumFromSamplerParameter(parameter) {\n    const GL_TEXTURE_MAG_FILTER = 0x2800;\n    const GL_TEXTURE_MIN_FILTER = 0x2801;\n    const GL_TEXTURE_WRAP_S = 0x2802;\n    const GL_TEXTURE_WRAP_T = 0x2803;\n    const PARAMETER_MAP = {\n        magFilter: GL_TEXTURE_MAG_FILTER,\n        minFilter: GL_TEXTURE_MIN_FILTER,\n        wrapS: GL_TEXTURE_WRAP_S,\n        wrapT: GL_TEXTURE_WRAP_T\n    };\n    return PARAMETER_MAP[parameter];\n}\n", "import { assert } from \"../utils/assert.js\";\nimport { BYTES, COMPONENTS } from \"../gltf-utils/gltf-constants.js\";\n/**\n * Memory needed to store texture and all mipmap levels 1 + 1/4 + 1/16 + 1/64 + ...\n * Minimum 1.33, but due to GPU layout may be 1.5\n */\nconst MIPMAP_FACTOR = 1.33;\nconst TYPES = ['SCALAR', 'VEC2', 'VEC3', 'VEC4'];\nconst ARRAY_CONSTRUCTOR_TO_WEBGL_CONSTANT = [\n    [Int8Array, 5120],\n    [Uint8Array, 5121],\n    [Int16Array, 5122],\n    [Uint16Array, 5123],\n    [Uint32Array, 5125],\n    [Float32Array, 5126],\n    [Float64Array, 5130]\n];\nconst ARRAY_TO_COMPONENT_TYPE = new Map(ARRAY_CONSTRUCTOR_TO_WEBGL_CONSTANT);\nconst ATTRIBUTE_TYPE_TO_COMPONENTS = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16\n};\nconst ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE = {\n    5120: 1,\n    5121: 1,\n    5122: 2,\n    5123: 2,\n    5125: 4,\n    5126: 4\n};\nconst ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY = {\n    5120: Int8Array,\n    5121: Uint8Array,\n    5122: Int16Array,\n    5123: Uint16Array,\n    5125: Uint32Array,\n    5126: Float32Array\n};\nexport function getAccessorTypeFromSize(size) {\n    const type = TYPES[size - 1];\n    return type || TYPES[0];\n}\nexport function getComponentTypeFromArray(typedArray) {\n    const componentType = ARRAY_TO_COMPONENT_TYPE.get(typedArray.constructor);\n    if (!componentType) {\n        throw new Error('Illegal typed array');\n    }\n    return componentType;\n}\nexport function getAccessorArrayTypeAndLength(accessor, bufferView) {\n    const ArrayType = ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY[accessor.componentType];\n    const components = ATTRIBUTE_TYPE_TO_COMPONENTS[accessor.type];\n    const bytesPerComponent = ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE[accessor.componentType];\n    const length = accessor.count * components;\n    const byteLength = accessor.count * components * bytesPerComponent;\n    assert(byteLength >= 0 && byteLength <= bufferView.byteLength);\n    const componentByteSize = BYTES[accessor.componentType];\n    const numberOfComponentsInElement = COMPONENTS[accessor.type];\n    return { ArrayType, length, byteLength, componentByteSize, numberOfComponentsInElement };\n}\n/**\n * Calculate the GPU memory used by a GLTF tile, for both buffer and texture memory\n * @param gltf - the gltf content of a GLTF tile\n * @returns - total memory usage in bytes\n */\nexport function getMemoryUsageGLTF(gltf) {\n    let { images, bufferViews } = gltf;\n    images = images || [];\n    bufferViews = bufferViews || [];\n    const imageBufferViews = images.map((i) => i.bufferView);\n    bufferViews = bufferViews.filter((view) => !imageBufferViews.includes(view));\n    const bufferMemory = bufferViews.reduce((acc, view) => acc + view.byteLength, 0);\n    // Assume each pixel of the texture is 4 channel with mimmaps (which add 33%)\n    // TODO correctly handle compressed textures\n    const pixelCount = images.reduce((acc, image) => {\n        // @ts-ignore\n        const { width, height } = image.image;\n        return acc + width * height;\n    }, 0);\n    return bufferMemory + Math.ceil(4 * pixelCount * MIPMAP_FACTOR);\n}\n", "// TODO - GLTFScenegraph should use these\nimport { assert } from \"../utils/assert.js\";\nimport { getAccessorArrayTypeAndLength } from \"./gltf-utils.js\";\n// accepts buffer view index or buffer view object\n// returns a `Uint8Array`\nexport function getTypedArrayForBufferView(json, buffers, bufferViewIndex) {\n    const bufferView = json.bufferViews[bufferViewIndex];\n    assert(bufferView);\n    // Get hold of the arrayBuffer\n    const bufferIndex = bufferView.buffer;\n    const binChunk = buffers[bufferIndex];\n    assert(binChunk);\n    const byteOffset = (bufferView.byteOffset || 0) + binChunk.byteOffset;\n    return new Uint8Array(binChunk.arrayBuffer, byteOffset, bufferView.byteLength);\n}\n// accepts accessor index or accessor object\n// returns a `Uint8Array`\nexport function getTypedArrayForImageData(json, buffers, imageIndex) {\n    const image = json.images[imageIndex];\n    const bufferViewIndex = json.bufferViews[image.bufferView];\n    return getTypedArrayForBufferView(json, buffers, bufferViewIndex);\n}\n/**\n * Gets data pointed by the accessor.\n * @param json - json part of gltf content of a GLTF tile.\n * @param buffers - Array containing buffers of data.\n * @param accessor - accepts accessor index or accessor object.\n * @returns {TypedArray} Typed array with type matching the type of data poited by the accessor.\n */\n// eslint-disable-next-line complexity\nexport function getTypedArrayForAccessor(json, buffers, accessor) {\n    const gltfAccessor = typeof accessor === 'number' ? json.accessors?.[accessor] : accessor;\n    if (!gltfAccessor) {\n        throw new Error(`No gltf accessor ${JSON.stringify(accessor)}`);\n    }\n    const bufferView = json.bufferViews?.[gltfAccessor.bufferView || 0];\n    if (!bufferView) {\n        throw new Error(`No gltf buffer view for accessor ${bufferView}`);\n    }\n    // Get `arrayBuffer` the `bufferView` looks at\n    const { arrayBuffer, byteOffset: bufferByteOffset } = buffers[bufferView.buffer];\n    // Resulting byteOffset is sum of the buffer, accessor and bufferView byte offsets\n    const byteOffset = (bufferByteOffset || 0) + (gltfAccessor.byteOffset || 0) + (bufferView.byteOffset || 0);\n    // Deduce TypedArray type and its length from `accessor` and `bufferView` data\n    const { ArrayType, length, componentByteSize, numberOfComponentsInElement } = getAccessorArrayTypeAndLength(gltfAccessor, bufferView);\n    // 'length' is a whole number of components of all elements in the buffer pointed by the accessor\n    // Multiplier to calculate the address of the element in the arrayBuffer\n    const elementByteSize = componentByteSize * numberOfComponentsInElement;\n    const elementAddressScale = bufferView.byteStride || elementByteSize;\n    // Creare an array of component's type where all components (not just elements) will reside\n    if (typeof bufferView.byteStride === 'undefined' || bufferView.byteStride === elementByteSize) {\n        // No iterleaving\n        const result = new ArrayType(arrayBuffer, byteOffset, length);\n        return result;\n    }\n    // Iterleaving\n    const result = new ArrayType(length);\n    for (let i = 0; i < gltfAccessor.count; i++) {\n        const values = new ArrayType(arrayBuffer, byteOffset + i * elementAddressScale, numberOfComponentsInElement);\n        result.set(values, i * numberOfComponentsInElement);\n    }\n    return result;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { getBinaryImageMetadata } from '@loaders.gl/images';\nimport { padToNBytes, copyToArray } from '@loaders.gl/loader-utils';\nimport { assert } from \"../utils/assert.js\";\nimport { getAccessorTypeFromSize, getComponentTypeFromArray } from \"../gltf-utils/gltf-utils.js\";\nimport { getTypedArrayForAccessor as _getTypedArrayForAccessor } from \"../gltf-utils/get-typed-array.js\";\nfunction makeDefaultGLTFJson() {\n    return {\n        asset: {\n            version: '2.0',\n            generator: 'loaders.gl'\n        },\n        buffers: [],\n        extensions: {},\n        extensionsRequired: [],\n        extensionsUsed: []\n    };\n}\n/**\n * Class for structured access to GLTF data\n */\nexport class GLTFScenegraph {\n    // internal\n    gltf;\n    sourceBuffers;\n    byteLength;\n    // TODO - why is this not GLTFWithBuffers - what happens to images?\n    constructor(gltf) {\n        // Declare locally so\n        this.gltf = {\n            json: gltf?.json || makeDefaultGLTFJson(),\n            buffers: gltf?.buffers || [],\n            images: gltf?.images || []\n        };\n        this.sourceBuffers = [];\n        this.byteLength = 0;\n        // Initialize buffers\n        if (this.gltf.buffers && this.gltf.buffers[0]) {\n            this.byteLength = this.gltf.buffers[0].byteLength;\n            this.sourceBuffers = [this.gltf.buffers[0]];\n        }\n    }\n    // Accessors\n    get json() {\n        return this.gltf.json;\n    }\n    getApplicationData(key) {\n        // TODO - Data is already unpacked by GLBParser\n        const data = this.json[key];\n        return data;\n    }\n    getExtraData(key) {\n        // TODO - Data is already unpacked by GLBParser\n        const extras = (this.json.extras || {});\n        return extras[key];\n    }\n    hasExtension(extensionName) {\n        const isUsedExtension = this.getUsedExtensions().find((name) => name === extensionName);\n        const isRequiredExtension = this.getRequiredExtensions().find((name) => name === extensionName);\n        return typeof isUsedExtension === 'string' || typeof isRequiredExtension === 'string';\n    }\n    getExtension(extensionName) {\n        const isExtension = this.getUsedExtensions().find((name) => name === extensionName);\n        const extensions = this.json.extensions || {};\n        return isExtension ? extensions[extensionName] : null;\n    }\n    getRequiredExtension(extensionName) {\n        const isRequired = this.getRequiredExtensions().find((name) => name === extensionName);\n        return isRequired ? this.getExtension(extensionName) : null;\n    }\n    getRequiredExtensions() {\n        return this.json.extensionsRequired || [];\n    }\n    getUsedExtensions() {\n        return this.json.extensionsUsed || [];\n    }\n    getRemovedExtensions() {\n        return (this.json.extensionsRemoved || []);\n    }\n    getObjectExtension(object, extensionName) {\n        const extensions = object.extensions || {};\n        return extensions[extensionName];\n    }\n    getScene(index) {\n        return this.getObject('scenes', index);\n    }\n    getNode(index) {\n        return this.getObject('nodes', index);\n    }\n    getSkin(index) {\n        return this.getObject('skins', index);\n    }\n    getMesh(index) {\n        return this.getObject('meshes', index);\n    }\n    getMaterial(index) {\n        return this.getObject('materials', index);\n    }\n    getAccessor(index) {\n        return this.getObject('accessors', index);\n    }\n    // getCamera(index: number): object | null {\n    //   return null; // TODO: fix thi: object  as null;\n    // }\n    getTexture(index) {\n        return this.getObject('textures', index);\n    }\n    getSampler(index) {\n        return this.getObject('samplers', index);\n    }\n    getImage(index) {\n        return this.getObject('images', index);\n    }\n    getBufferView(index) {\n        return this.getObject('bufferViews', index);\n    }\n    getBuffer(index) {\n        return this.getObject('buffers', index);\n    }\n    getObject(array, index) {\n        // check if already resolved\n        if (typeof index === 'object') {\n            return index;\n        }\n        const object = this.json[array] && this.json[array][index];\n        if (!object) {\n            throw new Error(`glTF file error: Could not find ${array}[${index}]`); // eslint-disable-line\n        }\n        return object;\n    }\n    /**\n     * Accepts buffer view index or buffer view object\n     * @returns a `Uint8Array`\n     */\n    getTypedArrayForBufferView(bufferView) {\n        bufferView = this.getBufferView(bufferView);\n        // @ts-ignore\n        const bufferIndex = bufferView.buffer;\n        // Get hold of the arrayBuffer\n        // const buffer = this.getBuffer(bufferIndex);\n        const binChunk = this.gltf.buffers[bufferIndex];\n        assert(binChunk);\n        // @ts-ignore\n        const byteOffset = (bufferView.byteOffset || 0) + binChunk.byteOffset;\n        // @ts-ignore\n        return new Uint8Array(binChunk.arrayBuffer, byteOffset, bufferView.byteLength);\n    }\n    /** Accepts accessor index or accessor object\n     * @returns a typed array with type that matches the types\n     */\n    getTypedArrayForAccessor(accessor) {\n        // @ts-ignore\n        const gltfAccessor = this.getAccessor(accessor);\n        return _getTypedArrayForAccessor(this.gltf.json, this.gltf.buffers, gltfAccessor);\n    }\n    /** accepts accessor index or accessor object\n     * returns a `Uint8Array`\n     */\n    getTypedArrayForImageData(image) {\n        // @ts-ignore\n        image = this.getAccessor(image);\n        // @ts-ignore\n        const bufferView = this.getBufferView(image.bufferView);\n        const buffer = this.getBuffer(bufferView.buffer);\n        // @ts-ignore\n        const arrayBuffer = buffer.data;\n        const byteOffset = bufferView.byteOffset || 0;\n        return new Uint8Array(arrayBuffer, byteOffset, bufferView.byteLength);\n    }\n    // MODIFERS\n    /**\n     * Add an extra application-defined key to the top-level data structure\n     */\n    addApplicationData(key, data) {\n        this.json[key] = data;\n        return this;\n    }\n    /**\n     * `extras` - Standard GLTF field for storing application specific data\n     */\n    addExtraData(key, data) {\n        this.json.extras = this.json.extras || {};\n        this.json.extras[key] = data;\n        return this;\n    }\n    addObjectExtension(object, extensionName, data) {\n        // @ts-ignore\n        object.extensions = object.extensions || {};\n        // TODO - clobber or merge?\n        // @ts-ignore\n        object.extensions[extensionName] = data;\n        this.registerUsedExtension(extensionName);\n        return this;\n    }\n    setObjectExtension(object, extensionName, data) {\n        const extensions = object.extensions || {};\n        extensions[extensionName] = data;\n        // TODO - add to usedExtensions...\n    }\n    removeObjectExtension(object, extensionName) {\n        const extensions = object?.extensions || {};\n        if (extensions[extensionName]) {\n            this.json.extensionsRemoved = this.json.extensionsRemoved || [];\n            const extensionsRemoved = this.json.extensionsRemoved;\n            if (!extensionsRemoved.includes(extensionName)) {\n                extensionsRemoved.push(extensionName);\n            }\n        }\n        delete extensions[extensionName];\n    }\n    /**\n     * Add to standard GLTF top level extension object, mark as used\n     */\n    addExtension(extensionName, extensionData = {}) {\n        assert(extensionData);\n        this.json.extensions = this.json.extensions || {};\n        this.json.extensions[extensionName] = extensionData;\n        this.registerUsedExtension(extensionName);\n        return extensionData;\n    }\n    /**\n     * Standard GLTF top level extension object, mark as used and required\n     */\n    addRequiredExtension(extensionName, extensionData = {}) {\n        assert(extensionData);\n        this.addExtension(extensionName, extensionData);\n        this.registerRequiredExtension(extensionName);\n        return extensionData;\n    }\n    /**\n     * Add extensionName to list of used extensions\n     */\n    registerUsedExtension(extensionName) {\n        this.json.extensionsUsed = this.json.extensionsUsed || [];\n        if (!this.json.extensionsUsed.find((ext) => ext === extensionName)) {\n            this.json.extensionsUsed.push(extensionName);\n        }\n    }\n    /**\n     * Add extensionName to list of required extensions\n     */\n    registerRequiredExtension(extensionName) {\n        this.registerUsedExtension(extensionName);\n        this.json.extensionsRequired = this.json.extensionsRequired || [];\n        if (!this.json.extensionsRequired.find((ext) => ext === extensionName)) {\n            this.json.extensionsRequired.push(extensionName);\n        }\n    }\n    /**\n     * Removes an extension from the top-level list\n     */\n    removeExtension(extensionName) {\n        if (this.json.extensions?.[extensionName]) {\n            this.json.extensionsRemoved = this.json.extensionsRemoved || [];\n            const extensionsRemoved = this.json.extensionsRemoved;\n            if (!extensionsRemoved.includes(extensionName)) {\n                extensionsRemoved.push(extensionName);\n            }\n        }\n        if (this.json.extensions) {\n            delete this.json.extensions[extensionName];\n        }\n        if (this.json.extensionsRequired) {\n            this._removeStringFromArray(this.json.extensionsRequired, extensionName);\n        }\n        if (this.json.extensionsUsed) {\n            this._removeStringFromArray(this.json.extensionsUsed, extensionName);\n        }\n    }\n    /**\n     *  Set default scene which is to be displayed at load time\n     */\n    setDefaultScene(sceneIndex) {\n        this.json.scene = sceneIndex;\n    }\n    /**\n     * @todo: add more properties for scene initialization:\n     *   name`, `extensions`, `extras`\n     *   https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#reference-scene\n     */\n    addScene(scene) {\n        const { nodeIndices } = scene;\n        this.json.scenes = this.json.scenes || [];\n        this.json.scenes.push({ nodes: nodeIndices });\n        return this.json.scenes.length - 1;\n    }\n    /**\n     * @todo: add more properties for node initialization:\n     *   `name`, `extensions`, `extras`, `camera`, `children`, `skin`, `rotation`, `scale`, `translation`, `weights`\n     *   https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#node\n     */\n    addNode(node) {\n        const { meshIndex, matrix } = node;\n        this.json.nodes = this.json.nodes || [];\n        const nodeData = { mesh: meshIndex };\n        if (matrix) {\n            // @ts-ignore\n            nodeData.matrix = matrix;\n        }\n        this.json.nodes.push(nodeData);\n        return this.json.nodes.length - 1;\n    }\n    /** Adds a mesh to the json part */\n    addMesh(mesh) {\n        const { attributes, indices, material, mode = 4 } = mesh;\n        const accessors = this._addAttributes(attributes);\n        const glTFMesh = {\n            primitives: [\n                {\n                    attributes: accessors,\n                    mode\n                }\n            ]\n        };\n        if (indices) {\n            const indicesAccessor = this._addIndices(indices);\n            // @ts-ignore\n            glTFMesh.primitives[0].indices = indicesAccessor;\n        }\n        if (Number.isFinite(material)) {\n            // @ts-ignore\n            glTFMesh.primitives[0].material = material;\n        }\n        this.json.meshes = this.json.meshes || [];\n        this.json.meshes.push(glTFMesh);\n        return this.json.meshes.length - 1;\n    }\n    addPointCloud(attributes) {\n        // @ts-ignore\n        const accessorIndices = this._addAttributes(attributes);\n        const glTFMesh = {\n            primitives: [\n                {\n                    attributes: accessorIndices,\n                    mode: 0 // GL.POINTS\n                }\n            ]\n        };\n        this.json.meshes = this.json.meshes || [];\n        this.json.meshes.push(glTFMesh);\n        return this.json.meshes.length - 1;\n    }\n    /**\n     * Adds a binary image. Builds glTF \"JSON metadata\" and saves buffer reference\n     * Buffer will be copied into BIN chunk during \"pack\"\n     * Currently encodes as glTF image\n     * @param imageData\n     * @param mimeType\n     */\n    addImage(imageData, mimeTypeOpt) {\n        // If image is referencing a bufferView instead of URI, mimeType must be defined:\n        //   https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#images\n        //   \"a reference to a bufferView; in that case mimeType must be defined.\"\n        const metadata = getBinaryImageMetadata(imageData);\n        const mimeType = mimeTypeOpt || metadata?.mimeType;\n        const bufferViewIndex = this.addBufferView(imageData);\n        const glTFImage = {\n            bufferView: bufferViewIndex,\n            mimeType\n        };\n        this.json.images = this.json.images || [];\n        this.json.images.push(glTFImage);\n        return this.json.images.length - 1;\n    }\n    /**\n     * Add one untyped source buffer, create a matching glTF `bufferView`, and return its index\n     * @param buffer\n     */\n    addBufferView(buffer, bufferIndex = 0, byteOffset = this.byteLength) {\n        const byteLength = buffer.byteLength;\n        assert(Number.isFinite(byteLength));\n        // Add this buffer to the list of buffers to be written to the body.\n        this.sourceBuffers = this.sourceBuffers || [];\n        this.sourceBuffers.push(buffer);\n        const glTFBufferView = {\n            buffer: bufferIndex,\n            // Write offset from the start of the binary body\n            byteOffset,\n            byteLength\n        };\n        // We've now added the contents to the body, so update the total length\n        // Every sub-chunk needs to be 4-byte align ed\n        this.byteLength += padToNBytes(byteLength, 4);\n        // Add a bufferView indicating start and length of this binary sub-chunk\n        this.json.bufferViews = this.json.bufferViews || [];\n        this.json.bufferViews.push(glTFBufferView);\n        return this.json.bufferViews.length - 1;\n    }\n    /**\n     * Adds an accessor to a bufferView\n     * @param bufferViewIndex\n     * @param accessor\n     */\n    addAccessor(bufferViewIndex, accessor) {\n        const glTFAccessor = {\n            bufferView: bufferViewIndex,\n            // @ts-ignore\n            type: getAccessorTypeFromSize(accessor.size),\n            // @ts-ignore\n            componentType: accessor.componentType,\n            // @ts-ignore\n            count: accessor.count,\n            // @ts-ignore\n            max: accessor.max,\n            // @ts-ignore\n            min: accessor.min\n        };\n        this.json.accessors = this.json.accessors || [];\n        this.json.accessors.push(glTFAccessor);\n        return this.json.accessors.length - 1;\n    }\n    /**\n     * Add a binary buffer. Builds glTF \"JSON metadata\" and saves buffer reference\n     * Buffer will be copied into BIN chunk during \"pack\"\n     * Currently encodes buffers as glTF accessors, but this could be optimized\n     * @param sourceBuffer\n     * @param accessor\n     */\n    addBinaryBuffer(sourceBuffer, accessor = { size: 3 }) {\n        const bufferViewIndex = this.addBufferView(sourceBuffer);\n        // @ts-ignore\n        let minMax = { min: accessor.min, max: accessor.max };\n        if (!minMax.min || !minMax.max) {\n            // @ts-ignore\n            minMax = this._getAccessorMinMax(sourceBuffer, accessor.size);\n        }\n        const accessorDefaults = {\n            // @ts-ignore\n            size: accessor.size,\n            componentType: getComponentTypeFromArray(sourceBuffer),\n            // @ts-ignore\n            count: Math.round(sourceBuffer.length / accessor.size),\n            min: minMax.min,\n            max: minMax.max\n        };\n        return this.addAccessor(bufferViewIndex, Object.assign(accessorDefaults, accessor));\n    }\n    /**\n     * Adds a texture to the json part\n     * @todo: add more properties for texture initialization\n     * `sampler`, `name`, `extensions`, `extras`\n     * https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#texture\n     */\n    addTexture(texture) {\n        const { imageIndex } = texture;\n        const glTFTexture = {\n            source: imageIndex\n        };\n        this.json.textures = this.json.textures || [];\n        this.json.textures.push(glTFTexture);\n        return this.json.textures.length - 1;\n    }\n    /** Adds a material to the json part */\n    addMaterial(pbrMaterialInfo) {\n        this.json.materials = this.json.materials || [];\n        this.json.materials.push(pbrMaterialInfo);\n        return this.json.materials.length - 1;\n    }\n    /** Pack the binary chunk */\n    createBinaryChunk() {\n        // Encoder expects this array undefined or empty\n        this.gltf.buffers = [];\n        // Allocate total array\n        const totalByteLength = this.byteLength;\n        const arrayBuffer = new ArrayBuffer(totalByteLength);\n        const targetArray = new Uint8Array(arrayBuffer);\n        // Copy each array into\n        let dstByteOffset = 0;\n        for (const sourceBuffer of this.sourceBuffers || []) {\n            dstByteOffset = copyToArray(sourceBuffer, targetArray, dstByteOffset);\n        }\n        // Update the glTF BIN CHUNK byte length\n        if (this.json?.buffers?.[0]) {\n            this.json.buffers[0].byteLength = totalByteLength;\n        }\n        else {\n            this.json.buffers = [{ byteLength: totalByteLength }];\n        }\n        // Save generated arrayBuffer\n        this.gltf.binary = arrayBuffer;\n        // Put arrayBuffer to sourceBuffers for possible additional writing data in the chunk\n        this.sourceBuffers = [arrayBuffer];\n    }\n    // PRIVATE\n    _removeStringFromArray(array, string) {\n        let found = true;\n        while (found) {\n            const index = array.indexOf(string);\n            if (index > -1) {\n                array.splice(index, 1);\n            }\n            else {\n                found = false;\n            }\n        }\n    }\n    /**\n     * Add attributes to buffers and create `attributes` object which is part of `mesh`\n     */\n    _addAttributes(attributes = {}) {\n        const result = {};\n        for (const attributeKey in attributes) {\n            const attributeData = attributes[attributeKey];\n            const attrName = this._getGltfAttributeName(attributeKey);\n            const accessor = this.addBinaryBuffer(attributeData.value, attributeData);\n            result[attrName] = accessor;\n        }\n        return result;\n    }\n    /**\n     * Add indices to buffers\n     */\n    _addIndices(indices) {\n        return this.addBinaryBuffer(indices, { size: 1 });\n    }\n    /**\n     * Deduce gltf specific attribue name from input attribute name\n     */\n    _getGltfAttributeName(attributeName) {\n        switch (attributeName.toLowerCase()) {\n            case 'position':\n            case 'positions':\n            case 'vertices':\n                return 'POSITION';\n            case 'normal':\n            case 'normals':\n                return 'NORMAL';\n            case 'color':\n            case 'colors':\n                return 'COLOR_0';\n            case 'texcoord':\n            case 'texcoords':\n                return 'TEXCOORD_0';\n            default:\n                return attributeName;\n        }\n    }\n    /**\n     * Calculate `min` and `max` arrays of accessor according to spec:\n     * https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#reference-accessor\n     */\n    _getAccessorMinMax(buffer, size) {\n        const result = { min: null, max: null };\n        if (buffer.length < size) {\n            return result;\n        }\n        // @ts-ignore\n        result.min = [];\n        // @ts-ignore\n        result.max = [];\n        const initValues = buffer.subarray(0, size);\n        for (const value of initValues) {\n            // @ts-ignore\n            result.min.push(value);\n            // @ts-ignore\n            result.max.push(value);\n        }\n        for (let index = size; index < buffer.length; index += size) {\n            for (let componentIndex = 0; componentIndex < size; componentIndex++) {\n                // @ts-ignore\n                result.min[0 + componentIndex] = Math.min(\n                // @ts-ignore\n                result.min[0 + componentIndex], buffer[index + componentIndex]);\n                // @ts-ignore\n                result.max[0 + componentIndex] = Math.max(\n                // @ts-ignore\n                result.max[0 + componentIndex], buffer[index + componentIndex]);\n            }\n        }\n        return result;\n    }\n}\n", "/**\n * loaders.gl, MIT license\n *\n * Shared code for 3DTiles extensions:\n * * EXT_feature_metadata\n * * EXT_mesh_features\n * * EXT_structural_metadata\n */\nimport { getComponentTypeFromArray } from \"../../gltf-utils/gltf-utils.js\";\nimport { getImageData } from '@loaders.gl/images';\nfunction emod(n) {\n    return ((n % 1) + 1) % 1;\n}\nconst ATTRIBUTE_TYPE_TO_COMPONENTS = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16,\n    BOOLEAN: 1,\n    STRING: 1,\n    ENUM: 1\n};\nconst ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY = {\n    INT8: Int8Array,\n    UINT8: Uint8Array,\n    INT16: Int16Array,\n    UINT16: Uint16Array,\n    INT32: Int32Array,\n    UINT32: Uint32Array,\n    INT64: BigInt64Array,\n    UINT64: BigUint64Array,\n    FLOAT32: Float32Array,\n    FLOAT64: Float64Array\n};\nconst ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE = {\n    INT8: 1,\n    UINT8: 1,\n    INT16: 2,\n    UINT16: 2,\n    INT32: 4,\n    UINT32: 4,\n    INT64: 8,\n    UINT64: 8,\n    FLOAT32: 4,\n    FLOAT64: 8\n};\nexport function getArrayElementByteSize(attributeType, componentType) {\n    return (ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE[componentType] *\n        ATTRIBUTE_TYPE_TO_COMPONENTS[attributeType]);\n}\n/**\n * Gets offset array from `arrayOffsets` or `stringOffsets`.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param bufferViewIndex - Buffer view index\n * @param offsetType - The type of values in `arrayOffsets` or `stringOffsets`.\n * @param numberOfElements - The number of elements in each property array.\n * @returns Array of values offsets. The number of offsets in the array is equal to `numberOfElements` plus one.\n */\nexport function getOffsetsForProperty(scenegraph, bufferViewIndex, offsetType, numberOfElements) {\n    if (offsetType !== 'UINT8' &&\n        offsetType !== 'UINT16' &&\n        offsetType !== 'UINT32' &&\n        offsetType !== 'UINT64') {\n        return null;\n    }\n    const arrayOffsetsBytes = scenegraph.getTypedArrayForBufferView(bufferViewIndex);\n    const arrayOffsets = convertRawBufferToMetadataArray(arrayOffsetsBytes, 'SCALAR', // offsets consist of ONE component\n    offsetType, numberOfElements + 1 // The number of offsets is equal to the property table `count` plus one.\n    );\n    // We don't support BigInt offsets at the moment. It requires additional logic and potential issues in Safari\n    if (arrayOffsets instanceof BigInt64Array || arrayOffsets instanceof BigUint64Array) {\n        return null;\n    }\n    return arrayOffsets;\n}\n/**\n * Converts raw bytes that are in the buffer to an array of the type defined by the schema.\n * @param data - Raw bytes in the buffer.\n * @param attributeType - SCALAR, VECN, MATN.\n * @param componentType - Type of the component in elements, e.g. 'UINT8' or 'FLOAT32'.\n * @param elementCount - Number of elements in the array. Default value is 1.\n * @returns Data array\n */\nexport function convertRawBufferToMetadataArray(data, attributeType, componentType, elementCount = 1) {\n    const numberOfComponents = ATTRIBUTE_TYPE_TO_COMPONENTS[attributeType];\n    const ArrayType = ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY[componentType];\n    const size = ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE[componentType];\n    const length = elementCount * numberOfComponents;\n    const byteLength = length * size;\n    let buffer = data.buffer;\n    let offset = data.byteOffset;\n    if (offset % size !== 0) {\n        const bufferArray = new Uint8Array(buffer);\n        buffer = bufferArray.slice(offset, offset + byteLength).buffer;\n        offset = 0;\n    }\n    return new ArrayType(buffer, offset, length);\n}\n/**\n * Processes data encoded in the texture associated with the primitive.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param textureInfo - Reference to the texture where extension data are stored.\n * @param primitive - Primitive object in the mesh.\n * @returns Array of data taken. Null if data can't be taken from the texture.\n */\nexport function getPrimitiveTextureData(scenegraph, textureInfo, primitive) {\n    /*\n      texture.index is an index for the \"textures\" array.\n      The texture object referenced by this index looks like this:\n      {\n      \"sampler\": 0,\n      \"source\": 0\n      }\n      \"sampler\" is an index for the \"samplers\" array\n      \"source\" is an index for the \"images\" array that contains data stored in rgba channels of the image.\n  \n      texture.texCoord is a number-suffix (like 1) for an attribute like \"TEXCOORD_1\" in meshes.primitives\n      The value of \"TEXCOORD_1\" is an accessor that is used to get coordinates.\n      These coordinates are being used to get data from the image.\n      \n      Default for texture.texCoord is 0\n      @see https://github.com/CesiumGS/glTF/blob/3d-tiles-next/specification/2.0/schema/textureInfo.schema.json\n    */\n    const texCoordAccessorKey = `TEXCOORD_${textureInfo.texCoord || 0}`;\n    const texCoordAccessorIndex = primitive.attributes[texCoordAccessorKey];\n    const textureCoordinates = scenegraph.getTypedArrayForAccessor(texCoordAccessorIndex);\n    const json = scenegraph.gltf.json;\n    const textureIndex = textureInfo.index;\n    const imageIndex = json.textures?.[textureIndex]?.source;\n    if (typeof imageIndex !== 'undefined') {\n        const mimeType = json.images?.[imageIndex]?.mimeType;\n        const parsedImage = scenegraph.gltf.images?.[imageIndex];\n        // Checking for width is to prevent handling Un-processed images (e.g. [analyze] stage, where loadImages option is set to false)\n        if (parsedImage && typeof parsedImage.width !== 'undefined') {\n            const textureData = [];\n            for (let index = 0; index < textureCoordinates.length; index += 2) {\n                const value = getImageValueByCoordinates(parsedImage, mimeType, textureCoordinates, index, textureInfo.channels);\n                textureData.push(value);\n            }\n            return textureData;\n        }\n    }\n    return [];\n}\n/**\n * Puts property data to attributes.\n * It creates corresponding buffer, bufferView and accessor\n * so the data can be accessed like regular data stored in buffers.\n * @param scenegraph - Scenegraph object.\n * @param attributeName - Name of the attribute.\n * @param propertyData - Property data to store.\n * @param featureTable - Array where unique data from the property data are being stored.\n * @param primitive - Primitive object.\n */\nexport function primitivePropertyDataToAttributes(scenegraph, attributeName, propertyData, featureTable, primitive) {\n    // No reason to create an empty buffer if there is no property data to store.\n    if (!propertyData?.length) {\n        return;\n    }\n    /*\n      featureTable will contain unique values, e.g.\n      propertyData = [24, 35, 28, 24]\n      featureTable = [24, 35, 28]\n      featureIndices will contain indices that refer featureTextureTable, e.g.\n      featureIndices = [0, 1, 2, 0]\n    */\n    const featureIndices = [];\n    for (const texelData of propertyData) {\n        let index = featureTable.findIndex((item) => item === texelData);\n        if (index === -1) {\n            index = featureTable.push(texelData) - 1;\n        }\n        featureIndices.push(index);\n    }\n    const typedArray = new Uint32Array(featureIndices);\n    const bufferIndex = scenegraph.gltf.buffers.push({\n        arrayBuffer: typedArray.buffer,\n        byteOffset: typedArray.byteOffset,\n        byteLength: typedArray.byteLength\n    }) - 1;\n    const bufferViewIndex = scenegraph.addBufferView(typedArray, bufferIndex, 0);\n    const accessorIndex = scenegraph.addAccessor(bufferViewIndex, {\n        size: 1,\n        componentType: getComponentTypeFromArray(typedArray),\n        count: typedArray.length\n    });\n    primitive.attributes[attributeName] = accessorIndex;\n}\n/**\n * Gets the value from the texture by coordinates provided.\n * @param parsedImage - Image where the data are stored.\n * @param mimeType - MIME type.\n * @param textureCoordinates - uv coordinates to access data in the image.\n * @param index - Index of uv coordinates in the array textureCoordinates.\n * @param channels - Image channels where data are stored.\n *  Channels of an RGBA texture are numbered 0..3 respectively.\n *  For Ext_mesh_features and EXT_strucural_metadata the channels default is [0]\n *  @see https://github.com/CesiumGS/glTF/blob/3d-tiles-next/extensions/2.0/Vendor/EXT_mesh_features/schema/featureIdTexture.schema.json\n *  @see https://github.com/CesiumGS/glTF/blob/3d-tiles-next/extensions/2.0/Vendor/EXT_structural_metadata/schema/propertyTexture.property.schema.json\n * @returns Value taken from the image.\n */\nfunction getImageValueByCoordinates(parsedImage, mimeType, textureCoordinates, index, channels = [0]) {\n    const CHANNELS_MAP = {\n        r: { offset: 0, shift: 0 },\n        g: { offset: 1, shift: 8 },\n        b: { offset: 2, shift: 16 },\n        a: { offset: 3, shift: 24 }\n    };\n    const u = textureCoordinates[index];\n    const v = textureCoordinates[index + 1];\n    let components = 1;\n    if (mimeType && (mimeType.indexOf('image/jpeg') !== -1 || mimeType.indexOf('image/png') !== -1))\n        components = 4;\n    const offset = coordinatesToOffset(u, v, parsedImage, components);\n    let value = 0;\n    for (const c of channels) {\n        /*\n        According to the EXT_feature_metadata extension specification:\n          Channels are labeled by rgba and are swizzled with a string of 1-4 characters.\n        According to the EXT_mesh_features extension specification:\n          The channels array contains non-negative integer values corresponding to channels of the source texture that the feature ID consists of.\n          Channels of an RGBA texture are numbered 0–3 respectively.\n        Function getImageValueByCoordinates is used to process both extensions.\n        So, there should be possible to get the element of CHANNELS_MAP by either index (0, 1, 2, 3) or key (r, g, b, a).\n        */\n        const map = typeof c === 'number' ? Object.values(CHANNELS_MAP)[c] : CHANNELS_MAP[c];\n        const imageOffset = offset + map.offset;\n        const imageData = getImageData(parsedImage);\n        if (imageData.data.length <= imageOffset) {\n            throw new Error(`${imageData.data.length} <= ${imageOffset}`);\n        }\n        const imageValue = imageData.data[imageOffset];\n        value |= imageValue << map.shift;\n    }\n    return value;\n}\n/**\n * Retrieves the offset in the image where the data are stored.\n * @param u - u-coordinate.\n * @param v - v-coordinate.\n * @param parsedImage - Image where the data are stored.\n * @param componentsCount - Number of components the data consists of.\n * @returns Offset in the image where the data are stored.\n */\nfunction coordinatesToOffset(u, v, parsedImage, componentsCount = 1) {\n    const w = parsedImage.width;\n    const iX = emod(u) * (w - 1);\n    const indX = Math.round(iX);\n    const h = parsedImage.height;\n    const iY = emod(v) * (h - 1);\n    const indY = Math.round(iY);\n    const components = parsedImage.components ? parsedImage.components : componentsCount;\n    // components is a number of channels in the image\n    const offset = (indY * w + indX) * components;\n    return offset;\n}\n/**\n * Parses variable-length array data.\n * In this case every value of the property in the table will be an array\n * of arbitrary length.\n * @param valuesData - Values in a flat typed array.\n * @param numberOfElements - Number of rows in the property table.\n * @param arrayOffsets - Offsets of nested arrays in the flat values array.\n * @param valuesDataBytesLength - Data byte length.\n * @param valueSize - Value size in bytes.\n * @returns Array of typed arrays.\n */\nexport function parseVariableLengthArrayNumeric(valuesData, numberOfElements, arrayOffsets, valuesDataBytesLength, valueSize) {\n    const attributeValueArray = [];\n    for (let index = 0; index < numberOfElements; index++) {\n        const arrayOffset = arrayOffsets[index];\n        const arrayByteSize = arrayOffsets[index + 1] - arrayOffsets[index];\n        if (arrayByteSize + arrayOffset > valuesDataBytesLength) {\n            break;\n        }\n        const typedArrayOffset = arrayOffset / valueSize;\n        const elementCount = arrayByteSize / valueSize;\n        attributeValueArray.push(valuesData.slice(typedArrayOffset, typedArrayOffset + elementCount));\n    }\n    return attributeValueArray;\n}\n/**\n * Parses fixed-length array data.\n * In this case every value of the property in the table will be an array\n * of constant length equal to `arrayCount`.\n * @param valuesData - Values in a flat typed array.\n * @param numberOfElements - Number of rows in the property table.\n * @param arrayCount - Nested arrays length.\n * @returns Array of typed arrays.\n */\nexport function parseFixedLengthArrayNumeric(valuesData, numberOfElements, arrayCount) {\n    const attributeValueArray = [];\n    for (let index = 0; index < numberOfElements; index++) {\n        const elementOffset = index * arrayCount;\n        attributeValueArray.push(valuesData.slice(elementOffset, elementOffset + arrayCount));\n    }\n    return attributeValueArray;\n}\n/**\n * Decodes properties of string type from binary source.\n * @param numberOfElements - The number of elements in each property array that propertyTableProperty contains. It's a number of rows in the table.\n * @param valuesDataBytes - Data taken from values property of the property table property.\n * @param arrayOffsets - Offsets for variable-length arrays. It's null for fixed-length arrays or scalar types.\n * @param stringOffsets - Index of the buffer view containing offsets for strings. It should be available for string type.\n * @returns String property values\n */\nexport function getPropertyDataString(numberOfElements, valuesDataBytes, arrayOffsets, stringOffsets) {\n    if (arrayOffsets) {\n        // TODO: implement it as soon as we have the corresponding tileset\n        throw new Error('Not implemented - arrayOffsets for strings is specified');\n    }\n    if (stringOffsets) {\n        const stringsArray = [];\n        const textDecoder = new TextDecoder('utf8');\n        let stringOffset = 0;\n        for (let index = 0; index < numberOfElements; index++) {\n            const stringByteSize = stringOffsets[index + 1] - stringOffsets[index];\n            if (stringByteSize + stringOffset <= valuesDataBytes.length) {\n                const stringData = valuesDataBytes.subarray(stringOffset, stringByteSize + stringOffset);\n                const stringAttribute = textDecoder.decode(stringData);\n                stringsArray.push(stringAttribute);\n                stringOffset += stringByteSize;\n            }\n        }\n        return stringsArray;\n    }\n    return [];\n}\n", "import { GLTFScenegraph } from \"../api/gltf-scenegraph.js\";\nimport { convertRawBufferToMetadataArray, getPrimitiveTextureData, primitivePropertyDataToAttributes, getArrayElementByteSize, getOffsetsForProperty, parseVariableLengthArrayNumeric, parseFixedLengthArrayNumeric, getPropertyDataString } from \"./utils/3d-tiles-utils.js\";\nconst EXT_STRUCTURAL_METADATA_NAME = 'EXT_structural_metadata';\nexport const name = EXT_STRUCTURAL_METADATA_NAME;\nexport async function decode(gltfData, options) {\n    const scenegraph = new GLTFScenegraph(gltfData);\n    decodeExtStructuralMetadata(scenegraph, options);\n}\n/*\n// Example of the extension.\n// See more info at https://github.com/CesiumGS/glTF/tree/3d-tiles-next/extensions/2.0/Vendor/EXT_structural_metadata\nconst extensions = {\n  \"extensions\": {\n    \"EXT_structural_metadata\": {\n      \"schema\": {\n        \"classes\": {\n          \"tree\": {\n            \"name\": \"Tree\",\n            \"description\": \"Woody, perennial plant.\",\n            \"properties\": {\n              \"species\": {\n                \"description\": \"Type of tree.\",\n                \"type\": \"ENUM\",\n                \"enumType\": \"speciesEnum\",\n                \"required\": true\n              },\n              \"age\": {\n                \"description\": \"The age of the tree, in years\",\n                \"type\": \"SCALAR\",\n                \"componentType\": \"UINT8\",\n                \"required\": true\n              }\n            }\n          }\n        },\n        \"enums\": {\n          \"speciesEnum\": {\n            \"name\": \"Species\",\n            \"description\": \"An example enum for tree species.\",\n            // valueType is not defined here. Default is \"UINT16\"\n            \"values\": [\n              { \"name\": \"Unspecified\", \"value\": 0 },\n              { \"name\": \"Oak\", \"value\": 1 }\n            ]\n          }\n        }\n      },\n      \"propertyTables\": [{\n        \"name\": \"tree_survey_2021-09-29\",\n        \"class\": \"tree\",\n        \"count\": 10,  // The number of elements in each property array (in `species`, in `age`).\n        \"properties\": {\n          \"species\": {\n            \"values\": 0, // It's an index of the buffer view containing property values.\n          },\n          \"age\": {\n            \"values\": 1\n          }\n        }\n      }]\n    }\n  }\n}\n*/\n/**\n * Decodes feature metadata from extension.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param options - GLTFLoader options.\n */\nfunction decodeExtStructuralMetadata(scenegraph, options) {\n    // Decoding metadata involves buffers processing.\n    // So, if buffers have not been loaded, there is no reason to process metadata.\n    if (!options.gltf?.loadBuffers) {\n        return;\n    }\n    const extension = scenegraph.getExtension(EXT_STRUCTURAL_METADATA_NAME);\n    if (!extension) {\n        return;\n    }\n    if (options.gltf?.loadImages) {\n        decodePropertyTextures(scenegraph, extension);\n    }\n    decodePropertyTables(scenegraph, extension);\n}\n/**\n * Processes the data stored in the textures\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param extension - Top-level extension.\n */\nfunction decodePropertyTextures(scenegraph, extension) {\n    const propertyTextures = extension.propertyTextures;\n    const json = scenegraph.gltf.json;\n    if (propertyTextures && json.meshes) {\n        // Iterate through all meshes/primitives.\n        for (const mesh of json.meshes) {\n            for (const primitive of mesh.primitives) {\n                processPrimitivePropertyTextures(scenegraph, propertyTextures, primitive, extension);\n            }\n        }\n    }\n}\n/**\n * Processes the data stored in the property tables.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param extension - Top-level extension.\n */\nfunction decodePropertyTables(scenegraph, extension) {\n    const schema = extension.schema;\n    if (!schema) {\n        return;\n    }\n    const schemaClasses = schema.classes;\n    const propertyTables = extension.propertyTables;\n    if (schemaClasses && propertyTables) {\n        for (const schemaName in schemaClasses) {\n            const propertyTable = findPropertyTableByClass(propertyTables, schemaName);\n            if (propertyTable) {\n                processPropertyTable(scenegraph, schema, propertyTable);\n            }\n        }\n    }\n}\n/**\n * Finds the property table by class name.\n * @param propertyTables - propertyTable definition taken from the top-level extension.\n * @param schemaClassName - class name in the extension schema.\n */\nfunction findPropertyTableByClass(propertyTables, schemaClassName) {\n    for (const propertyTable of propertyTables) {\n        if (propertyTable.class === schemaClassName) {\n            return propertyTable;\n        }\n    }\n    return null;\n}\n/**\n * Takes data from property textures reffered by the primitive.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param propertyTextures - propertyTexture definition taken from the top-level extention.\n * @param primitive - Primitive object.\n * @param extension - Top-level extension.\n */\nfunction processPrimitivePropertyTextures(scenegraph, propertyTextures, primitive, extension) {\n    if (!propertyTextures) {\n        return;\n    }\n    const primitiveExtension = primitive.extensions?.[EXT_STRUCTURAL_METADATA_NAME];\n    const primitivePropertyTextureIndices = primitiveExtension?.propertyTextures;\n    if (!primitivePropertyTextureIndices) {\n        return;\n    }\n    for (const primitivePropertyTextureIndex of primitivePropertyTextureIndices) {\n        const propertyTexture = propertyTextures[primitivePropertyTextureIndex];\n        processPrimitivePropertyTexture(scenegraph, propertyTexture, primitive, extension);\n    }\n}\n/**\n * Takes property data from the texture pointed by the primitive and appends them to `exension.data`.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param propertyTexture - propertyTexture definition taken from the top-level extension.\n * @param primitive - Primitive object.\n * @param extension - Top-level extension.\n */\nfunction processPrimitivePropertyTexture(scenegraph, propertyTexture, primitive, extension) {\n    if (!propertyTexture.properties) {\n        return;\n    }\n    if (!extension.dataAttributeNames) {\n        extension.dataAttributeNames = [];\n    }\n    /* Iterate through all properties defined in propertyTexture, e.g. \"speed\" and \"direction\":\n      {\n        \"class\": \"wind\",\n        \"properties\": {\n          \"speed\": {\n            \"index\": 0,\n            \"texCoord\": 0,\n            \"channels\": [0]\n          },\n          \"direction\": {\n            \"index\": 0,\n            \"texCoord\": 0,\n            \"channels\": [1, 2]\n          }\n        }\n      }\n    */\n    const className = propertyTexture.class;\n    for (const propertyName in propertyTexture.properties) {\n        // propertyName has values like \"speed\", \"direction\"\n        // Make attributeName as a combination of the class name and the propertyName like \"wind_speed\" or \"wind_direction\"\n        const attributeName = `${className}_${propertyName}`;\n        const textureInfoTopLevel = propertyTexture.properties?.[propertyName];\n        if (!textureInfoTopLevel) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        // The data taken from all meshes/primitives (the same property, e.g. \"speed\" or \"direction\") will be combined into one array and saved in textureInfoTopLevel.data\n        // Initially textureInfoTopLevel.data will be initialized with an empty array.\n        if (!textureInfoTopLevel.data) {\n            textureInfoTopLevel.data = [];\n        }\n        const featureTextureTable = textureInfoTopLevel.data;\n        const propertyData = getPrimitiveTextureData(scenegraph, textureInfoTopLevel, primitive);\n        if (propertyData === null) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        primitivePropertyDataToAttributes(scenegraph, attributeName, propertyData, featureTextureTable, primitive);\n        textureInfoTopLevel.data = featureTextureTable;\n        extension.dataAttributeNames.push(attributeName);\n    }\n}\n/**\n * Navigates through all properies in the property table, gets properties data,\n * and put the data to `propertyTable.data` as an array.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param schema - schema object.\n * @param propertyTable - propertyTable definition taken from the top-level extension.\n */\nfunction processPropertyTable(scenegraph, schema, propertyTable) {\n    const schemaClass = schema.classes?.[propertyTable.class];\n    if (!schemaClass) {\n        throw new Error(`Incorrect data in the EXT_structural_metadata extension: no schema class with name ${propertyTable.class}`);\n    }\n    const numberOfElements = propertyTable.count; // `propertyTable.count` is a number of elements in each property array.\n    for (const propertyName in schemaClass.properties) {\n        const classProperty = schemaClass.properties[propertyName];\n        const propertyTableProperty = propertyTable.properties?.[propertyName];\n        if (propertyTableProperty) {\n            // Getting all elements (`numberOfElements`) of the array in the `propertyTableProperty`\n            const data = getPropertyDataFromBinarySource(scenegraph, schema, classProperty, numberOfElements, propertyTableProperty);\n            propertyTableProperty.data = data;\n        }\n    }\n}\n/**\n * Decodes a propertyTable column from binary source based on property type.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param schema - Schema object.\n * @param classProperty - class property object.\n * @param numberOfElements - The number of elements in each property array that propertyTableProperty contains. It's a number of rows in the table.\n * @param propertyTableProperty - propertyTable's property metadata.\n * @returns {string[] | number[] | string[][] | number[][]}\n */\nfunction getPropertyDataFromBinarySource(scenegraph, schema, classProperty, numberOfElements, propertyTableProperty) {\n    let data = [];\n    const valuesBufferView = propertyTableProperty.values;\n    const valuesDataBytes = scenegraph.getTypedArrayForBufferView(valuesBufferView);\n    const arrayOffsets = getArrayOffsetsForProperty(scenegraph, classProperty, propertyTableProperty, numberOfElements);\n    const stringOffsets = getStringOffsetsForProperty(scenegraph, propertyTableProperty, numberOfElements);\n    switch (classProperty.type) {\n        case 'SCALAR':\n        case 'VEC2':\n        case 'VEC3':\n        case 'VEC4':\n        case 'MAT2':\n        case 'MAT3':\n        case 'MAT4': {\n            data = getPropertyDataNumeric(classProperty, numberOfElements, valuesDataBytes, arrayOffsets);\n            break;\n        }\n        case 'BOOLEAN': {\n            // TODO: implement it as soon as we have the corresponding tileset\n            throw new Error(`Not implemented - classProperty.type=${classProperty.type}`);\n        }\n        case 'STRING': {\n            data = getPropertyDataString(numberOfElements, valuesDataBytes, arrayOffsets, stringOffsets);\n            break;\n        }\n        case 'ENUM': {\n            data = getPropertyDataENUM(schema, classProperty, numberOfElements, valuesDataBytes, arrayOffsets);\n            break;\n        }\n        default:\n            throw new Error(`Unknown classProperty type ${classProperty.type}`);\n    }\n    return data;\n}\n/**\n * Parses propertyTable.property.arrayOffsets that are offsets of sub-arrays in a flatten array of values.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param classProperty - class property object.\n * @param propertyTableProperty - propertyTable's property metadata.\n * @param numberOfElements - The number of elements in each property array that propertyTableProperty contains. It's a number of rows in the table.\n * @returns Typed array with offset values.\n * @see https://github.com/CesiumGS/glTF/blob/2976f1183343a47a29e4059a70961371cd2fcee8/extensions/2.0/Vendor/EXT_structural_metadata/schema/propertyTable.property.schema.json#L21\n */\nfunction getArrayOffsetsForProperty(scenegraph, classProperty, propertyTableProperty, numberOfElements) {\n    if (classProperty.array &&\n        // `count` is a number of array elements. May only be defined when `array` is true.\n        // If `count` is NOT defined, it's a VARIABLE-length array\n        typeof classProperty.count === 'undefined' &&\n        // `arrayOffsets` is an index of the buffer view containing offsets for variable-length arrays.\n        typeof propertyTableProperty.arrayOffsets !== 'undefined') {\n        // Data are in a VARIABLE-length array\n        return getOffsetsForProperty(scenegraph, propertyTableProperty.arrayOffsets, propertyTableProperty.arrayOffsetType || 'UINT32', numberOfElements);\n    }\n    return null;\n}\n/**\n * Parses propertyTable.property.stringOffsets.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param propertyTableProperty - propertyTable's property metadata.\n * @param numberOfElements - The number of elements in each property array that propertyTableProperty contains. It's a number of rows in the table.\n * @returns Typed array with offset values.\n * @see https://github.com/CesiumGS/glTF/blob/2976f1183343a47a29e4059a70961371cd2fcee8/extensions/2.0/Vendor/EXT_structural_metadata/schema/propertyTable.property.schema.json#L29C10-L29C23\n */\nfunction getStringOffsetsForProperty(scenegraph, propertyTableProperty, numberOfElements) {\n    if (typeof propertyTableProperty.stringOffsets !== 'undefined' // `stringOffsets` is an index of the buffer view containing offsets for strings.\n    ) {\n        // Data are in a FIXED-length array\n        return getOffsetsForProperty(scenegraph, propertyTableProperty.stringOffsets, propertyTableProperty.stringOffsetType || 'UINT32', numberOfElements);\n    }\n    return null;\n}\n/**\n * Decodes properties of SCALAR, VEC-N, MAT-N types from binary sourse.\n * @param classProperty - class property object.\n * @param numberOfElements - The number of elements in each property array that propertyTableProperty contains. It's a number of rows in the table.\n * @param valuesDataBytes - Data taken from values property of the property table property.\n * @param arrayOffsets - Offsets for variable-length arrays. It's null for fixed-length arrays or scalar types.\n * @returns Property values in a typed array or in an array of typed arrays.\n */\nfunction getPropertyDataNumeric(classProperty, numberOfElements, valuesDataBytes, arrayOffsets) {\n    const isArray = classProperty.array;\n    const arrayCount = classProperty.count;\n    const elementSize = getArrayElementByteSize(classProperty.type, classProperty.componentType);\n    const elementCount = valuesDataBytes.byteLength / elementSize;\n    let valuesData;\n    if (classProperty.componentType) {\n        valuesData = convertRawBufferToMetadataArray(valuesDataBytes, classProperty.type, \n        // The datatype of the element's components. Only applicable to `SCALAR`, `VECN`, and `MATN` types.\n        classProperty.componentType, elementCount);\n    }\n    else {\n        // The spec doesn't provide any info what to do if componentType is not set.\n        valuesData = valuesDataBytes;\n    }\n    if (isArray) {\n        if (arrayOffsets) {\n            // VARIABLE-length array\n            return parseVariableLengthArrayNumeric(valuesData, numberOfElements, arrayOffsets, valuesDataBytes.length, elementSize);\n        }\n        if (arrayCount) {\n            // FIXED-length array\n            return parseFixedLengthArrayNumeric(valuesData, numberOfElements, arrayCount);\n        }\n        return [];\n    }\n    return valuesData;\n}\n/**\n * Decodes properties of enum type from binary source.\n * @param schema - Schema object.\n * @param classProperty - Class property object.\n * @param numberOfElements - The number of elements in each property array that propertyTableProperty contains. It's a number of rows in the table.\n * @param valuesDataBytes - Data taken from values property of the property table property.\n * @param arrayOffsets - Offsets for variable-length arrays. It's null for fixed-length arrays or scalar types.\n * @returns Strings array of nested strings array.\n */\nfunction getPropertyDataENUM(schema, classProperty, numberOfElements, valuesDataBytes, arrayOffsets) {\n    const enumType = classProperty.enumType;\n    // Enum ID as declared in the `enums` dictionary. Required when `type` is `ENUM`.\n    if (!enumType) {\n        throw new Error('Incorrect data in the EXT_structural_metadata extension: classProperty.enumType is not set for type ENUM');\n    }\n    const enumEntry = schema.enums?.[enumType];\n    if (!enumEntry) {\n        throw new Error(`Incorrect data in the EXT_structural_metadata extension: schema.enums does't contain ${enumType}`);\n    }\n    const enumValueType = enumEntry.valueType || 'UINT16';\n    const elementSize = getArrayElementByteSize(classProperty.type, enumValueType);\n    const elementCount = valuesDataBytes.byteLength / elementSize;\n    let valuesData = convertRawBufferToMetadataArray(valuesDataBytes, classProperty.type, enumValueType, elementCount);\n    if (!valuesData) {\n        valuesData = valuesDataBytes;\n    }\n    if (classProperty.array) {\n        if (arrayOffsets) {\n            // VARIABLE-length array\n            return parseVariableLengthArrayENUM({\n                valuesData,\n                numberOfElements,\n                arrayOffsets,\n                valuesDataBytesLength: valuesDataBytes.length,\n                elementSize,\n                enumEntry\n            });\n        }\n        const arrayCount = classProperty.count;\n        if (arrayCount) {\n            // FIXED-length array\n            return parseFixedLengthArrayENUM(valuesData, numberOfElements, arrayCount, enumEntry);\n        }\n        return [];\n    }\n    // Single value (not an array)\n    return getEnumsArray(valuesData, 0, numberOfElements, enumEntry);\n}\n/**\n * Parses variable length nested ENUM arrays.\n * @param params.valuesData - Values in a flat typed array.\n * @param params.numberOfElements - The number of elements in each property array that propertyTableProperty contains. It's a number of rows in the table.\n * @param params.arrayOffsets - Offsets for variable-length arrays. It's null for fixed-length arrays or scalar types.\n * @param params.valuesDataBytesLength - Byte length of values array.\n * @param params.elementSize - Single element byte size.\n * @param params.enumEntry - Enums dictionary.\n * @returns Nested strings array.\n */\nfunction parseVariableLengthArrayENUM(params) {\n    const { valuesData, numberOfElements, arrayOffsets, valuesDataBytesLength, elementSize, enumEntry } = params;\n    const attributeValueArray = [];\n    for (let index = 0; index < numberOfElements; index++) {\n        const arrayOffset = arrayOffsets[index];\n        const arrayByteSize = arrayOffsets[index + 1] - arrayOffsets[index];\n        if (arrayByteSize + arrayOffset > valuesDataBytesLength) {\n            break;\n        }\n        const typedArrayOffset = arrayOffset / elementSize;\n        const elementCount = arrayByteSize / elementSize;\n        const array = getEnumsArray(valuesData, typedArrayOffset, elementCount, enumEntry);\n        attributeValueArray.push(array);\n    }\n    return attributeValueArray;\n}\n/**\n * Parses fixed length ENUM arrays.\n * @param valuesData - Values in a flat typed array.\n * @param numberOfElements - The number of elements in each property array that propertyTableProperty contains. It's a number of rows in the table.\n * @param arrayCount - Nested arrays length.\n * @param enumEntry - Enums dictionary.\n * @returns Nested strings array.\n */\nfunction parseFixedLengthArrayENUM(valuesData, numberOfElements, arrayCount, enumEntry) {\n    const attributeValueArray = [];\n    for (let index = 0; index < numberOfElements; index++) {\n        const elementOffset = arrayCount * index;\n        const array = getEnumsArray(valuesData, elementOffset, arrayCount, enumEntry);\n        attributeValueArray.push(array);\n    }\n    return attributeValueArray;\n}\n/**\n * Parses ENUM values into a string array.\n * @param valuesData - Values in a flat typed array.\n * @param offset - Offset to start parse from.\n * @param count - Values length to parse.\n * @param enumEntry - Enums dictionary.\n * @returns Array of strings with parsed ENUM names.\n */\nfunction getEnumsArray(valuesData, offset, count, enumEntry) {\n    const array = [];\n    for (let i = 0; i < count; i++) {\n        // At the moment we don't support BigInt. It requires additional calculations logic\n        // and might be an issue in Safari\n        if (valuesData instanceof BigInt64Array || valuesData instanceof BigUint64Array) {\n            array.push('');\n        }\n        else {\n            const value = valuesData[offset + i];\n            const enumObject = getEnumByValue(enumEntry, value);\n            if (enumObject) {\n                array.push(enumObject.name);\n            }\n            else {\n                array.push('');\n            }\n        }\n    }\n    return array;\n}\n/**\n * Looks up ENUM whose `value` property matches the specified number in the parameter `value`.\n * @param {GLTF_EXT_structural_metadata_Enum} enumEntry - ENUM entry containing the array of possible enums.\n * @param {number} value - The value of the ENUM to locate.\n * @returns {GLTF_EXT_structural_metadata_EnumValue | null} ENUM matcihng the specified value or null of no ENUM object was found.\n */\nfunction getEnumByValue(enumEntry, value) {\n    for (const enumValue of enumEntry.values) {\n        if (enumValue.value === value) {\n            return enumValue;\n        }\n    }\n    return null;\n}\n", "import { GLTFScenegraph } from \"../../api/gltf-scenegraph.js\";\nimport { convertRawBufferToMetadataArray, getPrimitiveTextureData, primitivePropertyDataToAttributes, getArrayElementByteSize, getOffsetsForProperty, parseVariableLengthArrayNumeric, parseFixedLengthArrayNumeric, getPropertyDataString } from \"../utils/3d-tiles-utils.js\";\n/** Extension name */\nconst EXT_FEATURE_METADATA_NAME = 'EXT_feature_metadata';\nexport const name = EXT_FEATURE_METADATA_NAME;\nexport async function decode(gltfData, options) {\n    const scenegraph = new GLTFScenegraph(gltfData);\n    decodeExtFeatureMetadata(scenegraph, options);\n}\n/**\n * Decodes feature metadata from extension.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param options - GLTFLoader options.\n */\nfunction decodeExtFeatureMetadata(scenegraph, options) {\n    // Decoding metadata involves buffers processing.\n    // So, if buffers have not been loaded, there is no reason to process metadata.\n    if (!options.gltf?.loadBuffers) {\n        return;\n    }\n    const extension = scenegraph.getExtension(EXT_FEATURE_METADATA_NAME);\n    if (!extension) {\n        return;\n    }\n    if (options.gltf?.loadImages) {\n        decodePropertyTextures(scenegraph, extension);\n    }\n    decodePropertyTables(scenegraph, extension);\n}\n/**\n * Processes the data stored in the textures\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param extension - Top-level extension.\n */\nfunction decodePropertyTextures(scenegraph, extension) {\n    const schema = extension.schema;\n    if (!schema) {\n        return;\n    }\n    const schemaClasses = schema.classes;\n    const { featureTextures } = extension;\n    if (schemaClasses && featureTextures) {\n        for (const schemaName in schemaClasses) {\n            const schemaClass = schemaClasses[schemaName];\n            const featureTexture = findFeatureTextureByClass(featureTextures, schemaName);\n            if (featureTexture) {\n                handleFeatureTextureProperties(scenegraph, featureTexture, schemaClass);\n            }\n        }\n    }\n}\n/**\n * Processes the data stored in the property tables.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param extension - Top-level extension.\n */\nfunction decodePropertyTables(scenegraph, extension) {\n    const schema = extension.schema;\n    if (!schema) {\n        return;\n    }\n    const schemaClasses = schema.classes;\n    const propertyTables = extension.featureTables;\n    if (schemaClasses && propertyTables) {\n        for (const schemaName in schemaClasses) {\n            const propertyTable = findPropertyTableByClass(propertyTables, schemaName);\n            if (propertyTable) {\n                processPropertyTable(scenegraph, schema, propertyTable);\n            }\n        }\n    }\n}\n/**\n * Finds the property table by class name.\n * @param propertyTables - propertyTable definition taken from the top-level extension.\n * @param schemaClassName - class name in the extension schema.\n */\nfunction findPropertyTableByClass(propertyTables, schemaClassName) {\n    for (const propertyTableName in propertyTables) {\n        const propertyTable = propertyTables[propertyTableName];\n        if (propertyTable.class === schemaClassName) {\n            return propertyTable;\n        }\n    }\n    return null;\n}\nfunction findFeatureTextureByClass(featureTextures, schemaClassName) {\n    for (const featureTexturesName in featureTextures) {\n        const featureTable = featureTextures[featureTexturesName];\n        if (featureTable.class === schemaClassName) {\n            return featureTable;\n        }\n    }\n    return null;\n}\n/**\n * Navigates through all properies in the property table, gets properties data,\n * and put the data to `propertyTable.data` as an array.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param schema - schema object.\n * @param propertyTable - propertyTable definition taken from the top-level extension.\n */\nfunction processPropertyTable(scenegraph, schema, propertyTable) {\n    // Though 'class' is not required by spec, it doesn't make any scence when it's not provided.\n    // So, bale out here.\n    if (!propertyTable.class) {\n        return;\n    }\n    const schemaClass = schema.classes?.[propertyTable.class];\n    if (!schemaClass) {\n        throw new Error(`Incorrect data in the EXT_structural_metadata extension: no schema class with name ${propertyTable.class}`);\n    }\n    const numberOfElements = propertyTable.count; // `propertyTable.count` is a number of elements in each property array.\n    for (const propertyName in schemaClass.properties) {\n        const classProperty = schemaClass.properties[propertyName];\n        const propertyTableProperty = propertyTable.properties?.[propertyName];\n        if (propertyTableProperty) {\n            // Getting all elements (`numberOfElements`) of the array in the `propertyTableProperty`\n            const data = getPropertyDataFromBinarySource(scenegraph, schema, classProperty, numberOfElements, propertyTableProperty);\n            propertyTableProperty.data = data;\n        }\n    }\n}\n/**\n * Navigates through all properies in feature texture and gets properties data.\n * Data will be stored in featureTexture.properties[propertyName].data.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param featureTexture\n * @param schemaClass\n */\nfunction handleFeatureTextureProperties(scenegraph, featureTexture, schemaClass) {\n    const attributeName = featureTexture.class;\n    for (const propertyName in schemaClass.properties) {\n        const featureTextureProperty = featureTexture?.properties?.[propertyName];\n        if (featureTextureProperty) {\n            const data = getPropertyDataFromTexture(scenegraph, featureTextureProperty, attributeName);\n            featureTextureProperty.data = data;\n        }\n    }\n}\n/**\n * Decodes properties from binary sourse based on property type.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param schemaProperty\n * @param numberOfFeatures\n * @param featureTableProperty\n */\nfunction getPropertyDataFromBinarySource(scenegraph, schema, classProperty, numberOfFeatures, featureTableProperty) {\n    let data = [];\n    const bufferView = featureTableProperty.bufferView;\n    const dataArray = scenegraph.getTypedArrayForBufferView(bufferView);\n    const arrayOffsets = getArrayOffsetsForProperty(scenegraph, classProperty, featureTableProperty, numberOfFeatures);\n    const stringOffsets = getStringOffsetsForProperty(scenegraph, classProperty, featureTableProperty, numberOfFeatures);\n    if (classProperty.type === 'STRING' || classProperty.componentType === 'STRING') {\n        data = getPropertyDataString(numberOfFeatures, dataArray, arrayOffsets, stringOffsets);\n    }\n    else if (isNumericProperty(classProperty)) {\n        data = getPropertyDataNumeric(classProperty, numberOfFeatures, dataArray, arrayOffsets);\n    }\n    return data;\n}\n/**\n * Parses propertyTable.property.arrayOffsets that are offsets of sub-arrays in a flatten array of values.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param classProperty - class property object.\n * @param propertyTableProperty - propertyTable's property metadata.\n * @param numberOfElements - The number of elements in each property array that propertyTableProperty contains. It's a number of rows in the table.\n * @returns Typed array with offset values.\n * @see https://github.com/CesiumGS/glTF/blob/2976f1183343a47a29e4059a70961371cd2fcee8/extensions/2.0/Vendor/EXT_structural_metadata/schema/propertyTable.property.schema.json#L21\n */\nfunction getArrayOffsetsForProperty(scenegraph, classProperty, propertyTableProperty, numberOfElements) {\n    /*\n     If ARRAY is used, then componentType must also be specified.\n     ARRAY is a fixed-length array when componentCount is defined, and variable-length otherwise.\n  */\n    if (classProperty.type === 'ARRAY' &&\n        // `componentCount` is a number of fixed-length array elements.\n        // If `componentCount` is NOT defined, it's a VARIABLE-length array\n        typeof classProperty.componentCount === 'undefined' &&\n        // `arrayOffsetBufferView` is an index of the buffer view containing offsets for variable-length arrays.\n        typeof propertyTableProperty.arrayOffsetBufferView !== 'undefined') {\n        // Data are in a VARIABLE-length array\n        return getOffsetsForProperty(scenegraph, propertyTableProperty.arrayOffsetBufferView, propertyTableProperty.offsetType || 'UINT32', // offsetType is used both for stringOffsetBufferView and arrayOffsetBufferView\n        numberOfElements);\n    }\n    return null;\n}\n/**\n * Parses featureTable.property.stringOffsetBufferView.\n * String offsets is an array of offsets of strings in the united array of characters.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param propertyTableProperty - propertyTable's property metadata.\n * @param numberOfElements - The number of elements in each property array that propertyTableProperty contains. It's a number of rows in the table.\n * @returns Typed array of offset values. The number of offsets in the array is equal to `numberOfElements` plus one.\n * @see https://github.com/CesiumGS/glTF/blob/c38f7f37e894004353c15cd0481bc5b7381ce841/extensions/2.0/Vendor/EXT_feature_metadata/schema/featureTable.property.schema.json#L50C10-L50C32\n */\nfunction getStringOffsetsForProperty(scenegraph, classProperty, propertyTableProperty, numberOfElements) {\n    if (typeof propertyTableProperty.stringOffsetBufferView !== 'undefined' // `stringOffsetBufferView` is an index of the buffer view containing offsets for strings.\n    ) {\n        // Data are in a FIXED-length array\n        return getOffsetsForProperty(scenegraph, propertyTableProperty.stringOffsetBufferView, propertyTableProperty.offsetType || 'UINT32', // offsetType is used both for stringOffsetBufferView and arrayOffsetBufferView\n        numberOfElements);\n    }\n    return null;\n}\n/**\n * Checks if the feature table property is of numeric type.\n * @param schemaPropertyType - feature table property\n * @returns true if property is numeric, else - false\n */\nfunction isNumericProperty(schemaProperty) {\n    const types = [\n        'UINT8',\n        'INT16',\n        'UINT16',\n        'INT32',\n        'UINT32',\n        'INT64',\n        'UINT64',\n        'FLOAT32',\n        'FLOAT64'\n    ];\n    return (types.includes(schemaProperty.type) ||\n        (typeof schemaProperty.componentType !== 'undefined' &&\n            types.includes(schemaProperty.componentType)));\n}\n/**\n * Decodes properties of numeric types from binary sourse.\n * @param classProperty - class property object.\n * @param numberOfElements - The number of elements in each property array that propertyTableProperty contains. It's a number of rows in the table.\n * @param valuesDataBytes - Data taken from values property of the property table property.\n * @param arrayOffsets - Offsets for variable-length arrays. It's null for fixed-length arrays or scalar types.\n * @returns Property values in a typed array or in an array of typed arrays.\n */\nfunction getPropertyDataNumeric(classProperty, numberOfElements, valuesDataBytes, arrayOffsets) {\n    const isArray = classProperty.type === 'ARRAY';\n    const arrayCount = classProperty.componentCount;\n    /*\n    We are getting Numeric data. So,\n      the component type can be one of NumericComponentType,\n      the attribute type should be 'SCALAR'\n    */\n    const attributeType = 'SCALAR';\n    const componentType = classProperty.componentType || classProperty.type;\n    const elementSize = getArrayElementByteSize(attributeType, componentType);\n    const elementCount = valuesDataBytes.byteLength / elementSize;\n    const valuesData = convertRawBufferToMetadataArray(valuesDataBytes, attributeType, componentType, elementCount);\n    if (isArray) {\n        if (arrayOffsets) {\n            // VARIABLE-length array\n            return parseVariableLengthArrayNumeric(valuesData, numberOfElements, arrayOffsets, valuesDataBytes.length, elementSize);\n        }\n        if (arrayCount) {\n            // FIXED-length array\n            return parseFixedLengthArrayNumeric(valuesData, numberOfElements, arrayCount);\n        }\n        return [];\n    }\n    return valuesData;\n}\n/**\n * Gets properties from texture associated with all mesh primitives.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param featureTextureProperty\n * @param attributeName\n * @returns Feature texture data\n */\nfunction getPropertyDataFromTexture(scenegraph, featureTextureProperty, attributeName) {\n    const json = scenegraph.gltf.json;\n    if (!json.meshes) {\n        return [];\n    }\n    const featureTextureTable = [];\n    for (const mesh of json.meshes) {\n        for (const primitive of mesh.primitives) {\n            processPrimitiveTextures(scenegraph, attributeName, featureTextureProperty, featureTextureTable, primitive);\n        }\n    }\n    return featureTextureTable;\n}\n/**\n * Processes data encoded in the texture associated with the primitive. This data will be accessible through the attributes.\n * @param scenegraph - Instance of the class for structured access to GLTF data.\n * @param attributeName\n * @param featureTextureProperty\n * @param featureTextureTable\n * @param primitive\n */\nfunction processPrimitiveTextures(scenegraph, attributeName, featureTextureProperty, featureTextureTable, primitive) {\n    const textureInfoTopLevel = {\n        channels: featureTextureProperty.channels,\n        ...featureTextureProperty.texture\n    };\n    const propertyData = getPrimitiveTextureData(scenegraph, textureInfoTopLevel, primitive);\n    if (!propertyData) {\n        return;\n    }\n    primitivePropertyDataToAttributes(scenegraph, attributeName, propertyData, featureTextureTable, primitive);\n}\n", "// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof \"4.2.0-beta.2\" !== 'undefined' ? \"4.2.0-beta.2\" : 'latest';\n", "import { padToNBytes, assert } from '@loaders.gl/loader-utils';\n/** Binary GLTF is little endian. */\nconst LITTLE_ENDIAN = true;\n/** 'glTF' in Big-Endian ASCII */\nconst MAGIC_glTF = 0x676c5446;\nconst GLB_FILE_HEADER_SIZE = 12;\nconst GLB_CHUNK_HEADER_SIZE = 8;\nconst GLB_CHUNK_TYPE_JSON = 0x4e4f534a;\nconst GLB_CHUNK_TYPE_BIN = 0x004e4942;\nconst GLB_V1_CONTENT_FORMAT_JSON = 0x0;\n/** @deprecated - Backward compatibility for old xviz files */\nconst GLB_CHUNK_TYPE_JSON_XVIZ_DEPRECATED = 0;\n/** @deprecated - Backward compatibility for old xviz files */\nconst GLB_CHUNK_TYPE_BIX_XVIZ_DEPRECATED = 1;\nfunction getMagicString(dataView, byteOffset = 0) {\n    return `\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 0))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 1))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 2))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 3))}`;\n}\n/** Check if the contents of an array buffer contains GLB byte markers */\nexport function isGLB(arrayBuffer, byteOffset = 0, options = {}) {\n    const dataView = new DataView(arrayBuffer);\n    // Check that GLB Header starts with the magic number\n    const { magic = MAGIC_glTF } = options;\n    const magic1 = dataView.getUint32(byteOffset, false);\n    return magic1 === magic || magic1 === MAGIC_glTF;\n}\n/**\n * Synchronously parse a GLB\n * @param glb - Target, Output is stored there\n * @param arrayBuffer - Input data\n * @param byteOffset - Offset into arrayBuffer to start parsing from (for \"embedded\" GLBs, e.g. in 3D tiles)\n * @param options\n * @returns\n */\nexport function parseGLBSync(glb, arrayBuffer, byteOffset = 0, options = {}) {\n    // Check that GLB Header starts with the magic number\n    const dataView = new DataView(arrayBuffer);\n    // Compare format with GLBLoader documentation\n    const type = getMagicString(dataView, byteOffset + 0);\n    const version = dataView.getUint32(byteOffset + 4, LITTLE_ENDIAN); // Version 2 of binary glTF container format\n    const byteLength = dataView.getUint32(byteOffset + 8, LITTLE_ENDIAN); // Total byte length of binary file\n    Object.assign(glb, {\n        // Put less important stuff in a header, to avoid clutter\n        header: {\n            byteOffset, // Byte offset into the initial arrayBuffer\n            byteLength,\n            hasBinChunk: false\n        },\n        type,\n        version,\n        json: {},\n        binChunks: []\n    });\n    byteOffset += GLB_FILE_HEADER_SIZE;\n    switch (glb.version) {\n        case 1:\n            return parseGLBV1(glb, dataView, byteOffset);\n        case 2:\n            return parseGLBV2(glb, dataView, byteOffset, (options = {}));\n        default:\n            throw new Error(`Invalid GLB version ${glb.version}. Only supports version 1 and 2.`);\n    }\n}\n/**\n * Parse a V1 GLB\n * @param glb - target, output is stored in this object\n * @param dataView - Input, memory to be parsed\n * @param byteOffset - Offset of first byte of GLB data in the data view\n * @returns Number of bytes parsed (there could be additional non-GLB data after the GLB)\n */\nfunction parseGLBV1(glb, dataView, byteOffset) {\n    // Sanity: ensure file is big enough to hold at least the headers\n    assert(glb.header.byteLength > GLB_FILE_HEADER_SIZE + GLB_CHUNK_HEADER_SIZE);\n    // Explanation of GLB structure:\n    // https://cloud.githubusercontent.com/assets/3479527/22600725/36b87122-ea55-11e6-9d40-6fd42819fcab.png\n    const contentLength = dataView.getUint32(byteOffset + 0, LITTLE_ENDIAN); // Byte length of chunk\n    const contentFormat = dataView.getUint32(byteOffset + 4, LITTLE_ENDIAN); // Chunk format as uint32\n    byteOffset += GLB_CHUNK_HEADER_SIZE;\n    // GLB v1 only supports a single chunk type\n    assert(contentFormat === GLB_V1_CONTENT_FORMAT_JSON);\n    parseJSONChunk(glb, dataView, byteOffset, contentLength);\n    // No need to call the function padToBytes() from parseJSONChunk()\n    byteOffset += contentLength;\n    byteOffset += parseBINChunk(glb, dataView, byteOffset, glb.header.byteLength);\n    return byteOffset;\n}\n/**\n * Parse a V2 GLB\n * @param glb - target, output is stored in this object\n * @param dataView - Input, memory to be parsed\n * @param byteOffset - Offset of first byte of GLB data in the data view\n * @returns Number of bytes parsed (there could be additional non-GLB data after the GLB)\n */\nfunction parseGLBV2(glb, dataView, byteOffset, options) {\n    // Sanity: ensure file is big enough to hold at least the first chunk header\n    assert(glb.header.byteLength > GLB_FILE_HEADER_SIZE + GLB_CHUNK_HEADER_SIZE);\n    parseGLBChunksSync(glb, dataView, byteOffset, options);\n    return byteOffset + glb.header.byteLength;\n}\n/** Iterate over GLB chunks and parse them */\nfunction parseGLBChunksSync(glb, dataView, byteOffset, options) {\n    // Per spec we must iterate over chunks, ignoring all except JSON and BIN\n    // Iterate as long as there is space left for another chunk header\n    while (byteOffset + 8 <= glb.header.byteLength) {\n        const chunkLength = dataView.getUint32(byteOffset + 0, LITTLE_ENDIAN); // Byte length of chunk\n        const chunkFormat = dataView.getUint32(byteOffset + 4, LITTLE_ENDIAN); // Chunk format as uint32\n        byteOffset += GLB_CHUNK_HEADER_SIZE;\n        // Per spec we must iterate over chunks, ignoring all except JSON and BIN\n        switch (chunkFormat) {\n            case GLB_CHUNK_TYPE_JSON:\n                parseJSONChunk(glb, dataView, byteOffset, chunkLength);\n                break;\n            case GLB_CHUNK_TYPE_BIN:\n                parseBINChunk(glb, dataView, byteOffset, chunkLength);\n                break;\n            // Backward compatibility for very old xviz files\n            case GLB_CHUNK_TYPE_JSON_XVIZ_DEPRECATED:\n                if (!options.strict) {\n                    parseJSONChunk(glb, dataView, byteOffset, chunkLength);\n                }\n                break;\n            case GLB_CHUNK_TYPE_BIX_XVIZ_DEPRECATED:\n                if (!options.strict) {\n                    parseBINChunk(glb, dataView, byteOffset, chunkLength);\n                }\n                break;\n            default:\n                // Ignore, per spec\n                // console.warn(`Unknown GLB chunk type`); // eslint-disable-line\n                break;\n        }\n        byteOffset += padToNBytes(chunkLength, 4);\n    }\n    return byteOffset;\n}\n/* Parse a GLB JSON chunk */\nfunction parseJSONChunk(glb, dataView, byteOffset, chunkLength) {\n    // 1. Create a \"view\" of the binary encoded JSON data inside the GLB\n    const jsonChunk = new Uint8Array(dataView.buffer, byteOffset, chunkLength);\n    // 2. Decode the JSON binary array into clear text\n    const textDecoder = new TextDecoder('utf8');\n    const jsonText = textDecoder.decode(jsonChunk);\n    // 3. Parse the JSON text into a JavaScript data structure\n    glb.json = JSON.parse(jsonText);\n    return padToNBytes(chunkLength, 4);\n}\n/** Parse a GLB BIN chunk */\nfunction parseBINChunk(glb, dataView, byteOffset, chunkLength) {\n    // Note: BIN chunk can be optional\n    glb.header.hasBinChunk = true;\n    glb.binChunks.push({\n        byteOffset,\n        byteLength: chunkLength,\n        arrayBuffer: dataView.buffer\n        // TODO - copy, or create typed array view?\n    });\n    return padToNBytes(chunkLength, 4);\n}\n", "// Resolves a relative url against a baseUrl\n// If url is absolute, return it unchanged\nexport function resolveUrl(url, options) {\n    // TODO: Use better logic to handle all protocols plus not delay on data\n    const absolute = url.startsWith('data:') || url.startsWith('http:') || url.startsWith('https:');\n    if (absolute) {\n        return url;\n    }\n    const baseUrl = options.baseUri || options.uri;\n    if (!baseUrl) {\n        throw new Error(`'baseUri' must be provided to resolve relative url ${url}`);\n    }\n    return baseUrl.substr(0, baseUrl.lastIndexOf('/') + 1) + url;\n}\n", "import { GLTFScenegraph } from \"../api/gltf-scenegraph.js\";\nimport { meshoptDecodeGltfBuffer } from \"../../meshopt/meshopt-decoder.js\";\n// @ts-ignore\n// eslint-disable-next-line\nconst DEFAULT_MESHOPT_OPTIONS = {\n    byteOffset: 0,\n    filter: 'NONE'\n};\n/** Extension name */\nconst EXT_MESHOPT_COMPRESSION = 'EXT_meshopt_compression';\nexport const name = EXT_MESHOPT_COMPRESSION;\nexport async function decode(gltfData, options) {\n    const scenegraph = new GLTFScenegraph(gltfData);\n    if (!options?.gltf?.decompressMeshes || !options.gltf?.loadBuffers) {\n        return;\n    }\n    const promises = [];\n    for (const bufferViewIndex of gltfData.json.bufferViews || []) {\n        promises.push(decodeMeshoptBufferView(scenegraph, bufferViewIndex));\n    }\n    // Decompress meshes in parallel\n    await Promise.all(promises);\n    // We have now decompressed all primitives, so remove the top-level extension\n    scenegraph.removeExtension(EXT_MESHOPT_COMPRESSION);\n}\n/** Decode one meshopt buffer view */\nasync function decodeMeshoptBufferView(scenegraph, bufferView) {\n    const meshoptExtension = scenegraph.getObjectExtension(bufferView, EXT_MESHOPT_COMPRESSION);\n    if (meshoptExtension) {\n        const { byteOffset = 0, byteLength = 0, byteStride, count, mode, filter = 'NONE', buffer: bufferIndex } = meshoptExtension;\n        const buffer = scenegraph.gltf.buffers[bufferIndex];\n        const source = new Uint8Array(buffer.arrayBuffer, buffer.byteOffset + byteOffset, byteLength);\n        const result = new Uint8Array(scenegraph.gltf.buffers[bufferView.buffer].arrayBuffer, bufferView.byteOffset, bufferView.byteLength);\n        await meshoptDecodeGltfBuffer(result, count, byteStride, source, mode, filter);\n        scenegraph.removeObjectExtension(bufferView, EXT_MESHOPT_COMPRESSION);\n    }\n}\n", "// This file is part of meshoptimizer library and is distributed under the terms of MIT License.\n// Copyright (C) 2016-2021, by Arseny Kapoulkine (arseny.kapoulkine@gmail.com)\n/* eslint-disable camelcase */\nconst isWebAssemblySupported = typeof WebAssembly !== 'object';\n// Built with clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)\n// Built from meshoptimizer 0.16\nconst wasm_base = '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';\nconst wasm_simd = '';\n// Uses bulk-memory and simd extensions\nconst detector = new Uint8Array([\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 3, 2, 0, 0, 5, 3, 1, 0, 1, 12, 1, 0, 10, 22, 2,\n    12, 0, 65, 0, 65, 0, 65, 0, 252, 10, 0, 0, 11, 7, 0, 65, 0, 253, 15, 26, 11\n]);\n// Used to unpack wasm\nconst wasmpack = new Uint8Array([\n    32, 0, 65, 253, 3, 1, 2, 34, 4, 106, 6, 5, 11, 8, 7, 20, 13, 33, 12, 16, 128, 9, 116, 64, 19, 113,\n    127, 15, 10, 21, 22, 14, 255, 66, 24, 54, 136, 107, 18, 23, 192, 26, 114, 118, 132, 17, 77, 101,\n    130, 144, 27, 87, 131, 44, 45, 74, 156, 154, 70, 167\n]);\nconst FILTERS = {\n    // legacy index-based enums for glTF\n    0: '',\n    1: 'meshopt_decodeFilterOct',\n    2: 'meshopt_decodeFilterQuat',\n    3: 'meshopt_decodeFilterExp',\n    // string-based enums for glTF\n    NONE: '',\n    OCTAHEDRAL: 'meshopt_decodeFilterOct',\n    QUATERNION: 'meshopt_decodeFilterQuat',\n    EXPONENTIAL: 'meshopt_decodeFilterExp'\n};\nconst DECODERS = {\n    // legacy index-based enums for glTF\n    0: 'meshopt_decodeVertexBuffer',\n    1: 'meshopt_decodeIndexBuffer',\n    2: 'meshopt_decodeIndexSequence',\n    // string-based enums for glTF\n    ATTRIBUTES: 'meshopt_decodeVertexBuffer',\n    TRIANGLES: 'meshopt_decodeIndexBuffer',\n    INDICES: 'meshopt_decodeIndexSequence'\n};\nexport function isMeshoptSupported() {\n    return isWebAssemblySupported;\n}\nexport async function meshoptDecodeVertexBuffer(target, count, size, source, filter = 'NONE') {\n    const instance = await loadWasmInstance();\n    decode(instance, instance.exports.meshopt_decodeVertexBuffer, target, count, size, source, instance.exports[FILTERS[filter]]);\n}\nexport async function meshoptDecodeIndexBuffer(target, count, size, source) {\n    const instance = await loadWasmInstance();\n    decode(instance, instance.exports.meshopt_decodeIndexBuffer, target, count, size, source);\n}\nexport async function meshoptDecodeIndexSequence(target, count, size, source) {\n    const instance = await loadWasmInstance();\n    decode(instance, instance.exports.meshopt_decodeIndexSequence, target, count, size, source);\n}\n// eslint-disable-next-line max-params\nexport async function meshoptDecodeGltfBuffer(target, count, size, source, mode, filter = 'NONE') {\n    const instance = await loadWasmInstance();\n    decode(instance, instance.exports[DECODERS[mode]], target, count, size, source, instance.exports[FILTERS[filter || 'NONE']]);\n}\nlet wasmPromise;\nasync function loadWasmInstance() {\n    // eslint-disable-next-line\n    if (!wasmPromise) {\n        wasmPromise = loadWasmModule();\n    }\n    return wasmPromise;\n}\nasync function loadWasmModule() {\n    let wasm = wasm_base;\n    if (WebAssembly.validate(detector)) {\n        wasm = wasm_simd;\n        // eslint-disable-next-line no-console\n        console.log('Warning: meshopt_decoder is using experimental SIMD support');\n    }\n    const result = await WebAssembly.instantiate(unpack(wasm), {});\n    await result.instance.exports.__wasm_call_ctors();\n    return result.instance;\n}\nfunction unpack(data) {\n    const result = new Uint8Array(data.length);\n    for (let i = 0; i < data.length; ++i) {\n        const ch = data.charCodeAt(i);\n        result[i] = ch > 96 ? ch - 71 : ch > 64 ? ch - 65 : ch > 47 ? ch + 4 : ch > 46 ? 63 : 62;\n    }\n    let write = 0;\n    for (let i = 0; i < data.length; ++i) {\n        result[write++] = result[i] < 60 ? wasmpack[result[i]] : (result[i] - 60) * 64 + result[++i];\n    }\n    return result.buffer.slice(0, write);\n}\n// eslint-disable-next-line max-params\nfunction decode(instance, fun, target, count, size, source, filter) {\n    const sbrk = instance.exports.sbrk;\n    const count4 = (count + 3) & ~3; // pad for SIMD filter\n    const tp = sbrk(count4 * size);\n    const sp = sbrk(source.length);\n    const heap = new Uint8Array(instance.exports.memory.buffer);\n    heap.set(source, sp);\n    const res = fun(tp, count, size, sp, source.length);\n    if (res === 0 && filter) {\n        filter(tp, count4, size);\n    }\n    target.set(heap.subarray(tp, tp + count * size));\n    sbrk(tp - sbrk(0));\n    if (res !== 0) {\n        throw new Error(`Malformed buffer data: ${res}`);\n    }\n}\n", "// GLTF EXTENSION: EXT_TEXTURE_WEBP\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/EXT_TEXTURE_WEBP\n/* eslint-disable camelcase */\nimport { isImageFormatSupported } from '@loaders.gl/images';\nimport { GLTFScenegraph } from \"../api/gltf-scenegraph.js\";\nconst EXT_TEXTURE_WEBP = 'EXT_texture_webp';\n/** Extension name */\nexport const name = EXT_TEXTURE_WEBP;\n/**\n * Replaces a texture source reference with the extension texture\n * Done in preprocess() to prevent load of default image\n */\nexport function preprocess(gltfData, options) {\n    const scenegraph = new GLTFScenegraph(gltfData);\n    if (!isImageFormatSupported('image/webp')) {\n        if (scenegraph.getRequiredExtensions().includes(EXT_TEXTURE_WEBP)) {\n            throw new Error(`gltf: Required extension ${EXT_TEXTURE_WEBP} not supported by browser`);\n        }\n        return;\n    }\n    const { json } = scenegraph;\n    for (const texture of json.textures || []) {\n        const extension = scenegraph.getObjectExtension(texture, EXT_TEXTURE_WEBP);\n        if (extension) {\n            // TODO - if multiple texture extensions are present which one wins?\n            texture.source = extension.source;\n        }\n        scenegraph.removeObjectExtension(texture, EXT_TEXTURE_WEBP);\n    }\n    // Remove the top-level extension\n    scenegraph.removeExtension(EXT_TEXTURE_WEBP);\n}\n", "// GLTF EXTENSION: KHR_texture_basisu\n// https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_texture_basisu\n/* eslint-disable camelcase */\nimport { GLTFScenegraph } from \"../api/gltf-scenegraph.js\";\nconst KHR_TEXTURE_BASISU = 'KHR_texture_basisu';\n/** Extension name */\nexport const name = KHR_TEXTURE_BASISU;\n/**\n * Replaces a texture source reference with the extension texture\n * Done in preprocess() to prevent load of default image\n */\nexport function preprocess(gltfData, options) {\n    const scene = new GLTFScenegraph(gltfData);\n    const { json } = scene;\n    for (const texture of json.textures || []) {\n        const extension = scene.getObjectExtension(texture, KHR_TEXTURE_BASISU);\n        if (extension) {\n            // TODO - if multiple texture extensions are present which one wins?\n            texture.source = extension.source;\n            scene.removeObjectExtension(texture, KHR_TEXTURE_BASISU);\n        }\n    }\n    // Remove the top-level extension\n    scene.removeExtension(KHR_TEXTURE_BASISU);\n}\n", "// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n// Only TRIANGLES: 0x0004 and TRIANGLE_STRIP: 0x0005 are supported\n/* eslint-disable camelcase */\nimport { sliceArrayBuffer, parseFromContext } from '@loaders.gl/loader-utils';\nimport { DracoLoader } from '@loaders.gl/draco';\nimport { GLTFScenegraph } from \"../api/gltf-scenegraph.js\";\nimport { getGLTFAccessors, getGLTFAccessor } from \"../gltf-utils/gltf-attribute-utils.js\";\nconst KHR_DRACO_MESH_COMPRESSION = 'KHR_draco_mesh_compression';\n/** Extension name */\nexport const name = KHR_DRACO_MESH_COMPRESSION;\nexport function preprocess(gltfData, options, context) {\n    const scenegraph = new GLTFScenegraph(gltfData);\n    for (const primitive of makeMeshPrimitiveIterator(scenegraph)) {\n        if (scenegraph.getObjectExtension(primitive, KHR_DRACO_MESH_COMPRESSION)) {\n            // TODO - Remove fallback accessors to make sure we don't load unnecessary buffers\n        }\n    }\n}\nexport async function decode(gltfData, options, context) {\n    if (!options?.gltf?.decompressMeshes) {\n        return;\n    }\n    const scenegraph = new GLTFScenegraph(gltfData);\n    const promises = [];\n    for (const primitive of makeMeshPrimitiveIterator(scenegraph)) {\n        if (scenegraph.getObjectExtension(primitive, KHR_DRACO_MESH_COMPRESSION)) {\n            promises.push(decompressPrimitive(scenegraph, primitive, options, context));\n        }\n    }\n    // Decompress meshes in parallel\n    await Promise.all(promises);\n    // We have now decompressed all primitives, so remove the top-level extension\n    scenegraph.removeExtension(KHR_DRACO_MESH_COMPRESSION);\n}\nexport function encode(gltfData, options = {}) {\n    const scenegraph = new GLTFScenegraph(gltfData);\n    for (const mesh of scenegraph.json.meshes || []) {\n        // eslint-disable-next-line camelcase\n        // @ts-ignore\n        compressMesh(mesh, options);\n        // NOTE: Only add the extension if something was actually compressed\n        scenegraph.addRequiredExtension(KHR_DRACO_MESH_COMPRESSION);\n    }\n}\n// DECODE\n// Unpacks one mesh primitive and removes the extension from the primitive\n// DracoDecoder needs to be imported and registered by app\n// Returns: Promise that resolves when all pending draco decoder jobs for this mesh complete\n// TODO - Implement fallback behavior per KHR_DRACO_MESH_COMPRESSION spec\nasync function decompressPrimitive(scenegraph, primitive, options, context) {\n    const dracoExtension = scenegraph.getObjectExtension(primitive, KHR_DRACO_MESH_COMPRESSION);\n    if (!dracoExtension) {\n        return;\n    }\n    const buffer = scenegraph.getTypedArrayForBufferView(dracoExtension.bufferView);\n    // TODO - parse does not yet deal well with byte offsets embedded in typed arrays. Copy buffer\n    // TODO - remove when `parse` is fixed to handle `byteOffset`s\n    const bufferCopy = sliceArrayBuffer(buffer.buffer, buffer.byteOffset); // , buffer.byteLength);\n    const dracoOptions = { ...options };\n    // TODO - remove hack: The entire tileset might be included, too expensive to serialize\n    delete dracoOptions['3d-tiles'];\n    const decodedData = await parseFromContext(bufferCopy, DracoLoader, dracoOptions, context);\n    const decodedAttributes = getGLTFAccessors(decodedData.attributes);\n    // Restore min/max values\n    for (const [attributeName, decodedAttribute] of Object.entries(decodedAttributes)) {\n        if (attributeName in primitive.attributes) {\n            const accessorIndex = primitive.attributes[attributeName];\n            const accessor = scenegraph.getAccessor(accessorIndex);\n            if (accessor?.min && accessor?.max) {\n                decodedAttribute.min = accessor.min;\n                decodedAttribute.max = accessor.max;\n            }\n        }\n    }\n    // @ts-ignore\n    primitive.attributes = decodedAttributes;\n    if (decodedData.indices) {\n        // @ts-ignore\n        primitive.indices = getGLTFAccessor(decodedData.indices);\n    }\n    // Extension has been processed, delete it\n    scenegraph.removeObjectExtension(primitive, KHR_DRACO_MESH_COMPRESSION);\n    checkPrimitive(primitive);\n}\n// ENCODE\n// eslint-disable-next-line max-len\n// Only TRIANGLES: 0x0004 and TRIANGLE_STRIP: 0x0005 are supported\nfunction compressMesh(attributes, indices, mode = 4, options, context) {\n    if (!options.DracoWriter) {\n        throw new Error('options.gltf.DracoWriter not provided');\n    }\n    // TODO - use DracoWriter using encode w/ registered DracoWriter...\n    const compressedData = options.DracoWriter.encodeSync({ attributes });\n    // Draco compression may change the order and number of vertices in a mesh.\n    // To satisfy the requirement that accessors properties be correct for both\n    // compressed and uncompressed data, generators should create uncompressed\n    // attributes and indices using data that has been decompressed from the Draco buffer,\n    // rather than the original source data.\n    // @ts-ignore TODO this needs to be fixed\n    const decodedData = context?.parseSync?.({ attributes });\n    const fauxAccessors = options._addFauxAttributes(decodedData.attributes);\n    const bufferViewIndex = options.addBufferView(compressedData);\n    const glTFMesh = {\n        primitives: [\n            {\n                attributes: fauxAccessors, // TODO - verify with spec\n                mode, // GL.POINTS\n                extensions: {\n                    [KHR_DRACO_MESH_COMPRESSION]: {\n                        bufferView: bufferViewIndex,\n                        attributes: fauxAccessors // TODO - verify with spec\n                    }\n                }\n            }\n        ]\n    };\n    return glTFMesh;\n}\n// UTILS\nfunction checkPrimitive(primitive) {\n    if (!primitive.attributes && Object.keys(primitive.attributes).length > 0) {\n        throw new Error('glTF: Empty primitive detected: Draco decompression failure?');\n    }\n}\nfunction* makeMeshPrimitiveIterator(scenegraph) {\n    for (const mesh of scenegraph.json.meshes || []) {\n        for (const primitive of mesh.primitives) {\n            yield primitive;\n        }\n    }\n}\n", "// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof \"4.2.0-beta.2\" !== 'undefined' ? \"4.2.0-beta.2\" : 'latest';\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { VERSION } from \"./lib/utils/version.js\";\n/**\n * Worker loader for Draco3D compressed geometries\n */\nexport const DracoLoader = {\n    dataType: null,\n    batchType: null,\n    name: 'Draco',\n    id: 'draco',\n    module: 'draco',\n    // shapes: ['mesh'],\n    version: VERSION,\n    worker: true,\n    extensions: ['drc'],\n    mimeTypes: ['application/octet-stream'],\n    binary: true,\n    tests: ['DRACO'],\n    options: {\n        draco: {\n            decoderType: typeof WebAssembly === 'object' ? 'wasm' : 'js', // 'js' for IE11\n            libraryPath: 'libs/',\n            extraAttributes: {},\n            attributeNameEntry: undefined\n        }\n    }\n};\n", "import { deduceMeshField } from '@loaders.gl/schema';\n/** Extract an arrow-like schema from a Draco mesh */\nexport function getDracoSchema(attributes, loaderData, indices) {\n    const metadata = makeMetadata(loaderData.metadata);\n    const fields = [];\n    const namedLoaderDataAttributes = transformAttributesLoaderData(loaderData.attributes);\n    for (const attributeName in attributes) {\n        const attribute = attributes[attributeName];\n        const field = getArrowFieldFromAttribute(attributeName, attribute, namedLoaderDataAttributes[attributeName]);\n        fields.push(field);\n    }\n    if (indices) {\n        const indicesField = getArrowFieldFromAttribute('indices', indices);\n        fields.push(indicesField);\n    }\n    return { fields, metadata };\n}\nfunction transformAttributesLoaderData(loaderData) {\n    const result = {};\n    for (const key in loaderData) {\n        const dracoAttribute = loaderData[key];\n        result[dracoAttribute.name || 'undefined'] = dracoAttribute;\n    }\n    return result;\n}\nfunction getArrowFieldFromAttribute(attributeName, attribute, loaderData) {\n    const metadataMap = loaderData ? makeMetadata(loaderData.metadata) : undefined;\n    const field = deduceMeshField(attributeName, attribute, metadataMap);\n    return field;\n}\nfunction makeMetadata(metadata) {\n    Object.entries(metadata);\n    const serializedMetadata = {};\n    for (const key in metadata) {\n        serializedMetadata[`${key}.string`] = JSON.stringify(metadata[key]);\n    }\n    return serializedMetadata;\n}\n", "/* eslint-disable camelcase */\nimport { getMeshBoundingBox } from '@loaders.gl/schema';\nimport { getDracoSchema } from \"./utils/get-draco-schema.js\";\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst GEOMETRY_TYPE = {\n    TRIANGULAR_MESH: 0,\n    POINT_CLOUD: 1\n};\n// Native Draco attribute names to GLTF attribute names.\nconst DRACO_TO_GLTF_ATTRIBUTE_NAME_MAP = {\n    POSITION: 'POSITION',\n    NORMAL: 'NORMAL',\n    COLOR: 'COLOR_0',\n    TEX_COORD: 'TEXCOORD_0'\n};\nconst DRACO_DATA_TYPE_TO_TYPED_ARRAY_MAP = {\n    1: Int8Array,\n    2: Uint8Array,\n    3: Int16Array,\n    4: Uint16Array,\n    5: Int32Array,\n    6: Uint32Array,\n    // 7: BigInt64Array,\n    // 8: BigUint64Array,\n    9: Float32Array\n    // 10: Float64Array\n    // 11: BOOL - What array type do we use for this?\n};\nconst INDEX_ITEM_SIZE = 4;\nexport default class DracoParser {\n    draco;\n    decoder;\n    metadataQuerier;\n    // draco - the draco decoder, either import `draco3d` or load dynamically\n    constructor(draco) {\n        this.draco = draco;\n        this.decoder = new this.draco.Decoder();\n        this.metadataQuerier = new this.draco.MetadataQuerier();\n    }\n    /**\n     * Destroy draco resources\n     */\n    destroy() {\n        this.draco.destroy(this.decoder);\n        this.draco.destroy(this.metadataQuerier);\n    }\n    /**\n     * NOTE: caller must call `destroyGeometry` on the return value after using it\n     * @param arrayBuffer\n     * @param options\n     */\n    parseSync(arrayBuffer, options = {}) {\n        const buffer = new this.draco.DecoderBuffer();\n        buffer.Init(new Int8Array(arrayBuffer), arrayBuffer.byteLength);\n        this._disableAttributeTransforms(options);\n        const geometry_type = this.decoder.GetEncodedGeometryType(buffer);\n        const dracoGeometry = geometry_type === this.draco.TRIANGULAR_MESH\n            ? new this.draco.Mesh()\n            : new this.draco.PointCloud();\n        try {\n            let dracoStatus;\n            switch (geometry_type) {\n                case this.draco.TRIANGULAR_MESH:\n                    dracoStatus = this.decoder.DecodeBufferToMesh(buffer, dracoGeometry);\n                    break;\n                case this.draco.POINT_CLOUD:\n                    dracoStatus = this.decoder.DecodeBufferToPointCloud(buffer, dracoGeometry);\n                    break;\n                default:\n                    throw new Error('DRACO: Unknown geometry type.');\n            }\n            if (!dracoStatus.ok() || !dracoGeometry.ptr) {\n                const message = `DRACO decompression failed: ${dracoStatus.error_msg()}`;\n                // console.error(message);\n                throw new Error(message);\n            }\n            const loaderData = this._getDracoLoaderData(dracoGeometry, geometry_type, options);\n            const geometry = this._getMeshData(dracoGeometry, loaderData, options);\n            const boundingBox = getMeshBoundingBox(geometry.attributes);\n            const schema = getDracoSchema(geometry.attributes, loaderData, geometry.indices);\n            const data = {\n                loader: 'draco',\n                loaderData,\n                header: {\n                    vertexCount: dracoGeometry.num_points(),\n                    boundingBox\n                },\n                ...geometry,\n                schema\n            };\n            return data;\n        }\n        finally {\n            this.draco.destroy(buffer);\n            if (dracoGeometry) {\n                this.draco.destroy(dracoGeometry);\n            }\n        }\n    }\n    // Draco specific \"loader data\"\n    /**\n     * Extract\n     * @param dracoGeometry\n     * @param geometry_type\n     * @param options\n     * @returns\n     */\n    _getDracoLoaderData(dracoGeometry, geometry_type, options) {\n        const metadata = this._getTopLevelMetadata(dracoGeometry);\n        const attributes = this._getDracoAttributes(dracoGeometry, options);\n        return {\n            geometry_type,\n            num_attributes: dracoGeometry.num_attributes(),\n            num_points: dracoGeometry.num_points(),\n            num_faces: dracoGeometry instanceof this.draco.Mesh ? dracoGeometry.num_faces() : 0,\n            metadata,\n            attributes\n        };\n    }\n    /**\n     * Extract all draco provided information and metadata for each attribute\n     * @param dracoGeometry\n     * @param options\n     * @returns\n     */\n    _getDracoAttributes(dracoGeometry, options) {\n        const dracoAttributes = {};\n        for (let attributeId = 0; attributeId < dracoGeometry.num_attributes(); attributeId++) {\n            // Note: Draco docs do not seem clear on `GetAttribute` ids just being a zero-based index,\n            // but it does seems to work this way\n            const dracoAttribute = this.decoder.GetAttribute(dracoGeometry, attributeId);\n            const metadata = this._getAttributeMetadata(dracoGeometry, attributeId);\n            dracoAttributes[dracoAttribute.unique_id()] = {\n                unique_id: dracoAttribute.unique_id(),\n                attribute_type: dracoAttribute.attribute_type(),\n                data_type: dracoAttribute.data_type(),\n                num_components: dracoAttribute.num_components(),\n                byte_offset: dracoAttribute.byte_offset(),\n                byte_stride: dracoAttribute.byte_stride(),\n                normalized: dracoAttribute.normalized(),\n                attribute_index: attributeId,\n                metadata\n            };\n            // Add transformation parameters for any attributes app wants untransformed\n            const quantization = this._getQuantizationTransform(dracoAttribute, options);\n            if (quantization) {\n                dracoAttributes[dracoAttribute.unique_id()].quantization_transform = quantization;\n            }\n            const octahedron = this._getOctahedronTransform(dracoAttribute, options);\n            if (octahedron) {\n                dracoAttributes[dracoAttribute.unique_id()].octahedron_transform = octahedron;\n            }\n        }\n        return dracoAttributes;\n    }\n    /**\n     * Get standard loaders.gl mesh category data\n     * Extracts the geometry from draco\n     * @param dracoGeometry\n     * @param options\n     */\n    _getMeshData(dracoGeometry, loaderData, options) {\n        const attributes = this._getMeshAttributes(loaderData, dracoGeometry, options);\n        const positionAttribute = attributes.POSITION;\n        if (!positionAttribute) {\n            throw new Error('DRACO: No position attribute found.');\n        }\n        // For meshes, we need indices to define the faces.\n        if (dracoGeometry instanceof this.draco.Mesh) {\n            switch (options.topology) {\n                case 'triangle-strip':\n                    return {\n                        topology: 'triangle-strip',\n                        mode: 4, // GL.TRIANGLES\n                        attributes,\n                        indices: {\n                            value: this._getTriangleStripIndices(dracoGeometry),\n                            size: 1\n                        }\n                    };\n                case 'triangle-list':\n                default:\n                    return {\n                        topology: 'triangle-list',\n                        mode: 5, // GL.TRIANGLE_STRIP\n                        attributes,\n                        indices: {\n                            value: this._getTriangleListIndices(dracoGeometry),\n                            size: 1\n                        }\n                    };\n            }\n        }\n        // PointCloud - must come last as Mesh inherits from PointCloud\n        return {\n            topology: 'point-list',\n            mode: 0, // GL.POINTS\n            attributes\n        };\n    }\n    _getMeshAttributes(loaderData, dracoGeometry, options) {\n        const attributes = {};\n        for (const loaderAttribute of Object.values(loaderData.attributes)) {\n            const attributeName = this._deduceAttributeName(loaderAttribute, options);\n            loaderAttribute.name = attributeName;\n            const values = this._getAttributeValues(dracoGeometry, loaderAttribute);\n            if (values) {\n                const { value, size } = values;\n                attributes[attributeName] = {\n                    value,\n                    size,\n                    byteOffset: loaderAttribute.byte_offset,\n                    byteStride: loaderAttribute.byte_stride,\n                    normalized: loaderAttribute.normalized\n                };\n            }\n        }\n        return attributes;\n    }\n    // MESH INDICES EXTRACTION\n    /**\n     * For meshes, we need indices to define the faces.\n     * @param dracoGeometry\n     */\n    _getTriangleListIndices(dracoGeometry) {\n        // Example on how to retrieve mesh and attributes.\n        const numFaces = dracoGeometry.num_faces();\n        const numIndices = numFaces * 3;\n        const byteLength = numIndices * INDEX_ITEM_SIZE;\n        const ptr = this.draco._malloc(byteLength);\n        try {\n            this.decoder.GetTrianglesUInt32Array(dracoGeometry, byteLength, ptr);\n            return new Uint32Array(this.draco.HEAPF32.buffer, ptr, numIndices).slice();\n        }\n        finally {\n            this.draco._free(ptr);\n        }\n    }\n    /**\n     * For meshes, we need indices to define the faces.\n     * @param dracoGeometry\n     */\n    _getTriangleStripIndices(dracoGeometry) {\n        const dracoArray = new this.draco.DracoInt32Array();\n        try {\n            /* const numStrips = */ this.decoder.GetTriangleStripsFromMesh(dracoGeometry, dracoArray);\n            return getUint32Array(dracoArray);\n        }\n        finally {\n            this.draco.destroy(dracoArray);\n        }\n    }\n    /**\n     *\n     * @param dracoGeometry\n     * @param dracoAttribute\n     * @param attributeName\n     */\n    _getAttributeValues(dracoGeometry, attribute) {\n        const TypedArrayCtor = DRACO_DATA_TYPE_TO_TYPED_ARRAY_MAP[attribute.data_type];\n        if (!TypedArrayCtor) {\n            // eslint-disable-next-line no-console\n            console.warn(`DRACO: Unsupported attribute type ${attribute.data_type}`);\n            return null;\n        }\n        const numComponents = attribute.num_components;\n        const numPoints = dracoGeometry.num_points();\n        const numValues = numPoints * numComponents;\n        const byteLength = numValues * TypedArrayCtor.BYTES_PER_ELEMENT;\n        const dataType = getDracoDataType(this.draco, TypedArrayCtor);\n        let value;\n        const ptr = this.draco._malloc(byteLength);\n        try {\n            const dracoAttribute = this.decoder.GetAttribute(dracoGeometry, attribute.attribute_index);\n            this.decoder.GetAttributeDataArrayForAllPoints(dracoGeometry, dracoAttribute, dataType, byteLength, ptr);\n            value = new TypedArrayCtor(this.draco.HEAPF32.buffer, ptr, numValues).slice();\n        }\n        finally {\n            this.draco._free(ptr);\n        }\n        return { value, size: numComponents };\n    }\n    // Attribute names\n    /**\n     * DRACO does not store attribute names - We need to deduce an attribute name\n     * for each attribute\n    _getAttributeNames(\n      dracoGeometry: Mesh | PointCloud,\n      options: DracoParseOptions\n    ): {[unique_id: number]: string} {\n      const attributeNames: {[unique_id: number]: string} = {};\n      for (let attributeId = 0; attributeId < dracoGeometry.num_attributes(); attributeId++) {\n        const dracoAttribute = this.decoder.GetAttribute(dracoGeometry, attributeId);\n        const attributeName = this._deduceAttributeName(dracoAttribute, options);\n        attributeNames[attributeName] = attributeName;\n      }\n      return attributeNames;\n    }\n     */\n    /**\n     * Deduce an attribute name.\n     * @note DRACO does not save attribute names, just general type (POSITION, COLOR)\n     * to help optimize compression. We generate GLTF compatible names for the Draco-recognized\n     * types\n     * @param attributeData\n     */\n    _deduceAttributeName(attribute, options) {\n        // Deduce name based on application provided map\n        const uniqueId = attribute.unique_id;\n        for (const [attributeName, attributeUniqueId] of Object.entries(options.extraAttributes || {})) {\n            if (attributeUniqueId === uniqueId) {\n                return attributeName;\n            }\n        }\n        // Deduce name based on attribute type\n        const thisAttributeType = attribute.attribute_type;\n        for (const dracoAttributeConstant in DRACO_TO_GLTF_ATTRIBUTE_NAME_MAP) {\n            const attributeType = this.draco[dracoAttributeConstant];\n            if (attributeType === thisAttributeType) {\n                // TODO - Return unique names if there multiple attributes per type\n                // (e.g. multiple TEX_COORDS or COLORS)\n                return DRACO_TO_GLTF_ATTRIBUTE_NAME_MAP[dracoAttributeConstant];\n            }\n        }\n        // Look up in metadata\n        // TODO - shouldn't this have priority?\n        const entryName = options.attributeNameEntry || 'name';\n        if (attribute.metadata[entryName]) {\n            return attribute.metadata[entryName].string;\n        }\n        // Attribute of \"GENERIC\" type, we need to assign some name\n        return `CUSTOM_ATTRIBUTE_${uniqueId}`;\n    }\n    // METADATA EXTRACTION\n    /** Get top level metadata */\n    _getTopLevelMetadata(dracoGeometry) {\n        const dracoMetadata = this.decoder.GetMetadata(dracoGeometry);\n        return this._getDracoMetadata(dracoMetadata);\n    }\n    /** Get per attribute metadata */\n    _getAttributeMetadata(dracoGeometry, attributeId) {\n        const dracoMetadata = this.decoder.GetAttributeMetadata(dracoGeometry, attributeId);\n        return this._getDracoMetadata(dracoMetadata);\n    }\n    /**\n     * Extract metadata field values\n     * @param dracoMetadata\n     * @returns\n     */\n    _getDracoMetadata(dracoMetadata) {\n        // The not so wonderful world of undocumented Draco APIs :(\n        if (!dracoMetadata || !dracoMetadata.ptr) {\n            return {};\n        }\n        const result = {};\n        const numEntries = this.metadataQuerier.NumEntries(dracoMetadata);\n        for (let entryIndex = 0; entryIndex < numEntries; entryIndex++) {\n            const entryName = this.metadataQuerier.GetEntryName(dracoMetadata, entryIndex);\n            result[entryName] = this._getDracoMetadataField(dracoMetadata, entryName);\n        }\n        return result;\n    }\n    /**\n     * Extracts possible values for one metadata entry by name\n     * @param dracoMetadata\n     * @param entryName\n     */\n    _getDracoMetadataField(dracoMetadata, entryName) {\n        const dracoArray = new this.draco.DracoInt32Array();\n        try {\n            // Draco metadata fields can hold int32 arrays\n            this.metadataQuerier.GetIntEntryArray(dracoMetadata, entryName, dracoArray);\n            const intArray = getInt32Array(dracoArray);\n            return {\n                int: this.metadataQuerier.GetIntEntry(dracoMetadata, entryName),\n                string: this.metadataQuerier.GetStringEntry(dracoMetadata, entryName),\n                double: this.metadataQuerier.GetDoubleEntry(dracoMetadata, entryName),\n                intArray\n            };\n        }\n        finally {\n            this.draco.destroy(dracoArray);\n        }\n    }\n    // QUANTIZED ATTRIBUTE SUPPORT (NO DECOMPRESSION)\n    /** Skip transforms for specific attribute types */\n    _disableAttributeTransforms(options) {\n        const { quantizedAttributes = [], octahedronAttributes = [] } = options;\n        const skipAttributes = [...quantizedAttributes, ...octahedronAttributes];\n        for (const dracoAttributeName of skipAttributes) {\n            this.decoder.SkipAttributeTransform(this.draco[dracoAttributeName]);\n        }\n    }\n    /**\n     * Extract (and apply?) Position Transform\n     * @todo not used\n     */\n    _getQuantizationTransform(dracoAttribute, options) {\n        const { quantizedAttributes = [] } = options;\n        const attribute_type = dracoAttribute.attribute_type();\n        const skip = quantizedAttributes.map((type) => this.decoder[type]).includes(attribute_type);\n        if (skip) {\n            const transform = new this.draco.AttributeQuantizationTransform();\n            try {\n                if (transform.InitFromAttribute(dracoAttribute)) {\n                    return {\n                        quantization_bits: transform.quantization_bits(),\n                        range: transform.range(),\n                        min_values: new Float32Array([1, 2, 3]).map((i) => transform.min_value(i))\n                    };\n                }\n            }\n            finally {\n                this.draco.destroy(transform);\n            }\n        }\n        return null;\n    }\n    _getOctahedronTransform(dracoAttribute, options) {\n        const { octahedronAttributes = [] } = options;\n        const attribute_type = dracoAttribute.attribute_type();\n        const octahedron = octahedronAttributes\n            .map((type) => this.decoder[type])\n            .includes(attribute_type);\n        if (octahedron) {\n            const transform = new this.draco.AttributeQuantizationTransform();\n            try {\n                if (transform.InitFromAttribute(dracoAttribute)) {\n                    return {\n                        quantization_bits: transform.quantization_bits()\n                    };\n                }\n            }\n            finally {\n                this.draco.destroy(transform);\n            }\n        }\n        return null;\n    }\n}\n/**\n * Get draco specific data type by TypedArray constructor type\n * @param attributeType\n * @returns draco specific data type\n */\nfunction getDracoDataType(draco, attributeType) {\n    switch (attributeType) {\n        case Float32Array:\n            return draco.DT_FLOAT32;\n        case Int8Array:\n            return draco.DT_INT8;\n        case Int16Array:\n            return draco.DT_INT16;\n        case Int32Array:\n            return draco.DT_INT32;\n        case Uint8Array:\n            return draco.DT_UINT8;\n        case Uint16Array:\n            return draco.DT_UINT16;\n        case Uint32Array:\n            return draco.DT_UINT32;\n        default:\n            return draco.DT_INVALID;\n    }\n}\n/**\n * Copy a Draco int32 array into a JS typed array\n */\nfunction getInt32Array(dracoArray) {\n    const numValues = dracoArray.size();\n    const intArray = new Int32Array(numValues);\n    for (let i = 0; i < numValues; i++) {\n        intArray[i] = dracoArray.GetValue(i);\n    }\n    return intArray;\n}\n/**\n * Copy a Draco int32 array into a JS typed array\n */\nfunction getUint32Array(dracoArray) {\n    const numValues = dracoArray.size();\n    const intArray = new Int32Array(numValues);\n    for (let i = 0; i < numValues; i++) {\n        intArray[i] = dracoArray.GetValue(i);\n    }\n    return intArray;\n}\n", "// Dynamic DRACO module loading inspired by THREE.DRACOLoader\n// https://github.com/mrdoob/three.js/blob/398c4f39ebdb8b23eefd4a7a5ec49ec0c96c7462/examples/jsm/loaders/DRACOLoader.js\n// by Don McCurdy / https://www.donmccurdy.com / MIT license\nimport { loadLibrary } from '@loaders.gl/worker-utils';\nconst DRACO_DECODER_VERSION = '1.5.6';\nconst DRACO_ENCODER_VERSION = '1.4.1';\nconst STATIC_DECODER_URL = `https://www.gstatic.com/draco/versioned/decoders/${DRACO_DECODER_VERSION}`;\nexport const DRACO_EXTERNAL_LIBRARIES = {\n    /** The primary Draco3D encoder, javascript wrapper part */\n    DECODER: 'draco_wasm_wrapper.js',\n    /** The primary draco decoder, compiled web assembly part */\n    DECODER_WASM: 'draco_decoder.wasm',\n    /** Fallback decoder for non-webassebly environments. Very big bundle, lower performance */\n    FALLBACK_DECODER: 'draco_decoder.js',\n    /** Draco encoder */\n    ENCODER: 'draco_encoder.js'\n};\nexport const DRACO_EXTERNAL_LIBRARY_URLS = {\n    [DRACO_EXTERNAL_LIBRARIES.DECODER]: `${STATIC_DECODER_URL}/${DRACO_EXTERNAL_LIBRARIES.DECODER}`,\n    [DRACO_EXTERNAL_LIBRARIES.DECODER_WASM]: `${STATIC_DECODER_URL}/${DRACO_EXTERNAL_LIBRARIES.DECODER_WASM}`,\n    [DRACO_EXTERNAL_LIBRARIES.FALLBACK_DECODER]: `${STATIC_DECODER_URL}/${DRACO_EXTERNAL_LIBRARIES.FALLBACK_DECODER}`,\n    [DRACO_EXTERNAL_LIBRARIES.ENCODER]: `https://raw.githubusercontent.com/google/draco/${DRACO_ENCODER_VERSION}/javascript/${DRACO_EXTERNAL_LIBRARIES.ENCODER}`\n};\nlet loadDecoderPromise;\nlet loadEncoderPromise;\nexport async function loadDracoDecoderModule(options) {\n    const modules = options.modules || {};\n    // Check if a bundled draco3d library has been supplied by application\n    if (modules.draco3d) {\n        loadDecoderPromise ||= modules.draco3d.createDecoderModule({}).then((draco) => {\n            return { draco };\n        });\n    }\n    else {\n        // If not, dynamically load the WASM script from our CDN\n        loadDecoderPromise ||= loadDracoDecoder(options);\n    }\n    return await loadDecoderPromise;\n}\nexport async function loadDracoEncoderModule(options) {\n    const modules = options.modules || {};\n    // Check if a bundled draco3d library has been supplied by application\n    if (modules.draco3d) {\n        loadEncoderPromise ||= modules.draco3d.createEncoderModule({}).then((draco) => {\n            return { draco };\n        });\n    }\n    else {\n        // If not, dynamically load the WASM script from our CDN\n        loadEncoderPromise ||= loadDracoEncoder(options);\n    }\n    return await loadEncoderPromise;\n}\n// DRACO DECODER LOADING\nasync function loadDracoDecoder(options) {\n    let DracoDecoderModule;\n    let wasmBinary;\n    switch (options.draco && options.draco.decoderType) {\n        case 'js':\n            DracoDecoderModule = await loadLibrary(DRACO_EXTERNAL_LIBRARY_URLS[DRACO_EXTERNAL_LIBRARIES.FALLBACK_DECODER], 'draco', options, DRACO_EXTERNAL_LIBRARIES.FALLBACK_DECODER);\n            break;\n        case 'wasm':\n        default:\n            [DracoDecoderModule, wasmBinary] = await Promise.all([\n                await loadLibrary(DRACO_EXTERNAL_LIBRARY_URLS[DRACO_EXTERNAL_LIBRARIES.DECODER], 'draco', options, DRACO_EXTERNAL_LIBRARIES.DECODER),\n                await loadLibrary(DRACO_EXTERNAL_LIBRARY_URLS[DRACO_EXTERNAL_LIBRARIES.DECODER_WASM], 'draco', options, DRACO_EXTERNAL_LIBRARIES.DECODER_WASM)\n            ]);\n    }\n    // Depends on how import happened...\n    // @ts-ignore\n    DracoDecoderModule = DracoDecoderModule || globalThis.DracoDecoderModule;\n    return await initializeDracoDecoder(DracoDecoderModule, wasmBinary);\n}\nfunction initializeDracoDecoder(DracoDecoderModule, wasmBinary) {\n    const options = {};\n    if (wasmBinary) {\n        options.wasmBinary = wasmBinary;\n    }\n    return new Promise((resolve) => {\n        DracoDecoderModule({\n            ...options,\n            onModuleLoaded: (draco) => resolve({ draco }) // Module is Promise-like. Wrap in object to avoid loop.\n        });\n    });\n}\n// ENCODER\nasync function loadDracoEncoder(options) {\n    let DracoEncoderModule = await loadLibrary(DRACO_EXTERNAL_LIBRARY_URLS[DRACO_EXTERNAL_LIBRARIES.ENCODER], 'draco', options, DRACO_EXTERNAL_LIBRARIES.ENCODER);\n    // @ts-ignore\n    DracoEncoderModule = DracoEncoderModule || globalThis.DracoEncoderModule;\n    return new Promise((resolve) => {\n        DracoEncoderModule({\n            onModuleLoaded: (draco) => resolve({ draco }) // Module is Promise-like. Wrap in object to avoid loop.\n        });\n    });\n}\n", "import { DracoLoader as DracoWorkerLoader } from \"./draco-loader.js\";\nimport DracoParser from \"./lib/draco-parser.js\";\nimport { loadDracoDecoderModule } from \"./lib/draco-module-loader.js\";\nimport { VERSION } from \"./lib/utils/version.js\";\n// Module constants\nexport { DRACO_EXTERNAL_LIBRARIES, DRACO_EXTERNAL_LIBRARY_URLS } from \"./lib/draco-module-loader.js\";\nexport { DracoWriter } from \"./draco-writer.js\";\n/**\n * Browser worker doesn't work because of issue during \"draco_encoder.js\" loading.\n * Refused to execute script from 'https://raw.githubusercontent.com/google/draco/1.4.1/javascript/draco_encoder.js' because its MIME type ('') is not executable.\n */\nexport const DracoWriterWorker = {\n    id: 'draco-writer',\n    name: 'Draco compressed geometry writer',\n    module: 'draco',\n    version: VERSION,\n    worker: true,\n    options: {\n        draco: {},\n        source: null\n    }\n};\nexport { DracoWorkerLoader };\n/**\n * Loader for Draco3D compressed geometries\n */\nexport const DracoLoader = {\n    ...DracoWorkerLoader,\n    parse\n};\nasync function parse(arrayBuffer, options) {\n    const { draco } = await loadDracoDecoderModule(options);\n    const dracoParser = new DracoParser(draco);\n    try {\n        return dracoParser.parseSync(arrayBuffer, options?.draco);\n    }\n    finally {\n        dracoParser.destroy();\n    }\n}\n", "// TODO - remove\nimport { getAccessorTypeFromSize, getComponentTypeFromArray } from \"./gltf-utils.js\";\n// Returns a fresh attributes object with glTF-standardized attributes names\n// Attributes that cannot be identified will not be included\n// Removes `indices` if present, as it should be stored separately from the attributes\nexport function getGLTFAccessors(attributes) {\n    const accessors = {};\n    for (const name in attributes) {\n        const attribute = attributes[name];\n        if (name !== 'indices') {\n            const glTFAccessor = getGLTFAccessor(attribute);\n            accessors[name] = glTFAccessor;\n        }\n    }\n    return accessors;\n}\n// Fix up a single accessor.\n// Input: typed array or a partial accessor object\n// Return: accessor object\nexport function getGLTFAccessor(attribute) {\n    const { buffer, size, count } = getAccessorData(attribute);\n    const glTFAccessor = {\n        // glTF Accessor values\n        // TODO: Instead of a bufferView index we could have an actual buffer (typed array)\n        // bufferView: null,\n        // TODO: Deprecate `value` in favor of bufferView?\n        // @ts-ignore\n        value: buffer,\n        size, // Decoded `type` (e.g. SCALAR)\n        byteOffset: 0,\n        count,\n        type: getAccessorTypeFromSize(size),\n        componentType: getComponentTypeFromArray(buffer)\n    };\n    return glTFAccessor;\n}\n// export function getGLTFAttribute(data, gltfAttributeName): GLTFAccessor {\n//   return data.attributes[data.glTFAttributeMap[gltfAttributeName]];\n// }\nfunction getAccessorData(attribute) {\n    let buffer = attribute;\n    let size = 1;\n    let count = 0;\n    if (attribute && attribute.value) {\n        buffer = attribute.value;\n        size = attribute.size || 1;\n    }\n    if (buffer) {\n        if (!ArrayBuffer.isView(buffer)) {\n            buffer = toTypedArray(buffer, Float32Array);\n        }\n        count = buffer.length / size;\n    }\n    return { buffer, size, count };\n}\n// Convert non-typed arrays to arrays of specified format\nfunction toTypedArray(array, ArrayType, convertTypedArrays = false) {\n    if (!array) {\n        return null;\n    }\n    if (Array.isArray(array)) {\n        return new ArrayType(array);\n    }\n    if (convertTypedArrays && !(array instanceof ArrayType)) {\n        return new ArrayType(array);\n    }\n    return array;\n}\n", "/**\n * https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_texture_transform/README.md\n */\nimport { Vector3, Matrix3 } from '@math.gl/core';\nimport { getAccessorArrayTypeAndLength } from \"../gltf-utils/gltf-utils.js\";\nimport { BYTES, COMPONENTS } from \"../gltf-utils/gltf-constants.js\";\nimport { GLTFScenegraph } from \"../api/gltf-scenegraph.js\";\n/** Extension name */\nconst KHR_TEXTURE_TRANSFORM = 'KHR_texture_transform';\nexport const name = KHR_TEXTURE_TRANSFORM;\nconst scratchVector = new Vector3();\nconst scratchRotationMatrix = new Matrix3();\nconst scratchScaleMatrix = new Matrix3();\n/**\n * The extension entry to process the transformation\n * @param gltfData gltf buffers and json\n * @param options GLTFLoader options\n */\nexport async function decode(gltfData, options) {\n    const gltfScenegraph = new GLTFScenegraph(gltfData);\n    const hasExtension = gltfScenegraph.hasExtension(KHR_TEXTURE_TRANSFORM);\n    if (!hasExtension || !options.gltf?.loadBuffers) {\n        return;\n    }\n    const materials = gltfData.json.materials || [];\n    for (let i = 0; i < materials.length; i++) {\n        transformTexCoords(i, gltfData);\n    }\n}\n/**\n * Transform TEXCOORD by material\n * @param materialIndex processing material index\n * @param gltfData gltf buffers and json\n */\nfunction transformTexCoords(materialIndex, gltfData) {\n    const material = gltfData.json.materials?.[materialIndex];\n    const materialTextures = [\n        material?.pbrMetallicRoughness?.baseColorTexture,\n        material?.emissiveTexture,\n        material?.normalTexture,\n        material?.occlusionTexture,\n        material?.pbrMetallicRoughness?.metallicRoughnessTexture\n    ];\n    // Save processed texCoords in order no to process the same twice\n    const processedTexCoords = [];\n    for (const textureInfo of materialTextures) {\n        if (textureInfo && textureInfo?.extensions?.[KHR_TEXTURE_TRANSFORM]) {\n            transformPrimitives(gltfData, materialIndex, textureInfo, processedTexCoords);\n        }\n    }\n}\n/**\n * Transform primitives of the particular material\n * @param gltfData gltf data\n * @param materialIndex primitives with this material will be transformed\n * @param texture texture object\n * @param processedTexCoords storage to save already processed texCoords\n */\nfunction transformPrimitives(gltfData, materialIndex, texture, processedTexCoords) {\n    const transformParameters = getTransformParameters(texture, processedTexCoords);\n    if (!transformParameters) {\n        return;\n    }\n    const meshes = gltfData.json.meshes || [];\n    for (const mesh of meshes) {\n        for (const primitive of mesh.primitives) {\n            const material = primitive.material;\n            if (Number.isFinite(material) && materialIndex === material) {\n                transformPrimitive(gltfData, primitive, transformParameters);\n            }\n        }\n    }\n}\n/**\n * Get parameters for TEXCOORD transformation\n * @param texture texture object\n * @param processedTexCoords storage to save already processed texCoords\n * @returns texCoord couple and transformation matrix\n */\nfunction getTransformParameters(texture, processedTexCoords) {\n    const textureInfo = texture.extensions?.[KHR_TEXTURE_TRANSFORM];\n    const { texCoord: originalTexCoord = 0 } = texture;\n    // If texCoord is not set in the extension, original attribute data will be replaced\n    const { texCoord = originalTexCoord } = textureInfo;\n    // Make sure that couple [originalTexCoord, extensionTexCoord] is not processed twice\n    const isProcessed = processedTexCoords.findIndex(([original, newTexCoord]) => original === originalTexCoord && newTexCoord === texCoord) !== -1;\n    if (!isProcessed) {\n        const matrix = makeTransformationMatrix(textureInfo);\n        if (originalTexCoord !== texCoord) {\n            texture.texCoord = texCoord;\n        }\n        processedTexCoords.push([originalTexCoord, texCoord]);\n        return { originalTexCoord, texCoord, matrix };\n    }\n    return null;\n}\n/**\n * Transform `TEXCOORD_0` attribute in the primitive\n * @param gltfData gltf data\n * @param primitive primitive object\n * @param transformParameters texCoord couple and transformation matrix\n */\nfunction transformPrimitive(gltfData, primitive, transformParameters) {\n    const { originalTexCoord, texCoord, matrix } = transformParameters;\n    const texCoordAccessor = primitive.attributes[`TEXCOORD_${originalTexCoord}`];\n    if (Number.isFinite(texCoordAccessor)) {\n        // Get accessor of the `TEXCOORD_0` attribute\n        const accessor = gltfData.json.accessors?.[texCoordAccessor];\n        if (accessor && accessor.bufferView) {\n            // Get `bufferView` of the `accessor`\n            const bufferView = gltfData.json.bufferViews?.[accessor.bufferView];\n            if (bufferView) {\n                // Get `arrayBuffer` the `bufferView` look at\n                const { arrayBuffer, byteOffset: bufferByteOffset } = gltfData.buffers[bufferView.buffer];\n                // Resulting byteOffset is sum of the buffer, accessor and bufferView byte offsets\n                const byteOffset = (bufferByteOffset || 0) + (accessor.byteOffset || 0) + (bufferView.byteOffset || 0);\n                // Deduce TypedArray type and its length from `accessor` and `bufferView` data\n                const { ArrayType, length } = getAccessorArrayTypeAndLength(accessor, bufferView);\n                // Number of bytes each component occupies\n                const bytes = BYTES[accessor.componentType];\n                // Number of components. For the `TEXCOORD_0` with `VEC2` type, it must return 2\n                const components = COMPONENTS[accessor.type];\n                // Multiplier to calculate the address of the `TEXCOORD_0` element in the arrayBuffer\n                const elementAddressScale = bufferView.byteStride || bytes * components;\n                // Data transform to Float32Array\n                const result = new Float32Array(length);\n                for (let i = 0; i < accessor.count; i++) {\n                    // Take [u, v] couple from the arrayBuffer\n                    const uv = new ArrayType(arrayBuffer, byteOffset + i * elementAddressScale, 2);\n                    // Set and transform Vector3 per https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_texture_transform#overview\n                    scratchVector.set(uv[0], uv[1], 1);\n                    scratchVector.transformByMatrix3(matrix);\n                    // Save result in Float32Array\n                    result.set([scratchVector[0], scratchVector[1]], i * components);\n                }\n                // If texCoord the same, replace gltf structural data\n                if (originalTexCoord === texCoord) {\n                    updateGltf(accessor, bufferView, gltfData.buffers, result);\n                }\n                else {\n                    // If texCoord change, create new attribute\n                    createAttribute(texCoord, accessor, primitive, gltfData, result);\n                }\n            }\n        }\n    }\n}\n/**\n * Update GLTF structural objects with new data as we create new `Float32Array` for `TEXCOORD_0`.\n * @param accessor accessor to change\n * @param bufferView bufferView to change\n * @param buffers binary buffers\n * @param newTexcoordArray typed array with data after transformation\n */\nfunction updateGltf(accessor, bufferView, buffers, newTexCoordArray) {\n    accessor.componentType = 5126;\n    buffers.push({\n        arrayBuffer: newTexCoordArray.buffer,\n        byteOffset: 0,\n        byteLength: newTexCoordArray.buffer.byteLength\n    });\n    bufferView.buffer = buffers.length - 1;\n    bufferView.byteLength = newTexCoordArray.buffer.byteLength;\n    bufferView.byteOffset = 0;\n    delete bufferView.byteStride;\n}\n/**\n *\n * @param newTexCoord new `texCoord` value\n * @param originalAccessor original accessor object, that store data before transformation\n * @param primitive primitive object\n * @param gltfData gltf data\n * @param newTexCoordArray typed array with data after transformation\n * @returns\n */\nfunction createAttribute(newTexCoord, originalAccessor, primitive, gltfData, newTexCoordArray) {\n    gltfData.buffers.push({\n        arrayBuffer: newTexCoordArray.buffer,\n        byteOffset: 0,\n        byteLength: newTexCoordArray.buffer.byteLength\n    });\n    const bufferViews = gltfData.json.bufferViews;\n    if (!bufferViews) {\n        return;\n    }\n    bufferViews.push({\n        buffer: gltfData.buffers.length - 1,\n        byteLength: newTexCoordArray.buffer.byteLength,\n        byteOffset: 0\n    });\n    const accessors = gltfData.json.accessors;\n    if (!accessors) {\n        return;\n    }\n    accessors.push({\n        bufferView: bufferViews?.length - 1,\n        byteOffset: 0,\n        componentType: 5126,\n        count: originalAccessor.count,\n        type: 'VEC2'\n    });\n    primitive.attributes[`TEXCOORD_${newTexCoord}`] = accessors.length - 1;\n}\n/**\n * Construct transformation matrix from the extension data (transition, rotation, scale)\n * @param extensionData extension data\n * @returns transformation matrix\n */\nfunction makeTransformationMatrix(extensionData) {\n    const { offset = [0, 0], rotation = 0, scale = [1, 1] } = extensionData;\n    const translationMatrix = new Matrix3().set(1, 0, 0, 0, 1, 0, offset[0], offset[1], 1);\n    const rotationMatrix = scratchRotationMatrix.set(Math.cos(rotation), Math.sin(rotation), 0, -Math.sin(rotation), Math.cos(rotation), 0, 0, 0, 1);\n    const scaleMatrix = scratchScaleMatrix.set(scale[0], 0, 0, 0, scale[1], 0, 0, 0, 1);\n    return translationMatrix.multiplyRight(rotationMatrix).multiplyRight(scaleMatrix);\n}\n", "// GLTF EXTENSION: KHR_lights_punctual\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\nimport { assert } from \"../../utils/assert.js\";\nimport { GLTFScenegraph } from \"../../api/gltf-scenegraph.js\";\nconst KHR_LIGHTS_PUNCTUAL = 'KHR_lights_punctual';\nexport const name = KHR_LIGHTS_PUNCTUAL;\nexport async function decode(gltfData) {\n    const gltfScenegraph = new GLTFScenegraph(gltfData);\n    const { json } = gltfScenegraph;\n    // Move the light array out of the extension and remove the extension\n    const extension = gltfScenegraph.getExtension(KHR_LIGHTS_PUNCTUAL);\n    if (extension) {\n        // @ts-ignore\n        gltfScenegraph.json.lights = extension.lights;\n        gltfScenegraph.removeExtension(KHR_LIGHTS_PUNCTUAL);\n    }\n    // Any nodes that have the extension, add lights field pointing to light object\n    // and remove the extension\n    for (const node of json.nodes || []) {\n        const nodeExtension = gltfScenegraph.getObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n        if (nodeExtension) {\n            // @ts-ignore\n            node.light = nodeExtension.light;\n        }\n        gltfScenegraph.removeObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n    }\n}\n// Move the light ar ray out of the extension and remove the extension\nexport async function encode(gltfData) {\n    const gltfScenegraph = new GLTFScenegraph(gltfData);\n    const { json } = gltfScenegraph;\n    // @ts-ignore\n    if (json.lights) {\n        const extension = gltfScenegraph.addExtension(KHR_LIGHTS_PUNCTUAL);\n        // @ts-ignore\n        assert(!extension.lights);\n        // @ts-ignore\n        extension.lights = json.lights;\n        // @ts-ignore\n        delete json.lights;\n    }\n    // Any nodes that have lights field pointing to light object\n    // add the extension\n    // @ts-ignore\n    if (gltfScenegraph.json.lights) {\n        // @ts-ignore\n        for (const light of gltfScenegraph.json.lights) {\n            const node = light.node;\n            gltfScenegraph.addObjectExtension(node, KHR_LIGHTS_PUNCTUAL, light);\n        }\n        // @ts-ignore\n        delete gltfScenegraph.json.lights;\n    }\n}\n", "// GLTF EXTENSION: KHR_materials_unlit\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\nimport { GLTFScenegraph } from \"../../api/gltf-scenegraph.js\";\nconst KHR_MATERIALS_UNLIT = 'KHR_materials_unlit';\nexport const name = KHR_MATERIALS_UNLIT;\nexport async function decode(gltfData) {\n    const gltfScenegraph = new GLTFScenegraph(gltfData);\n    const { json } = gltfScenegraph;\n    // Any nodes that have the extension, add lights field pointing to light object\n    // and remove the extension\n    for (const material of json.materials || []) {\n        const extension = material.extensions && material.extensions.KHR_materials_unlit;\n        if (extension) {\n            // @ts-ignore TODO\n            material.unlit = true;\n        }\n        gltfScenegraph.removeObjectExtension(material, KHR_MATERIALS_UNLIT);\n    }\n    // Remove the top-level extension\n    gltfScenegraph.removeExtension(KHR_MATERIALS_UNLIT);\n}\nexport function encode(gltfData) {\n    const gltfScenegraph = new GLTFScenegraph(gltfData);\n    const { json } = gltfScenegraph;\n    // Any nodes that have lights field pointing to light object\n    // add the extension\n    // @ts-ignore\n    if (gltfScenegraph.materials) {\n        for (const material of json.materials || []) {\n            // @ts-ignore\n            if (material.unlit) {\n                // @ts-ignore\n                delete material.unlit;\n                gltfScenegraph.addObjectExtension(material, KHR_MATERIALS_UNLIT, {});\n                gltfScenegraph.addExtension(KHR_MATERIALS_UNLIT);\n            }\n        }\n    }\n}\n", "// GLTF EXTENSION: KHR_techniques_webgl\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_techniques_webgl\nimport { GLTFScenegraph } from \"../../api/gltf-scenegraph.js\";\nconst KHR_TECHNIQUES_WEBGL = 'KHR_techniques_webgl';\nexport const name = KHR_TECHNIQUES_WEBGL;\nexport async function decode(gltfData) {\n    const gltfScenegraph = new GLTFScenegraph(gltfData);\n    const { json } = gltfScenegraph;\n    const extension = gltfScenegraph.getExtension(KHR_TECHNIQUES_WEBGL);\n    if (extension) {\n        const techniques = resolveTechniques(extension, gltfScenegraph);\n        for (const material of json.materials || []) {\n            const materialExtension = gltfScenegraph.getObjectExtension(material, KHR_TECHNIQUES_WEBGL);\n            if (materialExtension) {\n                // @ts-ignore TODO\n                material.technique = Object.assign({}, materialExtension, \n                // @ts-ignore\n                techniques[materialExtension.technique]);\n                // @ts-ignore TODO\n                material.technique.values = resolveValues(material.technique, gltfScenegraph);\n            }\n            gltfScenegraph.removeObjectExtension(material, KHR_TECHNIQUES_WEBGL);\n        }\n        // Remove the top-level extension\n        gltfScenegraph.removeExtension(KHR_TECHNIQUES_WEBGL);\n    }\n}\n// eslint-disable-next-line\nexport async function encode(gltfData, options) {\n    // TODO\n}\nfunction resolveTechniques(techniquesExtension, \n// programs: {[key: string]: any}[],\n// shaders: {[key: string]: any}[],\n// techniques: {[key: string]: any}[]\ngltfScenegraph) {\n    const { programs = [], shaders = [], techniques = [] } = techniquesExtension;\n    const textDecoder = new TextDecoder();\n    shaders.forEach((shader) => {\n        if (Number.isFinite(shader.bufferView)) {\n            shader.code = textDecoder.decode(gltfScenegraph.getTypedArrayForBufferView(shader.bufferView));\n        }\n        else {\n            // TODO: handle URI shader\n            throw new Error('KHR_techniques_webgl: no shader code');\n        }\n    });\n    programs.forEach((program) => {\n        program.fragmentShader = shaders[program.fragmentShader];\n        program.vertexShader = shaders[program.vertexShader];\n    });\n    techniques.forEach((technique) => {\n        technique.program = programs[technique.program];\n    });\n    return techniques;\n}\nfunction resolveValues(technique, gltfScenegraph) {\n    const values = Object.assign({}, technique.values);\n    // merge values from uniforms\n    Object.keys(technique.uniforms || {}).forEach((uniform) => {\n        if (technique.uniforms[uniform].value && !(uniform in values)) {\n            values[uniform] = technique.uniforms[uniform].value;\n        }\n    });\n    // resolve textures\n    Object.keys(values).forEach((uniform) => {\n        if (typeof values[uniform] === 'object' && values[uniform].index !== undefined) {\n            // Assume this is a texture\n            // TODO: find if there are any other types that can be referenced\n            values[uniform].texture = gltfScenegraph.getTexture(values[uniform].index);\n        }\n    });\n    return values;\n}\n", "// GLTF 1.0 extensions (decode only)\n// import * as KHR_binary_gltf from './KHR_draco_mesh_compression';\n// GLTF 2.0 Vendor extensions\nimport * as EXT_mesh_features from \"../extensions/EXT_mesh_features.js\";\nimport * as EXT_structural_metadata from \"../extensions/EXT_structural_metadata.js\";\n// GLTF 2.0 Khronos extensions (decode/encode)\nimport * as EXT_meshopt_compression from \"../extensions/EXT_meshopt_compression.js\";\nimport * as EXT_texture_webp from \"../extensions/EXT_texture_webp.js\";\nimport * as KHR_texture_basisu from \"../extensions/KHR_texture_basisu.js\";\nimport * as KHR_draco_mesh_compression from \"../extensions/KHR_draco_mesh_compression.js\";\nimport * as KHR_texture_transform from \"../extensions/KHR_texture_transform.js\";\n// Deprecated. These should be handled by rendering library (e.g. luma.gl), not the loader.\nimport * as KHR_lights_punctual from \"../extensions/deprecated/KHR_lights_punctual.js\";\nimport * as KHR_materials_unlit from \"../extensions/deprecated/KHR_materials_unlit.js\";\nimport * as KHR_techniques_webgl from \"../extensions/deprecated/KHR_techniques_webgl.js\";\nimport * as EXT_feature_metadata from \"../extensions/deprecated/EXT_feature_metadata.js\";\n/**\n * List of extensions processed by the GLTFLoader\n * Note that may extensions can only be handled on the rendering stage and are left out here\n * These are just extensions that can be handled fully or partially during loading.\n */\nexport const EXTENSIONS = [\n    // 1.0\n    // KHR_binary_gltf is handled separately - must be processed before other parsing starts\n    // KHR_binary_gltf,\n    // 2.0\n    EXT_structural_metadata,\n    EXT_mesh_features,\n    EXT_meshopt_compression,\n    EXT_texture_webp,\n    // Basisu should come after webp, we want basisu to be preferred if both are provided\n    KHR_texture_basisu,\n    KHR_draco_mesh_compression,\n    KHR_lights_punctual,\n    KHR_materials_unlit,\n    KHR_techniques_webgl,\n    KHR_texture_transform,\n    EXT_feature_metadata\n];\n/** Call before any resource loading starts */\nexport function preprocessExtensions(gltf, options = {}, context) {\n    const extensions = EXTENSIONS.filter((extension) => useExtension(extension.name, options));\n    for (const extension of extensions) {\n        extension.preprocess?.(gltf, options, context);\n    }\n}\n/** Call after resource loading */\nexport async function decodeExtensions(gltf, options = {}, context) {\n    const extensions = EXTENSIONS.filter((extension) => useExtension(extension.name, options));\n    for (const extension of extensions) {\n        // Note: We decode async extensions sequentially, this might not be necessary\n        // Currently we only have Draco, but when we add Basis we may revisit\n        await extension.decode?.(gltf, options, context);\n    }\n}\nfunction useExtension(extensionName, options) {\n    const excludes = options?.gltf?.excludeExtensions || {};\n    const exclude = extensionName in excludes && !excludes[extensionName];\n    return !exclude;\n}\n", "// GLTF 1.0 EXTENSION: KHR_binary_glTF\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/1.0/Khronos/KHR_binary_glTF\n/* eslint-disable camelcase */\nimport { GLTFScenegraph } from \"../api/gltf-scenegraph.js\";\nconst KHR_BINARY_GLTF = 'KHR_binary_glTF';\n/** Extension name */\nexport const name = KHR_BINARY_GLTF;\nexport function preprocess(gltfData) {\n    const gltfScenegraph = new GLTFScenegraph(gltfData);\n    const { json } = gltfScenegraph;\n    // Note: json.buffers.binary_glTF also needs to be replaced\n    // This is currently done during gltf normalization\n    // Image and shader nodes can have the extension\n    // https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Khronos/KHR_binary_glTF/schema/image.KHR_binary_glTF.schema.json\n    for (const image of json.images || []) {\n        const extension = gltfScenegraph.getObjectExtension(image, KHR_BINARY_GLTF);\n        // The data in the extension is valid as glTF 2.0 data inside the object, so just copy it in\n        if (extension) {\n            Object.assign(image, extension);\n        }\n        gltfScenegraph.removeObjectExtension(image, KHR_BINARY_GLTF);\n    }\n    // TODO shaders - At least traverse and throw error if used?\n    // https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Khronos/KHR_binary_glTF/schema/shader.KHR_binary_glTF.schema.json\n    // glTF v1 one files have a partially formed URI field that is not expected in (and causes problems in) 2.0\n    if (json.buffers && json.buffers[0]) {\n        delete json.buffers[0].uri;\n    }\n    // Remove the top-level extension as it has now been processed\n    gltfScenegraph.removeExtension(KHR_BINARY_GLTF);\n}\n// KHR_binary_gltf is a 1.0 extension that is supported natively by 2.0\n// export function encode() {\n//   throw new Error(KHR_BINARY_GLTF);\n// }\n", "/* eslint-disable camelcase */\nimport * as KHR_binary_glTF from \"../extensions/KHR_binary_gltf.js\";\n// Binary format changes (mainly implemented by GLBLoader)\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/1.0/Khronos/KHR_binary_glTF\n// JSON format changes:\n// https://github.com/khronosgroup/gltf/issues/605\n// - [x] Top-level JSON objects are arrays now\n// - [ ] Removed indirection from animation: sampler now refers directly to accessors, #712\n// - [ ] material.parameter.value and technique.parameter.value must be an array, #690\n// - [ ] Node can have only one mesh #821\n// - [ ] Added reqs on JSON encoding\n// - [ ] Added reqs on binary data alignment #802 (comment)\n// Additions:\n// - [ ] Added accessor.normalized, #691, #706\n// - [ ] Added glExtensionsUsed property and 5125 (UNSIGNED_INT) accessor.componentType value, #619\n// - [ ] Added extensionsRequired property, #720, #721\n// - [ ] Added \"STEP\" as valid animation.sampler.interpolation value, #712\n// Removals:\n// - [x] Removed buffer.type, #786, #629\n// - [ ] Removed revision number from profile.version, #709\n// - [ ] Removed technique.functions.scissor and removed 3089 (SCISSOR_TEST) as a valid value for technique.states.enable, #681\n// - [ ] Techniques, programs, and shaders were moved out to KHR_technique_webgl extension.\n// Other edits:\n// - [x] asset is now required, #642\n// - [ ] buffer.byteLength and bufferView.byteLength are now required, #560.\n// - [ ] accessor.min and accessor.max are now required, #593, and clarified that the JSON value and binary data must be the same, #628.\n// - [ ] Clarified animation.sampler and animation.channel restrictions, #712\n// - [ ] skin.inverseBindMatrices is now optional, #461.\n// - [ ] Attribute parameters can't have a value defined in the technique or parameter, #563 (comment).\n// - [ ] Only TEXCOORD and COLOR attribute semantics can be written in the form [semantic]_[set_index], #563 (comment).\n// - [ ] TEXCOORD and COLOR attribute semantics must be written in the form [semantic]_[set_index], e.g., just TEXCOORD should be TEXCOORD_0, and just COLOR should be COLOR_0, #649\n// - [ ] camera.perspective.aspectRatio and camera.perspective.yfov must now be > 0, not >= 0, #563 (comment).\n// - [ ] Application-specific parameter semantics must start with an underscore, e.g., _TEMPERATURE and _SIMULATION_TIME, #563 (comment).\n// - [ ] Properties in technique.parameters must be defined in technique.uniforms or technique.attributes,\n// #563 (comment).\n// - [ ] technique.parameter.count can only be defined when the semantic is JOINTMATRIX or an application-specific semantic is used. It can never be defined for attribute parameters; only uniforms, d2f6945\n// - [ ] technique.parameter.semantic is required when the parameter is an attribute, 28e113d\n// - [ ] Mesh-only models are allowed, e.g., without materials, #642\n// - [ ] Skeleton hierarchies (nodes containing jointName) must be separated from non-skeleton hierarchies., #647\n// - [ ] technique.states.functions.blendColor and technique.states.functions.depthRange parameters now must match WebGL function min/max, #707\nconst GLTF_ARRAYS = {\n    accessors: 'accessor',\n    animations: 'animation',\n    buffers: 'buffer',\n    bufferViews: 'bufferView',\n    images: 'image',\n    materials: 'material',\n    meshes: 'mesh',\n    nodes: 'node',\n    samplers: 'sampler',\n    scenes: 'scene',\n    skins: 'skin',\n    textures: 'texture'\n};\nconst GLTF_KEYS = {\n    accessor: 'accessors',\n    animations: 'animation',\n    buffer: 'buffers',\n    bufferView: 'bufferViews',\n    image: 'images',\n    material: 'materials',\n    mesh: 'meshes',\n    node: 'nodes',\n    sampler: 'samplers',\n    scene: 'scenes',\n    skin: 'skins',\n    texture: 'textures'\n};\n/**\n * Converts (normalizes) glTF v1 to v2\n */\nclass GLTFV1Normalizer {\n    idToIndexMap = {\n        animations: {},\n        accessors: {},\n        buffers: {},\n        bufferViews: {},\n        images: {},\n        materials: {},\n        meshes: {},\n        nodes: {},\n        samplers: {},\n        scenes: {},\n        skins: {},\n        textures: {}\n    };\n    json;\n    // constructor() {}\n    /**\n     * Convert (normalize) glTF < 2.0 to glTF 2.0\n     * @param gltf - object with json and binChunks\n     * @param options\n     * @param options normalize Whether to actually normalize\n     */\n    normalize(gltf, options) {\n        this.json = gltf.json;\n        const json = gltf.json;\n        // Check version\n        switch (json.asset && json.asset.version) {\n            // We are converting to v2 format. Return if there is nothing to do\n            case '2.0':\n                return;\n            // This class is written to convert 1.0\n            case undefined:\n            case '1.0':\n                break;\n            default:\n                // eslint-disable-next-line no-undef, no-console\n                console.warn(`glTF: Unknown version ${json.asset.version}`);\n                return;\n        }\n        if (!options.normalize) {\n            // We are still missing a few conversion tricks, remove once addressed\n            throw new Error('glTF v1 is not supported.');\n        }\n        // eslint-disable-next-line no-undef, no-console\n        console.warn('Converting glTF v1 to glTF v2 format. This is experimental and may fail.');\n        this._addAsset(json);\n        // In glTF2 top-level fields are Arrays not Object maps\n        this._convertTopLevelObjectsToArrays(json);\n        // Extract bufferView indices for images\n        // (this extension needs to be invoked early in the normalization process)\n        // TODO can this be handled by standard extension processing instead of called explicitly?\n        KHR_binary_glTF.preprocess(gltf);\n        // Convert object references from ids to indices\n        this._convertObjectIdsToArrayIndices(json);\n        this._updateObjects(json);\n        this._updateMaterial(json);\n    }\n    // asset is now required, #642 https://github.com/KhronosGroup/glTF/issues/639\n    _addAsset(json) {\n        json.asset = json.asset || {};\n        // We are normalizing to glTF v2, so change version to \"2.0\"\n        json.asset.version = '2.0';\n        json.asset.generator = json.asset.generator || 'Normalized to glTF 2.0 by loaders.gl';\n    }\n    _convertTopLevelObjectsToArrays(json) {\n        // TODO check that all arrays are covered\n        for (const arrayName in GLTF_ARRAYS) {\n            this._convertTopLevelObjectToArray(json, arrayName);\n        }\n    }\n    /** Convert one top level object to array */\n    _convertTopLevelObjectToArray(json, mapName) {\n        const objectMap = json[mapName];\n        if (!objectMap || Array.isArray(objectMap)) {\n            return;\n        }\n        // Rewrite the top-level field as an array\n        json[mapName] = [];\n        // Copy the map key into object.id\n        for (const id in objectMap) {\n            const object = objectMap[id];\n            object.id = object.id || id; // Mutates the loaded object\n            const index = json[mapName].length;\n            json[mapName].push(object);\n            this.idToIndexMap[mapName][id] = index;\n        }\n    }\n    /** Go through all objects in all top-level arrays and replace ids with indices */\n    _convertObjectIdsToArrayIndices(json) {\n        for (const arrayName in GLTF_ARRAYS) {\n            this._convertIdsToIndices(json, arrayName);\n        }\n        if ('scene' in json) {\n            json.scene = this._convertIdToIndex(json.scene, 'scene');\n        }\n        // Convert any index references that are not using array names\n        // texture.source (image)\n        for (const texture of json.textures) {\n            this._convertTextureIds(texture);\n        }\n        for (const mesh of json.meshes) {\n            this._convertMeshIds(mesh);\n        }\n        for (const node of json.nodes) {\n            this._convertNodeIds(node);\n        }\n        for (const node of json.scenes) {\n            this._convertSceneIds(node);\n        }\n    }\n    _convertTextureIds(texture) {\n        if (texture.source) {\n            texture.source = this._convertIdToIndex(texture.source, 'image');\n        }\n    }\n    _convertMeshIds(mesh) {\n        for (const primitive of mesh.primitives) {\n            const { attributes, indices, material } = primitive;\n            for (const attributeName in attributes) {\n                attributes[attributeName] = this._convertIdToIndex(attributes[attributeName], 'accessor');\n            }\n            if (indices) {\n                primitive.indices = this._convertIdToIndex(indices, 'accessor');\n            }\n            if (material) {\n                primitive.material = this._convertIdToIndex(material, 'material');\n            }\n        }\n    }\n    _convertNodeIds(node) {\n        if (node.children) {\n            node.children = node.children.map((child) => this._convertIdToIndex(child, 'node'));\n        }\n        if (node.meshes) {\n            node.meshes = node.meshes.map((mesh) => this._convertIdToIndex(mesh, 'mesh'));\n        }\n    }\n    _convertSceneIds(scene) {\n        if (scene.nodes) {\n            scene.nodes = scene.nodes.map((node) => this._convertIdToIndex(node, 'node'));\n        }\n    }\n    /** Go through all objects in a top-level array and replace ids with indices */\n    _convertIdsToIndices(json, topLevelArrayName) {\n        if (!json[topLevelArrayName]) {\n            console.warn(`gltf v1: json doesn't contain attribute ${topLevelArrayName}`); // eslint-disable-line no-console, no-undef\n            json[topLevelArrayName] = [];\n        }\n        for (const object of json[topLevelArrayName]) {\n            for (const key in object) {\n                const id = object[key];\n                const index = this._convertIdToIndex(id, key);\n                object[key] = index;\n            }\n        }\n    }\n    _convertIdToIndex(id, key) {\n        const arrayName = GLTF_KEYS[key];\n        if (arrayName in this.idToIndexMap) {\n            const index = this.idToIndexMap[arrayName][id];\n            if (!Number.isFinite(index)) {\n                throw new Error(`gltf v1: failed to resolve ${key} with id ${id}`);\n            }\n            return index;\n        }\n        return id;\n    }\n    /**\n     *\n     * @param {*} json\n     */\n    _updateObjects(json) {\n        for (const buffer of this.json.buffers) {\n            // - [x] Removed buffer.type, #786, #629\n            delete buffer.type;\n        }\n    }\n    /**\n     * Update material (set pbrMetallicRoughness)\n     * @param {*} json\n     */\n    _updateMaterial(json) {\n        for (const material of json.materials) {\n            material.pbrMetallicRoughness = {\n                baseColorFactor: [1, 1, 1, 1],\n                metallicFactor: 1,\n                roughnessFactor: 1\n            };\n            const textureId = material.values?.tex || material.values?.texture2d_0 || material.values?.diffuseTex;\n            const textureIndex = json.textures.findIndex((texture) => texture.id === textureId);\n            if (textureIndex !== -1) {\n                material.pbrMetallicRoughness.baseColorTexture = { index: textureIndex };\n            }\n        }\n    }\n}\nexport function normalizeGLTFV1(gltf, options = {}) {\n    return new GLTFV1Normalizer().normalize(gltf, options);\n}\n", "import { parseJSON, sliceArrayBuffer, parseFromContext } from '@loaders.gl/loader-utils';\nimport { ImageLoader } from '@loaders.gl/images';\nimport { BasisLoader, selectSupportedBasisFormat } from '@loaders.gl/textures';\nimport { assert } from \"../utils/assert.js\";\nimport { isGLB, parseGLBSync } from \"./parse-glb.js\";\nimport { resolveUrl } from \"../gltf-utils/resolve-url.js\";\nimport { getTypedArrayForBufferView } from \"../gltf-utils/get-typed-array.js\";\nimport { preprocessExtensions, decodeExtensions } from \"../api/gltf-extensions.js\";\nimport { normalizeGLTFV1 } from \"../api/normalize-gltf-v1.js\";\n/** Check if an array buffer appears to contain GLTF data */\nexport function isGLTF(arrayBuffer, options) {\n    const byteOffset = 0;\n    return isGLB(arrayBuffer, byteOffset, options);\n}\nexport async function parseGLTF(gltf, arrayBufferOrString, byteOffset = 0, options, context) {\n    parseGLTFContainerSync(gltf, arrayBufferOrString, byteOffset, options);\n    normalizeGLTFV1(gltf, { normalize: options?.gltf?.normalize });\n    preprocessExtensions(gltf, options, context);\n    // Load linked buffers asynchronously and decodes base64 buffers in parallel\n    if (options?.gltf?.loadBuffers && gltf.json.buffers) {\n        await loadBuffers(gltf, options, context);\n    }\n    // loadImages and decodeExtensions should not be running in parallel, because\n    // decodeExtensions uses data from images taken during the loadImages call.\n    if (options?.gltf?.loadImages) {\n        await loadImages(gltf, options, context);\n    }\n    await decodeExtensions(gltf, options, context);\n    return gltf;\n}\n/**\n *\n * @param gltf\n * @param data - can be ArrayBuffer (GLB), ArrayBuffer (Binary JSON), String (JSON), or Object (parsed JSON)\n * @param byteOffset\n * @param options\n */\nfunction parseGLTFContainerSync(gltf, data, byteOffset, options) {\n    // Initialize gltf container\n    if (options.uri) {\n        gltf.baseUri = options.uri;\n    }\n    // If data is binary and starting with magic bytes, assume binary JSON text, convert to string\n    if (data instanceof ArrayBuffer && !isGLB(data, byteOffset, options)) {\n        const textDecoder = new TextDecoder();\n        data = textDecoder.decode(data);\n    }\n    if (typeof data === 'string') {\n        // If string, try to parse as JSON\n        gltf.json = parseJSON(data);\n    }\n    else if (data instanceof ArrayBuffer) {\n        // If still ArrayBuffer, parse as GLB container\n        const glb = {};\n        byteOffset = parseGLBSync(glb, data, byteOffset, options.glb);\n        assert(glb.type === 'glTF', `Invalid GLB magic string ${glb.type}`);\n        gltf._glb = glb;\n        gltf.json = glb.json;\n    }\n    else {\n        assert(false, 'GLTF: must be ArrayBuffer or string');\n    }\n    // Populate buffers\n    // Create an external buffers array to hold binary data\n    const buffers = gltf.json.buffers || [];\n    gltf.buffers = new Array(buffers.length).fill(null);\n    // Populates JSON and some bin chunk info\n    if (gltf._glb && gltf._glb.header.hasBinChunk) {\n        const { binChunks } = gltf._glb;\n        gltf.buffers[0] = {\n            arrayBuffer: binChunks[0].arrayBuffer,\n            byteOffset: binChunks[0].byteOffset,\n            byteLength: binChunks[0].byteLength\n        };\n        // TODO - this modifies JSON and is a post processing thing\n        // gltf.json.buffers[0].data = gltf.buffers[0].arrayBuffer;\n        // gltf.json.buffers[0].byteOffset = gltf.buffers[0].byteOffset;\n    }\n    // Populate images\n    const images = gltf.json.images || [];\n    gltf.images = new Array(images.length).fill({});\n}\n/** Asynchronously fetch and parse buffers, store in buffers array outside of json\n * TODO - traverse gltf and determine which buffers are actually needed\n */\nasync function loadBuffers(gltf, options, context) {\n    // TODO\n    const buffers = gltf.json.buffers || [];\n    for (let i = 0; i < buffers.length; ++i) {\n        const buffer = buffers[i];\n        if (buffer.uri) {\n            const { fetch } = context;\n            assert(fetch);\n            const uri = resolveUrl(buffer.uri, options);\n            const response = await context?.fetch?.(uri);\n            const arrayBuffer = await response?.arrayBuffer?.();\n            gltf.buffers[i] = {\n                arrayBuffer,\n                byteOffset: 0,\n                byteLength: arrayBuffer.byteLength\n            };\n            delete buffer.uri;\n        }\n        else if (gltf.buffers[i] === null) {\n            gltf.buffers[i] = {\n                arrayBuffer: new ArrayBuffer(buffer.byteLength),\n                byteOffset: 0,\n                byteLength: buffer.byteLength\n            };\n        }\n    }\n}\n/**\n * Loads all images\n * TODO - traverse gltf and determine which images are actually needed\n * @param gltf\n * @param options\n * @param context\n * @returns\n */\nasync function loadImages(gltf, options, context) {\n    const imageIndices = getReferencesImageIndices(gltf);\n    const images = gltf.json.images || [];\n    const promises = [];\n    for (const imageIndex of imageIndices) {\n        promises.push(loadImage(gltf, images[imageIndex], imageIndex, options, context));\n    }\n    return await Promise.all(promises);\n}\n/** Make sure we only load images that are actually referenced by textures */\nfunction getReferencesImageIndices(gltf) {\n    const imageIndices = new Set();\n    const textures = gltf.json.textures || [];\n    for (const texture of textures) {\n        if (texture.source !== undefined) {\n            imageIndices.add(texture.source);\n        }\n    }\n    return Array.from(imageIndices).sort();\n}\n/** Asynchronously fetches and parses one image, store in images array outside of json */\nasync function loadImage(gltf, image, index, options, context) {\n    let arrayBuffer;\n    if (image.uri && !image.hasOwnProperty('bufferView')) {\n        const uri = resolveUrl(image.uri, options);\n        const { fetch } = context;\n        const response = await fetch(uri);\n        arrayBuffer = await response.arrayBuffer();\n        image.bufferView = {\n            data: arrayBuffer\n        };\n    }\n    if (Number.isFinite(image.bufferView)) {\n        const array = getTypedArrayForBufferView(gltf.json, gltf.buffers, image.bufferView);\n        arrayBuffer = sliceArrayBuffer(array.buffer, array.byteOffset, array.byteLength);\n    }\n    assert(arrayBuffer, 'glTF image has no data');\n    // Call `parse`\n    let parsedImage = (await parseFromContext(arrayBuffer, [ImageLoader, BasisLoader], {\n        ...options,\n        mimeType: image.mimeType,\n        basis: options.basis || { format: selectSupportedBasisFormat() }\n    }, context));\n    if (parsedImage && parsedImage[0]) {\n        parsedImage = {\n            compressed: true,\n            // @ts-expect-error\n            mipmaps: false,\n            width: parsedImage[0].width,\n            height: parsedImage[0].height,\n            data: parsedImage[0]\n        };\n    }\n    // TODO making sure ImageLoader is overridable by using array of loaders\n    // const parsedImage = await parse(arrayBuffer, [ImageLoader]);\n    // Store the loaded image\n    gltf.images = gltf.images || [];\n    // @ts-expect-error TODO - sort out image typing asap\n    gltf.images[index] = parsedImage;\n}\n", "import { VERSION } from \"./lib/utils/version.js\";\nimport { parseGLTF } from \"./lib/parsers/parse-gltf.js\";\n/**\n * GLTF loader\n */\nexport const GLTFLoader = {\n    dataType: null,\n    batchType: null,\n    name: 'glTF',\n    id: 'gltf',\n    module: 'gltf',\n    version: VERSION,\n    extensions: ['gltf', 'glb'],\n    mimeTypes: ['model/gltf+json', 'model/gltf-binary'],\n    text: true,\n    binary: true,\n    tests: ['glTF'],\n    parse,\n    options: {\n        gltf: {\n            normalize: true, // Normalize glTF v1 to glTF v2 format (not yet stable)\n            loadBuffers: true, // Fetch any linked .BIN buffers, decode base64\n            loadImages: true, // Create image objects\n            decompressMeshes: true // Decompress Draco encoded meshes\n        },\n        // common?\n        log: console // eslint-disable-line\n    }\n};\nexport async function parse(arrayBuffer, options = {}, context) {\n    // Apps can call the parse method directly, we so apply default options here\n    options = { ...GLTFLoader.options, ...options };\n    // @ts-ignore\n    options.gltf = { ...GLTFLoader.options.gltf, ...options.gltf };\n    const { byteOffset = 0 } = options;\n    const gltf = {};\n    return await parseGLTF(gltf, arrayBuffer, byteOffset, options, context);\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { assert } from \"../utils/assert.js\";\nimport { getAccessorArrayTypeAndLength } from \"../gltf-utils/gltf-utils.js\";\n// This is a post processor for loaded glTF files\n// The goal is to make the loaded data easier to use in WebGL applications\n//\n// Functions:\n// * Resolve indexed arrays structure of glTF into a linked tree.\n// * Translate stringified enum keys and values into WebGL constants.\n// * Load images (optional)\n// ENUM LOOKUP\nconst COMPONENTS = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16\n};\nconst BYTES = {\n    5120: 1, // BYTE\n    5121: 1, // UNSIGNED_BYTE\n    5122: 2, // SHORT\n    5123: 2, // UNSIGNED_SHORT\n    5125: 4, // UNSIGNED_INT\n    5126: 4 // FLOAT\n};\nconst GL_SAMPLER = {\n    // Sampler parameters\n    TEXTURE_MAG_FILTER: 0x2800,\n    TEXTURE_MIN_FILTER: 0x2801,\n    TEXTURE_WRAP_S: 0x2802,\n    TEXTURE_WRAP_T: 0x2803,\n    // Sampler default values\n    REPEAT: 0x2901,\n    LINEAR: 0x2601,\n    NEAREST_MIPMAP_LINEAR: 0x2702\n};\nconst SAMPLER_PARAMETER_GLTF_TO_GL = {\n    magFilter: GL_SAMPLER.TEXTURE_MAG_FILTER,\n    minFilter: GL_SAMPLER.TEXTURE_MIN_FILTER,\n    wrapS: GL_SAMPLER.TEXTURE_WRAP_S,\n    wrapT: GL_SAMPLER.TEXTURE_WRAP_T\n};\n// When undefined, a sampler with repeat wrapping and auto filtering should be used.\n// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#texture\nconst DEFAULT_SAMPLER_PARAMETERS = {\n    [GL_SAMPLER.TEXTURE_MAG_FILTER]: GL_SAMPLER.LINEAR,\n    [GL_SAMPLER.TEXTURE_MIN_FILTER]: GL_SAMPLER.NEAREST_MIPMAP_LINEAR,\n    [GL_SAMPLER.TEXTURE_WRAP_S]: GL_SAMPLER.REPEAT,\n    [GL_SAMPLER.TEXTURE_WRAP_T]: GL_SAMPLER.REPEAT\n};\nfunction makeDefaultSampler() {\n    return {\n        id: 'default-sampler',\n        parameters: DEFAULT_SAMPLER_PARAMETERS\n    };\n}\nfunction getBytesFromComponentType(componentType) {\n    return BYTES[componentType];\n}\nfunction getSizeFromAccessorType(type) {\n    return COMPONENTS[type];\n}\nclass GLTFPostProcessor {\n    baseUri = '';\n    // @ts-expect-error\n    jsonUnprocessed;\n    // @ts-expect-error\n    json;\n    buffers = [];\n    images = [];\n    postProcess(gltf, options = {}) {\n        const { json, buffers = [], images = [] } = gltf;\n        // @ts-expect-error\n        const { baseUri = '' } = gltf;\n        assert(json);\n        this.baseUri = baseUri;\n        this.buffers = buffers;\n        this.images = images;\n        this.jsonUnprocessed = json;\n        this.json = this._resolveTree(gltf.json, options);\n        return this.json;\n    }\n    // Convert indexed glTF structure into tree structure\n    // cross-link index resolution, enum lookup, convenience calculations\n    // eslint-disable-next-line complexity, max-statements\n    _resolveTree(gltf, options = {}) {\n        // @ts-expect-error\n        const json = { ...gltf };\n        this.json = json;\n        if (gltf.bufferViews) {\n            json.bufferViews = gltf.bufferViews.map((bufView, i) => this._resolveBufferView(bufView, i));\n        }\n        if (gltf.images) {\n            json.images = gltf.images.map((image, i) => this._resolveImage(image, i));\n        }\n        if (gltf.samplers) {\n            json.samplers = gltf.samplers.map((sampler, i) => this._resolveSampler(sampler, i));\n        }\n        if (gltf.textures) {\n            json.textures = gltf.textures.map((texture, i) => this._resolveTexture(texture, i));\n        }\n        if (gltf.accessors) {\n            json.accessors = gltf.accessors.map((accessor, i) => this._resolveAccessor(accessor, i));\n        }\n        if (gltf.materials) {\n            json.materials = gltf.materials.map((material, i) => this._resolveMaterial(material, i));\n        }\n        if (gltf.meshes) {\n            json.meshes = gltf.meshes.map((mesh, i) => this._resolveMesh(mesh, i));\n        }\n        if (gltf.nodes) {\n            json.nodes = gltf.nodes.map((node, i) => this._resolveNode(node, i));\n            json.nodes = json.nodes.map((node, i) => this._resolveNodeChildren(node));\n        }\n        if (gltf.skins) {\n            json.skins = gltf.skins.map((skin, i) => this._resolveSkin(skin, i));\n        }\n        if (gltf.scenes) {\n            json.scenes = gltf.scenes.map((scene, i) => this._resolveScene(scene, i));\n        }\n        if (typeof this.json.scene === 'number' && json.scenes) {\n            json.scene = json.scenes[this.json.scene];\n        }\n        return json;\n    }\n    getScene(index) {\n        return this._get(this.json.scenes, index);\n    }\n    getNode(index) {\n        return this._get(this.json.nodes, index);\n    }\n    getSkin(index) {\n        return this._get(this.json.skins, index);\n    }\n    getMesh(index) {\n        return this._get(this.json.meshes, index);\n    }\n    getMaterial(index) {\n        return this._get(this.json.materials, index);\n    }\n    getAccessor(index) {\n        return this._get(this.json.accessors, index);\n    }\n    getCamera(index) {\n        return this._get(this.json.cameras, index);\n    }\n    getTexture(index) {\n        return this._get(this.json.textures, index);\n    }\n    getSampler(index) {\n        return this._get(this.json.samplers, index);\n    }\n    getImage(index) {\n        return this._get(this.json.images, index);\n    }\n    getBufferView(index) {\n        return this._get(this.json.bufferViews, index);\n    }\n    getBuffer(index) {\n        return this._get(this.json.buffers, index);\n    }\n    _get(array, index) {\n        // check if already resolved\n        if (typeof index === 'object') {\n            return index;\n        }\n        const object = array && array[index];\n        if (!object) {\n            console.warn(`glTF file error: Could not find ${array}[${index}]`); // eslint-disable-line\n        }\n        return object;\n    }\n    // PARSING HELPERS\n    _resolveScene(scene, index) {\n        return {\n            ...scene,\n            // @ts-ignore\n            id: scene.id || `scene-${index}`,\n            nodes: (scene.nodes || []).map((node) => this.getNode(node))\n        };\n    }\n    _resolveNode(gltfNode, index) {\n        // @ts-expect-error\n        const node = {\n            ...gltfNode,\n            // @ts-expect-error id could already be present, glTF standard does not prevent it\n            id: gltfNode?.id || `node-${index}`\n        };\n        if (gltfNode.mesh !== undefined) {\n            node.mesh = this.getMesh(gltfNode.mesh);\n        }\n        if (gltfNode.camera !== undefined) {\n            node.camera = this.getCamera(gltfNode.camera);\n        }\n        if (gltfNode.skin !== undefined) {\n            node.skin = this.getSkin(gltfNode.skin);\n        }\n        // TODO deprecated - Delete in v4.0?\n        // @ts-expect-error node.meshes does not seem to be part of the GLTF standard\n        if (gltfNode.meshes !== undefined && gltfNode.meshes.length) {\n            // @ts-expect-error\n            node.mesh = gltfNode.meshes.reduce((accum, meshIndex) => {\n                const mesh = this.getMesh(meshIndex);\n                accum.id = mesh.id;\n                accum.primitives = accum.primitives.concat(mesh.primitives);\n                return accum;\n            }, { primitives: [] });\n        }\n        return node;\n    }\n    _resolveNodeChildren(node) {\n        if (node.children) {\n            // @ts-expect-error node.children are numbers at this stage\n            node.children = node.children.map((child) => this.getNode(child));\n        }\n        return node;\n    }\n    _resolveSkin(gltfSkin, index) {\n        const inverseBindMatrices = typeof gltfSkin.inverseBindMatrices === 'number'\n            ? this.getAccessor(gltfSkin.inverseBindMatrices)\n            : undefined;\n        return {\n            ...gltfSkin,\n            id: gltfSkin.id || `skin-${index}`,\n            inverseBindMatrices\n        };\n    }\n    _resolveMesh(gltfMesh, index) {\n        const mesh = {\n            ...gltfMesh,\n            id: gltfMesh.id || `mesh-${index}`,\n            primitives: []\n        };\n        if (gltfMesh.primitives) {\n            mesh.primitives = gltfMesh.primitives.map((gltfPrimitive) => {\n                const primitive = {\n                    ...gltfPrimitive,\n                    attributes: {},\n                    indices: undefined,\n                    material: undefined\n                };\n                const attributes = gltfPrimitive.attributes;\n                for (const attribute in attributes) {\n                    primitive.attributes[attribute] = this.getAccessor(attributes[attribute]);\n                }\n                if (gltfPrimitive.indices !== undefined) {\n                    primitive.indices = this.getAccessor(gltfPrimitive.indices);\n                }\n                if (gltfPrimitive.material !== undefined) {\n                    primitive.material = this.getMaterial(gltfPrimitive.material);\n                }\n                return primitive;\n            });\n        }\n        return mesh;\n    }\n    _resolveMaterial(gltfMaterial, index) {\n        // @ts-expect-error\n        const material = {\n            ...gltfMaterial,\n            // @ts-expect-error\n            id: gltfMaterial.id || `material-${index}`\n        };\n        if (material.normalTexture) {\n            material.normalTexture = { ...material.normalTexture };\n            material.normalTexture.texture = this.getTexture(material.normalTexture.index);\n        }\n        if (material.occlusionTexture) {\n            material.occlusionTexture = { ...material.occlusionTexture };\n            material.occlusionTexture.texture = this.getTexture(material.occlusionTexture.index);\n        }\n        if (material.emissiveTexture) {\n            material.emissiveTexture = { ...material.emissiveTexture };\n            material.emissiveTexture.texture = this.getTexture(material.emissiveTexture.index);\n        }\n        if (!material.emissiveFactor) {\n            material.emissiveFactor = material.emissiveTexture ? [1, 1, 1] : [0, 0, 0];\n        }\n        if (material.pbrMetallicRoughness) {\n            material.pbrMetallicRoughness = { ...material.pbrMetallicRoughness };\n            const mr = material.pbrMetallicRoughness;\n            if (mr.baseColorTexture) {\n                mr.baseColorTexture = { ...mr.baseColorTexture };\n                mr.baseColorTexture.texture = this.getTexture(mr.baseColorTexture.index);\n            }\n            if (mr.metallicRoughnessTexture) {\n                mr.metallicRoughnessTexture = { ...mr.metallicRoughnessTexture };\n                mr.metallicRoughnessTexture.texture = this.getTexture(mr.metallicRoughnessTexture.index);\n            }\n        }\n        return material;\n    }\n    _resolveAccessor(gltfAccessor, index) {\n        // Look up enums\n        const bytesPerComponent = getBytesFromComponentType(gltfAccessor.componentType);\n        const components = getSizeFromAccessorType(gltfAccessor.type);\n        const bytesPerElement = bytesPerComponent * components;\n        const accessor = {\n            ...gltfAccessor,\n            // @ts-expect-error\n            id: gltfAccessor.id || `accessor-${index}`,\n            bytesPerComponent,\n            components,\n            bytesPerElement,\n            value: undefined,\n            bufferView: undefined,\n            sparse: undefined\n        };\n        if (gltfAccessor.bufferView !== undefined) {\n            // Draco encoded meshes don't have bufferView\n            accessor.bufferView = this.getBufferView(gltfAccessor.bufferView);\n        }\n        // Create TypedArray for the accessor\n        // Note: The canonical way to instantiate is to ignore this array and create\n        // WebGLBuffer's using the bufferViews.\n        if (accessor.bufferView) {\n            const buffer = accessor.bufferView.buffer;\n            const { ArrayType, byteLength } = getAccessorArrayTypeAndLength(accessor, accessor.bufferView);\n            const byteOffset = (accessor.bufferView.byteOffset || 0) + (accessor.byteOffset || 0) + buffer.byteOffset;\n            let cutBuffer = buffer.arrayBuffer.slice(byteOffset, byteOffset + byteLength);\n            if (accessor.bufferView.byteStride) {\n                cutBuffer = this._getValueFromInterleavedBuffer(buffer, byteOffset, accessor.bufferView.byteStride, accessor.bytesPerElement, accessor.count);\n            }\n            accessor.value = new ArrayType(cutBuffer);\n        }\n        return accessor;\n    }\n    /**\n     * Take values of particular accessor from interleaved buffer\n     * various parts of the buffer\n     * @param buffer\n     * @param byteOffset\n     * @param byteStride\n     * @param bytesPerElement\n     * @param count\n     * @returns\n     */\n    _getValueFromInterleavedBuffer(buffer, byteOffset, byteStride, bytesPerElement, count) {\n        const result = new Uint8Array(count * bytesPerElement);\n        for (let i = 0; i < count; i++) {\n            const elementOffset = byteOffset + i * byteStride;\n            result.set(new Uint8Array(buffer.arrayBuffer.slice(elementOffset, elementOffset + bytesPerElement)), i * bytesPerElement);\n        }\n        return result.buffer;\n    }\n    _resolveTexture(gltfTexture, index) {\n        return {\n            ...gltfTexture,\n            // @ts-expect-error id could already be present, glTF standard does not prevent it\n            id: gltfTexture.id || `texture-${index}`,\n            sampler: typeof gltfTexture.sampler === 'number'\n                ? this.getSampler(gltfTexture.sampler)\n                : makeDefaultSampler(),\n            source: typeof gltfTexture.source === 'number' ? this.getImage(gltfTexture.source) : undefined\n        };\n    }\n    _resolveSampler(gltfSampler, index) {\n        const sampler = {\n            // @ts-expect-error id could already be present, glTF standard does not prevent it\n            id: gltfSampler.id || `sampler-${index}`,\n            ...gltfSampler,\n            parameters: {}\n        };\n        // Map textual parameters to GL parameter values\n        for (const key in sampler) {\n            const glEnum = this._enumSamplerParameter(key);\n            if (glEnum !== undefined) {\n                sampler.parameters[glEnum] = sampler[key];\n            }\n        }\n        return sampler;\n    }\n    _enumSamplerParameter(key) {\n        return SAMPLER_PARAMETER_GLTF_TO_GL[key];\n    }\n    _resolveImage(gltfImage, index) {\n        const image = {\n            ...gltfImage,\n            // @ts-expect-error id could already be present, glTF standard does not prevent it\n            id: gltfImage.id || `image-${index}`,\n            image: null,\n            bufferView: gltfImage.bufferView !== undefined ? this.getBufferView(gltfImage.bufferView) : undefined\n        };\n        // Check if image has been preloaded by the GLTFLoader\n        // If so, link it into the JSON and drop the URI\n        const preloadedImage = this.images[index];\n        if (preloadedImage) {\n            image.image = preloadedImage;\n        }\n        return image;\n    }\n    _resolveBufferView(gltfBufferView, index) {\n        const bufferIndex = gltfBufferView.buffer;\n        const arrayBuffer = this.buffers[bufferIndex].arrayBuffer;\n        // Add offset of buffer, then offset of buffer view\n        let byteOffset = this.buffers[bufferIndex].byteOffset || 0;\n        if (gltfBufferView.byteOffset) {\n            byteOffset += gltfBufferView.byteOffset;\n        }\n        const bufferView = {\n            // // @ts-expect-error id could already be present, glTF standard does not prevent it\n            id: `bufferView-${index}`,\n            ...gltfBufferView,\n            // ...this.buffers[bufferIndex],\n            buffer: this.buffers[bufferIndex],\n            data: new Uint8Array(arrayBuffer, byteOffset, gltfBufferView.byteLength)\n        };\n        return bufferView;\n    }\n    _resolveCamera(gltfCamera, index) {\n        const camera = {\n            ...gltfCamera,\n            // @ts-expect-error id could already be present, glTF standard does not prevent it\n            id: gltfCamera.id || `camera-${index}`\n        };\n        // TODO - create 4x4 matrices\n        if (camera.perspective) {\n            // camera.matrix = createPerspectiveMatrix(camera.perspective);\n        }\n        if (camera.orthographic) {\n            // camera.matrix = createOrthographicMatrix(camera.orthographic);\n        }\n        return camera;\n    }\n}\nexport function postProcessGLTF(gltf, options) {\n    return new GLTFPostProcessor().postProcess(gltf, options);\n}\n", "export async function waitForGLTFAssets(gltfObjects) {\n    const remaining = [];\n    gltfObjects.scenes.forEach(scene => {\n        scene.traverse((modelNode) => {\n            // TODO v9 getUnforms() was removed, hack it with props.uniforms\n            Object.values(modelNode.model.uniforms).forEach((uniform) => {\n                if (uniform.loaded === false) {\n                    remaining.push(uniform);\n                }\n            });\n        });\n    });\n    return await waitWhileCondition(() => remaining.some(uniform => !uniform.loaded));\n}\nasync function waitWhileCondition(condition) {\n    while (condition()) {\n        await new Promise(resolve => requestAnimationFrame(resolve));\n    }\n}\n", "export default `\\\n#version 300 es\n#define SHADER_NAME scenegraph-layer-vertex-shader\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin vec3 instanceModelMatrixCol0;\nin vec3 instanceModelMatrixCol1;\nin vec3 instanceModelMatrixCol2;\nin vec3 instanceTranslation;\nuniform float sizeScale;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform mat4 sceneModelMatrix;\nuniform bool composeModelMatrix;\nin vec3 positions;\n#ifdef HAS_UV\nin vec2 texCoords;\n#endif\n#ifdef MODULE_PBR\n#ifdef HAS_NORMALS\nin vec3 normals;\n#endif\n#endif\nout vec4 vColor;\n#ifndef MODULE_PBR\n#ifdef HAS_UV\nout vec2 vTEXCOORD_0;\n#endif\n#endif\nvoid main(void) {\n#if defined(HAS_UV) && !defined(MODULE_PBR)\nvTEXCOORD_0 = texCoords;\ngeometry.uv = texCoords;\n#endif\ngeometry.worldPosition = instancePositions;\ngeometry.pickingColor = instancePickingColors;\nmat3 instanceModelMatrix = mat3(instanceModelMatrixCol0, instanceModelMatrixCol1, instanceModelMatrixCol2);\nvec3 normal = vec3(0.0, 0.0, 1.0);\n#ifdef MODULE_PBR\n#ifdef HAS_NORMALS\nnormal = instanceModelMatrix * (sceneModelMatrix * vec4(normals, 0.0)).xyz;\n#endif\n#endif\nfloat originalSize = project_size_to_pixel(sizeScale);\nfloat clampedSize = clamp(originalSize, sizeMinPixels, sizeMaxPixels);\nvec3 pos = (instanceModelMatrix * (sceneModelMatrix * vec4(positions, 1.0)).xyz) * sizeScale * (clampedSize / originalSize) + instanceTranslation;\nif(composeModelMatrix) {\nDECKGL_FILTER_SIZE(pos, geometry);\ngeometry.normal = project_normal(normal);\ngeometry.worldPosition += pos;\ngl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n}\nelse {\npos = project_size(pos);\nDECKGL_FILTER_SIZE(pos, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, pos, geometry.position);\ngeometry.normal = project_normal(normal);\n}\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n#ifdef MODULE_PBR\npbr_vPosition = geometry.position.xyz;\n#ifdef HAS_NORMALS\npbr_vNormal = geometry.normal;\n#endif\n#ifdef HAS_UV\npbr_vUV = texCoords;\n#else\npbr_vUV = vec2(0., 0.);\n#endif\ngeometry.uv = pbr_vUV;\n#endif\nvColor = instanceColors;\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n", "export default `\\\n#version 300 es\n#define SHADER_NAME scenegraph-layer-fragment-shader\nuniform float opacity;\nin vec4 vColor;\nout vec4 fragColor;\n#ifndef MODULE_PBR\n#if defined(HAS_UV) && defined(HAS_BASECOLORMAP)\nin vec2 vTEXCOORD_0;\nuniform sampler2D u_BaseColorSampler;\n#endif\n#endif\nvoid main(void) {\n#ifdef MODULE_PBR\nfragColor = vColor * pbr_filterColor(vec4(0));\ngeometry.uv = pbr_vUV;\n#else\n#if defined(HAS_UV) && defined(HAS_BASECOLORMAP)\nfragColor = vColor * texture(u_BaseColorSampler, vTEXCOORD_0);\ngeometry.uv = vTEXCOORD_0;\n#else\nfragColor = vColor;\n#endif\n#endif\nfragColor.a *= opacity;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n`;\n", "// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { Layer, project32, picking, log } from '@deck.gl/core';\nimport { pbr } from '@luma.gl/shadertools';\nimport { ScenegraphNode, GroupNode, ModelNode } from '@luma.gl/engine';\nimport { createScenegraphsFromGLTF } from '@luma.gl/gltf';\nimport { GLTFLoader, postProcessGLTF } from '@loaders.gl/gltf';\nimport { waitForGLTFAssets } from \"./gltf-utils.js\";\nimport { MATRIX_ATTRIBUTES, shouldComposeModelMatrix } from \"../utils/matrix.js\";\nimport vs from \"./scenegraph-layer-vertex.glsl.js\";\nimport fs from \"./scenegraph-layer-fragment.glsl.js\";\nconst DEFAULT_COLOR = [255, 255, 255, 255];\nconst defaultProps = {\n    scenegraph: { type: 'object', value: null, async: true },\n    getScene: gltf => {\n        if (gltf && gltf.scenes) {\n            // gltf post processor replaces `gltf.scene` number with the scene `object`\n            return typeof gltf.scene === 'object' ? gltf.scene : gltf.scenes[gltf.scene || 0];\n        }\n        return gltf;\n    },\n    getAnimator: scenegraph => scenegraph && scenegraph.animator,\n    _animations: null,\n    sizeScale: { type: 'number', value: 1, min: 0 },\n    sizeMinPixels: { type: 'number', min: 0, value: 0 },\n    sizeMaxPixels: { type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER },\n    getPosition: { type: 'accessor', value: (x) => x.position },\n    getColor: { type: 'accessor', value: DEFAULT_COLOR },\n    // flat or pbr\n    _lighting: 'flat',\n    // _lighting must be pbr for this to work\n    _imageBasedLightingEnvironment: undefined,\n    // yaw, pitch and roll are in degrees\n    // https://en.wikipedia.org/wiki/Euler_angles\n    // [pitch, yaw, roll]\n    getOrientation: { type: 'accessor', value: [0, 0, 0] },\n    getScale: { type: 'accessor', value: [1, 1, 1] },\n    getTranslation: { type: 'accessor', value: [0, 0, 0] },\n    // 4x4 matrix\n    getTransformMatrix: { type: 'accessor', value: [] },\n    loaders: [GLTFLoader]\n};\n/** Render a number of instances of a complete glTF scenegraph. */\nexport default class ScenegraphLayer extends Layer {\n    static { this.defaultProps = defaultProps; }\n    static { this.layerName = 'ScenegraphLayer'; }\n    getShaders() {\n        const modules = [project32, picking];\n        if (this.props._lighting === 'pbr') {\n            modules.push(pbr);\n        }\n        return super.getShaders({ vs, fs, modules });\n    }\n    initializeState() {\n        const attributeManager = this.getAttributeManager();\n        // attributeManager is always defined for primitive layers\n        attributeManager.addInstanced({\n            instancePositions: {\n                size: 3,\n                type: 'float64',\n                fp64: this.use64bitPositions(),\n                accessor: 'getPosition',\n                transition: true\n            },\n            instanceColors: {\n                type: 'unorm8',\n                size: this.props.colorFormat.length,\n                accessor: 'getColor',\n                defaultValue: DEFAULT_COLOR,\n                transition: true\n            },\n            instanceModelMatrix: MATRIX_ATTRIBUTES\n        });\n    }\n    updateState(params) {\n        super.updateState(params);\n        const { props, oldProps } = params;\n        if (props.scenegraph !== oldProps.scenegraph) {\n            this._updateScenegraph();\n        }\n        else if (props._animations !== oldProps._animations) {\n            this._applyAnimationsProp(this.state.animator, props._animations);\n        }\n    }\n    finalizeState(context) {\n        super.finalizeState(context);\n        this.state.scenegraph?.destroy();\n    }\n    get isLoaded() {\n        return Boolean(this.state?.scenegraph && super.isLoaded);\n    }\n    _updateScenegraph() {\n        const props = this.props;\n        const { device } = this.context;\n        let scenegraphData = null;\n        if (props.scenegraph instanceof ScenegraphNode) {\n            // Signature 1: props.scenegraph is a proper luma.gl Scenegraph\n            scenegraphData = { scenes: [props.scenegraph] };\n        }\n        else if (props.scenegraph && typeof props.scenegraph === 'object') {\n            // Converts loaders.gl gltf to luma.gl scenegraph using the undocumented @luma.gl/experimental function\n            const gltf = props.scenegraph;\n            // Tiles3DLoader already processes GLTF\n            const processedGLTF = gltf.json ? postProcessGLTF(gltf) : gltf;\n            const gltfObjects = createScenegraphsFromGLTF(device, processedGLTF, this._getModelOptions());\n            scenegraphData = { gltf: processedGLTF, ...gltfObjects };\n            waitForGLTFAssets(gltfObjects)\n                .then(() => {\n                this.setNeedsRedraw();\n            })\n                .catch(ex => {\n                this.raiseError(ex, 'loading glTF');\n            });\n        }\n        const options = { layer: this, device: this.context.device };\n        const scenegraph = props.getScene(scenegraphData, options);\n        const animator = props.getAnimator(scenegraphData, options);\n        if (scenegraph instanceof GroupNode) {\n            this.state.scenegraph?.destroy();\n            this._applyAnimationsProp(animator, props._animations);\n            const models = [];\n            scenegraph.traverse(node => {\n                if (node instanceof ModelNode) {\n                    models.push(node.model);\n                }\n            });\n            this.setState({ scenegraph, animator, models });\n            this.getAttributeManager().invalidateAll();\n        }\n        else if (scenegraph !== null) {\n            log.warn('invalid scenegraph:', scenegraph)();\n        }\n    }\n    _applyAnimationsProp(animator, animationsProp) {\n        if (!animator || !animationsProp) {\n            return;\n        }\n        const animations = animator.getAnimations();\n        // sort() to ensure '*' comes first so that other values can override\n        Object.keys(animationsProp)\n            .sort()\n            .forEach(key => {\n            // Key can be:\n            //  - number for index number\n            //  - name for animation name\n            //  - * to affect all animations\n            const value = animationsProp[key];\n            if (key === '*') {\n                animations.forEach(animation => {\n                    Object.assign(animation, value);\n                });\n            }\n            else if (Number.isFinite(Number(key))) {\n                const number = Number(key);\n                if (number >= 0 && number < animations.length) {\n                    Object.assign(animations[number], value);\n                }\n                else {\n                    log.warn(`animation ${key} not found`)();\n                }\n            }\n            else {\n                const findResult = animations.find(({ name }) => name === key);\n                if (findResult) {\n                    Object.assign(findResult, value);\n                }\n                else {\n                    log.warn(`animation ${key} not found`)();\n                }\n            }\n        });\n    }\n    _getModelOptions() {\n        const { _imageBasedLightingEnvironment } = this.props;\n        let env;\n        if (_imageBasedLightingEnvironment) {\n            if (typeof _imageBasedLightingEnvironment === 'function') {\n                env = _imageBasedLightingEnvironment({ gl: this.context.gl, layer: this });\n            }\n            else {\n                env = _imageBasedLightingEnvironment;\n            }\n        }\n        return {\n            imageBasedLightingEnvironment: env,\n            modelOptions: {\n                id: this.props.id,\n                isInstanced: true,\n                bufferLayout: this.getAttributeManager().getBufferLayouts(),\n                ...this.getShaders()\n            },\n            // tangents are not supported\n            useTangents: false\n        };\n    }\n    draw({ context }) {\n        if (!this.state.scenegraph)\n            return;\n        if (this.props._animations && this.state.animator) {\n            this.state.animator.animate(context.timeline.getTime());\n            this.setNeedsRedraw();\n        }\n        const { viewport, renderPass } = this.context;\n        const { sizeScale, sizeMinPixels, sizeMaxPixels, opacity, coordinateSystem } = this.props;\n        const numInstances = this.getNumInstances();\n        this.state.scenegraph.traverse((node, { worldMatrix }) => {\n            if (node instanceof ModelNode) {\n                const { model } = node;\n                model.setInstanceCount(numInstances);\n                model.setUniforms({\n                    sizeScale,\n                    opacity,\n                    sizeMinPixels,\n                    sizeMaxPixels,\n                    composeModelMatrix: shouldComposeModelMatrix(viewport, coordinateSystem),\n                    sceneModelMatrix: worldMatrix,\n                    // Needed for PBR (TODO: find better way to get it)\n                    // eslint-disable-next-line camelcase\n                    u_Camera: model.uniforms.project_uCameraPosition\n                });\n                model.draw(renderPass);\n            }\n        });\n    }\n}\n", "export default `#version 300 es\n#define SHADER_NAME simple-mesh-layer-vs\nuniform float sizeScale;\nuniform bool composeModelMatrix;\nuniform bool pickFeatureIds;\nin vec3 positions;\nin vec3 normals;\nin vec3 colors;\nin vec2 texCoords;\nin vec4 uvRegions;\nin vec3 featureIdsPickingColors;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin vec3 instanceModelMatrixCol0;\nin vec3 instanceModelMatrixCol1;\nin vec3 instanceModelMatrixCol2;\nout vec2 vTexCoord;\nout vec3 cameraPosition;\nout vec3 normals_commonspace;\nout vec4 position_commonspace;\nout vec4 vColor;\nvec2 applyUVRegion(vec2 uv) {\n#ifdef HAS_UV_REGIONS\nreturn fract(uv) * (uvRegions.zw - uvRegions.xy) + uvRegions.xy;\n#else\nreturn uv;\n#endif\n}\nvoid main(void) {\nvec2 uv = applyUVRegion(texCoords);\ngeometry.uv = uv;\nif (pickFeatureIds) {\ngeometry.pickingColor = featureIdsPickingColors;\n} else {\ngeometry.pickingColor = instancePickingColors;\n}\nmat3 instanceModelMatrix = mat3(instanceModelMatrixCol0, instanceModelMatrixCol1, instanceModelMatrixCol2);\nvTexCoord = uv;\ncameraPosition = project_uCameraPosition;\nvColor = vec4(colors * instanceColors.rgb, instanceColors.a);\nvec3 pos = (instanceModelMatrix * positions) * sizeScale;\nvec3 projectedPosition = project_position(positions);\nposition_commonspace = vec4(projectedPosition, 1.0);\ngl_Position = project_common_position_to_clipspace(position_commonspace);\ngeometry.position = position_commonspace;\nnormals_commonspace = project_normal(instanceModelMatrix * normals);\ngeometry.normal = normals_commonspace;\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n#ifdef MODULE_PBR\npbr_vPosition = geometry.position.xyz;\n#ifdef HAS_NORMALS\npbr_vNormal = geometry.normal;\n#endif\n#ifdef HAS_UV\npbr_vUV = uv;\n#else\npbr_vUV = vec2(0., 0.);\n#endif\ngeometry.uv = pbr_vUV;\n#endif\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n", "export default `#version 300 es\n#define SHADER_NAME simple-mesh-layer-fs\nprecision highp float;\nuniform bool hasTexture;\nuniform sampler2D sampler;\nuniform bool flatShading;\nuniform float opacity;\nin vec2 vTexCoord;\nin vec3 cameraPosition;\nin vec3 normals_commonspace;\nin vec4 position_commonspace;\nin vec4 vColor;\nout vec4 fragColor;\nvoid main(void) {\n#ifdef MODULE_PBR\nfragColor = vColor * pbr_filterColor(vec4(0));\ngeometry.uv = pbr_vUV;\nfragColor.a *= opacity;\n#else\ngeometry.uv = vTexCoord;\nvec3 normal;\nif (flatShading) {\nnormal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n} else {\nnormal = normals_commonspace;\n}\nvec4 color = hasTexture ? texture(sampler, vTexCoord) : vColor;\nvec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);\nfragColor = vec4(lightColor, color.a * opacity);\n#endif\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n`;\n", "import { parsePBRMaterial } from '@luma.gl/gltf';\nimport { pbr } from '@luma.gl/shadertools';\nimport { Model } from '@luma.gl/engine';\nimport { SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport vs from \"./mesh-layer-vertex.glsl.js\";\nimport fs from \"./mesh-layer-fragment.glsl.js\";\nfunction validateGeometryAttributes(attributes) {\n    const positionAttribute = attributes.positions || attributes.POSITION;\n    const vertexCount = positionAttribute.value.length / positionAttribute.size;\n    const hasColorAttribute = attributes.COLOR_0 || attributes.colors;\n    if (!hasColorAttribute) {\n        attributes.colors = {\n            size: 4,\n            value: new Uint8Array(vertexCount * 4).fill(255),\n            normalized: true\n        };\n    }\n}\nconst defaultProps = {\n    pbrMaterial: { type: 'object', value: null },\n    featureIds: { type: 'array', value: null, optional: true }\n};\nexport default class MeshLayer extends SimpleMeshLayer {\n    static { this.layerName = 'MeshLayer'; }\n    static { this.defaultProps = defaultProps; }\n    getShaders() {\n        const shaders = super.getShaders();\n        const modules = shaders.modules;\n        modules.push(pbr);\n        return { ...shaders, vs, fs };\n    }\n    initializeState() {\n        const { featureIds } = this.props;\n        super.initializeState();\n        const attributeManager = this.getAttributeManager();\n        if (featureIds) {\n            // attributeManager is always defined in a primitive layer\n            attributeManager.add({\n                featureIdsPickingColors: {\n                    type: 'uint8',\n                    size: 3,\n                    noAlloc: true,\n                    // eslint-disable-next-line @typescript-eslint/unbound-method\n                    update: this.calculateFeatureIdsPickingColors\n                }\n            });\n        }\n    }\n    updateState(params) {\n        super.updateState(params);\n        const { props, oldProps } = params;\n        if (props.pbrMaterial !== oldProps.pbrMaterial) {\n            this.updatePbrMaterialUniforms(props.pbrMaterial);\n        }\n    }\n    draw(opts) {\n        const { featureIds } = this.props;\n        if (!this.state.model) {\n            return;\n        }\n        this.state.model.setUniforms({\n            // Needed for PBR (TODO: find better way to get it)\n            // eslint-disable-next-line camelcase\n            u_Camera: this.state.model.uniforms.project_uCameraPosition,\n            pickFeatureIds: Boolean(featureIds)\n        });\n        super.draw(opts);\n    }\n    getModel(mesh) {\n        const { id, pbrMaterial } = this.props;\n        const parsedPBRMaterial = this.parseMaterial(pbrMaterial, mesh);\n        // Keep material to explicitly remove textures\n        this.setState({ parsedPBRMaterial });\n        const shaders = this.getShaders();\n        validateGeometryAttributes(mesh.attributes);\n        const model = new Model(this.context.device, {\n            ...this.getShaders(),\n            id,\n            geometry: mesh,\n            bufferLayout: this.getAttributeManager().getBufferLayouts(),\n            defines: {\n                ...shaders.defines,\n                ...parsedPBRMaterial?.defines,\n                HAS_UV_REGIONS: mesh.attributes.uvRegions ? 1 : 0\n            },\n            parameters: parsedPBRMaterial?.parameters,\n            isInstanced: true\n        });\n        return model;\n    }\n    updatePbrMaterialUniforms(pbrMaterial) {\n        const { model } = this.state;\n        if (model) {\n            const { mesh } = this.props;\n            const parsedPBRMaterial = this.parseMaterial(pbrMaterial, mesh);\n            // Keep material to explicitly remove textures\n            this.setState({ parsedPBRMaterial });\n            model.setBindings(parsedPBRMaterial.bindings);\n            model.setUniforms(parsedPBRMaterial.uniforms);\n        }\n    }\n    parseMaterial(pbrMaterial, mesh) {\n        const unlit = Boolean(pbrMaterial.pbrMetallicRoughness && pbrMaterial.pbrMetallicRoughness.baseColorTexture);\n        return parsePBRMaterial(this.context.device, { unlit, ...pbrMaterial }, { NORMAL: mesh.attributes.normals, TEXCOORD_0: mesh.attributes.texCoords }, {\n            pbrDebug: false,\n            lights: true,\n            useTangents: false\n        });\n    }\n    calculateFeatureIdsPickingColors(attribute) {\n        // This updater is only called if featureIds is not null\n        const featureIds = this.props.featureIds;\n        const value = new Uint8ClampedArray(featureIds.length * attribute.size);\n        const pickingColor = [];\n        for (let index = 0; index < featureIds.length; index++) {\n            this.encodePickingColor(featureIds[index], pickingColor);\n            value[index * 3] = pickingColor[0];\n            value[index * 3 + 1] = pickingColor[1];\n            value[index * 3 + 2] = pickingColor[2];\n        }\n        attribute.value = value;\n    }\n    finalizeState(context) {\n        super.finalizeState(context);\n        this.state.parsedPBRMaterial?.generatedTextures.forEach(texture => texture.destroy());\n        this.setState({ parsedPBRMaterial: null });\n    }\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nexport const WGS84_RADIUS_X = 6378137.0;\nexport const WGS84_RADIUS_Y = 6378137.0;\nexport const WGS84_RADIUS_Z = 6356752.3142451793;\n// Pre-calculated ellipsoid defaults to avoid utils depending on `ellipsoid.js`\nexport const WGS84_CONSTANTS = {\n    radii: [WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z],\n    radiiSquared: [\n        WGS84_RADIUS_X * WGS84_RADIUS_X,\n        WGS84_RADIUS_Y * WGS84_RADIUS_Y,\n        WGS84_RADIUS_Z * WGS84_RADIUS_Z\n    ],\n    oneOverRadii: [1.0 / WGS84_RADIUS_X, 1.0 / WGS84_RADIUS_Y, 1.0 / WGS84_RADIUS_Z],\n    oneOverRadiiSquared: [\n        1.0 / (WGS84_RADIUS_X * WGS84_RADIUS_X),\n        1.0 / (WGS84_RADIUS_Y * WGS84_RADIUS_Y),\n        1.0 / (WGS84_RADIUS_Z * WGS84_RADIUS_Z)\n    ],\n    maximumRadius: Math.max(WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z),\n    centerToleranceSquared: 1e-1 // EPSILON1;\n};\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { Vector3, toRadians, toDegrees, config } from '@math.gl/core';\nimport { WGS84_CONSTANTS } from \"./constants.js\";\nfunction identity(x) {\n    return x;\n}\nconst scratchVector = new Vector3();\nexport function fromCartographic(cartographic, result = [], map = identity) {\n    if ('longitude' in cartographic) {\n        result[0] = map(cartographic.longitude);\n        result[1] = map(cartographic.latitude);\n        result[2] = cartographic.height;\n    }\n    else if ('x' in cartographic) {\n        result[0] = map(cartographic.x);\n        result[1] = map(cartographic.y);\n        result[2] = cartographic.z;\n    }\n    else {\n        result[0] = map(cartographic[0]);\n        result[1] = map(cartographic[1]);\n        result[2] = cartographic[2];\n    }\n    return result;\n}\nexport function fromCartographicToRadians(cartographic, vector = []) {\n    return fromCartographic(cartographic, vector, config._cartographicRadians ? identity : toRadians);\n}\nexport function fromCartographicToDegrees(cartographic, vector = []) {\n    return fromCartographic(cartographic, vector, config._cartographicRadians ? toDegrees : identity);\n}\nexport function toCartographic(vector, cartographic, map = identity) {\n    if ('longitude' in cartographic) {\n        cartographic.longitude = map(vector[0]);\n        cartographic.latitude = map(vector[1]);\n        cartographic.height = vector[2];\n    }\n    else if ('x' in cartographic) {\n        cartographic.x = map(vector[0]);\n        cartographic.y = map(vector[1]);\n        cartographic.z = vector[2];\n    }\n    else {\n        cartographic[0] = map(vector[0]);\n        cartographic[1] = map(vector[1]);\n        cartographic[2] = vector[2];\n    }\n    return cartographic;\n}\nexport function toCartographicFromRadians(vector, cartographic) {\n    return toCartographic(vector, cartographic, config._cartographicRadians ? identity : toDegrees);\n}\nexport function toCartographicFromDegrees(vector, cartographic) {\n    return toCartographic(vector, cartographic, config._cartographicRadians ? toRadians : identity);\n}\n// Estimates if a vector is close to the surface of the WGS84 Ellipsoid\nexport function isWGS84(vector) {\n    if (!vector) {\n        return false;\n    }\n    scratchVector.from(vector);\n    const { oneOverRadiiSquared, centerToleranceSquared } = WGS84_CONSTANTS;\n    const x2 = vector[0] * vector[0] * oneOverRadiiSquared[0];\n    const y2 = vector[1] * vector[1] * oneOverRadiiSquared[1];\n    const z2 = vector[2] * vector[2] * oneOverRadiiSquared[2];\n    return Math.abs(x2 + y2 + z2 - 1) < centerToleranceSquared;\n}\n/*\n\nexport function fromCartographic(cartographic: Cartographic, result?: number[]): number[];\nexport function fromCartographic(cartographic: Cartographic, result: TypedArray): TypedArray;\nexport function fromCartographicToRadians(cartographic: Cartographic, result?: number[]): number[];\nexport function fromCartographicToRadians(\n  cartographic: Cartographic,\n  result: TypedArray\n): TypedArray;\nexport function fromCartographicToDegrees(cartographic: Cartographic, result?: number[]): number[];\nexport function fromCartographicToDegrees(\n  cartographic: Cartographic,\n  result: TypedArray\n): TypedArray;\n\nexport function toCartographic(vector: number[] | TypedArray, result: Cartographic): number[];\nexport function toCartographicFromRadians(\n  vector: number[] | TypedArray,\n  result: Cartographic\n): number[];\nexport function toCartographicFromDegrees(\n  vector: number[] | TypedArray,\n  result: Cartographic\n): number[];\n\n// Estimates if a vector is close to the surface of the WGS84 Ellipsoid\nexport function isWGS84(vector: number[] | TypedArray): boolean;\n*/\n", "import { Vector3, assert, equals as equalsEpsilon } from '@math.gl/core';\nconst EPSILON14 = 1e-14;\nconst scratchOrigin = new Vector3();\n// Caclulate third axis from given two axii\nconst VECTOR_PRODUCT_LOCAL_FRAME = {\n    up: {\n        south: 'east',\n        north: 'west',\n        west: 'south',\n        east: 'north'\n    },\n    down: {\n        south: 'west',\n        north: 'east',\n        west: 'north',\n        east: 'south'\n    },\n    south: {\n        up: 'west',\n        down: 'east',\n        west: 'down',\n        east: 'up'\n    },\n    north: {\n        up: 'east',\n        down: 'west',\n        west: 'up',\n        east: 'down'\n    },\n    west: {\n        up: 'north',\n        down: 'south',\n        north: 'down',\n        south: 'up'\n    },\n    east: {\n        up: 'south',\n        down: 'north',\n        north: 'up',\n        south: 'down'\n    }\n};\nconst degeneratePositionLocalFrame = {\n    north: [-1, 0, 0],\n    east: [0, 1, 0],\n    up: [0, 0, 1],\n    south: [1, 0, 0],\n    west: [0, -1, 0],\n    down: [0, 0, -1]\n};\nconst scratchAxisVectors = {\n    east: new Vector3(),\n    north: new Vector3(),\n    up: new Vector3(),\n    west: new Vector3(),\n    south: new Vector3(),\n    down: new Vector3()\n};\nconst scratchVector1 = new Vector3();\nconst scratchVector2 = new Vector3();\nconst scratchVector3 = new Vector3();\n// Computes a 4x4 transformation matrix from a reference frame\n// centered at the provided origin to the provided ellipsoid's fixed reference frame.\n// eslint-disable-next-line max-statements, max-params, complexity\nexport function localFrameToFixedFrame(ellipsoid, firstAxis, secondAxis, thirdAxis, cartesianOrigin, result) {\n    const thirdAxisInferred = VECTOR_PRODUCT_LOCAL_FRAME[firstAxis] && VECTOR_PRODUCT_LOCAL_FRAME[firstAxis][secondAxis];\n    // firstAxis and secondAxis must be east, north, up, west, south or down.');\n    assert(thirdAxisInferred && (!thirdAxis || thirdAxis === thirdAxisInferred));\n    let firstAxisVector;\n    let secondAxisVector;\n    let thirdAxisVector;\n    const origin = scratchOrigin.copy(cartesianOrigin);\n    // If x and y are zero, assume origin is at a pole, which is a special case.\n    const atPole = equalsEpsilon(origin.x, 0.0, EPSILON14) && equalsEpsilon(origin.y, 0.0, EPSILON14);\n    if (atPole) {\n        // Look up axis value and adjust\n        const sign = Math.sign(origin.z);\n        firstAxisVector = scratchVector1.fromArray(degeneratePositionLocalFrame[firstAxis]);\n        if (firstAxis !== 'east' && firstAxis !== 'west') {\n            firstAxisVector.scale(sign);\n        }\n        secondAxisVector = scratchVector2.fromArray(degeneratePositionLocalFrame[secondAxis]);\n        if (secondAxis !== 'east' && secondAxis !== 'west') {\n            secondAxisVector.scale(sign);\n        }\n        thirdAxisVector = scratchVector3.fromArray(degeneratePositionLocalFrame[thirdAxis]);\n        if (thirdAxis !== 'east' && thirdAxis !== 'west') {\n            thirdAxisVector.scale(sign);\n        }\n    }\n    else {\n        // Calculate all axis\n        const { up, east, north } = scratchAxisVectors;\n        east.set(-origin.y, origin.x, 0.0).normalize();\n        ellipsoid.geodeticSurfaceNormal(origin, up);\n        north.copy(up).cross(east);\n        const { down, west, south } = scratchAxisVectors;\n        down.copy(up).scale(-1);\n        west.copy(east).scale(-1);\n        south.copy(north).scale(-1);\n        // Pick three axis based on desired orientation\n        firstAxisVector = scratchAxisVectors[firstAxis];\n        secondAxisVector = scratchAxisVectors[secondAxis];\n        thirdAxisVector = scratchAxisVectors[thirdAxis];\n    }\n    // TODO - assuming the result is column-major\n    result[0] = firstAxisVector.x;\n    result[1] = firstAxisVector.y;\n    result[2] = firstAxisVector.z;\n    result[3] = 0.0;\n    result[4] = secondAxisVector.x;\n    result[5] = secondAxisVector.y;\n    result[6] = secondAxisVector.z;\n    result[7] = 0.0;\n    result[8] = thirdAxisVector.x;\n    result[9] = thirdAxisVector.y;\n    result[10] = thirdAxisVector.z;\n    result[11] = 0.0;\n    result[12] = origin.x;\n    result[13] = origin.y;\n    result[14] = origin.z;\n    result[15] = 1.0;\n    return result;\n}\n", "/* eslint-disable */\nimport { Vector3, _MathUtils } from '@math.gl/core';\nconst scratchVector = new Vector3();\nconst scaleToGeodeticSurfaceIntersection = new Vector3();\nconst scaleToGeodeticSurfaceGradient = new Vector3();\n// Scales the provided Cartesian position along the geodetic surface normal\n// so that it is on the surface of this ellipsoid.  If the position is\n// at the center of the ellipsoid, this function returns undefined.\nexport function scaleToGeodeticSurface(cartesian, ellipsoid, result = []) {\n    const { oneOverRadii, oneOverRadiiSquared, centerToleranceSquared } = ellipsoid;\n    scratchVector.from(cartesian);\n    const positionX = scratchVector.x;\n    const positionY = scratchVector.y;\n    const positionZ = scratchVector.z;\n    const oneOverRadiiX = oneOverRadii.x;\n    const oneOverRadiiY = oneOverRadii.y;\n    const oneOverRadiiZ = oneOverRadii.z;\n    const x2 = positionX * positionX * oneOverRadiiX * oneOverRadiiX;\n    const y2 = positionY * positionY * oneOverRadiiY * oneOverRadiiY;\n    const z2 = positionZ * positionZ * oneOverRadiiZ * oneOverRadiiZ;\n    // Compute the squared ellipsoid norm.\n    const squaredNorm = x2 + y2 + z2;\n    const ratio = Math.sqrt(1.0 / squaredNorm);\n    // When very close to center or at center\n    if (!Number.isFinite(ratio)) {\n        return undefined;\n    }\n    // As an initial approximation, assume that the radial intersection is the projection point.\n    const intersection = scaleToGeodeticSurfaceIntersection;\n    intersection.copy(cartesian).scale(ratio);\n    // If the position is near the center, the iteration will not converge.\n    if (squaredNorm < centerToleranceSquared) {\n        return intersection.to(result);\n    }\n    const oneOverRadiiSquaredX = oneOverRadiiSquared.x;\n    const oneOverRadiiSquaredY = oneOverRadiiSquared.y;\n    const oneOverRadiiSquaredZ = oneOverRadiiSquared.z;\n    // Use the gradient at the intersection point in place of the true unit normal.\n    // The difference in magnitude will be absorbed in the multiplier.\n    const gradient = scaleToGeodeticSurfaceGradient;\n    gradient.set(intersection.x * oneOverRadiiSquaredX * 2.0, intersection.y * oneOverRadiiSquaredY * 2.0, intersection.z * oneOverRadiiSquaredZ * 2.0);\n    // Compute the initial guess at the normal vector multiplier, lambda.\n    let lambda = ((1.0 - ratio) * scratchVector.len()) / (0.5 * gradient.len());\n    let correction = 0.0;\n    let xMultiplier;\n    let yMultiplier;\n    let zMultiplier;\n    let func;\n    do {\n        lambda -= correction;\n        xMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredX);\n        yMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredY);\n        zMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredZ);\n        const xMultiplier2 = xMultiplier * xMultiplier;\n        const yMultiplier2 = yMultiplier * yMultiplier;\n        const zMultiplier2 = zMultiplier * zMultiplier;\n        const xMultiplier3 = xMultiplier2 * xMultiplier;\n        const yMultiplier3 = yMultiplier2 * yMultiplier;\n        const zMultiplier3 = zMultiplier2 * zMultiplier;\n        func = x2 * xMultiplier2 + y2 * yMultiplier2 + z2 * zMultiplier2 - 1.0;\n        // \"denominator\" here refers to the use of this expression in the velocity and acceleration\n        // computations in the sections to follow.\n        const denominator = x2 * xMultiplier3 * oneOverRadiiSquaredX +\n            y2 * yMultiplier3 * oneOverRadiiSquaredY +\n            z2 * zMultiplier3 * oneOverRadiiSquaredZ;\n        const derivative = -2.0 * denominator;\n        correction = func / derivative;\n    } while (Math.abs(func) > _MathUtils.EPSILON12);\n    return scratchVector.scale([xMultiplier, yMultiplier, zMultiplier]).to(result);\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n/* eslint-disable */\nimport { Vector3, Matrix4, assert, equals, _MathUtils, vec3 } from '@math.gl/core';\nimport { WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z } from \"../constants.js\";\nimport { fromCartographicToRadians, toCartographicFromRadians } from \"../type-utils.js\";\nimport { localFrameToFixedFrame } from \"./helpers/ellipsoid-transform.js\";\nimport { scaleToGeodeticSurface } from \"./helpers/scale-to-geodetic-surface.js\";\nconst scratchVector = new Vector3();\nconst scratchNormal = new Vector3();\nconst scratchK = new Vector3();\nconst scratchPosition = new Vector3();\nconst scratchHeight = new Vector3();\nconst scratchCartesian = new Vector3();\n/**\n * A quadratic surface defined in Cartesian coordinates by the equation\n * `(x / a)^2 + (y / b)^2 + (z / c)^2 = 1`.  Primarily used\n * to represent the shape of planetary bodies.\n */\nexport class Ellipsoid {\n    constructor(x = 0.0, y = 0.0, z = 0.0) {\n        this.centerToleranceSquared = _MathUtils.EPSILON1;\n        assert(x >= 0.0);\n        assert(y >= 0.0);\n        assert(z >= 0.0);\n        this.radii = new Vector3(x, y, z);\n        this.radiiSquared = new Vector3(x * x, y * y, z * z);\n        this.radiiToTheFourth = new Vector3(x * x * x * x, y * y * y * y, z * z * z * z);\n        this.oneOverRadii = new Vector3(x === 0.0 ? 0.0 : 1.0 / x, y === 0.0 ? 0.0 : 1.0 / y, z === 0.0 ? 0.0 : 1.0 / z);\n        this.oneOverRadiiSquared = new Vector3(x === 0.0 ? 0.0 : 1.0 / (x * x), y === 0.0 ? 0.0 : 1.0 / (y * y), z === 0.0 ? 0.0 : 1.0 / (z * z));\n        this.minimumRadius = Math.min(x, y, z);\n        this.maximumRadius = Math.max(x, y, z);\n        if (this.radiiSquared.z !== 0) {\n            this.squaredXOverSquaredZ = this.radiiSquared.x / this.radiiSquared.z;\n        }\n        Object.freeze(this);\n    }\n    /** Compares this Ellipsoid against the provided Ellipsoid componentwise */\n    equals(right) {\n        return this === right || Boolean(right && this.radii.equals(right.radii));\n    }\n    /** Creates a string representing this Ellipsoid in the format '(radii.x, radii.y, radii.z)'. */\n    toString() {\n        return this.radii.toString();\n    }\n    cartographicToCartesian(cartographic, result = [0, 0, 0]) {\n        const normal = scratchNormal;\n        const k = scratchK;\n        const [, , height] = cartographic;\n        this.geodeticSurfaceNormalCartographic(cartographic, normal);\n        k.copy(this.radiiSquared).scale(normal);\n        const gamma = Math.sqrt(normal.dot(k));\n        k.scale(1 / gamma);\n        normal.scale(height);\n        k.add(normal);\n        return k.to(result);\n    }\n    cartesianToCartographic(cartesian, result = [0, 0, 0]) {\n        scratchCartesian.from(cartesian);\n        const point = this.scaleToGeodeticSurface(scratchCartesian, scratchPosition);\n        if (!point) {\n            return undefined;\n        }\n        const normal = this.geodeticSurfaceNormal(point, scratchNormal);\n        const h = scratchHeight;\n        h.copy(scratchCartesian).subtract(point);\n        const longitude = Math.atan2(normal.y, normal.x);\n        const latitude = Math.asin(normal.z);\n        const height = Math.sign(vec3.dot(h, scratchCartesian)) * vec3.length(h);\n        return toCartographicFromRadians([longitude, latitude, height], result);\n    }\n    eastNorthUpToFixedFrame(origin, result = new Matrix4()) {\n        return localFrameToFixedFrame(this, 'east', 'north', 'up', origin, result);\n    }\n    // Computes a 4x4 transformation matrix from a reference frame centered at\n    // the provided origin to the ellipsoid's fixed reference frame.\n    localFrameToFixedFrame(firstAxis, secondAxis, thirdAxis, origin, result = new Matrix4()) {\n        return localFrameToFixedFrame(this, firstAxis, secondAxis, thirdAxis, origin, result);\n    }\n    geocentricSurfaceNormal(cartesian, result = [0, 0, 0]) {\n        return scratchVector.from(cartesian).normalize().to(result);\n    }\n    geodeticSurfaceNormalCartographic(cartographic, result = [0, 0, 0]) {\n        const cartographicVectorRadians = fromCartographicToRadians(cartographic);\n        const longitude = cartographicVectorRadians[0];\n        const latitude = cartographicVectorRadians[1];\n        const cosLatitude = Math.cos(latitude);\n        scratchVector\n            .set(cosLatitude * Math.cos(longitude), cosLatitude * Math.sin(longitude), Math.sin(latitude))\n            .normalize();\n        return scratchVector.to(result);\n    }\n    geodeticSurfaceNormal(cartesian, result = [0, 0, 0]) {\n        return scratchVector.from(cartesian).scale(this.oneOverRadiiSquared).normalize().to(result);\n    }\n    /** Scales the provided Cartesian position along the geodetic surface normal\n     * so that it is on the surface of this ellipsoid.  If the position is\n     * at the center of the ellipsoid, this function returns undefined. */\n    scaleToGeodeticSurface(cartesian, result) {\n        return scaleToGeodeticSurface(cartesian, this, result);\n    }\n    /** Scales the provided Cartesian position along the geocentric surface normal\n     * so that it is on the surface of this ellipsoid. */\n    scaleToGeocentricSurface(cartesian, result = [0, 0, 0]) {\n        scratchPosition.from(cartesian);\n        const positionX = scratchPosition.x;\n        const positionY = scratchPosition.y;\n        const positionZ = scratchPosition.z;\n        const oneOverRadiiSquared = this.oneOverRadiiSquared;\n        const beta = 1.0 /\n            Math.sqrt(positionX * positionX * oneOverRadiiSquared.x +\n                positionY * positionY * oneOverRadiiSquared.y +\n                positionZ * positionZ * oneOverRadiiSquared.z);\n        return scratchPosition.multiplyScalar(beta).to(result);\n    }\n    /** Transforms a Cartesian X, Y, Z position to the ellipsoid-scaled space by multiplying\n     * its components by the result of `Ellipsoid#oneOverRadii` */\n    transformPositionToScaledSpace(position, result = [0, 0, 0]) {\n        return scratchPosition.from(position).scale(this.oneOverRadii).to(result);\n    }\n    /** Transforms a Cartesian X, Y, Z position from the ellipsoid-scaled space by multiplying\n     * its components by the result of `Ellipsoid#radii`. */\n    transformPositionFromScaledSpace(position, result = [0, 0, 0]) {\n        return scratchPosition.from(position).scale(this.radii).to(result);\n    }\n    /** Computes a point which is the intersection of the surface normal with the z-axis. */\n    getSurfaceNormalIntersectionWithZAxis(position, buffer = 0, result = [0, 0, 0]) {\n        // Ellipsoid must be an ellipsoid of revolution (radii.x == radii.y)\n        assert(equals(this.radii.x, this.radii.y, _MathUtils.EPSILON15));\n        assert(this.radii.z > 0);\n        scratchPosition.from(position);\n        const z = scratchPosition.z * (1 - this.squaredXOverSquaredZ);\n        if (Math.abs(z) >= this.radii.z - buffer) {\n            return undefined;\n        }\n        return scratchPosition.set(0.0, 0.0, z).to(result);\n    }\n}\n/** An Ellipsoid instance initialized to the WGS84 standard. */\nEllipsoid.WGS84 = new Ellipsoid(WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z);\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n/**\n * Doubly linked list node\n * @private\n */\nexport class DoublyLinkedListNode {\n    item;\n    previous;\n    next;\n    constructor(item, previous, next) {\n        this.item = item;\n        this.previous = previous;\n        this.next = next;\n    }\n}\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { DoublyLinkedListNode } from \"./doubly-linked-list-node.js\";\n/**\n * Doubly linked list\n * @private\n */\nexport class DoublyLinkedList {\n    head = null;\n    tail = null;\n    _length = 0;\n    get length() {\n        return this._length;\n    }\n    /**\n     * Adds the item to the end of the list\n     * @param {*} [item]\n     * @return {DoublyLinkedListNode}\n     */\n    add(item) {\n        const node = new DoublyLinkedListNode(item, this.tail, null);\n        if (this.tail) {\n            this.tail.next = node;\n            this.tail = node;\n        }\n        else {\n            this.head = node;\n            this.tail = node;\n        }\n        ++this._length;\n        return node;\n    }\n    /**\n     * Removes the given node from the list\n     * @param {DoublyLinkedListNode} node\n     */\n    remove(node) {\n        if (!node) {\n            return;\n        }\n        if (node.previous && node.next) {\n            node.previous.next = node.next;\n            node.next.previous = node.previous;\n        }\n        else if (node.previous) {\n            // Remove last node\n            node.previous.next = null;\n            this.tail = node.previous;\n        }\n        else if (node.next) {\n            // Remove first node\n            node.next.previous = null;\n            this.head = node.next;\n        }\n        else {\n            // Remove last node in the linked list\n            this.head = null;\n            this.tail = null;\n        }\n        node.next = null;\n        node.previous = null;\n        --this._length;\n    }\n    /**\n     * Moves nextNode after node\n     * @param {DoublyLinkedListNode} node\n     * @param {DoublyLinkedListNode} nextNode\n     */\n    splice(node, nextNode) {\n        if (node === nextNode) {\n            return;\n        }\n        // Remove nextNode, then insert after node\n        this.remove(nextNode);\n        this._insert(node, nextNode);\n    }\n    _insert(node, nextNode) {\n        const oldNodeNext = node.next;\n        node.next = nextNode;\n        // nextNode is the new tail\n        if (this.tail === node) {\n            this.tail = nextNode;\n        }\n        else {\n            oldNodeNext.previous = nextNode;\n        }\n        nextNode.next = oldNodeNext;\n        nextNode.previous = node;\n        ++this._length;\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { DoublyLinkedList } from \"../utils/doubly-linked-list.js\";\n/**\n * Stores tiles with content loaded.\n * @private\n */\nexport class TilesetCache {\n    _list;\n    _sentinel;\n    _trimTiles;\n    constructor() {\n        // [head, sentinel) -> tiles that weren't selected this frame and may be removed from the cache\n        // (sentinel, tail] -> tiles that were selected this frame\n        this._list = new DoublyLinkedList();\n        this._sentinel = this._list.add('sentinel');\n        this._trimTiles = false;\n    }\n    reset() {\n        // Move sentinel node to the tail so, at the start of the frame, all tiles\n        // may be potentially replaced.  Tiles are moved to the right of the sentinel\n        // when they are selected so they will not be replaced.\n        this._list.splice(this._list.tail, this._sentinel);\n    }\n    touch(tile) {\n        const node = tile._cacheNode;\n        if (node) {\n            this._list.splice(this._sentinel, node);\n        }\n    }\n    add(tileset, tile, addCallback) {\n        if (!tile._cacheNode) {\n            tile._cacheNode = this._list.add(tile);\n            if (addCallback) {\n                addCallback(tileset, tile);\n            }\n        }\n    }\n    unloadTile(tileset, tile, unloadCallback) {\n        const node = tile._cacheNode;\n        if (!node) {\n            return;\n        }\n        this._list.remove(node);\n        tile._cacheNode = null;\n        if (unloadCallback) {\n            unloadCallback(tileset, tile);\n        }\n    }\n    unloadTiles(tileset, unloadCallback) {\n        const trimTiles = this._trimTiles;\n        this._trimTiles = false;\n        const list = this._list;\n        const maximumMemoryUsageInBytes = tileset.maximumMemoryUsage * 1024 * 1024;\n        // Traverse the list only to the sentinel since tiles/nodes to the\n        // right of the sentinel were used this frame.\n        // The sub-list to the left of the sentinel is ordered from LRU to MRU.\n        const sentinel = this._sentinel;\n        let node = list.head;\n        while (node !== sentinel &&\n            (tileset.gpuMemoryUsageInBytes > maximumMemoryUsageInBytes || trimTiles)) {\n            // @ts-expect-error\n            const tile = node.item;\n            // @ts-expect-error\n            node = node.next;\n            this.unloadTile(tileset, tile, unloadCallback);\n        }\n    }\n    trim() {\n        this._trimTiles = true;\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { Ellipsoid } from '@math.gl/geospatial';\nimport { Matrix4, Vector3 } from '@math.gl/core';\nimport { assert } from '@loaders.gl/loader-utils';\nexport function calculateTransformProps(tileHeader, tile) {\n    assert(tileHeader);\n    assert(tile);\n    const { rtcCenter, gltfUpAxis } = tile;\n    const { computedTransform, boundingVolume: { center } } = tileHeader;\n    let modelMatrix = new Matrix4(computedTransform);\n    // Translate if appropriate\n    if (rtcCenter) {\n        modelMatrix.translate(rtcCenter);\n    }\n    // glTF models need to be rotated from Y to Z up\n    // https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#y-up-to-z-up\n    switch (gltfUpAxis) {\n        case 'Z':\n            break;\n        case 'Y':\n            const rotationY = new Matrix4().rotateX(Math.PI / 2);\n            modelMatrix = modelMatrix.multiplyRight(rotationY);\n            break;\n        case 'X':\n            const rotationX = new Matrix4().rotateY(-Math.PI / 2);\n            modelMatrix = modelMatrix.multiplyRight(rotationX);\n            break;\n        default:\n            break;\n    }\n    // Scale/offset positions if normalized integers\n    if (tile.isQuantized) {\n        modelMatrix.translate(tile.quantizedVolumeOffset).scale(tile.quantizedVolumeScale);\n    }\n    // Option 1: Cartesian matrix and origin\n    const cartesianOrigin = new Vector3(center);\n    tile.cartesianModelMatrix = modelMatrix;\n    tile.cartesianOrigin = cartesianOrigin;\n    // Option 2: Cartographic matrix and origin\n    const cartographicOrigin = Ellipsoid.WGS84.cartesianToCartographic(cartesianOrigin, new Vector3());\n    const fromFixedFrameMatrix = Ellipsoid.WGS84.eastNorthUpToFixedFrame(cartesianOrigin);\n    const toFixedFrameMatrix = fromFixedFrameMatrix.invert();\n    tile.cartographicModelMatrix = toFixedFrameMatrix.multiplyRight(modelMatrix);\n    tile.cartographicOrigin = cartographicOrigin;\n    // Deprecated, drop\n    if (!tile.coordinateSystem) {\n        tile.modelMatrix = tile.cartographicModelMatrix;\n    }\n}\n", "import { Vector3 } from '@math.gl/core';\nimport { CullingVolume, Plane } from '@math.gl/culling';\nimport { Ellipsoid } from '@math.gl/geospatial';\nconst scratchVector = new Vector3();\nconst scratchPosition = new Vector3();\nconst cullingVolume = new CullingVolume([\n    new Plane(),\n    new Plane(),\n    new Plane(),\n    new Plane(),\n    new Plane(),\n    new Plane()\n]);\n// Extracts a frame state appropriate for tile culling from a deck.gl viewport\n// TODO - this could likely be generalized and merged back into deck.gl for other culling scenarios\nexport function getFrameState(viewport, frameNumber) {\n    // Traverse and and request. Update _selectedTiles so that we know what to render.\n    // Traverse and and request. Update _selectedTiles so that we know what to render.\n    const { cameraDirection, cameraUp, height } = viewport;\n    const { metersPerUnit } = viewport.distanceScales;\n    // TODO - Ellipsoid.eastNorthUpToFixedFrame() breaks on raw array, create a Vector.\n    // TODO - Ellipsoid.eastNorthUpToFixedFrame() takes a cartesian, is that intuitive?\n    const viewportCenterCartesian = worldToCartesian(viewport, viewport.center);\n    const enuToFixedTransform = Ellipsoid.WGS84.eastNorthUpToFixedFrame(viewportCenterCartesian);\n    const cameraPositionCartographic = viewport.unprojectPosition(viewport.cameraPosition);\n    const cameraPositionCartesian = Ellipsoid.WGS84.cartographicToCartesian(cameraPositionCartographic, new Vector3());\n    // These should still be normalized as the transform has scale 1 (goes from meters to meters)\n    const cameraDirectionCartesian = new Vector3(\n    // @ts-ignore\n    enuToFixedTransform.transformAsVector(new Vector3(cameraDirection).scale(metersPerUnit))).normalize();\n    const cameraUpCartesian = new Vector3(\n    // @ts-ignore\n    enuToFixedTransform.transformAsVector(new Vector3(cameraUp).scale(metersPerUnit))).normalize();\n    commonSpacePlanesToWGS84(viewport);\n    const ViewportClass = viewport.constructor;\n    const { longitude, latitude, width, bearing, zoom } = viewport;\n    // @ts-ignore\n    const topDownViewport = new ViewportClass({\n        longitude,\n        latitude,\n        height,\n        width,\n        bearing,\n        zoom,\n        pitch: 0\n    });\n    // TODO: make a file/class for frameState and document what needs to be attached to this so that traversal can function\n    return {\n        camera: {\n            position: cameraPositionCartesian,\n            direction: cameraDirectionCartesian,\n            up: cameraUpCartesian\n        },\n        viewport,\n        topDownViewport,\n        height,\n        cullingVolume,\n        frameNumber, // TODO: This can be the same between updates, what number is unique for between updates?\n        sseDenominator: 1.15 // Assumes fovy = 60 degrees\n    };\n}\n/**\n * Limit `tiles` array length with `maximumTilesSelected` number.\n * The criteria for this filtering is distance of a tile center\n * to the `frameState.viewport`'s longitude and latitude\n * @param tiles - tiles array to filter\n * @param frameState - frameState to calculate distances\n * @param maximumTilesSelected - maximal amount of tiles in the output array\n * @returns new tiles array\n */\nexport function limitSelectedTiles(tiles, frameState, maximumTilesSelected) {\n    if (maximumTilesSelected === 0 || tiles.length <= maximumTilesSelected) {\n        return [tiles, []];\n    }\n    // Accumulate distances in couples array: [tileIndex: number, distanceToViewport: number]\n    const tuples = [];\n    const { longitude: viewportLongitude, latitude: viewportLatitude } = frameState.viewport;\n    for (const [index, tile] of tiles.entries()) {\n        const [longitude, latitude] = tile.header.mbs;\n        const deltaLon = Math.abs(viewportLongitude - longitude);\n        const deltaLat = Math.abs(viewportLatitude - latitude);\n        const distance = Math.sqrt(deltaLat * deltaLat + deltaLon * deltaLon);\n        tuples.push([index, distance]);\n    }\n    const tuplesSorted = tuples.sort((a, b) => a[1] - b[1]);\n    const selectedTiles = [];\n    for (let i = 0; i < maximumTilesSelected; i++) {\n        selectedTiles.push(tiles[tuplesSorted[i][0]]);\n    }\n    const unselectedTiles = [];\n    for (let i = maximumTilesSelected; i < tuplesSorted.length; i++) {\n        unselectedTiles.push(tiles[tuplesSorted[i][0]]);\n    }\n    return [selectedTiles, unselectedTiles];\n}\nfunction commonSpacePlanesToWGS84(viewport) {\n    // Extract frustum planes based on current view.\n    const frustumPlanes = viewport.getFrustumPlanes();\n    // Get the near/far plane centers\n    const nearCenterCommon = closestPointOnPlane(frustumPlanes.near, viewport.cameraPosition);\n    const nearCenterCartesian = worldToCartesian(viewport, nearCenterCommon);\n    const cameraCartesian = worldToCartesian(viewport, viewport.cameraPosition, scratchPosition);\n    let i = 0;\n    cullingVolume.planes[i++].fromPointNormal(nearCenterCartesian, scratchVector.copy(nearCenterCartesian).subtract(cameraCartesian));\n    for (const dir in frustumPlanes) {\n        if (dir === 'near') {\n            continue; // eslint-disable-line no-continue\n        }\n        const plane = frustumPlanes[dir];\n        const posCommon = closestPointOnPlane(plane, nearCenterCommon, scratchPosition);\n        const cartesianPos = worldToCartesian(viewport, posCommon, scratchPosition);\n        cullingVolume.planes[i++].fromPointNormal(cartesianPos, \n        // Want the normal to point into the frustum since that's what culling expects\n        scratchVector.copy(nearCenterCartesian).subtract(cartesianPos));\n    }\n}\nfunction closestPointOnPlane(plane, refPoint, out = new Vector3()) {\n    const distanceToRef = plane.normal.dot(refPoint);\n    out\n        .copy(plane.normal)\n        .scale(plane.distance - distanceToRef)\n        .add(refPoint);\n    return out;\n}\nfunction worldToCartesian(viewport, point, out = new Vector3()) {\n    const cartographicPos = viewport.unprojectPosition(point);\n    return Ellipsoid.WGS84.cartographicToCartesian(cartographicPos, out);\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { Vector3 } from '@math.gl/core';\nimport { BoundingSphere, OrientedBoundingBox } from '@math.gl/culling';\nimport { Ellipsoid } from '@math.gl/geospatial';\nconst WGS84_RADIUS_X = 6378137.0;\nconst WGS84_RADIUS_Y = 6378137.0;\nconst WGS84_RADIUS_Z = 6356752.3142451793;\nconst scratchVector = new Vector3();\n/**\n * Calculate appropriate zoom value for a particular boundingVolume\n * @param boundingVolume - the instance of bounding volume\n * @param cartorgraphicCenter - cartographic center of the bounding volume\n * @returns {number} - zoom value\n */\nexport function getZoomFromBoundingVolume(boundingVolume, cartorgraphicCenter) {\n    if (boundingVolume instanceof OrientedBoundingBox) {\n        // OrientedBoundingBox\n        const { halfAxes } = boundingVolume;\n        const obbSize = getObbSize(halfAxes);\n        // Use WGS84_RADIUS_Z to allign with BoundingSphere algorithm\n        // Add the tile elevation value for correct zooming to elevated tiles\n        return Math.log2(WGS84_RADIUS_Z / (obbSize + cartorgraphicCenter[2]));\n    }\n    else if (boundingVolume instanceof BoundingSphere) {\n        // BoundingSphere\n        const { radius } = boundingVolume;\n        // Add the tile elevation value for correct zooming to elevated tiles\n        return Math.log2(WGS84_RADIUS_Z / (radius + cartorgraphicCenter[2]));\n    }\n    else if (boundingVolume.width && boundingVolume.height) {\n        // BoundingRectangle\n        const { width, height } = boundingVolume;\n        const zoomX = Math.log2(WGS84_RADIUS_X / width);\n        const zoomY = Math.log2(WGS84_RADIUS_Y / height);\n        return (zoomX + zoomY) / 2;\n    }\n    return 1;\n}\n/**\n * Calculate initial zoom for the tileset from 3D `fullExtent` defined in\n * the tileset metadata\n * @param fullExtent - 3D extent of the tileset\n * @param fullExtent.xmin - minimal longitude in decimal degrees\n * @param fullExtent.xmax - maximal longitude in decimal degrees\n * @param fullExtent.ymin - minimal latitude in decimal degrees\n * @param fullExtent.ymax - maximal latitude in decimal degrees\n * @param fullExtent.zmin - minimal elevation in meters\n * @param fullExtent.zmax - maximal elevation in meters\n * @param cartorgraphicCenter - tileset center in cartographic coordinate system\n * @param cartesianCenter - tileset center in cartesian coordinate system\n * @returns - initial zoom for the tileset\n */\nexport function getZoomFromFullExtent(fullExtent, cartorgraphicCenter, cartesianCenter) {\n    Ellipsoid.WGS84.cartographicToCartesian([fullExtent.xmax, fullExtent.ymax, fullExtent.zmax], scratchVector);\n    const extentSize = Math.sqrt(Math.pow(scratchVector[0] - cartesianCenter[0], 2) +\n        Math.pow(scratchVector[1] - cartesianCenter[1], 2) +\n        Math.pow(scratchVector[2] - cartesianCenter[2], 2));\n    return Math.log2(WGS84_RADIUS_Z / (extentSize + cartorgraphicCenter[2]));\n}\n/**\n * Calculate initial zoom for the tileset from 2D `extent` defined in\n * the tileset metadata\n * @param extent - 2D extent of the tileset. It is array of 4 elements [xmin, ymin, xmax, ymax]\n * @param extent[0] - minimal longitude in decimal degrees\n * @param extent[1] - minimal latitude in decimal degrees\n * @param extent[2] - maximal longitude in decimal degrees\n * @param extent[3] - maximal latitude in decimal degrees\n * @param cartorgraphicCenter - tileset center in cartographic coordinate system\n * @param cartesianCenter - tileset center in cartesian coordinate system\n * @returns - initial zoom for the tileset\n */\nexport function getZoomFromExtent(extent, cartorgraphicCenter, cartesianCenter) {\n    const [xmin, ymin, xmax, ymax] = extent;\n    return getZoomFromFullExtent({ xmin, xmax, ymin, ymax, zmin: 0, zmax: 0 }, cartorgraphicCenter, cartesianCenter);\n}\nfunction getObbSize(halfAxes) {\n    halfAxes.getColumn(0, scratchVector);\n    const axeY = halfAxes.getColumn(1);\n    const axeZ = halfAxes.getColumn(2);\n    const farthestVertex = scratchVector.add(axeY).add(axeZ);\n    const size = farthestVertex.len();\n    return size;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nexport const TILE_CONTENT_STATE = {\n    UNLOADED: 0, // Has never been requested\n    LOADING: 1, // Is waiting on a pending request\n    PROCESSING: 2, // Request received.  Contents are being processed for rendering.  Depending on the content, it might make its own requests for external data.\n    READY: 3, // Ready to render.\n    EXPIRED: 4, // Is expired and will be unloaded once new content is loaded.\n    FAILED: 5 // Request failed.\n};\nexport var TILE_REFINEMENT;\n(function (TILE_REFINEMENT) {\n    TILE_REFINEMENT[TILE_REFINEMENT[\"ADD\"] = 1] = \"ADD\";\n    TILE_REFINEMENT[TILE_REFINEMENT[\"REPLACE\"] = 2] = \"REPLACE\"; // Render tile or, if screen space error exceeded, refine to its descendants instead.\n})(TILE_REFINEMENT || (TILE_REFINEMENT = {}));\nexport var TILE_TYPE;\n(function (TILE_TYPE) {\n    TILE_TYPE[\"EMPTY\"] = \"empty\";\n    TILE_TYPE[\"SCENEGRAPH\"] = \"scenegraph\";\n    TILE_TYPE[\"POINTCLOUD\"] = \"pointcloud\";\n    TILE_TYPE[\"MESH\"] = \"mesh\";\n})(TILE_TYPE || (TILE_TYPE = {}));\nexport var TILESET_TYPE;\n(function (TILESET_TYPE) {\n    TILESET_TYPE[\"I3S\"] = \"I3S\";\n    TILESET_TYPE[\"TILES3D\"] = \"TILES3D\";\n})(TILESET_TYPE || (TILESET_TYPE = {}));\nexport var LOD_METRIC_TYPE;\n(function (LOD_METRIC_TYPE) {\n    LOD_METRIC_TYPE[\"GEOMETRIC_ERROR\"] = \"geometricError\";\n    LOD_METRIC_TYPE[\"MAX_SCREEN_THRESHOLD\"] = \"maxScreenThreshold\";\n})(LOD_METRIC_TYPE || (LOD_METRIC_TYPE = {}));\nexport const TILE3D_OPTIMIZATION_HINT = {\n    NOT_COMPUTED: -1,\n    USE_OPTIMIZATION: 1,\n    SKIP_OPTIMIZATION: 0\n};\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n/* eslint-disable */\nimport { Quaternion, Vector3, Matrix3, Matrix4, degrees } from '@math.gl/core';\nimport { BoundingSphere, OrientedBoundingBox } from '@math.gl/culling';\nimport { Ellipsoid } from '@math.gl/geospatial';\nimport { assert } from '@loaders.gl/loader-utils';\n// const scratchProjectedBoundingSphere = new BoundingSphere();\nfunction defined(x) {\n    return x !== undefined && x !== null;\n}\n// const scratchMatrix = new Matrix3();\nconst scratchPoint = new Vector3();\nconst scratchScale = new Vector3();\nconst scratchNorthWest = new Vector3();\nconst scratchSouthEast = new Vector3();\nconst scratchCenter = new Vector3();\nconst scratchXAxis = new Vector3();\nconst scratchYAxis = new Vector3();\nconst scratchZAxis = new Vector3();\n// const scratchRectangle = new Rectangle();\n// const scratchOrientedBoundingBox = new OrientedBoundingBox();\n// const scratchTransform = new Matrix4();\n/**\n * Create a bounding volume from the tile's bounding volume header.\n * @param {Object} boundingVolumeHeader The tile's bounding volume header.\n * @param {Matrix4} transform The transform to apply to the bounding volume.\n * @param [result] The object onto which to store the result.\n * @returns The modified result parameter or a new TileBoundingVolume instance if none was provided.\n */\nexport function createBoundingVolume(boundingVolumeHeader, transform, result) {\n    assert(boundingVolumeHeader, '3D Tile: boundingVolume must be defined');\n    // boundingVolume schema:\n    // https://github.com/AnalyticalGraphicsInc/3d-tiles/blob/master/specification/schema/boundingVolume.schema.json\n    if (boundingVolumeHeader.box) {\n        return createBox(boundingVolumeHeader.box, transform, result);\n    }\n    if (boundingVolumeHeader.region) {\n        return createObbFromRegion(boundingVolumeHeader.region);\n    }\n    if (boundingVolumeHeader.sphere) {\n        return createSphere(boundingVolumeHeader.sphere, transform, result);\n    }\n    throw new Error('3D Tile: boundingVolume must contain a sphere, region, or box');\n}\n/**\n * Calculate the cartographic bounding box the tile's bounding volume.\n * @param {Object} boundingVolumeHeader The tile's bounding volume header.\n * @param {BoundingVolume} boundingVolume The bounding volume.\n * @returns {CartographicBounds}\n */\nexport function getCartographicBounds(boundingVolumeHeader, boundingVolume) {\n    // boundingVolume schema:\n    // https://github.com/AnalyticalGraphicsInc/3d-tiles/blob/master/specification/schema/boundingVolume.schema.json\n    if (boundingVolumeHeader.box) {\n        return orientedBoundingBoxToCartographicBounds(boundingVolume);\n    }\n    if (boundingVolumeHeader.region) {\n        // [west, south, east, north, minimum height, maximum height]\n        // Latitudes and longitudes are in the WGS 84 datum as defined in EPSG 4979 and are in radians.\n        // Heights are in meters above (or below) the WGS 84 ellipsoid.\n        const [west, south, east, north, minHeight, maxHeight] = boundingVolumeHeader.region;\n        return [\n            [degrees(west), degrees(south), minHeight],\n            [degrees(east), degrees(north), maxHeight]\n        ];\n    }\n    if (boundingVolumeHeader.sphere) {\n        return boundingSphereToCartographicBounds(boundingVolume);\n    }\n    throw new Error('Unkown boundingVolume type');\n}\nfunction createBox(box, transform, result) {\n    // https://math.gl/modules/culling/docs/api-reference/oriented-bounding-box\n    // 1. A half-axes based representation.\n    // box: An array of 12 numbers that define an oriented bounding box.\n    // The first three elements define the x, y, and z values for the center of the box.\n    // The next three elements (with indices 3, 4, and 5) define the x axis direction and half-length.\n    // The next three elements (indices 6, 7, and 8) define the y axis direction and half-length.\n    // The last three elements (indices 9, 10, and 11) define the z axis direction and half-length.\n    // 2. A half-size-quaternion based representation.\n    // box: An array of 10 numbers that define an oriented bounding box.\n    // The first three elements define the x, y, and z values for the center of the box in a right-handed 3-axis (x, y, z) Cartesian coordinate system where the z-axis is up.\n    // The next three elements (with indices 3, 4, and 5) define the halfSize.\n    // The last four elements (indices 6, 7, 8 and 10) define the quaternion.\n    const center = new Vector3(box[0], box[1], box[2]);\n    transform.transform(center, center);\n    let origin = [];\n    if (box.length === 10) {\n        const halfSize = box.slice(3, 6);\n        const quaternion = new Quaternion();\n        quaternion.fromArray(box, 6);\n        const x = new Vector3([1, 0, 0]);\n        const y = new Vector3([0, 1, 0]);\n        const z = new Vector3([0, 0, 1]);\n        x.transformByQuaternion(quaternion);\n        x.scale(halfSize[0]);\n        y.transformByQuaternion(quaternion);\n        y.scale(halfSize[1]);\n        z.transformByQuaternion(quaternion);\n        z.scale(halfSize[2]);\n        origin = [...x.toArray(), ...y.toArray(), ...z.toArray()];\n    }\n    else {\n        origin = [...box.slice(3, 6), ...box.slice(6, 9), ...box.slice(9, 12)];\n    }\n    const xAxis = transform.transformAsVector(origin.slice(0, 3));\n    const yAxis = transform.transformAsVector(origin.slice(3, 6));\n    const zAxis = transform.transformAsVector(origin.slice(6, 9));\n    const halfAxes = new Matrix3([\n        xAxis[0],\n        xAxis[1],\n        xAxis[2],\n        yAxis[0],\n        yAxis[1],\n        yAxis[2],\n        zAxis[0],\n        zAxis[1],\n        zAxis[2]\n    ]);\n    if (defined(result)) {\n        result.center = center;\n        result.halfAxes = halfAxes;\n        return result;\n    }\n    return new OrientedBoundingBox(center, halfAxes);\n}\n/*\nfunction createBoxFromTransformedRegion(region, transform, initialTransform, result) {\n  const rectangle = Rectangle.unpack(region, 0, scratchRectangle);\n  const minimumHeight = region[4];\n  const maximumHeight = region[5];\n\n  const orientedBoundingBox = OrientedBoundingBox.fromRectangle(\n    rectangle,\n    minimumHeight,\n    maximumHeight,\n    Ellipsoid.WGS84,\n    scratchOrientedBoundingBox\n  );\n  const center = orientedBoundingBox.center;\n  const halfAxes = orientedBoundingBox.halfAxes;\n\n  // A region bounding volume is not transformed by the transform in the tileset JSON,\n  // but may be transformed by additional transforms applied in Cesium.\n  // This is why the transform is calculated as the difference between the initial transform and the current transform.\n  transform = Matrix4.multiplyTransformation(\n    transform,\n    Matrix4.inverseTransformation(initialTransform, scratchTransform),\n    scratchTransform\n  );\n  center = Matrix4.multiplyByPoint(transform, center, center);\n  const rotationScale = Matrix4.getRotation(transform, scratchMatrix);\n  halfAxes = Matrix3.multiply(rotationScale, halfAxes, halfAxes);\n\n  if (defined(result) && result instanceof TileOrientedBoundingBox) {\n    result.update(center, halfAxes);\n    return result;\n  }\n\n  return new TileOrientedBoundingBox(center, halfAxes);\n}\n\nfunction createRegion(region, transform, initialTransform, result) {\n  if (!Matrix4.equalsEpsilon(transform, initialTransform, CesiumMath.EPSILON8)) {\n    return createBoxFromTransformedRegion(region, transform, initialTransform, result);\n  }\n\n  if (defined(result)) {\n    return result;\n  }\n\n  const rectangleRegion = Rectangle.unpack(region, 0, scratchRectangle);\n\n  return new TileBoundingRegion({\n    rectangle: rectangleRegion,\n    minimumHeight: region[4],\n    maximumHeight: region[5]\n  });\n}\n*/\nfunction createSphere(sphere, transform, result) {\n    // Find the transformed center\n    const center = new Vector3(sphere[0], sphere[1], sphere[2]);\n    transform.transform(center, center);\n    const scale = transform.getScale(scratchScale);\n    const uniformScale = Math.max(Math.max(scale[0], scale[1]), scale[2]);\n    const radius = sphere[3] * uniformScale;\n    if (defined(result)) {\n        result.center = center;\n        result.radius = radius;\n        return result;\n    }\n    return new BoundingSphere(center, radius);\n}\n/**\n * Create OrientedBoundingBox instance from region 3D tiles bounding volume\n * @param region - region 3D tiles bounding volume\n * @returns OrientedBoundingBox instance\n */\nfunction createObbFromRegion(region) {\n    // [west, south, east, north, minimum height, maximum height]\n    // Latitudes and longitudes are in the WGS 84 datum as defined in EPSG 4979 and are in radians.\n    // Heights are in meters above (or below) the WGS 84 ellipsoid.\n    const [west, south, east, north, minHeight, maxHeight] = region;\n    const northWest = Ellipsoid.WGS84.cartographicToCartesian([degrees(west), degrees(north), minHeight], scratchNorthWest);\n    const southEast = Ellipsoid.WGS84.cartographicToCartesian([degrees(east), degrees(south), maxHeight], scratchSouthEast);\n    const centerInCartesian = new Vector3().addVectors(northWest, southEast).multiplyByScalar(0.5);\n    Ellipsoid.WGS84.cartesianToCartographic(centerInCartesian, scratchCenter);\n    Ellipsoid.WGS84.cartographicToCartesian([degrees(east), scratchCenter[1], scratchCenter[2]], scratchXAxis);\n    Ellipsoid.WGS84.cartographicToCartesian([scratchCenter[0], degrees(north), scratchCenter[2]], scratchYAxis);\n    Ellipsoid.WGS84.cartographicToCartesian([scratchCenter[0], scratchCenter[1], maxHeight], scratchZAxis);\n    return createBox([\n        ...centerInCartesian,\n        ...scratchXAxis.subtract(centerInCartesian),\n        ...scratchYAxis.subtract(centerInCartesian),\n        ...scratchZAxis.subtract(centerInCartesian)\n    ], new Matrix4());\n}\n/**\n * Convert a bounding volume defined by OrientedBoundingBox to cartographic bounds\n * @returns {CartographicBounds}\n */\nfunction orientedBoundingBoxToCartographicBounds(boundingVolume) {\n    const result = emptyCartographicBounds();\n    const { halfAxes } = boundingVolume;\n    const xAxis = new Vector3(halfAxes.getColumn(0));\n    const yAxis = new Vector3(halfAxes.getColumn(1));\n    const zAxis = new Vector3(halfAxes.getColumn(2));\n    // Test all 8 corners of the box\n    for (let x = 0; x < 2; x++) {\n        for (let y = 0; y < 2; y++) {\n            for (let z = 0; z < 2; z++) {\n                scratchPoint.copy(boundingVolume.center);\n                scratchPoint.add(xAxis);\n                scratchPoint.add(yAxis);\n                scratchPoint.add(zAxis);\n                addToCartographicBounds(result, scratchPoint);\n                zAxis.negate();\n            }\n            yAxis.negate();\n        }\n        xAxis.negate();\n    }\n    return result;\n}\n/**\n * Convert a bounding volume defined by BoundingSphere to cartographic bounds\n * @returns {CartographicBounds}\n */\nfunction boundingSphereToCartographicBounds(boundingVolume) {\n    const result = emptyCartographicBounds();\n    const { center, radius } = boundingVolume;\n    const point = Ellipsoid.WGS84.scaleToGeodeticSurface(center, scratchPoint);\n    let zAxis;\n    if (point) {\n        zAxis = Ellipsoid.WGS84.geodeticSurfaceNormal(point);\n    }\n    else {\n        zAxis = new Vector3(0, 0, 1);\n    }\n    let xAxis = new Vector3(zAxis[2], -zAxis[1], 0);\n    if (xAxis.len() > 0) {\n        xAxis.normalize();\n    }\n    else {\n        xAxis = new Vector3(0, 1, 0);\n    }\n    const yAxis = xAxis.clone().cross(zAxis);\n    // Test 6 end points of the 3 axes\n    for (const axis of [xAxis, yAxis, zAxis]) {\n        scratchScale.copy(axis).scale(radius);\n        for (let dir = 0; dir < 2; dir++) {\n            scratchPoint.copy(center);\n            scratchPoint.add(scratchScale);\n            addToCartographicBounds(result, scratchPoint);\n            // Flip the axis\n            scratchScale.negate();\n        }\n    }\n    return result;\n}\n/**\n * Create a new cartographic bounds that contains no points\n * @returns {CartographicBounds}\n */\nfunction emptyCartographicBounds() {\n    return [\n        [Infinity, Infinity, Infinity],\n        [-Infinity, -Infinity, -Infinity]\n    ];\n}\n/**\n * Add a point to the target cartographic bounds\n * @param {CartographicBounds} target\n * @param {Vector3} cartesian coordinates of the point to add\n */\nfunction addToCartographicBounds(target, cartesian) {\n    Ellipsoid.WGS84.cartesianToCartographic(cartesian, scratchPoint);\n    target[0][0] = Math.min(target[0][0], scratchPoint[0]);\n    target[0][1] = Math.min(target[0][1], scratchPoint[1]);\n    target[0][2] = Math.min(target[0][2], scratchPoint[2]);\n    target[1][0] = Math.max(target[1][0], scratchPoint[0]);\n    target[1][1] = Math.max(target[1][1], scratchPoint[1]);\n    target[1][2] = Math.max(target[1][2], scratchPoint[2]);\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n// TODO - Dynamic screen space error provides an optimization when looking at\n// tilesets from above\n/* eslint-disable */\n// @ts-nocheck\nimport { Matrix4, Vector3, clamp } from '@math.gl/core';\nconst scratchPositionNormal = new Vector3();\nconst scratchCartographic = new Vector3();\nconst scratchMatrix = new Matrix4();\nconst scratchCenter = new Vector3();\nconst scratchPosition = new Vector3();\nconst scratchDirection = new Vector3();\n// eslint-disable-next-line max-statements, complexity\nexport function calculateDynamicScreenSpaceError(root, { camera, mapProjection }, options = {}) {\n    const { dynamicScreenSpaceErrorHeightFalloff = 0.25, dynamicScreenSpaceErrorDensity = 0.00278 } = options;\n    let up;\n    let direction;\n    let height;\n    let minimumHeight;\n    let maximumHeight;\n    const tileBoundingVolume = root.contentBoundingVolume;\n    if (tileBoundingVolume instanceof TileBoundingRegion) {\n        up = Cartesian3.normalize(camera.positionWC, scratchPositionNormal);\n        direction = camera.directionWC;\n        height = camera.positionCartographic.height;\n        minimumHeight = tileBoundingVolume.minimumHeight;\n        maximumHeight = tileBoundingVolume.maximumHeight;\n    }\n    else {\n        // Transform camera position and direction into the local coordinate system of the tileset\n        const transformLocal = Matrix4.inverseTransformation(root.computedTransform, scratchMatrix);\n        const ellipsoid = mapProjection.ellipsoid;\n        const boundingVolume = tileBoundingVolume.boundingVolume;\n        const centerLocal = Matrix4.multiplyByPoint(transformLocal, boundingVolume.center, scratchCenter);\n        if (Cartesian3.magnitude(centerLocal) > ellipsoid.minimumRadius) {\n            // The tileset is defined in WGS84. Approximate the minimum and maximum height.\n            const centerCartographic = Cartographic.fromCartesian(centerLocal, ellipsoid, scratchCartographic);\n            up = Cartesian3.normalize(camera.positionWC, scratchPositionNormal);\n            direction = camera.directionWC;\n            height = camera.positionCartographic.height;\n            minimumHeight = 0.0;\n            maximumHeight = centerCartographic.height * 2.0;\n        }\n        else {\n            // The tileset is defined in local coordinates (z-up)\n            const positionLocal = Matrix4.multiplyByPoint(transformLocal, camera.positionWC, scratchPosition);\n            up = Cartesian3.UNIT_Z;\n            direction = Matrix4.multiplyByPointAsVector(transformLocal, camera.directionWC, scratchDirection);\n            direction = Cartesian3.normalize(direction, direction);\n            height = positionLocal.z;\n            if (tileBoundingVolume instanceof TileOrientedBoundingBox) {\n                // Assuming z-up, the last component stores the half-height of the box\n                const boxHeight = root._header.boundingVolume.box[11];\n                minimumHeight = centerLocal.z - boxHeight;\n                maximumHeight = centerLocal.z + boxHeight;\n            }\n            else if (tileBoundingVolume instanceof TileBoundingSphere) {\n                const radius = boundingVolume.radius;\n                minimumHeight = centerLocal.z - radius;\n                maximumHeight = centerLocal.z + radius;\n            }\n        }\n    }\n    // The range where the density starts to lessen. Start at the quarter height of the tileset.\n    const heightFalloff = dynamicScreenSpaceErrorHeightFalloff;\n    const heightClose = minimumHeight + (maximumHeight - minimumHeight) * heightFalloff;\n    const heightFar = maximumHeight;\n    const t = clamp((height - heightClose) / (heightFar - heightClose), 0.0, 1.0);\n    // Increase density as the camera tilts towards the horizon\n    const dot = Math.abs(Cartesian3.dot(direction, up));\n    let horizonFactor = 1.0 - dot;\n    // Weaken the horizon factor as the camera height increases, implying the camera is further away from the tileset.\n    // The goal is to increase density for the \"street view\", not when viewing the tileset from a distance.\n    horizonFactor = horizonFactor * (1.0 - t);\n    return dynamicScreenSpaceErrorDensity * horizonFactor;\n}\nexport function fog(distanceToCamera, density) {\n    const scalar = distanceToCamera * density;\n    return 1.0 - Math.exp(-(scalar * scalar));\n}\nexport function getDynamicScreenSpaceError(tileset, distanceToCamera) {\n    if (tileset.dynamicScreenSpaceError && tileset.dynamicScreenSpaceErrorComputedDensity) {\n        const density = tileset.dynamicScreenSpaceErrorComputedDensity;\n        const factor = tileset.dynamicScreenSpaceErrorFactor;\n        // TODO: Refined screen space error that minimizes tiles in non-first-person\n        const dynamicError = fog(distanceToCamera, density) * factor;\n        return dynamicError;\n    }\n    return 0;\n}\nexport function getTiles3DScreenSpaceError(tile, frameState, useParentLodMetric) {\n    const tileset = tile.tileset;\n    const parentLodMetricValue = (tile.parent && tile.parent.lodMetricValue) || tile.lodMetricValue;\n    const lodMetricValue = useParentLodMetric ? parentLodMetricValue : tile.lodMetricValue;\n    // Leaf tiles do not have any error so save the computation\n    if (lodMetricValue === 0.0) {\n        return 0.0;\n    }\n    // TODO: Orthographic Frustum needs special treatment?\n    // this._getOrthograhicScreenSpaceError();\n    // Avoid divide by zero when viewer is inside the tile\n    const distance = Math.max(tile._distanceToCamera, 1e-7);\n    const { height, sseDenominator } = frameState;\n    const { viewDistanceScale } = tileset.options;\n    let error = (lodMetricValue * height * (viewDistanceScale || 1.0)) / (distance * sseDenominator);\n    error -= getDynamicScreenSpaceError(tileset, distance);\n    return error;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { Matrix4, Vector3 } from '@math.gl/core';\nimport { Ellipsoid } from '@math.gl/geospatial';\nconst cameraPositionCartesian = new Vector3();\nconst toEye = new Vector3();\nconst cameraPositionEnu = new Vector3();\nconst extraVertexEnu = new Vector3();\nconst projectedOriginVector = new Vector3();\nconst enuToCartesianMatrix = new Matrix4();\nconst cartesianToEnuMatrix = new Matrix4();\n/**\n * For the maxScreenThreshold error metric, maxError means that you should replace the node with it's children\n   as soon as the nodes bounding sphere has a screen radius larger than maxError pixels.\n   In this sense a value of 0 means you should always load it's children,\n   or if it's a leaf node, you should always display it.\n * @param tile\n * @param frameState\n * @returns\n */\nexport function getLodStatus(tile, frameState) {\n    if (tile.lodMetricValue === 0 || isNaN(tile.lodMetricValue)) {\n        return 'DIG';\n    }\n    const screenSize = 2 * getProjectedRadius(tile, frameState);\n    if (screenSize < 2) {\n        return 'OUT';\n    }\n    if (!tile.header.children || screenSize <= tile.lodMetricValue) {\n        return 'DRAW';\n    }\n    else if (tile.header.children) {\n        return 'DIG';\n    }\n    return 'OUT';\n}\n/**\n * Calculate size of MBS radius projected on the screen plane\n * @param tile\n * @param frameState\n * @returns\n */\n// eslint-disable-next-line max-statements\nexport function getProjectedRadius(tile, frameState) {\n    const { topDownViewport: viewport } = frameState;\n    const mbsLat = tile.header.mbs[1];\n    const mbsLon = tile.header.mbs[0];\n    const mbsZ = tile.header.mbs[2];\n    const mbsR = tile.header.mbs[3];\n    const mbsCenterCartesian = [...tile.boundingVolume.center];\n    const cameraPositionCartographic = viewport.unprojectPosition(viewport.cameraPosition);\n    Ellipsoid.WGS84.cartographicToCartesian(cameraPositionCartographic, cameraPositionCartesian);\n    // ---------------------------\n    // Calculate mbs border vertex\n    // ---------------------------\n    toEye.copy(cameraPositionCartesian).subtract(mbsCenterCartesian).normalize();\n    // Add extra vector to form plane\n    Ellipsoid.WGS84.eastNorthUpToFixedFrame(mbsCenterCartesian, enuToCartesianMatrix);\n    cartesianToEnuMatrix.copy(enuToCartesianMatrix).invert();\n    cameraPositionEnu.copy(cameraPositionCartesian).transform(cartesianToEnuMatrix);\n    // Mean Proportionals in Right Triangles - Altitude rule\n    // https://mathbitsnotebook.com/Geometry/RightTriangles/RTmeanRight.html\n    const projection = Math.sqrt(cameraPositionEnu[0] * cameraPositionEnu[0] + cameraPositionEnu[1] * cameraPositionEnu[1]);\n    const extraZ = (projection * projection) / cameraPositionEnu[2];\n    extraVertexEnu.copy([cameraPositionEnu[0], cameraPositionEnu[1], extraZ]);\n    const extraVertexCartesian = extraVertexEnu.transform(enuToCartesianMatrix);\n    const extraVectorCartesian = extraVertexCartesian.subtract(mbsCenterCartesian).normalize();\n    // We need radius vector orthogonal to toEye vector\n    const radiusVector = toEye.cross(extraVectorCartesian).normalize().scale(mbsR);\n    const sphereMbsBorderVertexCartesian = radiusVector.add(mbsCenterCartesian);\n    const sphereMbsBorderVertexCartographic = Ellipsoid.WGS84.cartesianToCartographic(sphereMbsBorderVertexCartesian);\n    // ---------------------------\n    // Project center vertex and border vertex and calculate projected radius of MBS\n    const projectedOrigin = viewport.project([mbsLon, mbsLat, mbsZ]);\n    const projectedMbsBorderVertex = viewport.project(sphereMbsBorderVertexCartographic);\n    const projectedRadius = projectedOriginVector\n        .copy(projectedOrigin)\n        .subtract(projectedMbsBorderVertex)\n        .magnitude();\n    return projectedRadius;\n}\n", "export function get3dTilesOptions(tileset) {\n    return {\n        assetGltfUpAxis: (tileset.asset && tileset.asset.gltfUpAxis) || 'Y'\n    };\n}\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { assert } from '@loaders.gl/loader-utils';\n/**\n * A wrapper around arrays so that the internal length of the array can be manually managed.\n *\n * @alias ManagedArray\n * @constructor\n * @private\n *\n * @param {Number} [length=0] The initial length of the array.\n */\nexport class ManagedArray {\n    _map = new Map();\n    _array;\n    _length;\n    constructor(length = 0) {\n        this._array = new Array(length);\n        this._length = length;\n    }\n    /**\n     * Gets or sets the length of the array.\n     * If the set length is greater than the length of the internal array, the internal array is resized.\n     *\n     * @memberof ManagedArray.prototype\n     * @type Number\n     */\n    get length() {\n        return this._length;\n    }\n    set length(length) {\n        this._length = length;\n        if (length > this._array.length) {\n            this._array.length = length;\n        }\n    }\n    /**\n     * Gets the internal array.\n     *\n     * @memberof ManagedArray.prototype\n     * @type Array\n     * @readonly\n     */\n    get values() {\n        return this._array;\n    }\n    /**\n     * Gets the element at an index.\n     *\n     * @param {Number} index The index to get.\n     */\n    get(index) {\n        assert(index < this._array.length);\n        return this._array[index];\n    }\n    /**\n     * Sets the element at an index. Resizes the array if index is greater than the length of the array.\n     *\n     * @param {Number} index The index to set.\n     * @param {*} element The element to set at index.\n     */\n    set(index, element) {\n        assert(index >= 0);\n        if (index >= this.length) {\n            this.length = index + 1;\n        }\n        if (this._map.has(this._array[index])) {\n            this._map.delete(this._array[index]);\n        }\n        this._array[index] = element;\n        this._map.set(element, index);\n    }\n    delete(element) {\n        const index = this._map.get(element);\n        if (index >= 0) {\n            this._array.splice(index, 1);\n            this._map.delete(element);\n            this.length--;\n        }\n    }\n    /**\n     * Returns the last element in the array without modifying the array.\n     *\n     * @returns {*} The last element in the array.\n     */\n    peek() {\n        return this._array[this._length - 1];\n    }\n    /**\n     * Push an element into the array.\n     *\n     * @param {*} element The element to push.\n     */\n    push(element) {\n        if (!this._map.has(element)) {\n            const index = this.length++;\n            this._array[index] = element;\n            this._map.set(element, index);\n        }\n    }\n    /**\n     * Pop an element from the array.\n     *\n     * @returns {*} The last element in the array.\n     */\n    pop() {\n        const element = this._array[--this.length];\n        this._map.delete(element);\n        return element;\n    }\n    /**\n     * Resize the internal array if length > _array.length.\n     *\n     * @param {Number} length The length.\n     */\n    reserve(length) {\n        assert(length >= 0);\n        if (length > this._array.length) {\n            this._array.length = length;\n        }\n    }\n    /**\n     * Resize the array.\n     *\n     * @param {Number} length The length.\n     */\n    resize(length) {\n        assert(length >= 0);\n        this.length = length;\n    }\n    /**\n     * Trim the internal array to the specified length. Defaults to the current length.\n     *\n     * @param {Number} [length] The length.\n     */\n    trim(length) {\n        if (length === null || length === undefined) {\n            length = this.length;\n        }\n        this._array.length = length;\n    }\n    reset() {\n        this._array = [];\n        this._map = new Map();\n        this._length = 0;\n    }\n    find(target) {\n        return this._map.has(target);\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { ManagedArray } from \"../utils/managed-array.js\";\nimport { TILE_REFINEMENT } from \"../constants.js\";\nexport const DEFAULT_PROPS = {\n    loadSiblings: false,\n    skipLevelOfDetail: false,\n    updateTransforms: true,\n    onTraversalEnd: () => { },\n    viewportTraversersMap: {},\n    basePath: ''\n};\nexport class TilesetTraverser {\n    options;\n    // fulfill in traverse call\n    root = null;\n    // tiles should be rendered\n    selectedTiles = {};\n    // tiles should be loaded from server\n    requestedTiles = {};\n    // tiles does not have render content\n    emptyTiles = {};\n    lastUpdate = new Date().getTime();\n    updateDebounceTime = 1000;\n    /** temporary storage to hold the traversed tiles during a traversal */\n    _traversalStack = new ManagedArray();\n    _emptyTraversalStack = new ManagedArray();\n    /** set in every traverse cycle */\n    _frameNumber = null;\n    // RESULT\n    traversalFinished(frameState) {\n        return true;\n    }\n    // TODO nested props\n    constructor(options) {\n        this.options = { ...DEFAULT_PROPS, ...options };\n    }\n    // tiles should be visible\n    traverse(root, frameState, options) {\n        this.root = root; // for root screen space error\n        this.options = { ...this.options, ...options };\n        // reset result\n        this.reset();\n        // update tile (visibility and expiration)\n        this.updateTile(root, frameState);\n        this._frameNumber = frameState.frameNumber;\n        this.executeTraversal(root, frameState);\n    }\n    reset() {\n        this.requestedTiles = {};\n        this.selectedTiles = {};\n        this.emptyTiles = {};\n        this._traversalStack.reset();\n        this._emptyTraversalStack.reset();\n    }\n    /**\n     * Execute traverse\n     * Depth-first traversal that traverses all visible tiles and marks tiles for selection.\n     * If skipLevelOfDetail is off then a tile does not refine until all children are loaded.\n     * This is the traditional replacement refinement approach and is called the base traversal.\n     * Tiles that have a greater screen space error than the base screen space error are part of the base traversal,\n     * all other tiles are part of the skip traversal. The skip traversal allows for skipping levels of the tree\n     * and rendering children and parent tiles simultaneously.\n     */\n    /* eslint-disable-next-line complexity, max-statements */\n    executeTraversal(root, frameState) {\n        // stack to store traversed tiles, only visible tiles should be added to stack\n        // visible: visible in the current view frustum\n        const stack = this._traversalStack;\n        root._selectionDepth = 1;\n        stack.push(root);\n        while (stack.length > 0) {\n            // 1. pop tile\n            const tile = stack.pop();\n            // 2. check if tile needs to be refine, needs refine if a tile's LoD is not sufficient and tile has available children (available content)\n            let shouldRefine = false;\n            if (this.canTraverse(tile, frameState)) {\n                this.updateChildTiles(tile, frameState);\n                shouldRefine = this.updateAndPushChildren(tile, frameState, stack, tile.hasRenderContent ? tile._selectionDepth + 1 : tile._selectionDepth);\n            }\n            // 3. decide if should render (select) this tile\n            //   - tile does not have render content\n            //   - tile has render content and tile is `add` type (pointcloud)\n            //   - tile has render content and tile is `replace` type (photogrammetry) and can't refine any further\n            const parent = tile.parent;\n            const parentRefines = Boolean(!parent || parent._shouldRefine);\n            const stoppedRefining = !shouldRefine;\n            if (!tile.hasRenderContent) {\n                this.emptyTiles[tile.id] = tile;\n                this.loadTile(tile, frameState);\n                if (stoppedRefining) {\n                    this.selectTile(tile, frameState);\n                }\n                // additive tiles\n            }\n            else if (tile.refine === TILE_REFINEMENT.ADD) {\n                // Additive tiles are always loaded and selected\n                this.loadTile(tile, frameState);\n                this.selectTile(tile, frameState);\n                // replace tiles\n            }\n            else if (tile.refine === TILE_REFINEMENT.REPLACE) {\n                // Always load tiles in the base traversal\n                // Select tiles that can't refine further\n                this.loadTile(tile, frameState);\n                if (stoppedRefining) {\n                    this.selectTile(tile, frameState);\n                }\n            }\n            // 3. update cache, most recent touched tiles have higher priority to be fetched from server\n            this.touchTile(tile, frameState);\n            // 4. update tile refine prop and parent refinement status to trickle down to the descendants\n            tile._shouldRefine = shouldRefine && parentRefines;\n        }\n        const newTime = new Date().getTime();\n        if (this.traversalFinished(frameState) || newTime - this.lastUpdate > this.updateDebounceTime) {\n            this.lastUpdate = newTime;\n            this.options.onTraversalEnd(frameState);\n        }\n    }\n    updateChildTiles(tile, frameState) {\n        const children = tile.children;\n        for (const child of children) {\n            this.updateTile(child, frameState);\n        }\n    }\n    /* eslint-disable complexity, max-statements */\n    updateAndPushChildren(tile, frameState, stack, depth) {\n        const { loadSiblings, skipLevelOfDetail } = this.options;\n        const children = tile.children;\n        // sort children tiles\n        children.sort(this.compareDistanceToCamera.bind(this));\n        // For traditional replacement refinement only refine if all children are loaded.\n        // Empty tiles are exempt since it looks better if children stream in as they are loaded to fill the empty space.\n        const checkRefines = tile.refine === TILE_REFINEMENT.REPLACE && tile.hasRenderContent && !skipLevelOfDetail;\n        let hasVisibleChild = false;\n        let refines = true;\n        for (const child of children) {\n            child._selectionDepth = depth;\n            if (child.isVisibleAndInRequestVolume) {\n                if (stack.find(child)) {\n                    stack.delete(child);\n                }\n                stack.push(child);\n                hasVisibleChild = true;\n            }\n            else if (checkRefines || loadSiblings) {\n                // Keep non-visible children loaded since they are still needed before the parent can refine.\n                // Or loadSiblings is true so always load tiles regardless of visibility.\n                this.loadTile(child, frameState);\n                this.touchTile(child, frameState);\n            }\n            if (checkRefines) {\n                let childRefines;\n                if (!child._inRequestVolume) {\n                    childRefines = false;\n                }\n                else if (!child.hasRenderContent) {\n                    childRefines = this.executeEmptyTraversal(child, frameState);\n                }\n                else {\n                    childRefines = child.contentAvailable;\n                }\n                refines = refines && childRefines;\n                if (!refines) {\n                    return false;\n                }\n            }\n        }\n        if (!hasVisibleChild) {\n            refines = false;\n        }\n        return refines;\n    }\n    /* eslint-enable complexity, max-statements */\n    updateTile(tile, frameState) {\n        this.updateTileVisibility(tile, frameState);\n    }\n    // tile to render in the browser\n    selectTile(tile, frameState) {\n        if (this.shouldSelectTile(tile)) {\n            // The tile can be selected right away and does not require traverseAndSelect\n            tile._selectedFrame = frameState.frameNumber;\n            this.selectedTiles[tile.id] = tile;\n        }\n    }\n    // tile to load from server\n    loadTile(tile, frameState) {\n        if (this.shouldLoadTile(tile)) {\n            tile._requestedFrame = frameState.frameNumber;\n            tile._priority = tile._getPriority();\n            this.requestedTiles[tile.id] = tile;\n        }\n    }\n    // cache tile\n    touchTile(tile, frameState) {\n        tile.tileset._cache.touch(tile);\n        tile._touchedFrame = frameState.frameNumber;\n    }\n    // tile should be visible\n    // tile should have children\n    // tile LoD (level of detail) is not sufficient under current viewport\n    canTraverse(tile, frameState, useParentMetric = false, ignoreVisibility = false) {\n        if (!tile.hasChildren) {\n            return false;\n        }\n        // cesium specific\n        if (tile.hasTilesetContent) {\n            // Traverse external this to visit its root tile\n            // Don't traverse if the subtree is expired because it will be destroyed\n            return !tile.contentExpired;\n        }\n        if (!ignoreVisibility && !tile.isVisibleAndInRequestVolume) {\n            return false;\n        }\n        return this.shouldRefine(tile, frameState, useParentMetric);\n    }\n    shouldLoadTile(tile) {\n        // if request tile is in current frame\n        // and has unexpired render content\n        return tile.hasUnloadedContent || tile.contentExpired;\n    }\n    shouldSelectTile(tile) {\n        // if select tile is in current frame\n        // and content available\n        return tile.contentAvailable && !this.options.skipLevelOfDetail;\n    }\n    /** Decide if tile LoD (level of detail) is not sufficient under current viewport */\n    shouldRefine(tile, frameState, useParentMetric = false) {\n        let screenSpaceError = tile._screenSpaceError;\n        if (useParentMetric) {\n            screenSpaceError = tile.getScreenSpaceError(frameState, true);\n        }\n        return screenSpaceError > tile.tileset.memoryAdjustedScreenSpaceError;\n    }\n    updateTileVisibility(tile, frameState) {\n        const viewportIds = [];\n        if (this.options.viewportTraversersMap) {\n            for (const key in this.options.viewportTraversersMap) {\n                const value = this.options.viewportTraversersMap[key];\n                if (value === frameState.viewport.id) {\n                    viewportIds.push(key);\n                }\n            }\n        }\n        else {\n            viewportIds.push(frameState.viewport.id);\n        }\n        tile.updateVisibility(frameState, viewportIds);\n    }\n    // UTILITIES\n    compareDistanceToCamera(b, a) {\n        return b._distanceToCamera - a._distanceToCamera;\n    }\n    anyChildrenVisible(tile, frameState) {\n        let anyVisible = false;\n        for (const child of tile.children) {\n            // @ts-expect-error\n            child.updateVisibility(frameState);\n            // @ts-expect-error\n            anyVisible = anyVisible || child.isVisibleAndInRequestVolume;\n        }\n        return anyVisible;\n    }\n    // Depth-first traversal that checks if all nearest descendants with content are loaded.\n    // Ignores visibility.\n    executeEmptyTraversal(root, frameState) {\n        let allDescendantsLoaded = true;\n        const stack = this._emptyTraversalStack;\n        stack.push(root);\n        while (stack.length > 0) {\n            const tile = stack.pop();\n            const traverse = !tile.hasRenderContent && this.canTraverse(tile, frameState, false, false);\n            const emptyLeaf = !tile.hasRenderContent && tile.children.length === 0;\n            // Traversal stops but the tile does not have content yet\n            // There will be holes if the parent tries to refine to its children, so don't refine\n            // One exception: a parent may refine even if one of its descendants is an empty leaf\n            if (!traverse && !tile.contentAvailable && !emptyLeaf) {\n                allDescendantsLoaded = false;\n            }\n            this.updateTile(tile, frameState);\n            if (!tile.isVisibleAndInRequestVolume) {\n                this.loadTile(tile, frameState);\n                this.touchTile(tile, frameState);\n            }\n            if (traverse) {\n                const children = tile.children;\n                for (const child of children) {\n                    stack.push(child);\n                }\n            }\n        }\n        return allDescendantsLoaded;\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { Vector3, Matrix4 } from '@math.gl/core';\nimport { CullingVolume } from '@math.gl/culling';\nimport { load } from '@loaders.gl/core';\nimport { TILE_REFINEMENT, TILE_CONTENT_STATE, TILESET_TYPE } from \"../constants.js\";\nimport { createBoundingVolume, getCartographicBounds } from \"./helpers/bounding-volume.js\";\nimport { getTiles3DScreenSpaceError } from \"./helpers/tiles-3d-lod.js\";\nimport { getProjectedRadius } from \"./helpers/i3s-lod.js\";\nimport { get3dTilesOptions } from \"./helpers/3d-tiles-options.js\";\nimport { TilesetTraverser } from \"./tileset-traverser.js\";\nconst scratchVector = new Vector3();\nfunction defined(x) {\n    return x !== undefined && x !== null;\n}\n/**\n * A Tile3DHeader represents a tile as Tileset3D. When a tile is first created, its content is not loaded;\n * the content is loaded on-demand when needed based on the view.\n * Do not construct this directly, instead access tiles through {@link Tileset3D#tileVisible}.\n */\nexport class Tile3D {\n    tileset;\n    header;\n    id;\n    url;\n    parent;\n    /* Specifies the type of refine that is used when traversing this tile for rendering. */\n    refine;\n    type;\n    contentUrl;\n    /** Different refinement algorithms used by I3S and 3D tiles */\n    lodMetricType = 'geometricError';\n    /** The error, in meters, introduced if this tile is rendered and its children are not. */\n    lodMetricValue = 0;\n    /** @todo math.gl is not exporting BoundingVolume base type? */\n    boundingVolume = null;\n    /**\n     * The tile's content.  This represents the actual tile's payload,\n     * not the content's metadata in the tileset JSON file.\n     */\n    content = null;\n    contentState = TILE_CONTENT_STATE.UNLOADED;\n    gpuMemoryUsageInBytes = 0;\n    /** The tile's children - an array of Tile3D objects. */\n    children = [];\n    depth = 0;\n    viewportIds = [];\n    transform = new Matrix4();\n    extensions = null;\n    /** TODO Cesium 3d tiles specific */\n    implicitTiling = null;\n    /** Container to store application specific data */\n    userData = {};\n    computedTransform;\n    hasEmptyContent = false;\n    hasTilesetContent = false;\n    traverser = new TilesetTraverser({});\n    /** Used by TilesetCache */\n    _cacheNode = null;\n    _frameNumber = null;\n    // TODO Cesium 3d tiles specific\n    _expireDate = null;\n    _expiredContent = null;\n    _boundingBox = undefined;\n    /** updated every frame for tree traversal and rendering optimizations: */\n    _distanceToCamera = 0;\n    _screenSpaceError = 0;\n    _visibilityPlaneMask;\n    _visible = undefined;\n    _contentBoundingVolume;\n    _viewerRequestVolume;\n    _initialTransform = new Matrix4();\n    // Used by traverser, cannot be marked private\n    _priority = 0;\n    _selectedFrame = 0;\n    _requestedFrame = 0;\n    _selectionDepth = 0;\n    _touchedFrame = 0;\n    _centerZDepth = 0;\n    _shouldRefine = false;\n    _stackLength = 0;\n    _visitedFrame = 0;\n    _inRequestVolume = false;\n    _lodJudge = null; // TODO i3s specific, needs to remove\n    /**\n     * @constructs\n     * Create a Tile3D instance\n     * @param tileset - Tileset3D instance\n     * @param header - tile header - JSON loaded from a dataset\n     * @param parentHeader - parent Tile3D instance\n     * @param extendedId - optional ID to separate copies of a tile for different viewports.\n     *    const extendedId = `${tile.id}-${frameState.viewport.id}`;\n     */\n    // eslint-disable-next-line max-statements\n    constructor(tileset, header, parentHeader, extendedId = '') {\n        // PUBLIC MEMBERS\n        // original tile data\n        this.header = header;\n        // The tileset containing this tile.\n        this.tileset = tileset;\n        this.id = extendedId || header.id;\n        this.url = header.url;\n        // This tile's parent or `undefined` if this tile is the root.\n        // @ts-ignore\n        this.parent = parentHeader;\n        this.refine = this._getRefine(header.refine);\n        this.type = header.type;\n        this.contentUrl = header.contentUrl;\n        this._initializeLodMetric(header);\n        this._initializeTransforms(header);\n        this._initializeBoundingVolumes(header);\n        this._initializeContent(header);\n        this._initializeRenderingState(header);\n        Object.seal(this);\n    }\n    destroy() {\n        this.header = null;\n    }\n    isDestroyed() {\n        return this.header === null;\n    }\n    get selected() {\n        return this._selectedFrame === this.tileset._frameNumber;\n    }\n    get isVisible() {\n        return this._visible;\n    }\n    get isVisibleAndInRequestVolume() {\n        return this._visible && this._inRequestVolume;\n    }\n    /** Returns true if tile is not an empty tile and not an external tileset */\n    get hasRenderContent() {\n        return !this.hasEmptyContent && !this.hasTilesetContent;\n    }\n    /** Returns true if tile has children */\n    get hasChildren() {\n        return this.children.length > 0 || (this.header.children && this.header.children.length > 0);\n    }\n    /**\n     * Determines if the tile's content is ready. This is automatically `true` for\n     * tiles with empty content.\n     */\n    get contentReady() {\n        return this.contentState === TILE_CONTENT_STATE.READY || this.hasEmptyContent;\n    }\n    /**\n     * Determines if the tile has available content to render.  `true` if the tile's\n     * content is ready or if it has expired content this renders while new content loads; otherwise,\n     */\n    get contentAvailable() {\n        return Boolean((this.contentReady && this.hasRenderContent) || (this._expiredContent && !this.contentFailed));\n    }\n    /** Returns true if tile has renderable content but it's unloaded */\n    get hasUnloadedContent() {\n        return this.hasRenderContent && this.contentUnloaded;\n    }\n    /**\n     * Determines if the tile's content has not be requested. `true` if tile's\n     * content has not be requested; otherwise, `false`.\n     */\n    get contentUnloaded() {\n        return this.contentState === TILE_CONTENT_STATE.UNLOADED;\n    }\n    /**\n     * Determines if the tile's content is expired. `true` if tile's\n     * content is expired; otherwise, `false`.\n     */\n    get contentExpired() {\n        return this.contentState === TILE_CONTENT_STATE.EXPIRED;\n    }\n    // Determines if the tile's content failed to load.  `true` if the tile's\n    // content failed to load; otherwise, `false`.\n    get contentFailed() {\n        return this.contentState === TILE_CONTENT_STATE.FAILED;\n    }\n    /**\n     * Distance from the tile's bounding volume center to the camera\n     */\n    get distanceToCamera() {\n        return this._distanceToCamera;\n    }\n    /**\n     * Screen space error for LOD selection\n     */\n    get screenSpaceError() {\n        return this._screenSpaceError;\n    }\n    /**\n     * Get bounding box in cartographic coordinates\n     * @returns [min, max] each in [longitude, latitude, altitude]\n     */\n    get boundingBox() {\n        if (!this._boundingBox) {\n            this._boundingBox = getCartographicBounds(this.header.boundingVolume, this.boundingVolume);\n        }\n        return this._boundingBox;\n    }\n    /** Get the tile's screen space error. */\n    getScreenSpaceError(frameState, useParentLodMetric) {\n        switch (this.tileset.type) {\n            case TILESET_TYPE.I3S:\n                return getProjectedRadius(this, frameState);\n            case TILESET_TYPE.TILES3D:\n                return getTiles3DScreenSpaceError(this, frameState, useParentLodMetric);\n            default:\n                // eslint-disable-next-line\n                throw new Error('Unsupported tileset type');\n        }\n    }\n    /**\n     * Make tile unselected than means it won't be shown\n     * but it can be still loaded in memory\n     */\n    unselect() {\n        this._selectedFrame = 0;\n    }\n    /**\n     * Memory usage of tile on GPU\n     */\n    _getGpuMemoryUsageInBytes() {\n        return this.content.gpuMemoryUsageInBytes || this.content.byteLength || 0;\n    }\n    /*\n     * If skipLevelOfDetail is off try to load child tiles as soon as possible so that their parent can refine sooner.\n     * Tiles are prioritized by screen space error.\n     */\n    // eslint-disable-next-line complexity\n    _getPriority() {\n        const traverser = this.tileset._traverser;\n        const { skipLevelOfDetail } = traverser.options;\n        /*\n         * Tiles that are outside of the camera's frustum could be skipped if we are in 'ADD' mode\n         * or if we are using 'Skip Traversal' in 'REPLACE' mode.\n         * Otherewise, all 'touched' child tiles have to be loaded and displayed,\n         * this may include tiles that are outide of the camera frustum (so that we can hide the parent tile).\n         */\n        const maySkipTile = this.refine === TILE_REFINEMENT.ADD || skipLevelOfDetail;\n        // Check if any reason to abort\n        if (maySkipTile && !this.isVisible && this._visible !== undefined) {\n            return -1;\n        }\n        // Condition used in `cancelOutOfViewRequests` function in CesiumJS/Cesium3DTileset.js\n        if (this.tileset._frameNumber - this._touchedFrame >= 1) {\n            return -1;\n        }\n        if (this.contentState === TILE_CONTENT_STATE.UNLOADED) {\n            return -1;\n        }\n        // Based on the priority function `getPriorityReverseScreenSpaceError` in CesiumJS. Scheduling priority is based on the parent's screen space error when possible.\n        const parent = this.parent;\n        const useParentScreenSpaceError = parent && (!maySkipTile || this._screenSpaceError === 0.0 || parent.hasTilesetContent);\n        const screenSpaceError = useParentScreenSpaceError\n            ? parent._screenSpaceError\n            : this._screenSpaceError;\n        const rootScreenSpaceError = traverser.root ? traverser.root._screenSpaceError : 0.0;\n        // Map higher SSE to lower values (e.g. root tile is highest priority)\n        return Math.max(rootScreenSpaceError - screenSpaceError, 0);\n    }\n    /**\n     *  Requests the tile's content.\n     * The request may not be made if the Request Scheduler can't prioritize it.\n     */\n    // eslint-disable-next-line max-statements, complexity\n    async loadContent() {\n        if (this.hasEmptyContent) {\n            return false;\n        }\n        if (this.content) {\n            return true;\n        }\n        const expired = this.contentExpired;\n        if (expired) {\n            this._expireDate = null;\n        }\n        this.contentState = TILE_CONTENT_STATE.LOADING;\n        const requestToken = await this.tileset._requestScheduler.scheduleRequest(this.id, this._getPriority.bind(this));\n        if (!requestToken) {\n            // cancelled\n            this.contentState = TILE_CONTENT_STATE.UNLOADED;\n            return false;\n        }\n        try {\n            const contentUrl = this.tileset.getTileUrl(this.contentUrl);\n            // The content can be a binary tile ot a JSON tileset\n            const loader = this.tileset.loader;\n            const options = {\n                ...this.tileset.loadOptions,\n                [loader.id]: {\n                    // @ts-expect-error\n                    ...this.tileset.loadOptions[loader.id],\n                    isTileset: this.type === 'json',\n                    ...this._getLoaderSpecificOptions(loader.id)\n                }\n            };\n            this.content = await load(contentUrl, loader, options);\n            if (this.tileset.options.contentLoader) {\n                await this.tileset.options.contentLoader(this);\n            }\n            if (this._isTileset()) {\n                // Add tile headers for the nested tilset's subtree\n                // Async update of the tree should be fine since there would never be edits to the same node\n                // TODO - we need to capture the child tileset's URL\n                this.tileset._initializeTileHeaders(this.content, this);\n            }\n            this.contentState = TILE_CONTENT_STATE.READY;\n            this._onContentLoaded();\n            return true;\n        }\n        catch (error) {\n            // Tile is unloaded before the content finishes loading\n            this.contentState = TILE_CONTENT_STATE.FAILED;\n            throw error;\n        }\n        finally {\n            requestToken.done();\n        }\n    }\n    // Unloads the tile's content.\n    unloadContent() {\n        if (this.content && this.content.destroy) {\n            this.content.destroy();\n        }\n        this.content = null;\n        if (this.header.content && this.header.content.destroy) {\n            this.header.content.destroy();\n        }\n        this.header.content = null;\n        this.contentState = TILE_CONTENT_STATE.UNLOADED;\n        return true;\n    }\n    /**\n     * Update the tile's visibility\n     * @param {Object} frameState - frame state for tile culling\n     * @param {string[]} viewportIds - a list of viewport ids that show this tile\n     * @return {void}\n     */\n    updateVisibility(frameState, viewportIds) {\n        if (this._frameNumber === frameState.frameNumber) {\n            // Return early if visibility has already been checked during the traversal.\n            // The visibility may have already been checked if the cullWithChildrenBounds optimization is used.\n            return;\n        }\n        const parent = this.parent;\n        const parentVisibilityPlaneMask = parent\n            ? parent._visibilityPlaneMask\n            : CullingVolume.MASK_INDETERMINATE;\n        if (this.tileset._traverser.options.updateTransforms) {\n            const parentTransform = parent ? parent.computedTransform : this.tileset.modelMatrix;\n            this._updateTransform(parentTransform);\n        }\n        this._distanceToCamera = this.distanceToTile(frameState);\n        this._screenSpaceError = this.getScreenSpaceError(frameState, false);\n        this._visibilityPlaneMask = this.visibility(frameState, parentVisibilityPlaneMask); // Use parent's plane mask to speed up visibility test\n        this._visible = this._visibilityPlaneMask !== CullingVolume.MASK_OUTSIDE;\n        this._inRequestVolume = this.insideViewerRequestVolume(frameState);\n        this._frameNumber = frameState.frameNumber;\n        this.viewportIds = viewportIds;\n    }\n    // Determines whether the tile's bounding volume intersects the culling volume.\n    // @param {FrameState} frameState The frame state.\n    // @param {Number} parentVisibilityPlaneMask The parent's plane mask to speed up the visibility check.\n    // @returns {Number} A plane mask as described above in {@link CullingVolume#computeVisibilityWithPlaneMask}.\n    visibility(frameState, parentVisibilityPlaneMask) {\n        const { cullingVolume } = frameState;\n        const { boundingVolume } = this;\n        // TODO Cesium specific - restore clippingPlanes\n        // const {clippingPlanes, clippingPlanesOriginMatrix} = tileset;\n        // if (clippingPlanes && clippingPlanes.enabled) {\n        //   const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n        //     boundingVolume,\n        //     clippingPlanesOriginMatrix\n        //   );\n        //   this._isClipped = intersection !== Intersect.INSIDE;\n        //   if (intersection === Intersect.OUTSIDE) {\n        //     return CullingVolume.MASK_OUTSIDE;\n        //   }\n        // }\n        // return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n        return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n    }\n    // Assuming the tile's bounding volume intersects the culling volume, determines\n    // whether the tile's content's bounding volume intersects the culling volume.\n    // @param {FrameState} frameState The frame state.\n    // @returns {Intersect} The result of the intersection: the tile's content is completely outside, completely inside, or intersecting the culling volume.\n    contentVisibility() {\n        return true;\n        // TODO restore\n        /*\n        // Assumes the tile's bounding volume intersects the culling volume already, so\n        // just return Intersect.INSIDE if there is no content bounding volume.\n        if (!defined(this.contentBoundingVolume)) {\n          return Intersect.INSIDE;\n        }\n    \n        if (this._visibilityPlaneMask === CullingVolume.MASK_INSIDE) {\n          // The tile's bounding volume is completely inside the culling volume so\n          // the content bounding volume must also be inside.\n          return Intersect.INSIDE;\n        }\n    \n        // PERFORMANCE_IDEA: is it possible to burn less CPU on this test since we know the\n        // tile's (not the content's) bounding volume intersects the culling volume?\n        const cullingVolume = frameState.cullingVolume;\n        const boundingVolume = tile.contentBoundingVolume;\n    \n        const tileset = this.tileset;\n        const clippingPlanes = tileset.clippingPlanes;\n        if (defined(clippingPlanes) && clippingPlanes.enabled) {\n          const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n            boundingVolume,\n            tileset.clippingPlanesOriginMatrix\n          );\n          this._isClipped = intersection !== Intersect.INSIDE;\n          if (intersection === Intersect.OUTSIDE) {\n            return Intersect.OUTSIDE;\n          }\n        }\n    \n        return cullingVolume.computeVisibility(boundingVolume);\n        */\n    }\n    /**\n     * Computes the (potentially approximate) distance from the closest point of the tile's bounding volume to the camera.\n     * @param frameState The frame state.\n     * @returns {Number} The distance, in meters, or zero if the camera is inside the bounding volume.\n     */\n    distanceToTile(frameState) {\n        const boundingVolume = this.boundingVolume;\n        return Math.sqrt(Math.max(boundingVolume.distanceSquaredTo(frameState.camera.position), 0));\n    }\n    /**\n     * Computes the tile's camera-space z-depth.\n     * @param frameState The frame state.\n     * @returns The distance, in meters.\n     */\n    cameraSpaceZDepth({ camera }) {\n        const boundingVolume = this.boundingVolume; // Gets the underlying OrientedBoundingBox or BoundingSphere\n        scratchVector.subVectors(boundingVolume.center, camera.position);\n        return camera.direction.dot(scratchVector);\n    }\n    /**\n     * Checks if the camera is inside the viewer request volume.\n     * @param {FrameState} frameState The frame state.\n     * @returns {Boolean} Whether the camera is inside the volume.\n     */\n    insideViewerRequestVolume(frameState) {\n        const viewerRequestVolume = this._viewerRequestVolume;\n        return (!viewerRequestVolume || viewerRequestVolume.distanceSquaredTo(frameState.camera.position) <= 0);\n    }\n    // TODO Cesium specific\n    // Update whether the tile has expired.\n    updateExpiration() {\n        if (defined(this._expireDate) && this.contentReady && !this.hasEmptyContent) {\n            const now = Date.now();\n            // @ts-ignore Date.lessThan - replace with ms compare?\n            if (Date.lessThan(this._expireDate, now)) {\n                this.contentState = TILE_CONTENT_STATE.EXPIRED;\n                this._expiredContent = this.content;\n            }\n        }\n    }\n    get extras() {\n        return this.header.extras;\n    }\n    // INTERNAL METHODS\n    _initializeLodMetric(header) {\n        if ('lodMetricType' in header) {\n            this.lodMetricType = header.lodMetricType;\n        }\n        else {\n            this.lodMetricType = (this.parent && this.parent.lodMetricType) || this.tileset.lodMetricType;\n            // eslint-disable-next-line\n            console.warn(`3D Tile: Required prop lodMetricType is undefined. Using parent lodMetricType`);\n        }\n        // This is used to compute screen space error, i.e., the error measured in pixels.\n        if ('lodMetricValue' in header) {\n            this.lodMetricValue = header.lodMetricValue;\n        }\n        else {\n            this.lodMetricValue =\n                (this.parent && this.parent.lodMetricValue) || this.tileset.lodMetricValue;\n            // eslint-disable-next-line\n            console.warn('3D Tile: Required prop lodMetricValue is undefined. Using parent lodMetricValue');\n        }\n    }\n    _initializeTransforms(tileHeader) {\n        // The local transform of this tile.\n        this.transform = tileHeader.transform ? new Matrix4(tileHeader.transform) : new Matrix4();\n        const parent = this.parent;\n        const tileset = this.tileset;\n        const parentTransform = parent && parent.computedTransform\n            ? parent.computedTransform.clone()\n            : tileset.modelMatrix.clone();\n        this.computedTransform = new Matrix4(parentTransform).multiplyRight(this.transform);\n        const parentInitialTransform = parent && parent._initialTransform ? parent._initialTransform.clone() : new Matrix4();\n        this._initialTransform = new Matrix4(parentInitialTransform).multiplyRight(this.transform);\n    }\n    _initializeBoundingVolumes(tileHeader) {\n        this._contentBoundingVolume = null;\n        this._viewerRequestVolume = null;\n        this._updateBoundingVolume(tileHeader);\n    }\n    _initializeContent(tileHeader) {\n        // Empty tile by default\n        this.content = { _tileset: this.tileset, _tile: this };\n        this.hasEmptyContent = true;\n        this.contentState = TILE_CONTENT_STATE.UNLOADED;\n        // When `true`, the tile's content points to an external tileset.\n        // This is `false` until the tile's content is loaded.\n        this.hasTilesetContent = false;\n        if (tileHeader.contentUrl) {\n            this.content = null;\n            this.hasEmptyContent = false;\n        }\n    }\n    // TODO - remove anything not related to basic visibility detection\n    _initializeRenderingState(header) {\n        this.depth = header.level || (this.parent ? this.parent.depth + 1 : 0);\n        this._shouldRefine = false;\n        // Members this are updated every frame for tree traversal and rendering optimizations:\n        this._distanceToCamera = 0;\n        this._centerZDepth = 0;\n        this._screenSpaceError = 0;\n        this._visibilityPlaneMask = CullingVolume.MASK_INDETERMINATE;\n        this._visible = undefined;\n        this._inRequestVolume = false;\n        this._stackLength = 0;\n        this._selectionDepth = 0;\n        this._frameNumber = 0;\n        this._touchedFrame = 0;\n        this._visitedFrame = 0;\n        this._selectedFrame = 0;\n        this._requestedFrame = 0;\n        this._priority = 0.0;\n    }\n    _getRefine(refine) {\n        // Inherit from parent tile if omitted.\n        return refine || (this.parent && this.parent.refine) || TILE_REFINEMENT.REPLACE;\n    }\n    _isTileset() {\n        return this.contentUrl.indexOf('.json') !== -1;\n    }\n    _onContentLoaded() {\n        // Vector and Geometry tile rendering do not support the skip LOD optimization.\n        switch (this.content && this.content.type) {\n            case 'vctr':\n            case 'geom':\n                // @ts-ignore\n                this.tileset._traverser.disableSkipLevelOfDetail = true;\n                break;\n            default:\n        }\n        // The content may be tileset json\n        if (this._isTileset()) {\n            this.hasTilesetContent = true;\n        }\n        else {\n            this.gpuMemoryUsageInBytes = this._getGpuMemoryUsageInBytes();\n        }\n    }\n    _updateBoundingVolume(header) {\n        // Update the bounding volumes\n        this.boundingVolume = createBoundingVolume(header.boundingVolume, this.computedTransform, this.boundingVolume);\n        const content = header.content;\n        if (!content) {\n            return;\n        }\n        // TODO Cesium specific\n        // Non-leaf tiles may have a content bounding-volume, which is a tight-fit bounding volume\n        // around only the features in the tile. This box is useful for culling for rendering,\n        // but not for culling for traversing the tree since it does not guarantee spatial coherence, i.e.,\n        // since it only bounds features in the tile, not the entire tile, children may be\n        // outside of this box.\n        if (content.boundingVolume) {\n            this._contentBoundingVolume = createBoundingVolume(content.boundingVolume, this.computedTransform, this._contentBoundingVolume);\n        }\n        if (header.viewerRequestVolume) {\n            this._viewerRequestVolume = createBoundingVolume(header.viewerRequestVolume, this.computedTransform, this._viewerRequestVolume);\n        }\n    }\n    // Update the tile's transform. The transform is applied to the tile's bounding volumes.\n    _updateTransform(parentTransform = new Matrix4()) {\n        const computedTransform = parentTransform.clone().multiplyRight(this.transform);\n        const didTransformChange = !computedTransform.equals(this.computedTransform);\n        if (!didTransformChange) {\n            return;\n        }\n        this.computedTransform = computedTransform;\n        this._updateBoundingVolume(this.header);\n    }\n    // Get options which are applicable only for the particular loader\n    _getLoaderSpecificOptions(loaderId) {\n        switch (loaderId) {\n            case 'i3s':\n                return {\n                    ...this.tileset.options.i3s,\n                    _tileOptions: {\n                        attributeUrls: this.header.attributeUrls,\n                        textureUrl: this.header.textureUrl,\n                        textureFormat: this.header.textureFormat,\n                        textureLoaderOptions: this.header.textureLoaderOptions,\n                        materialDefinition: this.header.materialDefinition,\n                        isDracoGeometry: this.header.isDracoGeometry,\n                        mbs: this.header.mbs\n                    },\n                    _tilesetOptions: {\n                        store: this.tileset.tileset.store,\n                        attributeStorageInfo: this.tileset.tileset.attributeStorageInfo,\n                        fields: this.tileset.tileset.fields\n                    },\n                    isTileHeader: false\n                };\n            case '3d-tiles':\n            case 'cesium-ion':\n            default:\n                return get3dTilesOptions(this.tileset.tileset);\n        }\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { TILE3D_OPTIMIZATION_HINT, TILE_REFINEMENT } from \"../../constants.js\";\nimport { TilesetTraverser } from \"../tileset-traverser.js\";\nexport class Tileset3DTraverser extends TilesetTraverser {\n    compareDistanceToCamera(a, b) {\n        // Sort by farthest child first since this is going on a stack\n        return b._distanceToCamera === 0 && a._distanceToCamera === 0\n            ? b._centerZDepth - a._centerZDepth\n            : b._distanceToCamera - a._distanceToCamera;\n    }\n    updateTileVisibility(tile, frameState) {\n        super.updateTileVisibility(tile, frameState);\n        //  Optimization - if none of the tile's children are visible then this tile isn't visible\n        if (!tile.isVisibleAndInRequestVolume) {\n            return;\n        }\n        const hasChildren = tile.children.length > 0;\n        if (tile.hasTilesetContent && hasChildren) {\n            // Use the root tile's visibility instead of this tile's visibility.\n            // The root tile may be culled by the children bounds optimization in which\n            // case this tile should also be culled.\n            const firstChild = tile.children[0];\n            this.updateTileVisibility(firstChild, frameState);\n            tile._visible = firstChild._visible;\n            return;\n        }\n        if (this.meetsScreenSpaceErrorEarly(tile, frameState)) {\n            tile._visible = false;\n            return;\n        }\n        const replace = tile.refine === TILE_REFINEMENT.REPLACE;\n        const useOptimization = tile._optimChildrenWithinParent === TILE3D_OPTIMIZATION_HINT.USE_OPTIMIZATION;\n        if (replace && useOptimization && hasChildren) {\n            if (!this.anyChildrenVisible(tile, frameState)) {\n                tile._visible = false;\n                return;\n            }\n        }\n    }\n    meetsScreenSpaceErrorEarly(tile, frameState) {\n        const { parent } = tile;\n        if (!parent || parent.hasTilesetContent || parent.refine !== TILE_REFINEMENT.ADD) {\n            return false;\n        }\n        // Use parent's geometric error with child's box to see if the tile already meet the SSE\n        return !this.shouldRefine(tile, frameState, true);\n    }\n}\n", "/**\n * Counter to register pending tile headers for the particular frameNumber\n * Until all tiles are loaded we won't call `onTraversalEnd` callback\n */\nexport class I3SPendingTilesRegister {\n    frameNumberMap = new Map();\n    /**\n     * Register a new pending tile header for the particular frameNumber\n     * @param viewportId\n     * @param frameNumber\n     */\n    register(viewportId, frameNumber) {\n        const viewportMap = this.frameNumberMap.get(viewportId) || new Map();\n        const oldCount = viewportMap.get(frameNumber) || 0;\n        viewportMap.set(frameNumber, oldCount + 1);\n        this.frameNumberMap.set(viewportId, viewportMap);\n    }\n    /**\n     * Deregister a pending tile header for the particular frameNumber\n     * @param viewportId\n     * @param frameNumber\n     */\n    deregister(viewportId, frameNumber) {\n        const viewportMap = this.frameNumberMap.get(viewportId);\n        if (!viewportMap) {\n            return;\n        }\n        const oldCount = viewportMap.get(frameNumber) || 1;\n        viewportMap.set(frameNumber, oldCount - 1);\n    }\n    /**\n     * Check is there are no pending tile headers registered for the particular frameNumber\n     * @param viewportId\n     * @param frameNumber\n     * @returns\n     */\n    isZero(viewportId, frameNumber) {\n        const count = this.frameNumberMap.get(viewportId)?.get(frameNumber) || 0;\n        return count === 0;\n    }\n}\n", "import { I3SPendingTilesRegister } from \"./i3s-pending-tiles-register.js\";\nconst STATUS = {\n    REQUESTED: 'REQUESTED',\n    COMPLETED: 'COMPLETED',\n    ERROR: 'ERROR'\n};\n// A helper class to manage tile metadata fetching\nexport class I3STileManager {\n    _statusMap;\n    pendingTilesRegister = new I3SPendingTilesRegister();\n    constructor() {\n        this._statusMap = {};\n    }\n    /**\n     * Add request to map\n     * @param request - node metadata request\n     * @param key - unique key\n     * @param callback - callback after request completed\n     * @param frameState - frameState data\n     */\n    add(request, key, callback, frameState) {\n        if (!this._statusMap[key]) {\n            const { frameNumber, viewport: { id } } = frameState;\n            this._statusMap[key] = { request, callback, key, frameState, status: STATUS.REQUESTED };\n            // Register pending request for the frameNumber\n            this.pendingTilesRegister.register(id, frameNumber);\n            request()\n                .then((data) => {\n                this._statusMap[key].status = STATUS.COMPLETED;\n                const { frameNumber: actualFrameNumber, viewport: { id } } = this._statusMap[key].frameState;\n                // Deregister pending request for the frameNumber\n                this.pendingTilesRegister.deregister(id, actualFrameNumber);\n                this._statusMap[key].callback(data, frameState);\n            })\n                .catch((error) => {\n                this._statusMap[key].status = STATUS.ERROR;\n                const { frameNumber: actualFrameNumber, viewport: { id } } = this._statusMap[key].frameState;\n                // Deregister pending request for the frameNumber\n                this.pendingTilesRegister.deregister(id, actualFrameNumber);\n                callback(error);\n            });\n        }\n    }\n    /**\n     * Update request if it is still actual for the new frameState\n     * @param key - unique key\n     * @param frameState - frameState data\n     */\n    update(key, frameState) {\n        if (this._statusMap[key]) {\n            // Deregister pending request for the old frameNumber\n            const { frameNumber, viewport: { id } } = this._statusMap[key].frameState;\n            this.pendingTilesRegister.deregister(id, frameNumber);\n            // Register pending request for the new frameNumber\n            const { frameNumber: newFrameNumber, viewport: { id: newViewportId } } = frameState;\n            this.pendingTilesRegister.register(newViewportId, newFrameNumber);\n            this._statusMap[key].frameState = frameState;\n        }\n    }\n    /**\n     * Find request in the map\n     * @param key - unique key\n     * @returns\n     */\n    find(key) {\n        return this._statusMap[key];\n    }\n    /**\n     * Check it there are pending tile headers for the particular frameNumber\n     * @param viewportId\n     * @param frameNumber\n     * @returns\n     */\n    hasPendingTiles(viewportId, frameNumber) {\n        return !this.pendingTilesRegister.isZero(viewportId, frameNumber);\n    }\n}\n", "import { load } from '@loaders.gl/core';\nimport { TilesetTraverser } from \"../tileset-traverser.js\";\nimport { getLodStatus } from \"../helpers/i3s-lod.js\";\nimport { Tile3D } from \"../tile-3d.js\";\nimport { I3STileManager } from \"./i3s-tile-manager.js\";\nexport class I3STilesetTraverser extends TilesetTraverser {\n    _tileManager;\n    constructor(options) {\n        super(options);\n        this._tileManager = new I3STileManager();\n    }\n    /**\n     * Check if there are no penging tile header requests,\n     * that means the traversal is finished and we can call\n     * following-up callbacks.\n     */\n    traversalFinished(frameState) {\n        return !this._tileManager.hasPendingTiles(frameState.viewport.id, this._frameNumber || 0);\n    }\n    shouldRefine(tile, frameState) {\n        tile._lodJudge = getLodStatus(tile, frameState);\n        return tile._lodJudge === 'DIG';\n    }\n    updateChildTiles(tile, frameState) {\n        const children = tile.header.children || [];\n        // children which are already fetched and constructed as Tile3D instances\n        const childTiles = tile.children;\n        const tileset = tile.tileset;\n        for (const child of children) {\n            const extendedId = `${child.id}-${frameState.viewport.id}`;\n            // if child tile is not fetched\n            const childTile = childTiles && childTiles.find((t) => t.id === extendedId);\n            if (!childTile) {\n                let request = () => this._loadTile(child.id, tileset);\n                const cachedRequest = this._tileManager.find(extendedId);\n                if (!cachedRequest) {\n                    // eslint-disable-next-line max-depth\n                    if (tileset.tileset.nodePages) {\n                        request = () => tileset.tileset.nodePagesTile.formTileFromNodePages(child.id);\n                    }\n                    this._tileManager.add(request, extendedId, (header) => this._onTileLoad(header, tile, extendedId), frameState);\n                }\n                else {\n                    // update frameNumber since it is still needed in current frame\n                    this._tileManager.update(extendedId, frameState);\n                }\n            }\n            else if (childTile) {\n                // if child tile is fetched and available\n                this.updateTile(childTile, frameState);\n            }\n        }\n        return false;\n    }\n    async _loadTile(nodeId, tileset) {\n        const { loader } = tileset;\n        const nodeUrl = tileset.getTileUrl(`${tileset.url}/nodes/${nodeId}`);\n        // load metadata\n        const options = {\n            ...tileset.loadOptions,\n            i3s: {\n                ...tileset.loadOptions.i3s,\n                isTileHeader: true\n            }\n        };\n        return await load(nodeUrl, loader, options);\n    }\n    /**\n     * The callback to init Tile3D instance after loading the tile JSON\n     * @param {Object} header - the tile JSON from a dataset\n     * @param {Tile3D} tile - the parent Tile3D instance\n     * @param {string} extendedId - optional ID to separate copies of a tile for different viewports.\n     *                              const extendedId = `${tile.id}-${frameState.viewport.id}`;\n     * @return {void}\n     */\n    _onTileLoad(header, tile, extendedId) {\n        // after child tile is fetched\n        const childTile = new Tile3D(tile.tileset, header, tile, extendedId);\n        tile.children.push(childTile);\n        const frameState = this._tileManager.find(childTile.id).frameState;\n        this.updateTile(childTile, frameState);\n        // after tile fetched, resume traversal if still in current update/traversal frame\n        if (this._frameNumber === frameState.frameNumber &&\n            (this.traversalFinished(frameState) ||\n                new Date().getTime() - this.lastUpdate > this.updateDebounceTime)) {\n            this.executeTraversal(childTile, frameState);\n        }\n    }\n}\n", "// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { Matrix4, Vector3 } from '@math.gl/core';\nimport { Ellipsoid } from '@math.gl/geospatial';\nimport { Stats } from '@probe.gl/stats';\nimport { RequestScheduler, path } from '@loaders.gl/loader-utils';\nimport { TilesetCache } from \"./tileset-cache.js\";\nimport { calculateTransformProps } from \"./helpers/transform-utils.js\";\nimport { getFrameState, limitSelectedTiles } from \"./helpers/frame-state.js\";\nimport { getZoomFromBoundingVolume, getZoomFromExtent, getZoomFromFullExtent } from \"./helpers/zoom.js\";\nimport { Tile3D } from \"./tile-3d.js\";\nimport { TILESET_TYPE } from \"../constants.js\";\nimport { TilesetTraverser } from \"./tileset-traverser.js\";\n// TODO - these should be moved into their respective modules\nimport { Tileset3DTraverser } from \"./format-3d-tiles/tileset-3d-traverser.js\";\nimport { I3STilesetTraverser } from \"./format-i3s/i3s-tileset-traverser.js\";\nconst DEFAULT_PROPS = {\n    description: '',\n    ellipsoid: Ellipsoid.WGS84,\n    modelMatrix: new Matrix4(),\n    throttleRequests: true,\n    maxRequests: 64,\n    /** Default memory values optimized for viewing mesh-based 3D Tiles on both mobile and desktop devices */\n    maximumMemoryUsage: 32,\n    memoryCacheOverflow: 1,\n    maximumTilesSelected: 0,\n    debounceTime: 0,\n    onTileLoad: () => { },\n    onTileUnload: () => { },\n    onTileError: () => { },\n    onTraversalComplete: (selectedTiles) => selectedTiles,\n    contentLoader: undefined,\n    viewDistanceScale: 1.0,\n    maximumScreenSpaceError: 8,\n    memoryAdjustedScreenSpaceError: false,\n    loadTiles: true,\n    updateTransforms: true,\n    viewportTraversersMap: null,\n    loadOptions: { fetch: {} },\n    attributions: [],\n    basePath: '',\n    i3s: {}\n};\n// Tracked Stats\nconst TILES_TOTAL = 'Tiles In Tileset(s)';\nconst TILES_IN_MEMORY = 'Tiles In Memory';\nconst TILES_IN_VIEW = 'Tiles In View';\nconst TILES_RENDERABLE = 'Tiles To Render';\nconst TILES_LOADED = 'Tiles Loaded';\nconst TILES_LOADING = 'Tiles Loading';\nconst TILES_UNLOADED = 'Tiles Unloaded';\nconst TILES_LOAD_FAILED = 'Failed Tile Loads';\nconst POINTS_COUNT = 'Points/Vertices';\nconst TILES_GPU_MEMORY = 'Tile Memory Use';\nconst MAXIMUM_SSE = 'Maximum Screen Space Error';\n/**\n * The Tileset loading and rendering flow is as below,\n * A rendered (i.e. deck.gl `Tile3DLayer`) triggers `tileset.update()` after a `tileset` is loaded\n * `tileset` starts traversing the tile tree and update `requestTiles` (tiles of which content need\n * to be fetched) and `selectedTiles` (tiles ready for rendering under the current viewport).\n * `Tile3DLayer` will update rendering based on `selectedTiles`.\n * `Tile3DLayer` also listens to `onTileLoad` callback and trigger another round of `update and then traversal`\n * when new tiles are loaded.\n\n * As I3S tileset have stored `tileHeader` file (metadata) and tile content files (geometry, texture, ...) separately.\n * During each traversal, it issues `tilHeader` requests if that `tileHeader` is not yet fetched,\n * after the tile header is fulfilled, it will resume the traversal starting from the tile just fetched (not root).\n\n * Tile3DLayer\n *      |\n *  await load(tileset)\n *      |\n *  tileset.update()\n *      |                async load tileHeader\n *  tileset.traverse() -------------------------- Queued\n *      |        resume traversal after fetched  |\n *      |----------------------------------------|\n *      |\n *      |                     async load tile content\n * tilset.requestedTiles  ----------------------------- RequestScheduler\n *                                                             |\n * tilset.selectedTiles (ready for rendering)                  |\n *      |         Listen to                                    |\n *   Tile3DLayer ----------- onTileLoad  ----------------------|\n *      |                         |   notify new tile is available\n *   updateLayers                 |\n *                       tileset.update // trigger another round of update\n*/\nexport class Tileset3D {\n    // props: Tileset3DProps;\n    options;\n    loadOptions;\n    type;\n    tileset;\n    loader;\n    url;\n    basePath;\n    modelMatrix;\n    ellipsoid;\n    lodMetricType;\n    lodMetricValue;\n    refine;\n    root = null;\n    roots = {};\n    /** @todo any->unknown */\n    asset = {};\n    // Metadata for the entire tileset\n    description = '';\n    properties;\n    extras = null;\n    attributions = {};\n    credits = {};\n    stats;\n    /** flags that contain information about data types in nested tiles */\n    contentFormats = { draco: false, meshopt: false, dds: false, ktx2: false };\n    // view props\n    cartographicCenter = null;\n    cartesianCenter = null;\n    zoom = 1;\n    boundingVolume = null;\n    /** Updated based on the camera position and direction */\n    dynamicScreenSpaceErrorComputedDensity = 0.0;\n    // METRICS\n    /**\n     * The maximum amount of GPU memory (in MB) that may be used to cache tiles\n     * Tiles not in view are unloaded to enforce private\n     */\n    maximumMemoryUsage = 32;\n    /** The total amount of GPU memory in bytes used by the tileset. */\n    gpuMemoryUsageInBytes = 0;\n    /**\n     * If loading the level of detail required by maximumScreenSpaceError\n     * results in the memory usage exceeding maximumMemoryUsage (GPU), level of detail refinement\n     * will instead use this (larger) adjusted screen space error to achieve the\n     * best possible visual quality within the available memory.\n     */\n    memoryAdjustedScreenSpaceError = 0.0;\n    _cacheBytes = 0;\n    _cacheOverflowBytes = 0;\n    /** Update tracker. increase in each update cycle. */\n    _frameNumber = 0;\n    _queryParams = {};\n    _extensionsUsed = [];\n    _tiles = {};\n    /** counter for tracking tiles requests */\n    _pendingCount = 0;\n    /** Hold traversal results */\n    selectedTiles = [];\n    // TRAVERSAL\n    traverseCounter = 0;\n    geometricError = 0;\n    lastUpdatedVieports = null;\n    _requestedTiles = [];\n    _emptyTiles = [];\n    frameStateData = {};\n    _traverser;\n    _cache = new TilesetCache();\n    _requestScheduler;\n    // Promise tracking\n    updatePromise = null;\n    tilesetInitializationPromise;\n    /**\n     * Create a new Tileset3D\n     * @param json\n     * @param props\n     */\n    // eslint-disable-next-line max-statements\n    constructor(tileset, options) {\n        // PUBLIC MEMBERS\n        this.options = { ...DEFAULT_PROPS, ...options };\n        // raw data\n        this.tileset = tileset;\n        this.loader = tileset.loader;\n        // could be  3d tiles, i3s\n        this.type = tileset.type;\n        // The url to a tileset JSON file.\n        this.url = tileset.url;\n        this.basePath = tileset.basePath || path.dirname(this.url);\n        this.modelMatrix = this.options.modelMatrix;\n        this.ellipsoid = this.options.ellipsoid;\n        // Geometric error when the tree is not rendered at all\n        this.lodMetricType = tileset.lodMetricType;\n        this.lodMetricValue = tileset.lodMetricValue;\n        this.refine = tileset.root.refine;\n        this.loadOptions = this.options.loadOptions || {};\n        // TRAVERSAL\n        this._traverser = this._initializeTraverser();\n        this._requestScheduler = new RequestScheduler({\n            throttleRequests: this.options.throttleRequests,\n            maxRequests: this.options.maxRequests\n        });\n        this.memoryAdjustedScreenSpaceError = this.options.maximumScreenSpaceError;\n        this._cacheBytes = this.options.maximumMemoryUsage * 1024 * 1024;\n        this._cacheOverflowBytes = this.options.memoryCacheOverflow * 1024 * 1024;\n        // METRICS\n        // The total amount of GPU memory in bytes used by the tileset.\n        this.stats = new Stats({ id: this.url });\n        this._initializeStats();\n        this.tilesetInitializationPromise = this._initializeTileSet(tileset);\n    }\n    /** Release resources */\n    destroy() {\n        this._destroy();\n    }\n    /** Is the tileset loaded (update needs to have been called at least once) */\n    isLoaded() {\n        // Check that `_frameNumber !== 0` which means that update was called at least once\n        return this._pendingCount === 0 && this._frameNumber !== 0 && this._requestedTiles.length === 0;\n    }\n    get tiles() {\n        return Object.values(this._tiles);\n    }\n    get frameNumber() {\n        return this._frameNumber;\n    }\n    get queryParams() {\n        return new URLSearchParams(this._queryParams).toString();\n    }\n    setProps(props) {\n        this.options = { ...this.options, ...props };\n    }\n    /** @deprecated */\n    // setOptions(options: Tileset3DProps): void {\n    //   this.options = {...this.options, ...options};\n    // }\n    /**\n     * Return a loadable tile url for a specific tile subpath\n     * @param tilePath a tile subpath\n     */\n    getTileUrl(tilePath) {\n        const isDataUrl = tilePath.startsWith('data:');\n        if (isDataUrl) {\n            return tilePath;\n        }\n        let tileUrl = tilePath;\n        if (this.queryParams.length) {\n            tileUrl = `${tilePath}${tilePath.includes('?') ? '&' : '?'}${this.queryParams}`;\n        }\n        return tileUrl;\n    }\n    // TODO CESIUM specific\n    hasExtension(extensionName) {\n        return Boolean(this._extensionsUsed.indexOf(extensionName) > -1);\n    }\n    /**\n     * Update visible tiles relying on a list of viewports\n     * @param viewports - list of viewports\n     * @deprecated\n     */\n    update(viewports = null) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.tilesetInitializationPromise.then(() => {\n            if (!viewports && this.lastUpdatedVieports) {\n                viewports = this.lastUpdatedVieports;\n            }\n            else {\n                this.lastUpdatedVieports = viewports;\n            }\n            if (viewports) {\n                this.doUpdate(viewports);\n            }\n        });\n    }\n    /**\n     * Update visible tiles relying on a list of viewports.\n     * Do it with debounce delay to prevent update spam\n     * @param viewports viewports\n     * @returns Promise of new frameNumber\n     */\n    async selectTiles(viewports = null) {\n        await this.tilesetInitializationPromise;\n        if (viewports) {\n            this.lastUpdatedVieports = viewports;\n        }\n        if (!this.updatePromise) {\n            this.updatePromise = new Promise((resolve) => {\n                setTimeout(() => {\n                    if (this.lastUpdatedVieports) {\n                        this.doUpdate(this.lastUpdatedVieports);\n                    }\n                    resolve(this._frameNumber);\n                    this.updatePromise = null;\n                }, this.options.debounceTime);\n            });\n        }\n        return this.updatePromise;\n    }\n    adjustScreenSpaceError() {\n        if (this.gpuMemoryUsageInBytes < this._cacheBytes) {\n            this.memoryAdjustedScreenSpaceError = Math.max(this.memoryAdjustedScreenSpaceError / 1.02, this.options.maximumScreenSpaceError);\n        }\n        else if (this.gpuMemoryUsageInBytes > this._cacheBytes + this._cacheOverflowBytes) {\n            this.memoryAdjustedScreenSpaceError *= 1.02;\n        }\n    }\n    /**\n     * Update visible tiles relying on a list of viewports\n     * @param viewports viewports\n     */\n    // eslint-disable-next-line max-statements, complexity\n    doUpdate(viewports) {\n        if ('loadTiles' in this.options && !this.options.loadTiles) {\n            return;\n        }\n        if (this.traverseCounter > 0) {\n            return;\n        }\n        const preparedViewports = viewports instanceof Array ? viewports : [viewports];\n        this._cache.reset();\n        this._frameNumber++;\n        this.traverseCounter = preparedViewports.length;\n        const viewportsToTraverse = [];\n        // First loop to decrement traverseCounter\n        for (const viewport of preparedViewports) {\n            const id = viewport.id;\n            if (this._needTraverse(id)) {\n                viewportsToTraverse.push(id);\n            }\n            else {\n                this.traverseCounter--;\n            }\n        }\n        // Second loop to traverse\n        for (const viewport of preparedViewports) {\n            const id = viewport.id;\n            if (!this.roots[id]) {\n                this.roots[id] = this._initializeTileHeaders(this.tileset, null);\n            }\n            if (!viewportsToTraverse.includes(id)) {\n                continue; // eslint-disable-line no-continue\n            }\n            const frameState = getFrameState(viewport, this._frameNumber);\n            this._traverser.traverse(this.roots[id], frameState, this.options);\n        }\n    }\n    /**\n     * Check if traversal is needed for particular viewport\n     * @param {string} viewportId - id of a viewport\n     * @return {boolean}\n     */\n    _needTraverse(viewportId) {\n        let traverserId = viewportId;\n        if (this.options.viewportTraversersMap) {\n            traverserId = this.options.viewportTraversersMap[viewportId];\n        }\n        if (traverserId !== viewportId) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * The callback to post-process tiles after traversal procedure\n     * @param frameState - frame state for tile culling\n     */\n    _onTraversalEnd(frameState) {\n        const id = frameState.viewport.id;\n        if (!this.frameStateData[id]) {\n            this.frameStateData[id] = { selectedTiles: [], _requestedTiles: [], _emptyTiles: [] };\n        }\n        const currentFrameStateData = this.frameStateData[id];\n        const selectedTiles = Object.values(this._traverser.selectedTiles);\n        const [filteredSelectedTiles, unselectedTiles] = limitSelectedTiles(selectedTiles, frameState, this.options.maximumTilesSelected);\n        currentFrameStateData.selectedTiles = filteredSelectedTiles;\n        for (const tile of unselectedTiles) {\n            tile.unselect();\n        }\n        currentFrameStateData._requestedTiles = Object.values(this._traverser.requestedTiles);\n        currentFrameStateData._emptyTiles = Object.values(this._traverser.emptyTiles);\n        this.traverseCounter--;\n        if (this.traverseCounter > 0) {\n            return;\n        }\n        this._updateTiles();\n    }\n    /**\n     * Update tiles relying on data from all traversers\n     */\n    _updateTiles() {\n        this.selectedTiles = [];\n        this._requestedTiles = [];\n        this._emptyTiles = [];\n        for (const frameStateKey in this.frameStateData) {\n            const frameStateDataValue = this.frameStateData[frameStateKey];\n            this.selectedTiles = this.selectedTiles.concat(frameStateDataValue.selectedTiles);\n            this._requestedTiles = this._requestedTiles.concat(frameStateDataValue._requestedTiles);\n            this._emptyTiles = this._emptyTiles.concat(frameStateDataValue._emptyTiles);\n        }\n        this.selectedTiles = this.options.onTraversalComplete(this.selectedTiles);\n        for (const tile of this.selectedTiles) {\n            this._tiles[tile.id] = tile;\n        }\n        this._loadTiles();\n        this._unloadTiles();\n        this._updateStats();\n    }\n    _tilesChanged(oldSelectedTiles, selectedTiles) {\n        if (oldSelectedTiles.length !== selectedTiles.length) {\n            return true;\n        }\n        const set1 = new Set(oldSelectedTiles.map((t) => t.id));\n        const set2 = new Set(selectedTiles.map((t) => t.id));\n        let changed = oldSelectedTiles.filter((x) => !set2.has(x.id)).length > 0;\n        changed = changed || selectedTiles.filter((x) => !set1.has(x.id)).length > 0;\n        return changed;\n    }\n    _loadTiles() {\n        // Sort requests by priority before making any requests.\n        // This makes it less likely this requests will be cancelled after being issued.\n        // requestedTiles.sort((a, b) => a._priority - b._priority);\n        for (const tile of this._requestedTiles) {\n            if (tile.contentUnloaded) {\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                this._loadTile(tile);\n            }\n        }\n    }\n    _unloadTiles() {\n        // unload tiles from cache when hit maximumMemoryUsage\n        this._cache.unloadTiles(this, (tileset, tile) => tileset._unloadTile(tile));\n    }\n    _updateStats() {\n        let tilesRenderable = 0;\n        let pointsRenderable = 0;\n        for (const tile of this.selectedTiles) {\n            if (tile.contentAvailable && tile.content) {\n                tilesRenderable++;\n                if (tile.content.pointCount) {\n                    pointsRenderable += tile.content.pointCount;\n                }\n                else {\n                    // Calculate vertices for non point cloud tiles.\n                    pointsRenderable += tile.content.vertexCount;\n                }\n            }\n        }\n        this.stats.get(TILES_IN_VIEW).count = this.selectedTiles.length;\n        this.stats.get(TILES_RENDERABLE).count = tilesRenderable;\n        this.stats.get(POINTS_COUNT).count = pointsRenderable;\n        this.stats.get(MAXIMUM_SSE).count = this.memoryAdjustedScreenSpaceError;\n    }\n    async _initializeTileSet(tilesetJson) {\n        if (this.type === TILESET_TYPE.I3S) {\n            this.calculateViewPropsI3S();\n            tilesetJson.root = await tilesetJson.root;\n        }\n        this.root = this._initializeTileHeaders(tilesetJson, null);\n        if (this.type === TILESET_TYPE.TILES3D) {\n            this._initializeTiles3DTileset(tilesetJson);\n            this.calculateViewPropsTiles3D();\n        }\n        if (this.type === TILESET_TYPE.I3S) {\n            this._initializeI3STileset();\n        }\n    }\n    /**\n     * Called during initialize Tileset to initialize the tileset's cartographic center (longitude, latitude) and zoom.\n     * These metrics help apps center view on tileset\n     * For I3S there is extent (<1.8 version) or fullExtent (>=1.8 version) to calculate view props\n     * @returns\n     */\n    calculateViewPropsI3S() {\n        // for I3S 1.8 try to calculate with fullExtent\n        const fullExtent = this.tileset.fullExtent;\n        if (fullExtent) {\n            const { xmin, xmax, ymin, ymax, zmin, zmax } = fullExtent;\n            this.cartographicCenter = new Vector3(xmin + (xmax - xmin) / 2, ymin + (ymax - ymin) / 2, zmin + (zmax - zmin) / 2);\n            this.cartesianCenter = new Vector3();\n            Ellipsoid.WGS84.cartographicToCartesian(this.cartographicCenter, this.cartesianCenter);\n            this.zoom = getZoomFromFullExtent(fullExtent, this.cartographicCenter, this.cartesianCenter);\n            return;\n        }\n        // for I3S 1.6-1.7 try to calculate with extent\n        const extent = this.tileset.store?.extent;\n        if (extent) {\n            const [xmin, ymin, xmax, ymax] = extent;\n            this.cartographicCenter = new Vector3(xmin + (xmax - xmin) / 2, ymin + (ymax - ymin) / 2, 0);\n            this.cartesianCenter = new Vector3();\n            Ellipsoid.WGS84.cartographicToCartesian(this.cartographicCenter, this.cartesianCenter);\n            this.zoom = getZoomFromExtent(extent, this.cartographicCenter, this.cartesianCenter);\n            return;\n        }\n        // eslint-disable-next-line no-console\n        console.warn('Extent is not defined in the tileset header');\n        this.cartographicCenter = new Vector3();\n        this.zoom = 1;\n        return;\n    }\n    /**\n     * Called during initialize Tileset to initialize the tileset's cartographic center (longitude, latitude) and zoom.\n     * These metrics help apps center view on tileset.\n     * For 3DTiles the root tile data is used to calculate view props.\n     * @returns\n     */\n    calculateViewPropsTiles3D() {\n        const root = this.root;\n        const { center } = root.boundingVolume;\n        // TODO - handle all cases\n        if (!center) {\n            // eslint-disable-next-line no-console\n            console.warn('center was not pre-calculated for the root tile');\n            this.cartographicCenter = new Vector3();\n            this.zoom = 1;\n            return;\n        }\n        // cartographic coordinates are undefined at the center of the ellipsoid\n        if (center[0] !== 0 || center[1] !== 0 || center[2] !== 0) {\n            this.cartographicCenter = new Vector3();\n            Ellipsoid.WGS84.cartesianToCartographic(center, this.cartographicCenter);\n        }\n        else {\n            this.cartographicCenter = new Vector3(0, 0, -Ellipsoid.WGS84.radii[0]);\n        }\n        this.cartesianCenter = center;\n        this.zoom = getZoomFromBoundingVolume(root.boundingVolume, this.cartographicCenter);\n    }\n    _initializeStats() {\n        this.stats.get(TILES_TOTAL);\n        this.stats.get(TILES_LOADING);\n        this.stats.get(TILES_IN_MEMORY);\n        this.stats.get(TILES_IN_VIEW);\n        this.stats.get(TILES_RENDERABLE);\n        this.stats.get(TILES_LOADED);\n        this.stats.get(TILES_UNLOADED);\n        this.stats.get(TILES_LOAD_FAILED);\n        this.stats.get(POINTS_COUNT);\n        this.stats.get(TILES_GPU_MEMORY, 'memory');\n        this.stats.get(MAXIMUM_SSE);\n    }\n    // Installs the main tileset JSON file or a tileset JSON file referenced from a tile.\n    // eslint-disable-next-line max-statements\n    _initializeTileHeaders(tilesetJson, parentTileHeader) {\n        // A tileset JSON file referenced from a tile may exist in a different directory than the root tileset.\n        // Get the basePath relative to the external tileset.\n        const rootTile = new Tile3D(this, tilesetJson.root, parentTileHeader); // resource\n        // If there is a parentTileHeader, add the root of the currently loading tileset\n        // to parentTileHeader's children, and update its depth.\n        if (parentTileHeader) {\n            parentTileHeader.children.push(rootTile);\n            rootTile.depth = parentTileHeader.depth + 1;\n        }\n        // 3DTiles knows the hierarchy beforehand\n        if (this.type === TILESET_TYPE.TILES3D) {\n            const stack = [];\n            stack.push(rootTile);\n            while (stack.length > 0) {\n                const tile = stack.pop();\n                this.stats.get(TILES_TOTAL).incrementCount();\n                const children = tile.header.children || [];\n                for (const childHeader of children) {\n                    const childTile = new Tile3D(this, childHeader, tile);\n                    // Special handling for Google\n                    // A session key must be used for all tile requests\n                    if (childTile.contentUrl?.includes('?session=')) {\n                        const url = new URL(childTile.contentUrl);\n                        const session = url.searchParams.get('session');\n                        // eslint-disable-next-line max-depth\n                        if (session) {\n                            this._queryParams.session = session;\n                        }\n                    }\n                    tile.children.push(childTile);\n                    childTile.depth = tile.depth + 1;\n                    stack.push(childTile);\n                }\n            }\n        }\n        return rootTile;\n    }\n    _initializeTraverser() {\n        let TraverserClass;\n        const type = this.type;\n        switch (type) {\n            case TILESET_TYPE.TILES3D:\n                TraverserClass = Tileset3DTraverser;\n                break;\n            case TILESET_TYPE.I3S:\n                TraverserClass = I3STilesetTraverser;\n                break;\n            default:\n                TraverserClass = TilesetTraverser;\n        }\n        return new TraverserClass({\n            basePath: this.basePath,\n            onTraversalEnd: this._onTraversalEnd.bind(this)\n        });\n    }\n    _destroyTileHeaders(parentTile) {\n        this._destroySubtree(parentTile);\n    }\n    async _loadTile(tile) {\n        let loaded;\n        try {\n            this._onStartTileLoading();\n            loaded = await tile.loadContent();\n        }\n        catch (error) {\n            this._onTileLoadError(tile, error instanceof Error ? error : new Error('load failed'));\n        }\n        finally {\n            this._onEndTileLoading();\n            this._onTileLoad(tile, loaded);\n        }\n    }\n    _onTileLoadError(tile, error) {\n        this.stats.get(TILES_LOAD_FAILED).incrementCount();\n        const message = error.message || error.toString();\n        const url = tile.url;\n        // TODO - Allow for probe log to be injected instead of console?\n        console.error(`A 3D tile failed to load: ${tile.url} ${message}`); // eslint-disable-line\n        this.options.onTileError(tile, message, url);\n    }\n    _onTileLoad(tile, loaded) {\n        if (!loaded) {\n            return;\n        }\n        if (this.type === TILESET_TYPE.I3S) {\n            // We can't calculate tiles total in I3S in advance so we calculate it dynamically.\n            const nodesInNodePages = this.tileset?.nodePagesTile?.nodesInNodePages || 0;\n            this.stats.get(TILES_TOTAL).reset();\n            this.stats.get(TILES_TOTAL).addCount(nodesInNodePages);\n        }\n        // add coordinateOrigin and modelMatrix to tile\n        if (tile && tile.content) {\n            calculateTransformProps(tile, tile.content);\n        }\n        this.updateContentTypes(tile);\n        this._addTileToCache(tile);\n        this.options.onTileLoad(tile);\n    }\n    /**\n     * Update information about data types in nested tiles\n     * @param tile instance of a nested Tile3D\n     */\n    updateContentTypes(tile) {\n        if (this.type === TILESET_TYPE.I3S) {\n            if (tile.header.isDracoGeometry) {\n                this.contentFormats.draco = true;\n            }\n            switch (tile.header.textureFormat) {\n                case 'dds':\n                    this.contentFormats.dds = true;\n                    break;\n                case 'ktx2':\n                    this.contentFormats.ktx2 = true;\n                    break;\n                default:\n            }\n        }\n        else if (this.type === TILESET_TYPE.TILES3D) {\n            const { extensionsRemoved = [] } = tile.content?.gltf || {};\n            if (extensionsRemoved.includes('KHR_draco_mesh_compression')) {\n                this.contentFormats.draco = true;\n            }\n            if (extensionsRemoved.includes('EXT_meshopt_compression')) {\n                this.contentFormats.meshopt = true;\n            }\n            if (extensionsRemoved.includes('KHR_texture_basisu')) {\n                this.contentFormats.ktx2 = true;\n            }\n        }\n    }\n    _onStartTileLoading() {\n        this._pendingCount++;\n        this.stats.get(TILES_LOADING).incrementCount();\n    }\n    _onEndTileLoading() {\n        this._pendingCount--;\n        this.stats.get(TILES_LOADING).decrementCount();\n    }\n    _addTileToCache(tile) {\n        this._cache.add(this, tile, (tileset) => tileset._updateCacheStats(tile));\n    }\n    _updateCacheStats(tile) {\n        this.stats.get(TILES_LOADED).incrementCount();\n        this.stats.get(TILES_IN_MEMORY).incrementCount();\n        // TODO: Calculate GPU memory usage statistics for a tile.\n        this.gpuMemoryUsageInBytes += tile.gpuMemoryUsageInBytes || 0;\n        this.stats.get(TILES_GPU_MEMORY).count = this.gpuMemoryUsageInBytes;\n        // Adjust SSE based on cache limits\n        if (this.options.memoryAdjustedScreenSpaceError) {\n            this.adjustScreenSpaceError();\n        }\n    }\n    _unloadTile(tile) {\n        this.gpuMemoryUsageInBytes -= tile.gpuMemoryUsageInBytes || 0;\n        this.stats.get(TILES_IN_MEMORY).decrementCount();\n        this.stats.get(TILES_UNLOADED).incrementCount();\n        this.stats.get(TILES_GPU_MEMORY).count = this.gpuMemoryUsageInBytes;\n        this.options.onTileUnload(tile);\n        tile.unloadContent();\n    }\n    // Traverse the tree and destroy all tiles\n    _destroy() {\n        const stack = [];\n        if (this.root) {\n            stack.push(this.root);\n        }\n        while (stack.length > 0) {\n            const tile = stack.pop();\n            for (const child of tile.children) {\n                stack.push(child);\n            }\n            this._destroyTile(tile);\n        }\n        this.root = null;\n    }\n    // Traverse the tree and destroy all sub tiles\n    _destroySubtree(tile) {\n        const root = tile;\n        const stack = [];\n        stack.push(root);\n        while (stack.length > 0) {\n            tile = stack.pop();\n            for (const child of tile.children) {\n                stack.push(child);\n            }\n            if (tile !== root) {\n                this._destroyTile(tile);\n            }\n        }\n        root.children = [];\n    }\n    _destroyTile(tile) {\n        this._cache.unloadTile(this, tile);\n        this._unloadTile(tile);\n        tile.destroy();\n    }\n    _initializeTiles3DTileset(tilesetJson) {\n        if (tilesetJson.queryString) {\n            const searchParams = new URLSearchParams(tilesetJson.queryString);\n            const queryParams = Object.fromEntries(searchParams.entries());\n            this._queryParams = { ...this._queryParams, ...queryParams };\n        }\n        this.asset = tilesetJson.asset;\n        if (!this.asset) {\n            throw new Error('Tileset must have an asset property.');\n        }\n        if (this.asset.version !== '0.0' &&\n            this.asset.version !== '1.0' &&\n            this.asset.version !== '1.1') {\n            throw new Error('The tileset must be 3D Tiles version either 0.0 or 1.0 or 1.1.');\n        }\n        // Note: `asset.tilesetVersion` is version of the tileset itself (not the version of the 3D TILES standard)\n        // We add this version as a `v=1.0` query param to fetch the right version and not get an older cached version\n        if ('tilesetVersion' in this.asset) {\n            this._queryParams.v = this.asset.tilesetVersion;\n        }\n        // TODO - ion resources have a credits property we can use for additional attribution.\n        this.credits = {\n            attributions: this.options.attributions || []\n        };\n        this.description = this.options.description || '';\n        // Gets the tileset's properties dictionary object, which contains metadata about per-feature properties.\n        this.properties = tilesetJson.properties;\n        this.geometricError = tilesetJson.geometricError;\n        this._extensionsUsed = tilesetJson.extensionsUsed || [];\n        // Returns the extras property at the top of the tileset JSON (application specific metadata).\n        this.extras = tilesetJson.extras;\n    }\n    _initializeI3STileset() {\n        // @ts-expect-error\n        if (this.loadOptions.i3s && 'token' in this.loadOptions.i3s) {\n            // @ts-ignore\n            this._queryParams.token = this.loadOptions.i3s.token;\n        }\n    }\n}\n", "// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof \"4.2.0-beta.2\" !== 'undefined' ? \"4.2.0-beta.2\" : 'latest';\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\n// TILE TYPES\nexport const TILE3D_TYPE = {\n    COMPOSITE: 'cmpt',\n    POINT_CLOUD: 'pnts',\n    BATCHED_3D_MODEL: 'b3dm',\n    INSTANCED_3D_MODEL: 'i3dm',\n    GEOMETRY: 'geom',\n    VECTOR: 'vect',\n    GLTF: 'glTF'\n};\nexport const TILE3D_TYPES = Object.keys(TILE3D_TYPE);\nexport const MAGIC_ARRAY = {\n    BATCHED_MODEL: [98, 51, 100, 109],\n    INSTANCED_MODEL: [105, 51, 100, 109],\n    POINT_CLOUD: [112, 110, 116, 115],\n    COMPOSITE: [99, 109, 112, 116]\n};\n// TILE CONSTANTS\nexport const TILE3D_OPTIMIZATION_HINT = {\n    NOT_COMPUTED: -1,\n    USE_OPTIMIZATION: 1,\n    SKIP_OPTIMIZATION: 0\n};\n", "// loaders.gl\n// SPDX-License-Identifier: MIT AND Apache-2.0\n// Copyright vis.gl contributors\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { assert } from '@loaders.gl/loader-utils';\n// Decode the JSON binary array into clear text\nexport function getStringFromArrayBuffer(arrayBuffer, byteOffset, byteLength) {\n    assert(arrayBuffer instanceof ArrayBuffer);\n    const textDecoder = new TextDecoder('utf8');\n    const typedArray = new Uint8Array(arrayBuffer, byteOffset, byteLength);\n    const string = textDecoder.decode(typedArray);\n    return string;\n}\n// Decode the JSON binary array into clear text\nexport function getStringFromTypedArray(typedArray) {\n    assert(ArrayBuffer.isView(typedArray));\n    const textDecoder = new TextDecoder('utf8');\n    const string = textDecoder.decode(typedArray);\n    return string;\n}\nexport function getMagicString(arrayBuffer, byteOffset = 0) {\n    const dataView = new DataView(arrayBuffer);\n    return `\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 0))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 1))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 2))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 3))}`;\n}\n", "// Subset of WebGL constants\nexport const GL_PRIMITIVE = {\n    POINTS: 0x0000, // Points. single points.\n    LINES: 0x0001, // Lines. Each vertex connects to the one after it.\n    TRIANGLES: 0x0004 // Triangles. Each set of three vertices creates a separate triangle.\n};\n// Primitive modes\nexport const GL_PRIMITIVE_MODE = {\n    POINTS: 0x0000, // Points. single points.\n    LINES: 0x0001, // Lines. Each vertex connects to the one after it.\n    LINE_LOOP: 0x0002, // Lines. Each set of two vertices is treated as a separate line segment.\n    LINE_STRIP: 0x0003, // Lines/ a connected group of line segments from the first vertex to the last\n    TRIANGLES: 0x0004, // Triangles. Each set of three vertices creates a separate triangle.\n    TRIANGLE_STRIP: 0x0005, // Triangles. A connected group of triangles.\n    TRIANGLE_FAN: 0x0006 // Triangles. A connected group of triangles.\n    // Each vertex connects to the previous and the first vertex in the fan.\n};\nexport const GL_TYPE = {\n    BYTE: 5120,\n    UNSIGNED_BYTE: 5121,\n    SHORT: 5122,\n    UNSIGNED_SHORT: 5123,\n    INT: 5124,\n    UNSIGNED_INT: 5125,\n    FLOAT: 5126,\n    DOUBLE: 5130\n};\nexport const GL = {\n    ...GL_PRIMITIVE_MODE,\n    ...GL_TYPE\n};\n", "import { GL_TYPE as GL } from \"../constants.js\";\nconst GL_TYPE_TO_ARRAY_TYPE = {\n    [GL.DOUBLE]: Float64Array,\n    [GL.FLOAT]: Float32Array,\n    [GL.UNSIGNED_SHORT]: Uint16Array,\n    [GL.UNSIGNED_INT]: Uint32Array,\n    [GL.UNSIGNED_BYTE]: Uint8Array,\n    [GL.BYTE]: Int8Array,\n    [GL.SHORT]: Int16Array,\n    [GL.INT]: Int32Array\n};\nconst NAME_TO_GL_TYPE = {\n    DOUBLE: GL.DOUBLE,\n    FLOAT: GL.FLOAT,\n    UNSIGNED_SHORT: GL.UNSIGNED_SHORT,\n    UNSIGNED_INT: GL.UNSIGNED_INT,\n    UNSIGNED_BYTE: GL.UNSIGNED_BYTE,\n    BYTE: GL.BYTE,\n    SHORT: GL.SHORT,\n    INT: GL.INT\n};\nconst ERR_TYPE_CONVERSION = 'Failed to convert GL type';\n// Converts TYPED ARRAYS to corresponding GL constant\n// Used to auto deduce gl parameter types\nexport default class GLType {\n    // Signature: fromTypedArray(new Uint8Array())\n    // Signature: fromTypedArray(Uint8Array)\n    /**\n     * Returns the size, in bytes, of the corresponding datatype\n     * @param arrayOrType\n     * @returns glType a a string\n     */\n    static fromTypedArray(arrayOrType) {\n        // If typed array, look up constructor\n        arrayOrType = ArrayBuffer.isView(arrayOrType) ? arrayOrType.constructor : arrayOrType;\n        for (const glType in GL_TYPE_TO_ARRAY_TYPE) {\n            const ArrayType = GL_TYPE_TO_ARRAY_TYPE[glType];\n            if (ArrayType === arrayOrType) {\n                return glType;\n            }\n        }\n        throw new Error(ERR_TYPE_CONVERSION);\n    }\n    /**\n     * Extracts name for glType from array NAME_TO_GL_TYPE\n     * @param name\n     * @returns glType as a number\n     */\n    static fromName(name) {\n        const glType = NAME_TO_GL_TYPE[name];\n        if (!glType) {\n            throw new Error(ERR_TYPE_CONVERSION);\n        }\n        return glType;\n    }\n    // Converts GL constant to corresponding typed array type\n    // eslint-disable-next-line complexity\n    static getArrayType(glType) {\n        switch (glType) {\n            /*eslint-disable*/\n            // @ts-ignore\n            case GL.UNSIGNED_SHORT_5_6_5:\n            // @ts-ignore\n            case GL.UNSIGNED_SHORT_4_4_4_4:\n            // @ts-ignore\n            case GL.UNSIGNED_SHORT_5_5_5_1:\n                /* eslint-enable*/\n                return Uint16Array;\n            default:\n                const ArrayType = GL_TYPE_TO_ARRAY_TYPE[glType];\n                if (!ArrayType) {\n                    throw new Error(ERR_TYPE_CONVERSION);\n                }\n                return ArrayType;\n        }\n    }\n    /**\n     * Returns the size in bytes of one element of the provided WebGL type\n     * @param glType\n     * @returns size of glType\n     */\n    static getByteSize(glType) {\n        const ArrayType = GLType.getArrayType(glType);\n        return ArrayType.BYTES_PER_ELEMENT;\n    }\n    /**\n     * Returns `true` if `glType` is a valid WebGL data type.\n     * @param glType\n     * @returns boolean\n     */\n    static validate(glType) {\n        return Boolean(GLType.getArrayType(glType));\n    }\n    /**\n     * Creates a typed view of an array of bytes\n     * @param glType The type of typed array (ArrayBuffer view) to create\n     * @param buffer The buffer storage to use for the view.\n     * @param byteOffset The offset, in bytes, to the first element in the view\n     * @param length The number of elements in the view. Defaults to buffer length\n     * @returns A typed array view of the buffer\n     */\n    static createTypedArray(glType, buffer, byteOffset = 0, length) {\n        if (length === undefined) {\n            length = (buffer.byteLength - byteOffset) / GLType.getByteSize(glType);\n        }\n        const ArrayType = GLType.getArrayType(glType);\n        return new ArrayType(buffer, byteOffset, length);\n    }\n}\n", "/**\n * Throws error message\n * @param condition checks if an attribute equal to condition\n * @param message error message\n */\nexport function assert(condition, message) {\n    if (!condition) {\n        throw new Error(`math.gl assertion failed. ${message}`);\n    }\n}\n", "/**\n * Decode color values\n * @param rgb565\n * @param target\n * @returns target\n */\nexport function decodeRGB565(rgb565, target = [0, 0, 0]) {\n    const r5 = (rgb565 >> 11) & 31;\n    const g6 = (rgb565 >> 5) & 63;\n    const b5 = rgb565 & 31;\n    target[0] = r5 << 3;\n    target[1] = g6 << 2;\n    target[2] = b5 << 3;\n    return target;\n}\n/**\n * Encode color values\n * @param rgb\n * @returns color\n */\nexport function encodeRGB565(rgb) {\n    const r5 = Math.floor(rgb[0] / 8) + 4;\n    const g6 = Math.floor(rgb[1] / 4) + 2;\n    const b5 = Math.floor(rgb[2] / 8) + 4;\n    return r5 + (g6 << 5) + (b5 << 11);\n}\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n// Attribute compression and decompression functions.\nimport { Vector2, Vector3, clamp, _MathUtils } from '@math.gl/core';\nimport { assert } from \"../utils/assert.js\";\nconst RIGHT_SHIFT = 1.0 / 256.0;\nconst LEFT_SHIFT = 256.0;\nconst scratchVector2 = new Vector2();\nconst scratchVector3 = new Vector3();\nconst scratchEncodeVector2 = new Vector2();\nconst octEncodeScratch = new Vector2();\nconst uint8ForceArray = new Uint8Array(1);\n/**\n * Force a value to Uint8\n *\n * @param value\n * @returns\n */\nfunction forceUint8(value) {\n    uint8ForceArray[0] = value;\n    return uint8ForceArray[0];\n}\n/**\n * Converts a SNORM value in the range [0, rangeMaximum] to a scalar in the range [-1.0, 1.0].\n *\n * @param value SNORM value in the range [0, rangeMaximum]\n * @param [rangeMaximum=255] The maximum value in the SNORM range, 255 by default.\n * @returns Scalar in the range [-1.0, 1.0].\n *\n * @see CesiumMath.toSNorm\n */\nfunction fromSNorm(value, rangeMaximum = 255) {\n    return (clamp(value, 0.0, rangeMaximum) / rangeMaximum) * 2.0 - 1.0;\n}\n/**\n * Converts a scalar value in the range [-1.0, 1.0] to a SNORM in the range [0, rangeMaximum].\n *\n * @param value The scalar value in the range [-1.0, 1.0]\n * @param [rangeMaximum=255] The maximum value in the mapped range, 255 by default.\n * @returns A SNORM value, where 0 maps to -1.0 and rangeMaximum maps to 1.0.\n *\n * @see CesiumMath.fromSNorm\n */\nfunction toSNorm(value, rangeMaximum = 255) {\n    return Math.round((clamp(value, -1.0, 1.0) * 0.5 + 0.5) * rangeMaximum);\n}\n/**\n * Returns 1.0 if the given value is positive or zero, and -1.0 if it is negative.\n * This is similar to `Math.sign` except that returns 1.0 instead of\n * 0.0 when the input value is 0.0.\n *\n * @param value The value to return the sign of.\n * @returns The sign of value.\n */\nfunction signNotZero(value) {\n    return value < 0.0 ? -1.0 : 1.0;\n}\n/**\n * Encodes a normalized vector into 2 SNORM values in the range of [0-rangeMax] following the 'oct' encoding.\n *\n * Oct encoding is a compact representation of unit length vectors.\n * The 'oct' encoding is described in \"A Survey of Efficient Representations of Independent Unit Vectors\",\n * Cigolle et al 2014: {@link http://jcgt.org/published/0003/02/01/}\n *\n * @param vector The normalized vector to be compressed into 2 component 'oct' encoding.\n * @param result The 2 component oct-encoded unit length vector.\n * @param rangeMax The maximum value of the SNORM range. The encoded vector is stored in log2(rangeMax+1) bits.\n * @returns The 2 component oct-encoded unit length vector.\n *\n * @exception vector must be normalized.\n *\n * @see octDecodeInRange\n */\nexport function octEncodeInRange(vector, rangeMax, result) {\n    assert(vector);\n    assert(result);\n    const vector3 = scratchVector3.from(vector);\n    assert(Math.abs(vector3.magnitudeSquared() - 1.0) <= _MathUtils.EPSILON6);\n    result.x = vector.x / (Math.abs(vector.x) + Math.abs(vector.y) + Math.abs(vector.z));\n    result.y = vector.y / (Math.abs(vector.x) + Math.abs(vector.y) + Math.abs(vector.z));\n    if (vector.z < 0) {\n        const x = result.x;\n        const y = result.y;\n        result.x = (1.0 - Math.abs(y)) * signNotZero(x);\n        result.y = (1.0 - Math.abs(x)) * signNotZero(y);\n    }\n    result.x = toSNorm(result.x, rangeMax);\n    result.y = toSNorm(result.y, rangeMax);\n    return result;\n}\n/**\n * Encodes a normalized vector into 2 SNORM values in the range of [0-255] following the 'oct' encoding.\n *\n * @param vector The normalized vector to be compressed into 2 byte 'oct' encoding.\n * @param result The 2 byte oct-encoded unit length vector.\n * @returns he 2 byte oct-encoded unit length vector.\n *\n * @exception vector must be normalized.\n *\n * @see octEncodeInRange\n * @see octDecode\n */\nexport function octEncode(vector, result) {\n    return octEncodeInRange(vector, 255, result);\n}\n/**\n * Encodes a normalized vector into 4-byte vector\n * @param vector The normalized vector to be compressed into 4 byte 'oct' encoding.\n * @param result The 4 byte oct-encoded unit length vector.\n * @returns The 4 byte oct-encoded unit length vector.\n *\n * @exception vector must be normalized.\n *\n * @see octEncodeInRange\n * @see octDecodeFromVector4\n */\nexport function octEncodeToVector4(vector, result) {\n    octEncodeInRange(vector, 65535, octEncodeScratch);\n    result.x = forceUint8(octEncodeScratch.x * RIGHT_SHIFT);\n    result.y = forceUint8(octEncodeScratch.x);\n    result.z = forceUint8(octEncodeScratch.y * RIGHT_SHIFT);\n    result.w = forceUint8(octEncodeScratch.y);\n    return result;\n}\n/**\n * Decodes a unit-length vector in 'oct' encoding to a normalized 3-component vector.\n *\n * @param x The x component of the oct-encoded unit length vector.\n * @param y The y component of the oct-encoded unit length vector.\n * @param rangeMax The maximum value of the SNORM range. The encoded vector is stored in log2(rangeMax+1) bits.\n * @param result The decoded and normalized vector\n * @returns The decoded and normalized vector.\n *\n * @exception x and y must be unsigned normalized integers between 0 and rangeMax.\n *\n * @see octEncodeInRange\n */\nexport function octDecodeInRange(x, y, rangeMax, result) {\n    assert(result);\n    if (x < 0 || x > rangeMax || y < 0 || y > rangeMax) {\n        throw new Error(`x and y must be unsigned normalized integers between 0 and ${rangeMax}`);\n    }\n    result.x = fromSNorm(x, rangeMax);\n    result.y = fromSNorm(y, rangeMax);\n    result.z = 1.0 - (Math.abs(result.x) + Math.abs(result.y));\n    if (result.z < 0.0) {\n        const oldVX = result.x;\n        result.x = (1.0 - Math.abs(result.y)) * signNotZero(oldVX);\n        result.y = (1.0 - Math.abs(oldVX)) * signNotZero(result.y);\n    }\n    return result.normalize();\n}\n/**\n * Decodes a unit-length vector in 2 byte 'oct' encoding to a normalized 3-component vector.\n *\n * @param x The x component of the oct-encoded unit length vector.\n * @param y The y component of the oct-encoded unit length vector.\n * @param result The decoded and normalized vector.\n * @returns he decoded and normalized vector.\n *\n * @exception x and y must be an unsigned normalized integer between 0 and 255.\n *\n * @see octDecodeInRange\n */\nexport function octDecode(x, y, result) {\n    return octDecodeInRange(x, y, 255, result);\n}\n/**\n * Decodes a unit-length vector in 4 byte 'oct' encoding to a normalized 3-component vector.\n *\n * @param encoded The oct-encoded unit length vector.\n * @param esult The decoded and normalized vector.\n * @returns The decoded and normalized vector.\n *\n * @exception x, y, z, and w must be unsigned normalized integers between 0 and 255.\n *\n * @see octDecodeInRange\n * @see octEncodeToVector4\n */\nexport function octDecodeFromVector4(encoded, result) {\n    assert(encoded);\n    assert(result);\n    const x = encoded.x;\n    const y = encoded.y;\n    const z = encoded.z;\n    const w = encoded.w;\n    if (x < 0 || x > 255 || y < 0 || y > 255 || z < 0 || z > 255 || w < 0 || w > 255) {\n        throw new Error('x, y, z, and w must be unsigned normalized integers between 0 and 255');\n    }\n    const xOct16 = x * LEFT_SHIFT + y;\n    const yOct16 = z * LEFT_SHIFT + w;\n    return octDecodeInRange(xOct16, yOct16, 65535, result);\n}\n/**\n * Packs an oct encoded vector into a single floating-point number.\n *\n * @param encoded The oct encoded vector.\n * @returns The oct encoded vector packed into a single float.\n *\n */\nexport function octPackFloat(encoded) {\n    const vector2 = scratchVector2.from(encoded);\n    return 256.0 * vector2.x + vector2.y;\n}\n/**\n * Encodes a normalized vector into 2 SNORM values in the range of [0-255] following the 'oct' encoding and\n * stores those values in a single float-point number.\n *\n * @param vector The normalized vector to be compressed into 2 byte 'oct' encoding.\n * @returns The 2 byte oct-encoded unit length vector.\n *\n * @exception vector must be normalized.\n */\nexport function octEncodeFloat(vector) {\n    octEncode(vector, scratchEncodeVector2);\n    return octPackFloat(scratchEncodeVector2);\n}\n/**\n * Decodes a unit-length vector in 'oct' encoding packed in a floating-point number to a normalized 3-component vector.\n *\n * @param value The oct-encoded unit length vector stored as a single floating-point number.\n * @param result The decoded and normalized vector\n * @returns The decoded and normalized vector.\n *\n */\nexport function octDecodeFloat(value, result) {\n    assert(Number.isFinite(value));\n    const temp = value / 256.0;\n    const x = Math.floor(temp);\n    const y = (temp - x) * 256.0;\n    return octDecode(x, y, result);\n}\n/**\n * Encodes three normalized vectors into 6 SNORM values in the range of [0-255] following the 'oct' encoding and\n * packs those into two floating-point numbers.\n *\n * @param v1 A normalized vector to be compressed.\n * @param v2 A normalized vector to be compressed.\n * @param v3 A normalized vector to be compressed.\n * @param result The 'oct' encoded vectors packed into two floating-point numbers.\n * @returns The 'oct' encoded vectors packed into two floating-point numbers.\n *\n */\nexport function octPack(v1, v2, v3, result) {\n    assert(v1);\n    assert(v2);\n    assert(v3);\n    assert(result);\n    const encoded1 = octEncodeFloat(v1);\n    const encoded2 = octEncodeFloat(v2);\n    const encoded3 = octEncode(v3, scratchEncodeVector2);\n    result.x = 65536.0 * encoded3.x + encoded1;\n    result.y = 65536.0 * encoded3.y + encoded2;\n    return result;\n}\n/**\n * Decodes three unit-length vectors in 'oct' encoding packed into a floating-point number to a normalized 3-component vector.\n *\n * @param packed The three oct-encoded unit length vectors stored as two floating-point number.\n * @param v1 One decoded and normalized vector.\n * @param v2 One decoded and normalized vector.\n * @param v3 One decoded and normalized vector.\n */\nexport function octUnpack(packed, v1, v2, v3) {\n    let temp = packed.x / 65536.0;\n    const x = Math.floor(temp);\n    const encodedFloat1 = (temp - x) * 65536.0;\n    temp = packed.y / 65536.0;\n    const y = Math.floor(temp);\n    const encodedFloat2 = (temp - y) * 65536.0;\n    octDecodeFloat(encodedFloat1, v1);\n    octDecodeFloat(encodedFloat2, v2);\n    octDecode(x, y, v3);\n}\n/**\n * Pack texture coordinates into a single float. The texture coordinates will only preserve 12 bits of precision.\n *\n * @param textureCoordinates The texture coordinates to compress.  Both coordinates must be in the range 0.0-1.0.\n * @returns The packed texture coordinates.\n *\n */\nexport function compressTextureCoordinates(textureCoordinates) {\n    // Move x and y to the range 0-4095;\n    const x = (textureCoordinates.x * 4095.0) | 0;\n    const y = (textureCoordinates.y * 4095.0) | 0;\n    return 4096.0 * x + y;\n}\n/**\n * Decompresses texture coordinates that were packed into a single float.\n *\n * @param compressed The compressed texture coordinates.\n * @param result The decompressed texture coordinates.\n * @returns The modified result parameter.\n *\n */\nexport function decompressTextureCoordinates(compressed, result) {\n    const temp = compressed / 4096.0;\n    const xZeroTo4095 = Math.floor(temp);\n    result.x = xZeroTo4095 / 4095.0;\n    result.y = (compressed - xZeroTo4095 * 4096) / 4095;\n    return result;\n}\n/**\n * Decodes delta and ZigZag encoded vertices. This modifies the buffers in place.\n *\n * @param uBuffer The buffer view of u values.\n * @param vBuffer The buffer view of v values.\n * @param [heightBuffer] The buffer view of height values.\n *\n * @link https://github.com/AnalyticalGraphicsInc/quantized-mesh|quantized-mesh-1.0 terrain format\n */\nexport function zigZagDeltaDecode(uBuffer, vBuffer, heightBuffer) {\n    assert(uBuffer);\n    assert(vBuffer);\n    assert(uBuffer.length === vBuffer.length);\n    if (heightBuffer) {\n        assert(uBuffer.length === heightBuffer.length);\n    }\n    function zigZagDecode(value) {\n        return (value >> 1) ^ -(value & 1);\n    }\n    let u = 0;\n    let v = 0;\n    let height = 0;\n    for (let i = 0; i < uBuffer.length; ++i) {\n        u += zigZagDecode(uBuffer[i]);\n        v += zigZagDecode(vBuffer[i]);\n        uBuffer[i] = u;\n        vBuffer[i] = v;\n        if (heightBuffer) {\n            height += zigZagDecode(heightBuffer[i]);\n            heightBuffer[i] = height;\n        }\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT AND Apache-2.0\n// Copyright vis.gl contributors\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { GL, GLType } from '@loaders.gl/math';\n// Reference:\n// https://github.com/AnalyticalGraphicsInc/cesium/blob/1de96d087f0b17575eb1a3f736407b348c765d59/Source/Scene/Cesium3DTileFeatureTable.js\nexport default class Tile3DFeatureTable {\n    json;\n    buffer;\n    featuresLength = 0;\n    _cachedTypedArrays = {};\n    constructor(featureTableJson, featureTableBinary) {\n        this.json = featureTableJson;\n        this.buffer = featureTableBinary;\n    }\n    getExtension(extensionName) {\n        return this.json.extensions && this.json.extensions[extensionName];\n    }\n    hasProperty(propertyName) {\n        return Boolean(this.json[propertyName]);\n    }\n    getGlobalProperty(propertyName, componentType = GL.UNSIGNED_INT, componentLength = 1) {\n        const jsonValue = this.json[propertyName];\n        if (jsonValue && Number.isFinite(jsonValue.byteOffset)) {\n            return this._getTypedArrayFromBinary(propertyName, componentType, componentLength, 1, jsonValue.byteOffset);\n        }\n        return jsonValue;\n    }\n    getPropertyArray(propertyName, componentType, componentLength) {\n        const jsonValue = this.json[propertyName];\n        if (jsonValue && Number.isFinite(jsonValue.byteOffset)) {\n            if ('componentType' in jsonValue) {\n                componentType = GLType.fromName(jsonValue.componentType);\n            }\n            return this._getTypedArrayFromBinary(propertyName, componentType, componentLength, this.featuresLength, jsonValue.byteOffset);\n        }\n        return this._getTypedArrayFromArray(propertyName, componentType, jsonValue);\n    }\n    getProperty(propertyName, componentType, componentLength, featureId, result) {\n        const jsonValue = this.json[propertyName];\n        if (!jsonValue) {\n            return jsonValue;\n        }\n        const typedArray = this.getPropertyArray(propertyName, componentType, componentLength);\n        if (componentLength === 1) {\n            return typedArray[featureId];\n        }\n        for (let i = 0; i < componentLength; ++i) {\n            result[i] = typedArray[componentLength * featureId + i];\n        }\n        return result;\n    }\n    // HELPERS\n    _getTypedArrayFromBinary(propertyName, componentType, componentLength, count, byteOffset) {\n        const cachedTypedArrays = this._cachedTypedArrays;\n        let typedArray = cachedTypedArrays[propertyName];\n        if (!typedArray) {\n            typedArray = GLType.createTypedArray(componentType, this.buffer.buffer, this.buffer.byteOffset + byteOffset, count * componentLength);\n            cachedTypedArrays[propertyName] = typedArray;\n        }\n        return typedArray;\n    }\n    _getTypedArrayFromArray(propertyName, componentType, array) {\n        const cachedTypedArrays = this._cachedTypedArrays;\n        let typedArray = cachedTypedArrays[propertyName];\n        if (!typedArray) {\n            typedArray = GLType.createTypedArray(componentType, array);\n            cachedTypedArrays[propertyName] = typedArray;\n        }\n        return typedArray;\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { GLType } from '@loaders.gl/math'; // '@math.gl/geometry';\nimport { assert } from '@loaders.gl/loader-utils';\nconst COMPONENTS_PER_ATTRIBUTE = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16\n};\n// TODO - could just return typed array views...\n// prettier-ignore\nconst UNPACKER = {\n    SCALAR: (values, i) => values[i],\n    VEC2: (values, i) => [values[2 * i + 0], values[2 * i + 1]],\n    VEC3: (values, i) => [values[3 * i + 0], values[3 * i + 1], values[3 * i + 2]],\n    VEC4: (values, i) => [values[4 * i + 0], values[4 * i + 1], values[4 * i + 2], values[4 * i + 3]],\n    // TODO: check column major\n    MAT2: (values, i) => [\n        values[4 * i + 0], values[4 * i + 1],\n        values[4 * i + 2], values[4 * i + 3]\n    ],\n    MAT3: (values, i) => [\n        values[9 * i + 0], values[9 * i + 1], values[9 * i + 2],\n        values[9 * i + 3], values[9 * i + 4], values[9 * i + 5],\n        values[9 * i + 6], values[9 * i + 7], values[9 * i + 8]\n    ],\n    MAT4: (values, i) => [\n        values[16 * i + 0], values[16 * i + 1], values[16 * i + 2], values[16 * i + 3],\n        values[16 * i + 4], values[16 * i + 5], values[16 * i + 6], values[16 * i + 7],\n        values[16 * i + 8], values[16 * i + 9], values[16 * i + 10], values[16 * i + 11],\n        values[16 * i + 12], values[16 * i + 13], values[16 * i + 14], values[16 * i + 15]\n    ]\n};\nconst PACKER = {\n    SCALAR: (x, values, i) => {\n        values[i] = x;\n    },\n    VEC2: (x, values, i) => {\n        values[2 * i + 0] = x[0];\n        values[2 * i + 1] = x[1];\n    },\n    VEC3: (x, values, i) => {\n        values[3 * i + 0] = x[0];\n        values[3 * i + 1] = x[1];\n        values[3 * i + 2] = x[2];\n    },\n    VEC4: (x, values, i) => {\n        values[4 * i + 0] = x[0];\n        values[4 * i + 1] = x[1];\n        values[4 * i + 2] = x[2];\n        values[4 * i + 3] = x[3];\n    },\n    // TODO: check column major correctness\n    MAT2: (x, values, i) => {\n        values[4 * i + 0] = x[0];\n        values[4 * i + 1] = x[1];\n        values[4 * i + 2] = x[2];\n        values[4 * i + 3] = x[3];\n    },\n    MAT3: (x, values, i) => {\n        values[9 * i + 0] = x[0];\n        values[9 * i + 1] = x[1];\n        values[9 * i + 2] = x[2];\n        values[9 * i + 3] = x[3];\n        values[9 * i + 4] = x[4];\n        values[9 * i + 5] = x[5];\n        values[9 * i + 6] = x[6];\n        values[9 * i + 7] = x[7];\n        values[9 * i + 8] = x[8];\n        values[9 * i + 9] = x[9];\n    },\n    MAT4: (x, values, i) => {\n        values[16 * i + 0] = x[0];\n        values[16 * i + 1] = x[1];\n        values[16 * i + 2] = x[2];\n        values[16 * i + 3] = x[3];\n        values[16 * i + 4] = x[4];\n        values[16 * i + 5] = x[5];\n        values[16 * i + 6] = x[6];\n        values[16 * i + 7] = x[7];\n        values[16 * i + 8] = x[8];\n        values[16 * i + 9] = x[9];\n        values[16 * i + 10] = x[10];\n        values[16 * i + 11] = x[11];\n        values[16 * i + 12] = x[12];\n        values[16 * i + 13] = x[13];\n        values[16 * i + 14] = x[14];\n        values[16 * i + 15] = x[15];\n    }\n};\nexport function createTypedArrayFromAccessor(tile3DAccessor, buffer, byteOffset, length) {\n    const { componentType } = tile3DAccessor;\n    assert(tile3DAccessor.componentType);\n    const type = typeof componentType === 'string' ? GLType.fromName(componentType) : componentType;\n    const size = COMPONENTS_PER_ATTRIBUTE[tile3DAccessor.type];\n    const unpacker = UNPACKER[tile3DAccessor.type];\n    const packer = PACKER[tile3DAccessor.type];\n    byteOffset += tile3DAccessor.byteOffset;\n    const values = GLType.createTypedArray(type, buffer, byteOffset, size * length);\n    return {\n        values,\n        type,\n        size,\n        unpacker,\n        packer\n    };\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT AND Apache-2.0\n// Copyright vis.gl contributors\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n// TODO - Finish hierarchy suypport: this file is only half ported\n/* eslint-disable */\n// @ts-nocheck\nconst defined = (x) => x !== undefined;\nexport function initializeHierarchy(batchTable, jsonHeader, binaryBody) {\n    if (!jsonHeader) {\n        return null;\n    }\n    let hierarchy = batchTable.getExtension('3DTILES_batch_table_hierarchy');\n    const legacyHierarchy = jsonHeader.HIERARCHY;\n    if (legacyHierarchy) {\n        // eslint-disable-next-line\n        console.warn('3D Tile Parser: HIERARCHY is deprecated. Use 3DTILES_batch_table_hierarchy.');\n        jsonHeader.extensions = jsonHeader.extensions || {};\n        jsonHeader.extensions['3DTILES_batch_table_hierarchy'] = legacyHierarchy;\n        hierarchy = legacyHierarchy;\n    }\n    if (!hierarchy) {\n        return null;\n    }\n    return initializeHierarchyValues(hierarchy, binaryBody);\n}\n// eslint-disable-next-line max-statements\nfunction initializeHierarchyValues(hierarchyJson, binaryBody) {\n    let i;\n    let classId;\n    let binaryAccessor;\n    const instancesLength = hierarchyJson.instancesLength;\n    const classes = hierarchyJson.classes;\n    let classIds = hierarchyJson.classIds;\n    let parentCounts = hierarchyJson.parentCounts;\n    let parentIds = hierarchyJson.parentIds;\n    let parentIdsLength = instancesLength;\n    if (defined(classIds.byteOffset)) {\n        classIds.componentType = defaultValue(classIds.componentType, GL.UNSIGNED_SHORT);\n        classIds.type = AttributeType.SCALAR;\n        binaryAccessor = getBinaryAccessor(classIds);\n        classIds = binaryAccessor.createArrayBufferView(binaryBody.buffer, binaryBody.byteOffset + classIds.byteOffset, instancesLength);\n    }\n    let parentIndexes;\n    if (defined(parentCounts)) {\n        if (defined(parentCounts.byteOffset)) {\n            parentCounts.componentType = defaultValue(parentCounts.componentType, GL.UNSIGNED_SHORT);\n            parentCounts.type = AttributeType.SCALAR;\n            binaryAccessor = getBinaryAccessor(parentCounts);\n            parentCounts = binaryAccessor.createArrayBufferView(binaryBody.buffer, binaryBody.byteOffset + parentCounts.byteOffset, instancesLength);\n        }\n        parentIndexes = new Uint16Array(instancesLength);\n        parentIdsLength = 0;\n        for (i = 0; i < instancesLength; ++i) {\n            parentIndexes[i] = parentIdsLength;\n            parentIdsLength += parentCounts[i];\n        }\n    }\n    if (defined(parentIds) && defined(parentIds.byteOffset)) {\n        parentIds.componentType = defaultValue(parentIds.componentType, GL.UNSIGNED_SHORT);\n        parentIds.type = AttributeType.SCALAR;\n        binaryAccessor = getBinaryAccessor(parentIds);\n        parentIds = binaryAccessor.createArrayBufferView(binaryBody.buffer, binaryBody.byteOffset + parentIds.byteOffset, parentIdsLength);\n    }\n    const classesLength = classes.length;\n    for (i = 0; i < classesLength; ++i) {\n        const classInstancesLength = classes[i].length;\n        const properties = classes[i].instances;\n        const binaryProperties = getBinaryProperties(classInstancesLength, properties, binaryBody);\n        classes[i].instances = combine(binaryProperties, properties);\n    }\n    const classCounts = new Array(classesLength).fill(0);\n    const classIndexes = new Uint16Array(instancesLength);\n    for (i = 0; i < instancesLength; ++i) {\n        classId = classIds[i];\n        classIndexes[i] = classCounts[classId];\n        ++classCounts[classId];\n    }\n    const hierarchy = {\n        classes,\n        classIds,\n        classIndexes,\n        parentCounts,\n        parentIndexes,\n        parentIds\n    };\n    validateHierarchy(hierarchy);\n    return hierarchy;\n}\n// HELPER CODE\n// Traverse over the hierarchy and process each instance with the endConditionCallback.\n// When the endConditionCallback returns a value, the traversal stops and that value is returned.\nexport function traverseHierarchy(hierarchy, instanceIndex, endConditionCallback) {\n    if (!hierarchy) {\n        return;\n    }\n    const parentCounts = hierarchy.parentCounts;\n    const parentIds = hierarchy.parentIds;\n    if (parentIds) {\n        return endConditionCallback(hierarchy, instanceIndex);\n    }\n    if (parentCounts > 0) {\n        return traverseHierarchyMultipleParents(hierarchy, instanceIndex, endConditionCallback);\n    }\n    return traverseHierarchySingleParent(hierarchy, instanceIndex, endConditionCallback);\n}\n// eslint-disable-next-line max-statements\nfunction traverseHierarchyMultipleParents(hierarchy, instanceIndex, endConditionCallback) {\n    const classIds = hierarchy.classIds;\n    const parentCounts = hierarchy.parentCounts;\n    const parentIds = hierarchy.parentIds;\n    const parentIndexes = hierarchy.parentIndexes;\n    const instancesLength = classIds.length;\n    // Ignore instances that have already been visited. This occurs in diamond inheritance situations.\n    // Use a marker value to indicate that an instance has been visited, which increments with each run.\n    // This is more efficient than clearing the visited array every time.\n    const visited = scratchVisited;\n    visited.length = Math.max(visited.length, instancesLength);\n    const visitedMarker = ++marker;\n    const stack = scratchStack;\n    stack.length = 0;\n    stack.push(instanceIndex);\n    while (stack.length > 0) {\n        instanceIndex = stack.pop();\n        if (visited[instanceIndex] === visitedMarker) {\n            // This instance has already been visited, stop traversal\n            continue;\n        }\n        visited[instanceIndex] = visitedMarker;\n        const result = endConditionCallback(hierarchy, instanceIndex);\n        if (defined(result)) {\n            // The end condition was met, stop the traversal and return the result\n            return result;\n        }\n        const parentCount = parentCounts[instanceIndex];\n        const parentIndex = parentIndexes[instanceIndex];\n        for (let i = 0; i < parentCount; ++i) {\n            const parentId = parentIds[parentIndex + i];\n            // Stop the traversal when the instance has no parent (its parentId equals itself)\n            // else add the parent to the stack to continue the traversal.\n            if (parentId !== instanceIndex) {\n                stack.push(parentId);\n            }\n        }\n    }\n    return null;\n}\nfunction traverseHierarchySingleParent(hierarchy, instanceIndex, endConditionCallback) {\n    let hasParent = true;\n    while (hasParent) {\n        const result = endConditionCallback(hierarchy, instanceIndex);\n        if (defined(result)) {\n            // The end condition was met, stop the traversal and return the result\n            return result;\n        }\n        const parentId = hierarchy.parentIds[instanceIndex];\n        hasParent = parentId !== instanceIndex;\n        instanceIndex = parentId;\n    }\n    throw new Error('traverseHierarchySingleParent');\n}\n// DEBUG CODE\nfunction validateHierarchy(hierarchy) {\n    const scratchValidateStack = [];\n    const classIds = hierarchy.classIds;\n    const instancesLength = classIds.length;\n    for (let i = 0; i < instancesLength; ++i) {\n        validateInstance(hierarchy, i, stack);\n    }\n}\nfunction validateInstance(hierarchy, instanceIndex, stack) {\n    const parentCounts = hierarchy.parentCounts;\n    const parentIds = hierarchy.parentIds;\n    const parentIndexes = hierarchy.parentIndexes;\n    const classIds = hierarchy.classIds;\n    const instancesLength = classIds.length;\n    if (!defined(parentIds)) {\n        // No need to validate if there are no parents\n        return;\n    }\n    assert(instanceIndex < instancesLength, `Parent index ${instanceIndex} exceeds the total number of instances: ${instancesLength}`);\n    assert(stack.indexOf(instanceIndex) === -1, 'Circular dependency detected in the batch table hierarchy.');\n    stack.push(instanceIndex);\n    const parentCount = defined(parentCounts) ? parentCounts[instanceIndex] : 1;\n    const parentIndex = defined(parentCounts) ? parentIndexes[instanceIndex] : instanceIndex;\n    for (let i = 0; i < parentCount; ++i) {\n        const parentId = parentIds[parentIndex + i];\n        // Stop the traversal when the instance has no parent (its parentId equals itself), else continue the traversal.\n        if (parentId !== instanceIndex) {\n            validateInstance(hierarchy, parentId, stack);\n        }\n    }\n    stack.pop(instanceIndex);\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT AND Apache-2.0\n// Copyright vis.gl contributors\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { assert } from '@loaders.gl/loader-utils';\nimport { createTypedArrayFromAccessor } from \"./helpers/tile-3d-accessor-utils.js\";\nimport { initializeHierarchy, traverseHierarchy } from \"./tile-3d-batch-table-hierarchy.js\";\nfunction defined(x) {\n    return x !== undefined && x !== null;\n}\nconst clone = (x, y) => x;\n// These top level fields in the batch table json are not properties\nconst IGNORED_PROPERTY_FIELDS = {\n    HIERARCHY: true, // Deprecated HIERARCHY property\n    extensions: true,\n    extras: true\n};\n// The size of this array equals the maximum instance count among all loaded tiles, which has the potential to be large.\nexport default class Tile3DBatchTableParser {\n    json;\n    binary;\n    featureCount;\n    _extensions;\n    // Copy all top-level property fields from the json object, ignoring special fields\n    _properties;\n    _binaryProperties;\n    // TODO: hierarchy support is only partially implemented and not tested\n    _hierarchy;\n    constructor(json, binary, featureCount, options = {}) {\n        assert(featureCount >= 0);\n        this.json = json || {};\n        this.binary = binary;\n        this.featureCount = featureCount;\n        this._extensions = this.json?.extensions || {};\n        // Copy all top-level property fields from the json object, ignoring special fields\n        this._properties = {};\n        for (const propertyName in this.json) {\n            if (!IGNORED_PROPERTY_FIELDS[propertyName]) {\n                this._properties[propertyName] = this.json[propertyName];\n            }\n        }\n        this._binaryProperties = this._initializeBinaryProperties();\n        // TODO: hierarchy support is only partially implemented and not tested\n        if (options['3DTILES_batch_table_hierarchy']) {\n            this._hierarchy = initializeHierarchy(this, this.json, this.binary);\n        }\n    }\n    getExtension(extensionName) {\n        return this.json && this.json.extensions && this.json.extensions[extensionName];\n    }\n    memorySizeInBytes() {\n        return 0;\n    }\n    isClass(batchId, className) {\n        this._checkBatchId(batchId);\n        assert(typeof className === 'string', className);\n        // extension: 3DTILES_batch_table_hierarchy\n        if (this._hierarchy) {\n            // PERFORMANCE_IDEA : cache results in the ancestor classes\n            //   to speed up this check if this area becomes a hotspot\n            // PERFORMANCE_IDEA : treat class names as integers for faster comparisons\n            const result = traverseHierarchy(this._hierarchy, batchId, (hierarchy, instanceIndex) => {\n                const classId = hierarchy.classIds[instanceIndex];\n                const instanceClass = hierarchy.classes[classId];\n                return instanceClass.name === className;\n            });\n            return defined(result);\n        }\n        return false;\n    }\n    isExactClass(batchId, className) {\n        assert(typeof className === 'string', className);\n        return this.getExactClassName(batchId) === className;\n    }\n    getExactClassName(batchId) {\n        this._checkBatchId(batchId);\n        // extension: 3DTILES_batch_table_hierarchy\n        if (this._hierarchy) {\n            const classId = this._hierarchy.classIds[batchId];\n            const instanceClass = this._hierarchy.classes[classId];\n            return instanceClass.name;\n        }\n        return undefined;\n    }\n    hasProperty(batchId, name) {\n        this._checkBatchId(batchId);\n        assert(typeof name === 'string', name);\n        return defined(this._properties[name]) || this._hasPropertyInHierarchy(batchId, name);\n    }\n    getPropertyNames(batchId, results) {\n        this._checkBatchId(batchId);\n        results = defined(results) ? results : [];\n        results.length = 0;\n        const propertyNames = Object.keys(this._properties);\n        results.push(...propertyNames);\n        if (this._hierarchy) {\n            this._getPropertyNamesInHierarchy(batchId, results);\n        }\n        return results;\n    }\n    getProperty(batchId, name) {\n        this._checkBatchId(batchId);\n        assert(typeof name === 'string', name);\n        if (this._binaryProperties) {\n            const binaryProperty = this._binaryProperties[name];\n            if (defined(binaryProperty)) {\n                return this._getBinaryProperty(binaryProperty, batchId);\n            }\n        }\n        const propertyValues = this._properties[name];\n        if (defined(propertyValues)) {\n            return clone(propertyValues[batchId], true);\n        }\n        // EXTENSION: 3DTILES_batch_table_hierarchy\n        if (this._hierarchy) {\n            const hierarchyProperty = this._getHierarchyProperty(batchId, name);\n            if (defined(hierarchyProperty)) {\n                return hierarchyProperty;\n            }\n        }\n        return undefined;\n    }\n    setProperty(batchId, name, value) {\n        const featureCount = this.featureCount;\n        this._checkBatchId(batchId);\n        assert(typeof name === 'string', name);\n        if (this._binaryProperties) {\n            const binaryProperty = this._binaryProperties[name];\n            if (binaryProperty) {\n                this._setBinaryProperty(binaryProperty, batchId, value);\n                return;\n            }\n        }\n        // EXTENSION: 3DTILES_batch_table_hierarchy\n        if (this._hierarchy) {\n            if (this._setHierarchyProperty(this, batchId, name, value)) {\n                return;\n            }\n        }\n        let propertyValues = this._properties[name];\n        if (!defined(propertyValues)) {\n            // Property does not exist. Create it.\n            this._properties[name] = new Array(featureCount);\n            propertyValues = this._properties[name];\n        }\n        propertyValues[batchId] = clone(value, true);\n    }\n    // PRIVATE METHODS\n    _checkBatchId(batchId) {\n        const valid = batchId >= 0 && batchId < this.featureCount;\n        if (!valid) {\n            throw new Error('batchId not in range [0, featureCount - 1].');\n        }\n    }\n    _getBinaryProperty(binaryProperty, index) {\n        return binaryProperty.unpack(binaryProperty.typedArray, index);\n    }\n    _setBinaryProperty(binaryProperty, index, value) {\n        binaryProperty.pack(value, binaryProperty.typedArray, index);\n    }\n    _initializeBinaryProperties() {\n        let binaryProperties = null;\n        for (const name in this._properties) {\n            const property = this._properties[name];\n            const binaryProperty = this._initializeBinaryProperty(name, property);\n            // Store any information needed to access the binary data, including the typed array,\n            // componentCount (e.g. a VEC4 would be 4), and the type used to pack and unpack (e.g. Cartesian4).\n            if (binaryProperty) {\n                binaryProperties = binaryProperties || {};\n                binaryProperties[name] = binaryProperty;\n            }\n        }\n        return binaryProperties;\n    }\n    _initializeBinaryProperty(name, property) {\n        if ('byteOffset' in property) {\n            // This is a binary property\n            const tile3DAccessor = property;\n            assert(this.binary, `Property ${name} requires a batch table binary.`);\n            assert(tile3DAccessor.type, `Property ${name} requires a type.`);\n            const accessor = createTypedArrayFromAccessor(tile3DAccessor, this.binary.buffer, this.binary.byteOffset | 0, this.featureCount);\n            // Store any information needed to access the binary data, including the typed array,\n            // componentCount (e.g. a VEC4 would be 4), and the type used to pack and unpack (e.g. Cartesian4).\n            return {\n                typedArray: accessor.values,\n                componentCount: accessor.size,\n                unpack: accessor.unpacker,\n                pack: accessor.packer\n            };\n        }\n        return null;\n    }\n    //  EXTENSION SUPPORT: 3DTILES_batch_table_hierarchy\n    _hasPropertyInHierarchy(batchId, name) {\n        if (!this._hierarchy) {\n            return false;\n        }\n        const result = traverseHierarchy(this._hierarchy, batchId, (hierarchy, instanceIndex) => {\n            const classId = hierarchy.classIds[instanceIndex];\n            const instances = hierarchy.classes[classId].instances;\n            return defined(instances[name]);\n        });\n        return defined(result);\n    }\n    _getPropertyNamesInHierarchy(batchId, results) {\n        traverseHierarchy(this._hierarchy, batchId, (hierarchy, instanceIndex) => {\n            const classId = hierarchy.classIds[instanceIndex];\n            const instances = hierarchy.classes[classId].instances;\n            for (const name in instances) {\n                if (instances.hasOwnProperty(name)) {\n                    if (results.indexOf(name) === -1) {\n                        results.push(name);\n                    }\n                }\n            }\n        });\n    }\n    _getHierarchyProperty(batchId, name) {\n        return traverseHierarchy(this._hierarchy, batchId, (hierarchy, instanceIndex) => {\n            const classId = hierarchy.classIds[instanceIndex];\n            const instanceClass = hierarchy.classes[classId];\n            const indexInClass = hierarchy.classIndexes[instanceIndex];\n            const propertyValues = instanceClass.instances[name];\n            if (defined(propertyValues)) {\n                if (defined(propertyValues.typedArray)) {\n                    return this._getBinaryProperty(propertyValues, indexInClass);\n                }\n                return clone(propertyValues[indexInClass], true);\n            }\n            return null;\n        });\n    }\n    _setHierarchyProperty(batchTable, batchId, name, value) {\n        const result = traverseHierarchy(this._hierarchy, batchId, (hierarchy, instanceIndex) => {\n            const classId = hierarchy.classIds[instanceIndex];\n            const instanceClass = hierarchy.classes[classId];\n            const indexInClass = hierarchy.classIndexes[instanceIndex];\n            const propertyValues = instanceClass.instances[name];\n            if (defined(propertyValues)) {\n                assert(instanceIndex === batchId, `Inherited property \"${name}\" is read-only.`);\n                if (defined(propertyValues.typedArray)) {\n                    this._setBinaryProperty(propertyValues, indexInClass, value);\n                }\n                else {\n                    propertyValues[indexInClass] = clone(value, true);\n                }\n                return true;\n            }\n            return false;\n        });\n        return defined(result);\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT AND Apache-2.0\n// Copyright vis.gl contributors\nconst SIZEOF_UINT32 = 4;\n/* PARSE FIXED HEADER:\nPopulates\n  magic, // identifies type of tile\n  type, // String version of magic\n  version,\n  byteLength\n */\nexport function parse3DTileHeaderSync(tile, arrayBuffer, byteOffset = 0) {\n    const view = new DataView(arrayBuffer);\n    tile.magic = view.getUint32(byteOffset, true);\n    byteOffset += SIZEOF_UINT32;\n    tile.version = view.getUint32(byteOffset, true);\n    byteOffset += SIZEOF_UINT32;\n    tile.byteLength = view.getUint32(byteOffset, true);\n    byteOffset += SIZEOF_UINT32;\n    // TODO - move version check into each tile parser?\n    if (tile.version !== 1) {\n        throw new Error(`3D Tile Version ${tile.version} not supported`);\n    }\n    return byteOffset; // Indicates where the parsing ended\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT AND Apache-2.0\n// Copyright vis.gl contributors\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { getStringFromArrayBuffer } from \"./parse-utils.js\";\nconst SIZEOF_UINT32 = 4;\nconst DEPRECATION_WARNING = 'b3dm tile in legacy format.';\n// eslint-disable-next-line max-statements\nexport function parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset) {\n    const view = new DataView(arrayBuffer);\n    let batchLength;\n    tile.header = tile.header || {};\n    let featureTableJsonByteLength = view.getUint32(byteOffset, true);\n    byteOffset += SIZEOF_UINT32;\n    let featureTableBinaryByteLength = view.getUint32(byteOffset, true);\n    byteOffset += SIZEOF_UINT32;\n    let batchTableJsonByteLength = view.getUint32(byteOffset, true);\n    byteOffset += SIZEOF_UINT32;\n    let batchTableBinaryByteLength = view.getUint32(byteOffset, true);\n    byteOffset += SIZEOF_UINT32;\n    // First legacy header format - [batchLength] [batchTableByteLength] ('batchTableJsonByteLength': JSON starts with a quotation mark or the glTF magic)\n    // Second legacy format - [batchTableJsonByteLength] [batchTableBinaryByteLength] [batchLength] (Second legacy format is similar as first but here we check 'batchTableBinaryByteLength' instead)\n    // Current header format - [featureTableJsonByteLength] [featureTableBinaryByteLength] [batchTableJsonByteLength] [batchTableBinaryByteLength]\n    // First byte will be 0x22 or 0x67. The minimum uint32 expected is 0x22000000 = 570425344 = 570MB.\n    if (batchTableJsonByteLength >= 570425344) {\n        byteOffset -= SIZEOF_UINT32 * 2;\n        batchLength = featureTableJsonByteLength;\n        batchTableJsonByteLength = featureTableBinaryByteLength;\n        batchTableBinaryByteLength = 0;\n        featureTableJsonByteLength = 0;\n        featureTableBinaryByteLength = 0;\n        console.warn(DEPRECATION_WARNING); // eslint-disable-line\n    }\n    else if (batchTableBinaryByteLength >= 570425344) {\n        byteOffset -= SIZEOF_UINT32;\n        batchLength = batchTableJsonByteLength;\n        batchTableJsonByteLength = featureTableJsonByteLength;\n        batchTableBinaryByteLength = featureTableBinaryByteLength;\n        featureTableJsonByteLength = 0;\n        featureTableBinaryByteLength = 0;\n        console.warn(DEPRECATION_WARNING); // eslint-disable-line\n    }\n    tile.header.featureTableJsonByteLength = featureTableJsonByteLength;\n    tile.header.featureTableBinaryByteLength = featureTableBinaryByteLength;\n    tile.header.batchTableJsonByteLength = batchTableJsonByteLength;\n    tile.header.batchTableBinaryByteLength = batchTableBinaryByteLength;\n    tile.header.batchLength = batchLength;\n    return byteOffset;\n}\nexport function parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options) {\n    byteOffset = parse3DTileFeatureTable(tile, arrayBuffer, byteOffset, options);\n    byteOffset = parse3DTileBatchTable(tile, arrayBuffer, byteOffset, options);\n    return byteOffset;\n}\nfunction parse3DTileFeatureTable(tile, arrayBuffer, byteOffset, options) {\n    const { featureTableJsonByteLength, featureTableBinaryByteLength, batchLength } = tile.header || {};\n    tile.featureTableJson = {\n        BATCH_LENGTH: batchLength || 0\n    };\n    if (featureTableJsonByteLength && featureTableJsonByteLength > 0) {\n        const featureTableString = getStringFromArrayBuffer(arrayBuffer, byteOffset, featureTableJsonByteLength);\n        tile.featureTableJson = JSON.parse(featureTableString);\n    }\n    byteOffset += featureTableJsonByteLength || 0;\n    tile.featureTableBinary = new Uint8Array(arrayBuffer, byteOffset, featureTableBinaryByteLength);\n    byteOffset += featureTableBinaryByteLength || 0;\n    /*\n    const featureTable = parseFeatureTable(featureTableJson, featureTableBinary);\n  \n    const batchLength = featureTable.getGlobalProperty('BATCH_LENGTH');\n    featureTable.featuresLength = batchLength;\n    */\n    return byteOffset;\n}\nfunction parse3DTileBatchTable(tile, arrayBuffer, byteOffset, options) {\n    const { batchTableJsonByteLength, batchTableBinaryByteLength } = tile.header || {};\n    if (batchTableJsonByteLength && batchTableJsonByteLength > 0) {\n        const batchTableString = getStringFromArrayBuffer(arrayBuffer, byteOffset, batchTableJsonByteLength);\n        tile.batchTableJson = JSON.parse(batchTableString);\n        byteOffset += batchTableJsonByteLength;\n        if (batchTableBinaryByteLength && batchTableBinaryByteLength > 0) {\n            // Has a batch table binary\n            tile.batchTableBinary = new Uint8Array(arrayBuffer, byteOffset, batchTableBinaryByteLength);\n            // Copy the batchTableBinary section and let the underlying ArrayBuffer be freed\n            tile.batchTableBinary = new Uint8Array(tile.batchTableBinary);\n            byteOffset += batchTableBinaryByteLength;\n        }\n    }\n    return byteOffset;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { decodeRGB565, GL } from '@loaders.gl/math';\n/* eslint-disable complexity*/\nexport function normalize3DTileColorAttribute(tile, colors, batchTable) {\n    // no colors defined\n    if (!colors && (!tile || !tile.batchIds || !batchTable)) {\n        return null;\n    }\n    const { batchIds, isRGB565, pointCount = 0 } = tile;\n    // Batch table, look up colors in table\n    if (batchIds && batchTable) {\n        const colorArray = new Uint8ClampedArray(pointCount * 3);\n        for (let i = 0; i < pointCount; i++) {\n            const batchId = batchIds[i];\n            // TODO figure out what is `dimensions` used for\n            const dimensions = batchTable.getProperty(batchId, 'dimensions');\n            const color = dimensions.map((d) => d * 255);\n            colorArray[i * 3] = color[0];\n            colorArray[i * 3 + 1] = color[1];\n            colorArray[i * 3 + 2] = color[2];\n        }\n        return {\n            type: GL.UNSIGNED_BYTE,\n            value: colorArray,\n            size: 3,\n            normalized: true\n        };\n    }\n    // RGB565 case, convert to RGB\n    if (colors && isRGB565) {\n        const colorArray = new Uint8ClampedArray(pointCount * 3);\n        for (let i = 0; i < pointCount; i++) {\n            const color = decodeRGB565(colors[i]);\n            colorArray[i * 3] = color[0];\n            colorArray[i * 3 + 1] = color[1];\n            colorArray[i * 3 + 2] = color[2];\n        }\n        return {\n            type: GL.UNSIGNED_BYTE,\n            value: colorArray,\n            size: 3,\n            normalized: true\n        };\n    }\n    // RGB case (tile.isTranslucent)\n    if (colors && colors.length === pointCount * 3) {\n        return {\n            type: GL.UNSIGNED_BYTE,\n            value: colors,\n            size: 3,\n            normalized: true\n        };\n    }\n    // DEFAULT: RGBA case\n    return {\n        type: GL.UNSIGNED_BYTE,\n        value: colors || new Uint8ClampedArray(),\n        size: 4,\n        normalized: true\n    };\n}\n/* eslint-enable complexity*/\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { Vector3 } from '@math.gl/core';\nimport { GL, octDecode } from '@loaders.gl/math';\nconst scratchNormal = new Vector3();\nexport function normalize3DTileNormalAttribute(tile, normals) {\n    if (!normals) {\n        return null;\n    }\n    if (tile.isOctEncoded16P) {\n        const decodedArray = new Float32Array((tile.pointsLength || 0) * 3);\n        for (let i = 0; i < (tile.pointsLength || 0); i++) {\n            octDecode(normals[i * 2], normals[i * 2 + 1], scratchNormal);\n            // @ts-ignore\n            scratchNormal.toArray(decodedArray, i * 3);\n        }\n        return {\n            type: GL.FLOAT,\n            size: 2,\n            value: decodedArray\n        };\n    }\n    return {\n        type: GL.FLOAT,\n        size: 2,\n        value: normals\n    };\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { Vector3 } from '@math.gl/core';\nimport { GL } from '@loaders.gl/math';\n// Prepare attribute for positions\nexport function normalize3DTilePositionAttribute(tile, positions, options) {\n    if (!tile.isQuantized) {\n        return positions;\n    }\n    // For quantized posititions, either expand to Float32Array or return custom accessor\n    // https://github.com/AnalyticalGraphicsInc/3d-tiles/blob/master/specification/TileFormats/Instanced3DModel/README.md#quantized-positions\n    // Optionally decodes quantized positions on GPU, for simpler renderers that don't accept normalized attributes\n    if (options['3d-tiles'] && options['3d-tiles'].decodeQuantizedPositions) {\n        tile.isQuantized = false;\n        return decodeQuantizedPositions(tile, positions);\n    }\n    // Default: Use normalized shorts directly, no copying/processing.\n    // NOTE: The \"missing\" offset/scaling operations are automatically added to modelMatrix if `tile.isQuantized === true`\n    return {\n        type: GL.UNSIGNED_SHORT,\n        value: positions,\n        size: 3,\n        normalized: true\n    };\n}\n// Pre-scale quantized positions on CPU\nfunction decodeQuantizedPositions(tile, positions) {\n    const scratchPosition = new Vector3();\n    const decodedArray = new Float32Array(tile.pointCount * 3);\n    for (let i = 0; i < tile.pointCount; i++) {\n        // POSITION = POSITION_QUANTIZED / 65535.0 * QUANTIZED_VOLUME_SCALE + QUANTIZED_VOLUME_OFFSET\n        scratchPosition\n            .set(positions[i * 3], positions[i * 3 + 1], positions[i * 3 + 2])\n            .scale(1 / tile.quantizedRange)\n            .multiply(tile.quantizedVolumeScale)\n            .add(tile.quantizedVolumeOffset)\n            .toArray(decodedArray, i * 3);\n    }\n    return decodedArray;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT AND Apache-2.0\n// Copyright vis.gl contributors\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { DracoLoader } from '@loaders.gl/draco';\nimport { parseFromContext } from '@loaders.gl/loader-utils';\nimport { GL } from '@loaders.gl/math';\nimport { Vector3 } from '@math.gl/core';\nimport Tile3DFeatureTable from \"../classes/tile-3d-feature-table.js\";\nimport Tile3DBatchTable from \"../classes/tile-3d-batch-table.js\";\nimport { parse3DTileHeaderSync } from \"./helpers/parse-3d-tile-header.js\";\nimport { parse3DTileTablesHeaderSync, parse3DTileTablesSync } from \"./helpers/parse-3d-tile-tables.js\";\nimport { normalize3DTileColorAttribute } from \"./helpers/normalize-3d-tile-colors.js\";\nimport { normalize3DTileNormalAttribute } from \"./helpers/normalize-3d-tile-normals.js\";\nimport { normalize3DTilePositionAttribute } from \"./helpers/normalize-3d-tile-positions.js\";\nexport async function parsePointCloud3DTile(tile, arrayBuffer, byteOffset, options, context) {\n    byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n    byteOffset = parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset);\n    byteOffset = parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options);\n    initializeTile(tile);\n    const { featureTable, batchTable } = parsePointCloudTables(tile);\n    await parseDraco(tile, featureTable, batchTable, options, context);\n    parsePositions(tile, featureTable, options);\n    // @ts-expect-error TODO - do we need to assert on the batch table?\n    parseColors(tile, featureTable, batchTable);\n    parseNormals(tile, featureTable);\n    return byteOffset;\n}\nfunction initializeTile(tile) {\n    // Initialize point cloud tile defaults\n    tile.attributes = {\n        positions: null,\n        colors: null,\n        normals: null,\n        batchIds: null\n    };\n    tile.isQuantized = false;\n    tile.isTranslucent = false;\n    tile.isRGB565 = false;\n    tile.isOctEncoded16P = false;\n}\nfunction parsePointCloudTables(tile) {\n    const featureTable = new Tile3DFeatureTable(tile.featureTableJson, tile.featureTableBinary);\n    const pointsLength = featureTable.getGlobalProperty('POINTS_LENGTH');\n    if (!Number.isFinite(pointsLength)) {\n        throw new Error('POINTS_LENGTH must be defined');\n    }\n    featureTable.featuresLength = pointsLength;\n    tile.featuresLength = pointsLength;\n    tile.pointsLength = pointsLength;\n    tile.pointCount = pointsLength;\n    tile.rtcCenter = featureTable.getGlobalProperty('RTC_CENTER', GL.FLOAT, 3);\n    const batchTable = parseBatchIds(tile, featureTable);\n    return { featureTable, batchTable };\n}\nfunction parsePositions(tile, featureTable, options) {\n    tile.attributes = tile.attributes || {\n        positions: null,\n        colors: null,\n        normals: null,\n        batchIds: null\n    };\n    if (!tile.attributes.positions) {\n        if (featureTable.hasProperty('POSITION')) {\n            tile.attributes.positions = featureTable.getPropertyArray('POSITION', GL.FLOAT, 3);\n        }\n        else if (featureTable.hasProperty('POSITION_QUANTIZED')) {\n            const positions = featureTable.getPropertyArray('POSITION_QUANTIZED', GL.UNSIGNED_SHORT, 3);\n            tile.isQuantized = true;\n            tile.quantizedRange = (1 << 16) - 1;\n            tile.quantizedVolumeScale = featureTable.getGlobalProperty('QUANTIZED_VOLUME_SCALE', GL.FLOAT, 3);\n            if (!tile.quantizedVolumeScale) {\n                throw new Error('QUANTIZED_VOLUME_SCALE must be defined for quantized positions.');\n            }\n            tile.quantizedVolumeOffset = featureTable.getGlobalProperty('QUANTIZED_VOLUME_OFFSET', GL.FLOAT, 3);\n            if (!tile.quantizedVolumeOffset) {\n                throw new Error('QUANTIZED_VOLUME_OFFSET must be defined for quantized positions.');\n            }\n            tile.attributes.positions = normalize3DTilePositionAttribute(tile, positions, options);\n        }\n    }\n    if (!tile.attributes.positions) {\n        throw new Error('Either POSITION or POSITION_QUANTIZED must be defined.');\n    }\n}\nfunction parseColors(tile, featureTable, batchTable) {\n    tile.attributes = tile.attributes || {\n        positions: null,\n        colors: null,\n        normals: null,\n        batchIds: null\n    };\n    if (!tile.attributes.colors) {\n        let colors = null;\n        if (featureTable.hasProperty('RGBA')) {\n            colors = featureTable.getPropertyArray('RGBA', GL.UNSIGNED_BYTE, 4);\n            tile.isTranslucent = true;\n        }\n        else if (featureTable.hasProperty('RGB')) {\n            colors = featureTable.getPropertyArray('RGB', GL.UNSIGNED_BYTE, 3);\n        }\n        else if (featureTable.hasProperty('RGB565')) {\n            colors = featureTable.getPropertyArray('RGB565', GL.UNSIGNED_SHORT, 1);\n            tile.isRGB565 = true;\n        }\n        tile.attributes.colors = normalize3DTileColorAttribute(tile, colors, batchTable);\n    }\n    if (featureTable.hasProperty('CONSTANT_RGBA')) {\n        tile.constantRGBA = featureTable.getGlobalProperty('CONSTANT_RGBA', GL.UNSIGNED_BYTE, 4);\n    }\n}\nfunction parseNormals(tile, featureTable) {\n    tile.attributes = tile.attributes || {\n        positions: null,\n        colors: null,\n        normals: null,\n        batchIds: null\n    };\n    if (!tile.attributes.normals) {\n        let normals = null;\n        if (featureTable.hasProperty('NORMAL')) {\n            normals = featureTable.getPropertyArray('NORMAL', GL.FLOAT, 3);\n        }\n        else if (featureTable.hasProperty('NORMAL_OCT16P')) {\n            normals = featureTable.getPropertyArray('NORMAL_OCT16P', GL.UNSIGNED_BYTE, 2);\n            tile.isOctEncoded16P = true;\n        }\n        tile.attributes.normals = normalize3DTileNormalAttribute(tile, normals);\n    }\n}\nfunction parseBatchIds(tile, featureTable) {\n    let batchTable = null;\n    if (!tile.batchIds && featureTable.hasProperty('BATCH_ID')) {\n        tile.batchIds = featureTable.getPropertyArray('BATCH_ID', GL.UNSIGNED_SHORT, 1);\n        if (tile.batchIds) {\n            const batchFeatureLength = featureTable.getGlobalProperty('BATCH_LENGTH');\n            if (!batchFeatureLength) {\n                throw new Error('Global property: BATCH_LENGTH must be defined when BATCH_ID is defined.');\n            }\n            const { batchTableJson, batchTableBinary } = tile;\n            batchTable = new Tile3DBatchTable(batchTableJson, batchTableBinary, batchFeatureLength);\n        }\n    }\n    return batchTable;\n}\n// eslint-disable-next-line complexity\nasync function parseDraco(tile, featureTable, batchTable, options, context) {\n    let dracoBuffer;\n    let dracoFeatureTableProperties;\n    let dracoBatchTableProperties;\n    const batchTableDraco = tile.batchTableJson &&\n        tile.batchTableJson.extensions &&\n        tile.batchTableJson.extensions['3DTILES_draco_point_compression'];\n    if (batchTableDraco) {\n        dracoBatchTableProperties = batchTableDraco.properties;\n    }\n    const featureTableDraco = featureTable.getExtension('3DTILES_draco_point_compression');\n    if (featureTableDraco) {\n        dracoFeatureTableProperties = featureTableDraco.properties;\n        const dracoByteOffset = featureTableDraco.byteOffset;\n        const dracoByteLength = featureTableDraco.byteLength;\n        if (!dracoFeatureTableProperties || !Number.isFinite(dracoByteOffset) || !dracoByteLength) {\n            throw new Error('Draco properties, byteOffset, and byteLength must be defined');\n        }\n        dracoBuffer = (tile.featureTableBinary || []).slice(dracoByteOffset, dracoByteOffset + dracoByteLength);\n        tile.hasPositions = Number.isFinite(dracoFeatureTableProperties.POSITION);\n        tile.hasColors =\n            Number.isFinite(dracoFeatureTableProperties.RGB) ||\n                Number.isFinite(dracoFeatureTableProperties.RGBA);\n        tile.hasNormals = Number.isFinite(dracoFeatureTableProperties.NORMAL);\n        tile.hasBatchIds = Number.isFinite(dracoFeatureTableProperties.BATCH_ID);\n        tile.isTranslucent = Number.isFinite(dracoFeatureTableProperties.RGBA);\n    }\n    if (!dracoBuffer) {\n        return true;\n    }\n    const dracoData = {\n        buffer: dracoBuffer,\n        properties: { ...dracoFeatureTableProperties, ...dracoBatchTableProperties },\n        featureTableProperties: dracoFeatureTableProperties,\n        batchTableProperties: dracoBatchTableProperties,\n        dequantizeInShader: false\n    };\n    return await loadDraco(tile, dracoData, options, context);\n}\n// eslint-disable-next-line complexity, max-statements\nexport async function loadDraco(tile, dracoData, options, context) {\n    if (!context) {\n        return;\n    }\n    const dracoOptions = {\n        ...options,\n        draco: {\n            ...options?.draco,\n            extraAttributes: dracoData.batchTableProperties || {}\n        }\n    };\n    // The entire tileset might be included, too expensive to serialize\n    delete dracoOptions['3d-tiles'];\n    const data = await parseFromContext(dracoData.buffer, DracoLoader, dracoOptions, context);\n    const decodedPositions = data.attributes.POSITION && data.attributes.POSITION.value;\n    const decodedColors = data.attributes.COLOR_0 && data.attributes.COLOR_0.value;\n    const decodedNormals = data.attributes.NORMAL && data.attributes.NORMAL.value;\n    const decodedBatchIds = data.attributes.BATCH_ID && data.attributes.BATCH_ID.value;\n    // @ts-expect-error\n    const isQuantizedDraco = decodedPositions && data.attributes.POSITION.value.quantization;\n    // @ts-expect-error\n    const isOctEncodedDraco = decodedNormals && data.attributes.NORMAL.value.quantization;\n    if (isQuantizedDraco) {\n        // Draco quantization range == quantized volume scale - size in meters of the quantized volume\n        // Internal quantized range is the range of values of the quantized data, e.g. 255 for 8-bit, 1023 for 10-bit, etc\n        // @ts-expect-error This doesn't look right\n        const quantization = data.POSITION.data.quantization;\n        const range = quantization.range;\n        tile.quantizedVolumeScale = new Vector3(range, range, range);\n        tile.quantizedVolumeOffset = new Vector3(quantization.minValues);\n        tile.quantizedRange = (1 << quantization.quantizationBits) - 1.0;\n        tile.isQuantizedDraco = true;\n    }\n    if (isOctEncodedDraco) {\n        // @ts-expect-error This doesn't look right\n        tile.octEncodedRange = (1 << data.NORMAL.data.quantization.quantizationBits) - 1.0;\n        tile.isOctEncodedDraco = true;\n    }\n    // Extra batch table attributes\n    const batchTableAttributes = {};\n    if (dracoData.batchTableProperties) {\n        for (const attributeName of Object.keys(dracoData.batchTableProperties)) {\n            if (data.attributes[attributeName] && data.attributes[attributeName].value) {\n                batchTableAttributes[attributeName.toLowerCase()] = data.attributes[attributeName].value;\n            }\n        }\n    }\n    tile.attributes = {\n        // @ts-expect-error\n        positions: decodedPositions,\n        // @ts-expect-error\n        colors: normalize3DTileColorAttribute(tile, decodedColors, undefined),\n        // @ts-expect-error\n        normals: decodedNormals,\n        // @ts-expect-error\n        batchIds: decodedBatchIds,\n        ...batchTableAttributes\n    };\n}\n// TODO - this is the remaining code from Cesium's parser\n/*\n  const batchTable = new Tile3DBatchTable(tile);\n\n  // parseDracoBuffer(tile, featureTable, batchTable);\n\n  if (!tile.attributes.positions) {\n    throw new Error('Either POSITION or POSITION_QUANTIZED must be defined.');\n  }\n}\n/*\n\n  if (!tile.attributes.positions) {\n    if (featureTable.hasProperty('POSITION')) {\n      tile.attributes.positions = featureTable.getPropertyArray('POSITION', GL.FLOAT, 3);\n    } else if (featureTable.hasProperty('POSITION_QUANTIZED')) {\n      tile.attributes.positions = featureTable.getPropertyArray('POSITION_QUANTIZED', GL.UNSIGNED_SHORT, 3);\n\n\n  if (!tile.colors) {\n    if (featureTable.hasProperty('RGBA')) {\n      tile.colors = featureTable.getPropertyArray('RGBA', GL.UNSIGNED_BYTE, 4);\n      tile.isTranslucent = true;\n    } else if (featureTable.hasProperty('RGB')) {\n      tile.colors = featureTable.getPropertyArray('RGB', GL.UNSIGNED_BYTE, 3);\n    } else if (featureTable.hasPropertry('RGB565')) {\n      tile.colors = featureTable.getPropertyArray('RGB565', GL.UNSIGNED_SHORT, 1);\n      tile.isRGB565 = true;\n    }\n  }\n\n  if (!tile.attributes.normals) {\n    if (featureTable.getPropertry('NORMAL')) {\n      tile.attributes.normals = featureTable.getPropertyArray('NORMAL', GL.FLOAT, 3);\n    } else if (featureTable.getProperty('NORMAL_OCT16P')) {\n      tile.attributes.normals = featureTable.getPropertyArray('NORMAL_OCT16P', GL.UNSIGNED_BYTE, 2);\n      tile.isOctEncoded16P = true;\n    }\n  }\n\n  if (!tile.batchIds) {\n    if (featureTable.hasProperty('BATCH_ID')) {\n      tile.batchIds = featureTable.getPropertyArray('BATCH_ID', GL.UNSIGNED_SHORT, 1);\n    }\n  }\n\n  if (!tile.attributes.positions) {\n    throw new Error('Either POSITION or POSITION_QUANTIZED must be defined.');\n  }\n\n  if (featureTable.getPropertry('CONSTANT_RGBA')) {\n    tile.constantRGBA = featureTable.getGlobalProperty('CONSTANT_RGBA', GL.UNSIGNED_BYTE, 4);\n  }\n\n  if (tile.batchIds) {\n    const batchLength = featureTable.getGlobalProperty('BATCH_LENGTH');\n    if (!defined(batchLength)) {\n      throw new Error('Global property: BATCH_LENGTH must be defined when BATCH_ID is defined.');\n    }\n\n    if (defined(batchTableBinary)) {\n      // Copy the batchTableBinary section and let the underlying ArrayBuffer be freed\n      batchTableBinary = new Uint8Array(batchTableBinary);\n    }\n\n    if (defined(pointCloud._batchTableLoaded)) {\n      pointCloud._batchTableLoaded(batchLength, batchTableJson, batchTableBinary);\n    }\n  }\n\n  // If points are not batched and there are per-point properties, use these properties for styling purposes\n  var styleableProperties;\n  if (!hasBatchIds && defined(batchTableBinary)) {\n    tile.styleableProperties = Cesium3DTileBatchTable.getBinaryProperties(\n      pointsLength,\n      batchTableJson,\n      batchTableBinary\n    );\n  }\n\n  tile.draco = draco;\n}\n\n// Separate parsing and decoding of Draco\nexport function parseDracoBuffer(tile, featureTable, batchTable) {\n  let dracoBuffer;\n  let dracoFeatureTableProperties;\n  let dracoBatchTableProperties;\n\n  const batchTableDraco = batchTable.getExtension('3DTILES_draco_point_compression');\n  if (batchTableDraco) {\n    dracoBatchTableProperties = batchTableDraco.properties;\n  }\n\n  const featureTableDraco = featureTable.getExtension('3DTILES_draco_point_compression');\n  if (featureTableDraco) {\n    dracoFeatureTableProperties = featureTableDraco.properties;\n    const dracoByteOffset = featureTableDraco.byteOffset;\n    const dracoByteLength = featureTableDraco.byteLength;\n    if (!dracoFeatureTableProperties || !dracoByteOffset || !dracoByteLength) {\n      throw new Error('Draco properties, byteOffset, and byteLength must be defined');\n    }\n\n    dracoBuffer = arraySlice(\n      featureTableBinary,\n      dracoByteOffset,\n      dracoByteOffset + dracoByteLength\n    );\n    tile.hasPositions = dracoFeatureTableProperties.POSITION;\n    tile.hasColors = dracoFeatureTableProperties.RGB || dracoFeatureTableProperties.RGBA;\n    tile.hasNormals = dracoFeatureTableProperties.NORMAL;\n    tile.hasBatchIds = dracoFeatureTableProperties.BATCH_ID;\n    tile.isTranslucent = dracoFeatureTableProperties.RGBA;\n  }\n\n  if (dracoBuffer) {\n    tile.draco = {\n      buffer: dracoBuffer,\n      properties: {...dracoFeatureTableProperties, ...dracoBatchTableProperties},\n      featureTableProperties: dracoFeatureTableProperties,\n      batchTableProperties: dracoBatchTableProperties,\n      dequantizeInShader: false\n    };\n\n    tile.decodingState = DECODING_STATE.NEEDS_DECODE;\n  }\n}\n\n/*\nfunction decodeDraco(tile, context) {\n  if (tile.decodingState === DECODING_STATE.READY) {\n    return false;\n  }\n  if (tile.decodingState === DECODING_STATE.NEEDS_DECODE) {\n    var parsedContent = tile._parsedContent;\n    var draco = parsedContent.draco;\n    var decodePromise = DracoLoader.decodePointCloud(draco, context);\n    if (defined(decodePromise)) {\n      tile.decodingState = DECODING_STATE.DECODING;\n      decodePromise.then(function(result) {\n        tile.decodingState = DECODING_STATE.READY;\n        var decodedPositions = defined(result.POSITION) ? result.POSITION.array : undefined;\n        var decodedRgb = defined(result.RGB) ? result.RGB.array : undefined;\n        var decodedRgba = defined(result.RGBA) ? result.RGBA.array : undefined;\n        var decodedNormals = defined(result.NORMAL) ? result.NORMAL.array : undefined;\n        var decodedBatchIds = defined(result.BATCH_ID) ? result.BATCH_ID.array : undefined;\n        var isQuantizedDraco = defined(decodedPositions) && defined(result.POSITION.data.quantization);\n        var isOctEncodedDraco = defined(decodedNormals) && defined(result.NORMAL.data.quantization);\n        if (isQuantizedDraco) {\n          // Draco quantization range == quantized volume scale - size in meters of the quantized volume\n          // Internal quantized range is the range of values of the quantized data, e.g. 255 for 8-bit, 1023 for 10-bit, etc\n          var quantization = result.POSITION.data.quantization;\n          var range = quantization.range;\n          tile._quantizedVolumeScale = Cartesian3.fromElements(range, range, range);\n          tile._quantizedVolumeOffset = Cartesian3.unpack(quantization.minValues);\n          tile._quantizedRange = (1 << quantization.quantizationBits) - 1.0;\n          tile._isQuantizedDraco = true;\n        }\n        if (isOctEncodedDraco) {\n          tile._octEncodedRange = (1 << result.NORMAL.data.quantization.quantizationBits) - 1.0;\n          tile._isOctEncodedDraco = true;\n        }\n        var styleableProperties = parsedContent.styleableProperties;\n        var batchTableProperties = draco.batchTableProperties;\n        for (var name in batchTableProperties) {\n          if (batchTableProperties.hasOwnProperty(name)) {\n            var property = result[name];\n            if (!defined(styleableProperties)) {\n              styleableProperties = {};\n            }\n            styleableProperties[name] = {\n              typedArray : property.array,\n              componentCount : property.data.componentsPerAttribute\n            };\n          }\n        }\n        parsedContent.positions = defaultValue(decodedPositions, parsedContent.positions);\n        parsedContent.colors = defaultValue(defaultValue(decodedRgba, decodedRgb), parsedContent.colors);\n        parsedContent.normals = defaultValue(decodedNormals, parsedContent.normals);\n        parsedContent.batchIds = defaultValue(decodedBatchIds, parsedContent.batchIds);\n        parsedContent.styleableProperties = styleableProperties;\n      }).otherwise(function(error) {\n        tile.decodingState = DECODING_STATE.FAILED;\n        tile._readyPromise.reject(error);\n      });\n    }\n  }\n  return true;\n}\n*/\n", "// loaders.gl\n// SPDX-License-Identifier: MIT AND Apache-2.0\n// Copyright vis.gl contributors\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n// TODO - should we automatically parse the embedded glTF or leave it to the app?\n// - I.e. some apps might work directly on a GLB, in that case no need for us to decode...\n// - And if we decode, do we still keep the GLB in case it is needed?\n// - Do we add an option to control this?\n// - Also, should we have hard dependency on gltf module or use injection or auto-discovery for gltf parser?\nimport { GLTFLoader, postProcessGLTF, _getMemoryUsageGLTF } from '@loaders.gl/gltf';\nimport { sliceArrayBuffer, parseFromContext } from '@loaders.gl/loader-utils';\nexport const GLTF_FORMAT = {\n    URI: 0,\n    EMBEDDED: 1\n};\nexport function parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options) {\n    // Set flags\n    // glTF models need to be rotated from Y to Z up\n    // https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#y-up-to-z-up\n    tile.rotateYtoZ = true;\n    // Assume glTF consumes rest of tile\n    const gltfByteLength = (tile.byteOffset || 0) + (tile.byteLength || 0) - byteOffset;\n    if (gltfByteLength === 0) {\n        throw new Error('glTF byte length must be greater than 0.');\n    }\n    // Save gltf up axis\n    tile.gltfUpAxis =\n        options?.['3d-tiles'] && options['3d-tiles'].assetGltfUpAxis\n            ? options['3d-tiles'].assetGltfUpAxis\n            : 'Y';\n    // TODO - We can avoid copy if already 4-byte aligned...\n    // However the rest of the code may not be able to accept byteOffsets, so copy anyway\n    tile.gltfArrayBuffer = sliceArrayBuffer(arrayBuffer, byteOffset, gltfByteLength);\n    tile.gltfByteOffset = 0;\n    tile.gltfByteLength = gltfByteLength;\n    if (byteOffset % 4 === 0) {\n        // tile.gltfArrayBuffer = arrayBuffer;\n        // tile.gltfByteOffset = byteOffset;\n        // tile.gltfByteLength = gltfByteLength;\n    }\n    else {\n        // Create a copy of the glb so that it is 4-byte aligned\n        // eslint-disable-next-line\n        console.warn(`${tile.type}: embedded glb is not aligned to a 4-byte boundary.`);\n    }\n    // Entire tile is consumed\n    return (tile.byteOffset || 0) + (tile.byteLength || 0);\n}\nexport async function extractGLTF(tile, gltfFormat, options, context) {\n    const tile3DOptions = options?.['3d-tiles'] || {};\n    extractGLTFBufferOrURL(tile, gltfFormat, options);\n    if (tile3DOptions.loadGLTF) {\n        if (!context) {\n            return;\n        }\n        if (tile.gltfUrl) {\n            const { fetch } = context;\n            const response = await fetch(tile.gltfUrl, options);\n            tile.gltfArrayBuffer = await response.arrayBuffer();\n            tile.gltfByteOffset = 0;\n        }\n        if (tile.gltfArrayBuffer) {\n            // TODO - Should handle byteOffset... However, not used now...\n            const gltfWithBuffers = await parseFromContext(tile.gltfArrayBuffer, GLTFLoader, options, context);\n            tile.gltf = postProcessGLTF(gltfWithBuffers);\n            tile.gpuMemoryUsageInBytes = _getMemoryUsageGLTF(tile.gltf);\n            delete tile.gltfArrayBuffer;\n            delete tile.gltfByteOffset;\n            delete tile.gltfByteLength;\n        }\n    }\n}\nfunction extractGLTFBufferOrURL(tile, gltfFormat, options) {\n    switch (gltfFormat) {\n        case GLTF_FORMAT.URI:\n            // We need to remove padding from the end of the model URL in case this tile was part of a composite tile.\n            // This removes all white space and null characters from the end of the string.\n            if (tile.gltfArrayBuffer) {\n                const gltfUrlBytes = new Uint8Array(tile.gltfArrayBuffer, tile.gltfByteOffset);\n                const textDecoder = new TextDecoder();\n                const gltfUrl = textDecoder.decode(gltfUrlBytes);\n                tile.gltfUrl = gltfUrl.replace(/[\\s\\0]+$/, '');\n            }\n            delete tile.gltfArrayBuffer;\n            delete tile.gltfByteOffset;\n            delete tile.gltfByteLength;\n            break;\n        case GLTF_FORMAT.EMBEDDED:\n            break;\n        default:\n            throw new Error('b3dm: Illegal glTF format field');\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT AND Apache-2.0\n// Copyright vis.gl contributors\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { GL } from '@loaders.gl/math'; // math.gl/geometry;\nimport Tile3DFeatureTable from \"../classes/tile-3d-feature-table.js\";\n// import Tile3DBatchTable from '../classes/tile-3d-batch-table';\nimport { parse3DTileHeaderSync } from \"./helpers/parse-3d-tile-header.js\";\nimport { parse3DTileTablesHeaderSync, parse3DTileTablesSync } from \"./helpers/parse-3d-tile-tables.js\";\nimport { parse3DTileGLTFViewSync, extractGLTF, GLTF_FORMAT } from \"./helpers/parse-3d-tile-gltf-view.js\";\nexport async function parseBatchedModel3DTile(tile, arrayBuffer, byteOffset, options, context) {\n    byteOffset = parseBatchedModel(tile, arrayBuffer, byteOffset, options, context);\n    await extractGLTF(tile, GLTF_FORMAT.EMBEDDED, options, context);\n    const extensions = tile?.gltf?.extensions;\n    if (extensions && extensions.CESIUM_RTC) {\n        tile.rtcCenter = extensions.CESIUM_RTC.center;\n    }\n    return byteOffset;\n}\nfunction parseBatchedModel(tile, arrayBuffer, byteOffset, options, context) {\n    byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n    byteOffset = parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset);\n    byteOffset = parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options);\n    byteOffset = parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options);\n    const featureTable = new Tile3DFeatureTable(tile.featureTableJson, tile.featureTableBinary);\n    tile.rtcCenter = featureTable.getGlobalProperty('RTC_CENTER', GL.FLOAT, 3);\n    return byteOffset;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT AND Apache-2.0\n// Copyright vis.gl contributors\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { Vector3, Matrix3, Matrix4, Quaternion } from '@math.gl/core';\nimport { Ellipsoid } from '@math.gl/geospatial';\nimport { GL } from '@loaders.gl/math'; // 'math.gl/geometry';\nimport Tile3DFeatureTable from \"../classes/tile-3d-feature-table.js\";\nimport Tile3DBatchTable from \"../classes/tile-3d-batch-table.js\";\nimport { parse3DTileHeaderSync } from \"./helpers/parse-3d-tile-header.js\";\nimport { parse3DTileTablesHeaderSync, parse3DTileTablesSync } from \"./helpers/parse-3d-tile-tables.js\";\nimport { parse3DTileGLTFViewSync, extractGLTF } from \"./helpers/parse-3d-tile-gltf-view.js\";\nexport async function parseInstancedModel3DTile(tile, arrayBuffer, byteOffset, options, context) {\n    byteOffset = parseInstancedModel(tile, arrayBuffer, byteOffset, options, context);\n    await extractGLTF(tile, tile.gltfFormat || 0, options, context);\n    return byteOffset;\n}\nfunction parseInstancedModel(tile, arrayBuffer, byteOffset, options, context) {\n    byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n    if (tile.version !== 1) {\n        throw new Error(`Instanced 3D Model version ${tile.version} is not supported`);\n    }\n    byteOffset = parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset);\n    const view = new DataView(arrayBuffer);\n    tile.gltfFormat = view.getUint32(byteOffset, true);\n    byteOffset += 4;\n    // PARSE FEATURE TABLE\n    byteOffset = parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options);\n    byteOffset = parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options);\n    // TODO - Is the feature table sometimes optional or can check be moved into table header parser?\n    if (!tile?.header?.featureTableJsonByteLength || tile.header.featureTableJsonByteLength === 0) {\n        throw new Error('i3dm parser: featureTableJsonByteLength is zero.');\n    }\n    const featureTable = new Tile3DFeatureTable(tile.featureTableJson, tile.featureTableBinary);\n    const instancesLength = featureTable.getGlobalProperty('INSTANCES_LENGTH');\n    featureTable.featuresLength = instancesLength;\n    if (!Number.isFinite(instancesLength)) {\n        throw new Error('i3dm parser: INSTANCES_LENGTH must be defined');\n    }\n    tile.eastNorthUp = featureTable.getGlobalProperty('EAST_NORTH_UP');\n    tile.rtcCenter = featureTable.getGlobalProperty('RTC_CENTER', GL.FLOAT, 3);\n    const batchTable = new Tile3DBatchTable(tile.batchTableJson, tile.batchTableBinary, instancesLength);\n    extractInstancedAttributes(tile, featureTable, batchTable, instancesLength);\n    return byteOffset;\n}\n// eslint-disable-next-line max-statements, complexity\nfunction extractInstancedAttributes(tile, featureTable, batchTable, instancesLength) {\n    const instances = new Array(instancesLength);\n    const instancePosition = new Vector3();\n    const instanceNormalRight = new Vector3();\n    const instanceNormalUp = new Vector3();\n    const instanceNormalForward = new Vector3();\n    const instanceRotation = new Matrix3();\n    const instanceQuaternion = new Quaternion();\n    const instanceScale = new Vector3();\n    const instanceTranslationRotationScale = {};\n    const instanceTransform = new Matrix4();\n    const scratch1 = [];\n    const scratch2 = [];\n    const scratch3 = [];\n    const scratch4 = [];\n    for (let i = 0; i < instancesLength; i++) {\n        let position;\n        // Get the instance position\n        if (featureTable.hasProperty('POSITION')) {\n            position = featureTable.getProperty('POSITION', GL.FLOAT, 3, i, instancePosition);\n        }\n        else if (featureTable.hasProperty('POSITION_QUANTIZED')) {\n            position = featureTable.getProperty('POSITION_QUANTIZED', GL.UNSIGNED_SHORT, 3, i, instancePosition);\n            const quantizedVolumeOffset = featureTable.getGlobalProperty('QUANTIZED_VOLUME_OFFSET', GL.FLOAT, 3);\n            if (!quantizedVolumeOffset) {\n                throw new Error('i3dm parser: QUANTIZED_VOLUME_OFFSET must be defined for quantized positions.');\n            }\n            const quantizedVolumeScale = featureTable.getGlobalProperty('QUANTIZED_VOLUME_SCALE', GL.FLOAT, 3);\n            if (!quantizedVolumeScale) {\n                throw new Error('i3dm parser: QUANTIZED_VOLUME_SCALE must be defined for quantized positions.');\n            }\n            const MAX_UNSIGNED_SHORT = 65535.0;\n            for (let j = 0; j < 3; j++) {\n                position[j] =\n                    (position[j] / MAX_UNSIGNED_SHORT) * quantizedVolumeScale[j] + quantizedVolumeOffset[j];\n            }\n        }\n        if (!position) {\n            throw new Error('i3dm: POSITION or POSITION_QUANTIZED must be defined for each instance.');\n        }\n        instancePosition.copy(position);\n        // @ts-expect-error\n        instanceTranslationRotationScale.translation = instancePosition;\n        // Get the instance rotation\n        tile.normalUp = featureTable.getProperty('NORMAL_UP', GL.FLOAT, 3, i, scratch1);\n        tile.normalRight = featureTable.getProperty('NORMAL_RIGHT', GL.FLOAT, 3, i, scratch2);\n        const hasCustomOrientation = false;\n        if (tile.normalUp) {\n            if (!tile.normalRight) {\n                throw new Error('i3dm: Custom orientation requires both NORMAL_UP and NORMAL_RIGHT.');\n            }\n            // Vector3.unpack(normalUp, 0, instanceNormalUp);\n            // Vector3.unpack(normalRight, 0, instanceNormalRight);\n            tile.hasCustomOrientation = true;\n        }\n        else {\n            tile.octNormalUp = featureTable.getProperty('NORMAL_UP_OCT32P', GL.UNSIGNED_SHORT, 2, i, scratch1);\n            tile.octNormalRight = featureTable.getProperty('NORMAL_RIGHT_OCT32P', GL.UNSIGNED_SHORT, 2, i, scratch2);\n            if (tile.octNormalUp) {\n                if (!tile.octNormalRight) {\n                    throw new Error('i3dm: oct-encoded orientation requires NORMAL_UP_OCT32P and NORMAL_RIGHT_OCT32P');\n                }\n                throw new Error('i3dm: oct-encoded orientation not implemented');\n                /*\n                AttributeCompression.octDecodeInRange(octNormalUp[0], octNormalUp[1], 65535, instanceNormalUp);\n                AttributeCompression.octDecodeInRange(octNormalRight[0], octNormalRight[1], 65535, instanceNormalRight);\n                hasCustomOrientation = true;\n                */\n            }\n            else if (tile.eastNorthUp) {\n                Ellipsoid.WGS84.eastNorthUpToFixedFrame(instancePosition, instanceTransform);\n                instanceTransform.getRotationMatrix3(instanceRotation);\n            }\n            else {\n                instanceRotation.identity();\n            }\n        }\n        if (hasCustomOrientation) {\n            instanceNormalForward.copy(instanceNormalRight).cross(instanceNormalUp).normalize();\n            instanceRotation.setColumn(0, instanceNormalRight);\n            instanceRotation.setColumn(1, instanceNormalUp);\n            instanceRotation.setColumn(2, instanceNormalForward);\n        }\n        instanceQuaternion.fromMatrix3(instanceRotation);\n        // @ts-expect-error\n        instanceTranslationRotationScale.rotation = instanceQuaternion;\n        // Get the instance scale\n        instanceScale.set(1.0, 1.0, 1.0);\n        const scale = featureTable.getProperty('SCALE', GL.FLOAT, 1, i, scratch3);\n        if (Number.isFinite(scale)) {\n            instanceScale.multiplyByScalar(scale);\n        }\n        const nonUniformScale = featureTable.getProperty('SCALE_NON_UNIFORM', GL.FLOAT, 3, i, scratch1);\n        if (nonUniformScale) {\n            instanceScale.scale(nonUniformScale);\n        }\n        // @ts-expect-error\n        instanceTranslationRotationScale.scale = instanceScale;\n        // Get the batchId\n        let batchId = featureTable.getProperty('BATCH_ID', GL.UNSIGNED_SHORT, 1, i, scratch4);\n        if (batchId === undefined) {\n            // If BATCH_ID semantic is undefined, batchId is just the instance number\n            batchId = i;\n        }\n        // @ts-expect-error\n        const rotationMatrix = new Matrix4().fromQuaternion(instanceTranslationRotationScale.rotation);\n        // Create the model matrix and the instance\n        instanceTransform.identity();\n        // @ts-expect-error\n        instanceTransform.translate(instanceTranslationRotationScale.translation);\n        instanceTransform.multiplyRight(rotationMatrix);\n        // @ts-expect-error\n        instanceTransform.scale(instanceTranslationRotationScale.scale);\n        const modelMatrix = instanceTransform.clone();\n        instances[i] = {\n            modelMatrix,\n            batchId\n        };\n    }\n    tile.instances = instances;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT AND Apache-2.0\n// Copyright vis.gl contributors\nimport { parse3DTileHeaderSync } from \"./helpers/parse-3d-tile-header.js\";\n// eslint-disable-next-line max-params\nexport async function parseComposite3DTile(tile, arrayBuffer, byteOffset, options, context, parse3DTile) {\n    byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n    const view = new DataView(arrayBuffer);\n    // Extract number of tiles\n    tile.tilesLength = view.getUint32(byteOffset, true);\n    byteOffset += 4;\n    // extract each tile from the byte stream\n    tile.tiles = [];\n    while (tile.tiles.length < tile.tilesLength && (tile.byteLength || 0) - byteOffset > 12) {\n        const subtile = { shape: 'tile3d' };\n        tile.tiles.push(subtile);\n        byteOffset = await parse3DTile(arrayBuffer, byteOffset, options, context, subtile);\n        // TODO - do we need to add any padding in between tiles?\n    }\n    return byteOffset;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT license\n// Copyright (c) vis.gl contributors\nimport { parseFromContext } from '@loaders.gl/loader-utils';\nimport { _getMemoryUsageGLTF, GLTFLoader, postProcessGLTF } from '@loaders.gl/gltf';\nexport async function parseGltf3DTile(tile, arrayBuffer, options, context) {\n    // Set flags\n    // glTF models need to be rotated from Y to Z up\n    // https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#y-up-to-z-up\n    tile.rotateYtoZ = true;\n    // Save gltf up axis\n    tile.gltfUpAxis = options?.['3d-tiles']?.assetGltfUpAxis\n        ? options['3d-tiles'].assetGltfUpAxis\n        : 'Y';\n    if (options?.['3d-tiles']?.loadGLTF) {\n        if (!context) {\n            return arrayBuffer.byteLength;\n        }\n        const gltfWithBuffers = await parseFromContext(arrayBuffer, GLTFLoader, options, context);\n        tile.gltf = postProcessGLTF(gltfWithBuffers);\n        tile.gpuMemoryUsageInBytes = _getMemoryUsageGLTF(tile.gltf);\n    }\n    else {\n        tile.gltfArrayBuffer = arrayBuffer;\n    }\n    return arrayBuffer.byteLength;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT AND Apache-2.0\n// Copyright vis.gl contributors\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport { TILE3D_TYPE } from \"../constants.js\";\nimport { getMagicString } from \"./helpers/parse-utils.js\";\nimport { parsePointCloud3DTile } from \"./parse-3d-tile-point-cloud.js\";\nimport { parseBatchedModel3DTile } from \"./parse-3d-tile-batched-model.js\";\nimport { parseInstancedModel3DTile } from \"./parse-3d-tile-instanced-model.js\";\nimport { parseComposite3DTile } from \"./parse-3d-tile-composite.js\";\nimport { parseGltf3DTile } from \"./parse-3d-tile-gltf.js\";\n// Extracts\nexport async function parse3DTile(arrayBuffer, byteOffset = 0, options, context, tile = { shape: 'tile3d' }) {\n    tile.byteOffset = byteOffset;\n    tile.type = getMagicString(arrayBuffer, byteOffset);\n    switch (tile.type) {\n        case TILE3D_TYPE.COMPOSITE:\n            // Note: We pass this function as argument so that embedded tiles can be parsed recursively\n            return await parseComposite3DTile(tile, arrayBuffer, byteOffset, options, context, parse3DTile);\n        case TILE3D_TYPE.BATCHED_3D_MODEL:\n            return await parseBatchedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n        case TILE3D_TYPE.GLTF:\n            return await parseGltf3DTile(tile, arrayBuffer, options, context);\n        case TILE3D_TYPE.INSTANCED_3D_MODEL:\n            return await parseInstancedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n        case TILE3D_TYPE.POINT_CLOUD:\n            return await parsePointCloud3DTile(tile, arrayBuffer, byteOffset, options, context);\n        default:\n            throw new Error(`3DTileLoader: unknown type ${tile.type}`); // eslint-disable-line\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nconst SUBTREE_FILE_MAGIC = 0x74627573;\nconst SUBTREE_FILE_VERSION = 1;\n/**\n * Parse subtree file\n * Spec - https://github.com/CesiumGS/3d-tiles/tree/main/extensions/3DTILES_implicit_tiling#subtree-file-format\n * @param data\n * @returns\n */\n// eslint-disable-next-line max-statements\nexport default async function parse3DTilesSubtree(data, options, context) {\n    const magic = new Uint32Array(data.slice(0, 4));\n    if (magic[0] !== SUBTREE_FILE_MAGIC) {\n        throw new Error('Wrong subtree file magic number');\n    }\n    const version = new Uint32Array(data.slice(4, 8));\n    if (version[0] !== SUBTREE_FILE_VERSION) {\n        throw new Error('Wrong subtree file verson, must be 1');\n    }\n    const jsonByteLength = parseUint64Value(data.slice(8, 16));\n    const stringAttribute = new Uint8Array(data, 24, jsonByteLength);\n    const textDecoder = new TextDecoder('utf8');\n    const string = textDecoder.decode(stringAttribute);\n    const subtree = JSON.parse(string);\n    const binaryByteLength = parseUint64Value(data.slice(16, 24));\n    let internalBinaryBuffer = new ArrayBuffer(0);\n    if (binaryByteLength) {\n        internalBinaryBuffer = data.slice(24 + jsonByteLength);\n    }\n    await loadExplicitBitstream(subtree, subtree.tileAvailability, internalBinaryBuffer, context);\n    if (Array.isArray(subtree.contentAvailability)) {\n        for (const contentAvailability of subtree.contentAvailability) {\n            await loadExplicitBitstream(subtree, contentAvailability, internalBinaryBuffer, context);\n        }\n    }\n    else {\n        await loadExplicitBitstream(subtree, subtree.contentAvailability, internalBinaryBuffer, context);\n    }\n    await loadExplicitBitstream(subtree, subtree.childSubtreeAvailability, internalBinaryBuffer, context);\n    return subtree;\n}\n/**\n * Load explicit bitstream for subtree availability data.\n * @param subtree - subtree data\n * @param availabilityObject - tileAvailability / contentAvailability / childSubtreeAvailability object\n * @param internalBinaryBuffer - subtree binary buffer\n * @param context - loaders.gl context\n */\nexport async function loadExplicitBitstream(subtree, availabilityObject, internalBinaryBuffer, context) {\n    const bufferViewIndex = Number.isFinite(availabilityObject.bitstream)\n        ? availabilityObject.bitstream\n        : availabilityObject.bufferView;\n    if (typeof bufferViewIndex !== 'number') {\n        return;\n    }\n    const bufferView = subtree.bufferViews[bufferViewIndex];\n    const buffer = subtree.buffers[bufferView.buffer];\n    if (!context?.baseUrl) {\n        throw new Error('Url is not provided');\n    }\n    if (!context.fetch) {\n        throw new Error('fetch is not provided');\n    }\n    // External bitstream loading\n    if (buffer.uri) {\n        const bufferUri = `${context?.baseUrl || ''}/${buffer.uri}`;\n        const response = await context.fetch(bufferUri);\n        const data = await response.arrayBuffer();\n        availabilityObject.explicitBitstream = new Uint8Array(data, bufferView.byteOffset, bufferView.byteLength);\n        return;\n    }\n    const bufferStart = subtree.buffers\n        .slice(0, bufferView.buffer)\n        .reduce((offset, buf) => offset + buf.byteLength, 0);\n    availabilityObject.explicitBitstream = new Uint8Array(internalBinaryBuffer.slice(bufferStart, bufferStart + buffer.byteLength), bufferView.byteOffset, bufferView.byteLength);\n}\n/**\n * Parse buffer to return uint64 value\n * @param buffer\n * @returns 64-bit value until precision is lost after Number.MAX_SAFE_INTEGER\n */\nfunction parseUint64Value(buffer) {\n    const dataView = new DataView(buffer);\n    const left = dataView.getUint32(0, true);\n    const right = dataView.getUint32(4, true);\n    // combine the two 32-bit values\n    return left + 2 ** 32 * right;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport parse3DTilesSubtree from \"./lib/parsers/helpers/parse-3d-tile-subtree.js\";\nimport { VERSION } from \"./lib/utils/version.js\";\n/**\n * Loader for 3D Tiles Subtree\n */\nexport const Tile3DSubtreeLoader = {\n    dataType: null,\n    batchType: null,\n    id: '3d-tiles-subtree',\n    name: '3D Tiles Subtree',\n    module: '3d-tiles',\n    version: VERSION,\n    extensions: ['subtree'],\n    mimeTypes: ['application/octet-stream'],\n    tests: ['subtree'],\n    parse: parse3DTilesSubtree,\n    options: {}\n};\n", "/**\n * @license\n * Copyright 2009 The Closure Library Authors\n * Copyright 2020 Daniel Wirtz / The long.js Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// WebAssembly optimizations to do native i64 multiplication and divide\nvar wasm = null;\ntry {\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n  ])), {}).exports;\n} catch (e) {\n  // no wasm support :(\n}\n\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nfunction Long(low, high, unsigned) {\n\n  /**\n   * The low 32 bits as a signed value.\n   * @type {number}\n   */\n  this.low = low | 0;\n\n  /**\n   * The high 32 bits as a signed value.\n   * @type {number}\n   */\n  this.high = high | 0;\n\n  /**\n   * Whether unsigned or not.\n   * @type {boolean}\n   */\n  this.unsigned = !!unsigned;\n}\n\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\n\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nfunction isLong(obj) {\n  return (obj && obj[\"__isLong__\"]) === true;\n}\n\n/**\n * @function\n * @param {*} value number\n * @returns {number}\n * @inner\n */\nfunction ctz32(value) {\n  var c = Math.clz32(value & -value);\n  return value ? 31 - c : c;\n}\n\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\nLong.isLong = isLong;\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromInt(value, unsigned) {\n  var obj, cachedObj, cache;\n  if (unsigned) {\n    value >>>= 0;\n    if (cache = (0 <= value && value < 256)) {\n      cachedObj = UINT_CACHE[value];\n      if (cachedObj)\n        return cachedObj;\n    }\n    obj = fromBits(value, 0, true);\n    if (cache)\n      UINT_CACHE[value] = obj;\n    return obj;\n  } else {\n    value |= 0;\n    if (cache = (-128 <= value && value < 128)) {\n      cachedObj = INT_CACHE[value];\n      if (cachedObj)\n        return cachedObj;\n    }\n    obj = fromBits(value, value < 0 ? -1 : 0, false);\n    if (cache)\n      INT_CACHE[value] = obj;\n    return obj;\n  }\n}\n\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\nLong.fromInt = fromInt;\n\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromNumber(value, unsigned) {\n  if (isNaN(value))\n    return unsigned ? UZERO : ZERO;\n  if (unsigned) {\n    if (value < 0)\n      return UZERO;\n    if (value >= TWO_PWR_64_DBL)\n      return MAX_UNSIGNED_VALUE;\n  } else {\n    if (value <= -TWO_PWR_63_DBL)\n      return MIN_VALUE;\n    if (value + 1 >= TWO_PWR_63_DBL)\n      return MAX_VALUE;\n  }\n  if (value < 0)\n    return fromNumber(-value, unsigned).neg();\n  return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\nLong.fromNumber = fromNumber;\n\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromBits(lowBits, highBits, unsigned) {\n  return new Long(lowBits, highBits, unsigned);\n}\n\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\nLong.fromBits = fromBits;\n\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nfunction fromString(str, unsigned, radix) {\n  if (str.length === 0)\n    throw Error('empty string');\n  if (typeof unsigned === 'number') {\n    // For goog.math.long compatibility\n    radix = unsigned;\n    unsigned = false;\n  } else {\n    unsigned = !!unsigned;\n  }\n  if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n    return unsigned ? UZERO : ZERO;\n  radix = radix || 10;\n  if (radix < 2 || 36 < radix)\n    throw RangeError('radix');\n\n  var p;\n  if ((p = str.indexOf('-')) > 0)\n    throw Error('interior hyphen');\n  else if (p === 0) {\n    return fromString(str.substring(1), unsigned, radix).neg();\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = fromNumber(pow_dbl(radix, 8));\n\n  var result = ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i),\n      value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = fromNumber(pow_dbl(radix, size));\n      result = result.mul(power).add(fromNumber(value));\n    } else {\n      result = result.mul(radixToPower);\n      result = result.add(fromNumber(value));\n    }\n  }\n  result.unsigned = unsigned;\n  return result;\n}\n\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\nLong.fromString = fromString;\n\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromValue(val, unsigned) {\n  if (typeof val === 'number')\n    return fromNumber(val, unsigned);\n  if (typeof val === 'string')\n    return fromString(val, unsigned);\n  // Throws for non-objects, converts non-instanceof Long:\n  return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\nLong.fromValue = fromValue;\n\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n\n/**\n * @type {!Long}\n * @inner\n */\nvar ZERO = fromInt(0);\n\n/**\n * Signed zero.\n * @type {!Long}\n */\nLong.ZERO = ZERO;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar UZERO = fromInt(0, true);\n\n/**\n * Unsigned zero.\n * @type {!Long}\n */\nLong.UZERO = UZERO;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar ONE = fromInt(1);\n\n/**\n * Signed one.\n * @type {!Long}\n */\nLong.ONE = ONE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar UONE = fromInt(1, true);\n\n/**\n * Unsigned one.\n * @type {!Long}\n */\nLong.UONE = UONE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar NEG_ONE = fromInt(-1);\n\n/**\n * Signed negative one.\n * @type {!Long}\n */\nLong.NEG_ONE = NEG_ONE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n\n/**\n * Maximum signed value.\n * @type {!Long}\n */\nLong.MAX_VALUE = MAX_VALUE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n\n/**\n * Minimum signed value.\n * @type {!Long}\n */\nLong.MIN_VALUE = MIN_VALUE;\n\n/**\n * @alias Long.prototype\n * @inner\n */\nvar LongPrototype = Long.prototype;\n\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nLongPrototype.toInt = function toInt() {\n  return this.unsigned ? this.low >>> 0 : this.low;\n};\n\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nLongPrototype.toNumber = function toNumber() {\n  if (this.unsigned)\n    return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\n  return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n};\n\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nLongPrototype.toString = function toString(radix) {\n  radix = radix || 10;\n  if (radix < 2 || 36 < radix)\n    throw RangeError('radix');\n  if (this.isZero())\n    return '0';\n  if (this.isNegative()) { // Unsigned Longs are never negative\n    if (this.eq(MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = fromNumber(radix),\n        div = this.div(radixLong),\n        rem1 = div.mul(radixLong).sub(this);\n      return div.toString(radix) + rem1.toInt().toString(radix);\n    } else\n      return '-' + this.neg().toString(radix);\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\n    rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.div(radixToPower),\n      intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\n      digits = intval.toString(radix);\n    rem = remDiv;\n    if (rem.isZero())\n      return digits + result;\n    else {\n      while (digits.length < 6)\n        digits = '0' + digits;\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nLongPrototype.getHighBits = function getHighBits() {\n  return this.high;\n};\n\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\n  return this.high >>> 0;\n};\n\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nLongPrototype.getLowBits = function getLowBits() {\n  return this.low;\n};\n\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\n  return this.low >>> 0;\n};\n\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\n  if (this.isNegative()) // Unsigned Longs are never negative\n    return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n  var val = this.high != 0 ? this.high : this.low;\n  for (var bit = 31; bit > 0; bit--)\n    if ((val & (1 << bit)) != 0)\n      break;\n  return this.high != 0 ? bit + 33 : bit + 1;\n};\n\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isZero = function isZero() {\n  return this.high === 0 && this.low === 0;\n};\n\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\nLongPrototype.eqz = LongPrototype.isZero;\n\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isNegative = function isNegative() {\n  return !this.unsigned && this.high < 0;\n};\n\n/**\n * Tests if this Long's value is positive or zero.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isPositive = function isPositive() {\n  return this.unsigned || this.high >= 0;\n};\n\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isOdd = function isOdd() {\n  return (this.low & 1) === 1;\n};\n\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isEven = function isEven() {\n  return (this.low & 1) === 0;\n};\n\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.equals = function equals(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n    return false;\n  return this.high === other.high && this.low === other.low;\n};\n\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.eq = LongPrototype.equals;\n\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.notEquals = function notEquals(other) {\n  return !this.eq(/* validates */ other);\n};\n\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.neq = LongPrototype.notEquals;\n\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.ne = LongPrototype.notEquals;\n\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.lessThan = function lessThan(other) {\n  return this.comp(/* validates */ other) < 0;\n};\n\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.lt = LongPrototype.lessThan;\n\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\n  return this.comp(/* validates */ other) <= 0;\n};\n\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\n\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.le = LongPrototype.lessThanOrEqual;\n\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.greaterThan = function greaterThan(other) {\n  return this.comp(/* validates */ other) > 0;\n};\n\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.gt = LongPrototype.greaterThan;\n\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\n  return this.comp(/* validates */ other) >= 0;\n};\n\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\n\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\n\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nLongPrototype.compare = function compare(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  if (this.eq(other))\n    return 0;\n  var thisNeg = this.isNegative(),\n    otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg)\n    return -1;\n  if (!thisNeg && otherNeg)\n    return 1;\n  // At this point the sign bits are the same\n  if (!this.unsigned)\n    return this.sub(other).isNegative() ? -1 : 1;\n  // Both are positive if at least one is unsigned\n  return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\n};\n\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nLongPrototype.comp = LongPrototype.compare;\n\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nLongPrototype.negate = function negate() {\n  if (!this.unsigned && this.eq(MIN_VALUE))\n    return MIN_VALUE;\n  return this.not().add(ONE);\n};\n\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\nLongPrototype.neg = LongPrototype.negate;\n\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nLongPrototype.add = function add(addend) {\n  if (!isLong(addend))\n    addend = fromValue(addend);\n\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high >>> 16;\n  var a32 = this.high & 0xFFFF;\n  var a16 = this.low >>> 16;\n  var a00 = this.low & 0xFFFF;\n\n  var b48 = addend.high >>> 16;\n  var b32 = addend.high & 0xFFFF;\n  var b16 = addend.low >>> 16;\n  var b00 = addend.low & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n};\n\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nLongPrototype.subtract = function subtract(subtrahend) {\n  if (!isLong(subtrahend))\n    subtrahend = fromValue(subtrahend);\n  return this.add(subtrahend.neg());\n};\n\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nLongPrototype.sub = LongPrototype.subtract;\n\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nLongPrototype.multiply = function multiply(multiplier) {\n  if (this.isZero())\n    return this;\n  if (!isLong(multiplier))\n    multiplier = fromValue(multiplier);\n\n  // use wasm support if present\n  if (wasm) {\n    var low = wasm[\"mul\"](this.low,\n      this.high,\n      multiplier.low,\n      multiplier.high);\n    return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n  }\n\n  if (multiplier.isZero())\n    return this.unsigned ? UZERO : ZERO;\n  if (this.eq(MIN_VALUE))\n    return multiplier.isOdd() ? MIN_VALUE : ZERO;\n  if (multiplier.eq(MIN_VALUE))\n    return this.isOdd() ? MIN_VALUE : ZERO;\n\n  if (this.isNegative()) {\n    if (multiplier.isNegative())\n      return this.neg().mul(multiplier.neg());\n    else\n      return this.neg().mul(multiplier).neg();\n  } else if (multiplier.isNegative())\n    return this.mul(multiplier.neg()).neg();\n\n  // If both longs are small, use float multiplication\n  if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\n    return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\n\n  // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high >>> 16;\n  var a32 = this.high & 0xFFFF;\n  var a16 = this.low >>> 16;\n  var a00 = this.low & 0xFFFF;\n\n  var b48 = multiplier.high >>> 16;\n  var b32 = multiplier.high & 0xFFFF;\n  var b16 = multiplier.low >>> 16;\n  var b00 = multiplier.low & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n};\n\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nLongPrototype.mul = LongPrototype.multiply;\n\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nLongPrototype.divide = function divide(divisor) {\n  if (!isLong(divisor))\n    divisor = fromValue(divisor);\n  if (divisor.isZero())\n    throw Error('division by zero');\n\n  // use wasm support if present\n  if (wasm) {\n    // guard against signed division overflow: the largest\n    // negative number / -1 would be 1 larger than the largest\n    // positive number, due to two's complement.\n    if (!this.unsigned &&\n      this.high === -0x80000000 &&\n      divisor.low === -1 && divisor.high === -1) {\n      // be consistent with non-wasm code path\n      return this;\n    }\n    var low = (this.unsigned ? wasm[\"div_u\"] : wasm[\"div_s\"])(\n      this.low,\n      this.high,\n      divisor.low,\n      divisor.high\n    );\n    return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n  }\n\n  if (this.isZero())\n    return this.unsigned ? UZERO : ZERO;\n  var approx, rem, res;\n  if (!this.unsigned) {\n    // This section is only relevant for signed longs and is derived from the\n    // closure library as a whole.\n    if (this.eq(MIN_VALUE)) {\n      if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\n        return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\n      else if (divisor.eq(MIN_VALUE))\n        return ONE;\n      else {\n        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n        var halfThis = this.shr(1);\n        approx = halfThis.div(divisor).shl(1);\n        if (approx.eq(ZERO)) {\n          return divisor.isNegative() ? ONE : NEG_ONE;\n        } else {\n          rem = this.sub(divisor.mul(approx));\n          res = approx.add(rem.div(divisor));\n          return res;\n        }\n      }\n    } else if (divisor.eq(MIN_VALUE))\n      return this.unsigned ? UZERO : ZERO;\n    if (this.isNegative()) {\n      if (divisor.isNegative())\n        return this.neg().div(divisor.neg());\n      return this.neg().div(divisor).neg();\n    } else if (divisor.isNegative())\n      return this.div(divisor.neg()).neg();\n    res = ZERO;\n  } else {\n    // The algorithm below has not been made for unsigned longs. It's therefore\n    // required to take special care of the MSB prior to running it.\n    if (!divisor.unsigned)\n      divisor = divisor.toUnsigned();\n    if (divisor.gt(this))\n      return UZERO;\n    if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n      return UONE;\n    res = UZERO;\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  rem = this;\n  while (rem.gte(divisor)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2),\n      delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\n\n      // Decrease the approximation until it is smaller than the remainder.  Note\n      // that if it is too large, the product overflows and is negative.\n      approxRes = fromNumber(approx),\n      approxRem = approxRes.mul(divisor);\n    while (approxRem.isNegative() || approxRem.gt(rem)) {\n      approx -= delta;\n      approxRes = fromNumber(approx, this.unsigned);\n      approxRem = approxRes.mul(divisor);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero())\n      approxRes = ONE;\n\n    res = res.add(approxRes);\n    rem = rem.sub(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nLongPrototype.div = LongPrototype.divide;\n\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nLongPrototype.modulo = function modulo(divisor) {\n  if (!isLong(divisor))\n    divisor = fromValue(divisor);\n\n  // use wasm support if present\n  if (wasm) {\n    var low = (this.unsigned ? wasm[\"rem_u\"] : wasm[\"rem_s\"])(\n      this.low,\n      this.high,\n      divisor.low,\n      divisor.high\n    );\n    return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n  }\n\n  return this.sub(this.div(divisor).mul(divisor));\n};\n\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nLongPrototype.mod = LongPrototype.modulo;\n\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nLongPrototype.rem = LongPrototype.modulo;\n\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nLongPrototype.not = function not() {\n  return fromBits(~this.low, ~this.high, this.unsigned);\n};\n\n/**\n * Returns count leading zeros of this Long.\n * @this {!Long}\n * @returns {!number}\n */\nLongPrototype.countLeadingZeros = function countLeadingZeros() {\n  return this.high ? Math.clz32(this.high) : Math.clz32(this.low) + 32;\n};\n\n/**\n * Returns count leading zeros. This is an alias of {@link Long#countLeadingZeros}.\n * @function\n * @param {!Long}\n * @returns {!number}\n */\nLongPrototype.clz = LongPrototype.countLeadingZeros;\n\n/**\n * Returns count trailing zeros of this Long.\n * @this {!Long}\n * @returns {!number}\n */\nLongPrototype.countTrailingZeros = function countTrailingZeros() {\n  return this.low ? ctz32(this.low) : ctz32(this.high) + 32;\n};\n\n/**\n * Returns count trailing zeros. This is an alias of {@link Long#countTrailingZeros}.\n * @function\n * @param {!Long}\n * @returns {!number}\n */\nLongPrototype.ctz = LongPrototype.countTrailingZeros;\n\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nLongPrototype.and = function and(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n};\n\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nLongPrototype.or = function or(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n};\n\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nLongPrototype.xor = function xor(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\n  if (isLong(numBits))\n    numBits = numBits.toInt();\n  if ((numBits &= 63) === 0)\n    return this;\n  else if (numBits < 32)\n    return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\n  else\n    return fromBits(0, this.low << (numBits - 32), this.unsigned);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shl = LongPrototype.shiftLeft;\n\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shiftRight = function shiftRight(numBits) {\n  if (isLong(numBits))\n    numBits = numBits.toInt();\n  if ((numBits &= 63) === 0)\n    return this;\n  else if (numBits < 32)\n    return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\n  else\n    return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\n};\n\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shr = LongPrototype.shiftRight;\n\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\n  if (isLong(numBits)) numBits = numBits.toInt();\n  if ((numBits &= 63) === 0) return this;\n  if (numBits < 32) return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >>> numBits, this.unsigned);\n  if (numBits === 32) return fromBits(this.high, 0, this.unsigned);\n  return fromBits(this.high >>> (numBits - 32), 0, this.unsigned);\n};\n\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\n\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nLongPrototype.rotateLeft = function rotateLeft(numBits) {\n  var b;\n  if (isLong(numBits)) numBits = numBits.toInt();\n  if ((numBits &= 63) === 0) return this;\n  if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  if (numBits < 32) {\n    b = (32 - numBits);\n    return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n  }\n  numBits -= 32;\n  b = (32 - numBits);\n  return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n}\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nLongPrototype.rotl = LongPrototype.rotateLeft;\n\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nLongPrototype.rotateRight = function rotateRight(numBits) {\n  var b;\n  if (isLong(numBits)) numBits = numBits.toInt();\n  if ((numBits &= 63) === 0) return this;\n  if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  if (numBits < 32) {\n    b = (32 - numBits);\n    return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n  }\n  numBits -= 32;\n  b = (32 - numBits);\n  return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n}\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nLongPrototype.rotr = LongPrototype.rotateRight;\n\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nLongPrototype.toSigned = function toSigned() {\n  if (!this.unsigned)\n    return this;\n  return fromBits(this.low, this.high, false);\n};\n\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nLongPrototype.toUnsigned = function toUnsigned() {\n  if (this.unsigned)\n    return this;\n  return fromBits(this.low, this.high, true);\n};\n\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nLongPrototype.toBytes = function toBytes(le) {\n  return le ? this.toBytesLE() : this.toBytesBE();\n};\n\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nLongPrototype.toBytesLE = function toBytesLE() {\n  var hi = this.high,\n    lo = this.low;\n  return [\n    lo & 0xff,\n    lo >>> 8 & 0xff,\n    lo >>> 16 & 0xff,\n    lo >>> 24,\n    hi & 0xff,\n    hi >>> 8 & 0xff,\n    hi >>> 16 & 0xff,\n    hi >>> 24\n  ];\n};\n\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nLongPrototype.toBytesBE = function toBytesBE() {\n  var hi = this.high,\n    lo = this.low;\n  return [\n    hi >>> 24,\n    hi >>> 16 & 0xff,\n    hi >>> 8 & 0xff,\n    hi & 0xff,\n    lo >>> 24,\n    lo >>> 16 & 0xff,\n    lo >>> 8 & 0xff,\n    lo & 0xff\n  ];\n};\n\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\n  return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n};\n\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\n  return new Long(\n    bytes[0] |\n    bytes[1] << 8 |\n    bytes[2] << 16 |\n    bytes[3] << 24,\n    bytes[4] |\n    bytes[5] << 8 |\n    bytes[6] << 16 |\n    bytes[7] << 24,\n    unsigned\n  );\n};\n\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\n  return new Long(\n    bytes[4] << 24 |\n    bytes[5] << 16 |\n    bytes[6] << 8 |\n    bytes[7],\n    bytes[0] << 24 |\n    bytes[1] << 16 |\n    bytes[2] << 8 |\n    bytes[3],\n    unsigned\n  );\n};\n\nexport default Long;\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport Long from 'long';\nconst MAXIMUM_TOKEN_LENGTH = 16;\n/**\n * Convert the S2 token to the S2 cell ID\n * @param token {string} A string that is the cell's hex token. Zero cell ID is represented as 'X'.\n * @returns {Long} Cell id that is a 64-bit encoding of a face and a Hilbert curve parameter on that face.\n * See {@link https://github.com/google/s2-geometry-library-java/blob/c04b68bf3197a9c34082327eeb3aec7ab7c85da1/src/com/google/common/geometry/S2CellId.java#L439} for more information\n */\nexport function getS2CellIdFromToken(token) {\n    if (token === 'X') {\n        token = '';\n    }\n    // pad token with zeros to make the length 16 that is defined in MAXIMUM_TOKEN_LENGTH\n    const paddedToken = token.padEnd(MAXIMUM_TOKEN_LENGTH, '0');\n    return Long.fromString(paddedToken, true, 16); // Hex base\n}\n/**\n * Convert the S2 cell ID to the S2 token\n * @param cellId {Long} A 64-bit encoding of a face and a Hilbert curve parameter on that face.\n * @returns {string} A string that is the cell's hex token. Zero cell ID is represented as 'X'.\n */\nexport function getS2TokenFromCellId(cellId) {\n    if (cellId.isZero()) {\n        return 'X';\n    }\n    let numZeroDigits = cellId.countTrailingZeros();\n    const remainder = numZeroDigits % 4;\n    numZeroDigits = (numZeroDigits - remainder) / 4;\n    const trailingZeroHexChars = numZeroDigits;\n    numZeroDigits *= 4;\n    const x = cellId.shiftRightUnsigned(numZeroDigits);\n    const hexString = x.toString(16).replace(/0+$/, '');\n    const zeroString = Array(17 - trailingZeroHexChars - hexString.length).join('0');\n    return zeroString + hexString;\n}\n/**\n * Get one of four S2 cell's children.\n * @param cellId {Long} A 64-bit encoding of a face and a Hilbert curve parameter on that face.\n * The cell must NOT be a leaf one. So, the cell's level is in the range [0-29].\n * @param index {number} Child index defines one of four S2 cell's children. Must be in the range [0-3].\n * @returns The ID of the cell's child.\n */\nexport function getS2ChildCellId(cellId, index) {\n    // Shift sentinel bit 2 positions to the right.\n    const newLsb = lsb(cellId).shiftRightUnsigned(2);\n    // Insert child index before the sentinel bit.\n    const childCellId = cellId.add(Long.fromNumber(2 * index + 1 - 4).multiply(newLsb));\n    return childCellId;\n}\n/**\n * Return the lowest-numbered bit that is on for this cell id.\n * @private\n * @param cellId {Long} Cell id.\n * @returns {Long} The lowest-numbered bit that is on for this cell id.\n */\nfunction lsb(cellId) {\n    return cellId.and(cellId.not().add(1)); // eslint-disable-line\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT AND ISC\n// Copyright vis.gl contributors\n/*\nAdapted from s2-geometry under ISC License (ISC)\nCopyright (c) 2012-2016, Jon Atkins <github@jonatkins.com>\nCopyright (c) 2016, AJ ONeal <aj@daplie.com>\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\nimport Long from 'long';\n//\n// Functional Style\n//\nconst FACE_BITS = 3;\nconst MAX_LEVEL = 30;\nconst POS_BITS = 2 * MAX_LEVEL + 1; // 61 (60 bits of data, 1 bit lsb marker)\nconst RADIAN_TO_DEGREE = 180 / Math.PI;\n/**\n * Return the S2Cell\n * @param hilbertQuadkey {string} A string that is the Hilbert quad key (containing /)\n * @returns {@link S2Cell}\n */\n// eslint-disable-next-line max-statements\nexport function getS2CellFromQuadKey(hilbertQuadkey) {\n    if (hilbertQuadkey.length === 0) {\n        throw new Error(`Invalid Hilbert quad key ${hilbertQuadkey}`);\n    }\n    const parts = hilbertQuadkey.split('/');\n    const face = parseInt(parts[0], 10); // face is in the range [0..5]\n    const position = parts[1]; // position is in the range [0..4**30-1]\n    const maxLevel = position.length;\n    let level = 0;\n    const point = [0, 0];\n    for (let i = maxLevel - 1; i >= 0; i--) {\n        level = maxLevel - i;\n        const bit = position[i];\n        let rx = 0;\n        let ry = 0;\n        if (bit === '1') {\n            ry = 1;\n        }\n        else if (bit === '2') {\n            rx = 1;\n            ry = 1;\n        }\n        else if (bit === '3') {\n            rx = 1;\n        }\n        const val = Math.pow(2, level - 1);\n        rotateAndFlipQuadrant(val, point, rx, ry);\n        point[0] += val * rx;\n        point[1] += val * ry;\n    }\n    if (face % 2 === 1) {\n        const t = point[0];\n        point[0] = point[1];\n        point[1] = t;\n    }\n    return { face, ij: point, level };\n}\n/**\n * Convets S2 cell ID to the Hilbert quad key\n * @param cellId {Long} Cell id that is a 64-bit encoding of a face and a Hilbert curve parameter on that face\n * @returns {string} the Hilbert quad key (containing /) as a string in the format 'face/pos', where\n *  - face is a 10-base representation of the face number\n *  - pos is a 4-base representation of the position along the Hilbert curve. For example,\n *    pos == '13' means the following:\n *       The face is divided two times. After the first time the child cell with position 1 will be selected.\n *       Then, this cell will be divided the second time, and the child cell with position 3 will be selected.\n */\nexport function getS2QuadkeyFromCellId(cellId) {\n    if (cellId.isZero()) {\n        // Invalid token\n        return '';\n    }\n    let bin = cellId.toString(2);\n    while (bin.length < FACE_BITS + POS_BITS) {\n        // eslint-disable-next-line prefer-template\n        bin = '0' + bin;\n    }\n    // MUST come AFTER binstr has been left-padded with '0's\n    const lsbIndex = bin.lastIndexOf('1');\n    // substring(start, end) // includes start, does not include end\n    const faceB = bin.substring(0, 3);\n    // posB will always be a multiple of 2 (or it's invalid)\n    const posB = bin.substring(3, lsbIndex);\n    const levelN = posB.length / 2;\n    const faceS = Long.fromString(faceB, true, 2).toString(10);\n    /*\n      Here is a fix for the case when posB is an empty string that causes an exception in Long.fromString\n    */\n    let posS = '';\n    if (levelN !== 0) {\n        // posB is not an empty string, because levelN !== 0\n        posS = Long.fromString(posB, true, 2).toString(4);\n        while (posS.length < levelN) {\n            // eslint-disable-next-line prefer-template\n            posS = '0' + posS;\n        }\n    }\n    // Note, posS will be \"\" for the level==0, which corresponds to the full face.\n    // Example: Full face 0 (No subdivision, so level==0): Returns \"0/\"\n    // TODO: Is it ok?\n    return `${faceS}/${posS}`;\n}\n/**\n * Convets S2 the Hilbert quad key to cell ID.\n * @param quadkey {string} The Hilbert quad key (containing /) as a string in the format 'face/pos'\n * @returns {Long} Cell id that is a 64-bit encoding of a face and a Hilbert curve parameter on that face\n */\n/* eslint complexity: [\"error\", { \"max\": 14 }] */\nexport function getS2CellIdFromQuadkey(hilbertQuadkey) {\n    if (hilbertQuadkey.length === 0 || hilbertQuadkey.indexOf('/') !== 1) {\n        throw new Error(`Invalid Hilbert quad key ${hilbertQuadkey}`);\n    }\n    let idS = '';\n    const faceS = hilbertQuadkey[0];\n    switch (faceS) {\n        case '0':\n            idS += '000';\n            break;\n        case '1':\n            idS += '001';\n            break;\n        case '2':\n            idS += '010';\n            break;\n        case '3':\n            idS += '011';\n            break;\n        case '4':\n            idS += '100';\n            break;\n        case '5':\n            idS += '101';\n            break;\n        default:\n            throw new Error(`Invalid Hilbert quad key ${hilbertQuadkey}`);\n    }\n    const maxLevel = hilbertQuadkey.length;\n    // Don't convert position to Long, because it can contain leading zeros, which makes you handle it later.\n    for (let i = 2; i < maxLevel; i++) {\n        // The first char is a face, the second char is '/'\n        const p = hilbertQuadkey[i];\n        switch (p) {\n            case '0':\n                idS += '00';\n                break;\n            case '1':\n                idS += '01';\n                break;\n            case '2':\n                idS += '10';\n                break;\n            case '3':\n                idS += '11';\n                break;\n            default:\n                throw new Error(`Invalid Hilbert quad key ${hilbertQuadkey}`);\n        }\n    }\n    // Append the sentinel bit\n    idS += '1';\n    const paddedId = idS.padEnd(64, '0');\n    const id = Long.fromString(paddedId, true, 2);\n    return id;\n}\nexport function IJToST(ij, level, offsets) {\n    const maxSize = 1 << level;\n    return [(ij[0] + offsets[0]) / maxSize, (ij[1] + offsets[1]) / maxSize];\n}\nfunction singleSTtoUV(st) {\n    if (st >= 0.5) {\n        return (1 / 3.0) * (4 * st * st - 1);\n    }\n    return (1 / 3.0) * (1 - 4 * (1 - st) * (1 - st));\n}\nexport function STToUV(st) {\n    return [singleSTtoUV(st[0]), singleSTtoUV(st[1])];\n}\nexport function FaceUVToXYZ(face, [u, v]) {\n    switch (face) {\n        case 0:\n            return [1, u, v];\n        case 1:\n            return [-u, 1, v];\n        case 2:\n            return [-u, -v, 1];\n        case 3:\n            return [-1, -v, -u];\n        case 4:\n            return [v, -1, -u];\n        case 5:\n            return [v, u, -1];\n        default:\n            throw new Error('Invalid face');\n    }\n}\nexport function XYZToLngLat([x, y, z]) {\n    const lat = Math.atan2(z, Math.sqrt(x * x + y * y));\n    const lng = Math.atan2(y, x);\n    return [lng * RADIAN_TO_DEGREE, lat * RADIAN_TO_DEGREE];\n}\nfunction rotateAndFlipQuadrant(n, point, rx, ry) {\n    if (ry === 0) {\n        if (rx === 1) {\n            point[0] = n - 1 - point[0];\n            point[1] = n - 1 - point[1];\n        }\n        const x = point[0];\n        point[0] = point[1];\n        point[1] = x;\n    }\n}\n/**\n * Retrieve S2 geometry center\n * @param s2cell {S2Cell} S2 cell\n * @returns {[number, number]} Longitude and Latitude coordinates of the S2 cell's center\n */\nexport function getS2LngLatFromS2Cell(s2Cell) {\n    const st = IJToST(s2Cell.ij, s2Cell.level, [0.5, 0.5]);\n    const uv = STToUV(st);\n    const xyz = FaceUVToXYZ(s2Cell.face, uv);\n    return XYZToLngLat(xyz);\n}\n/**\n * Return longitude and latitude of four corners of the cell.\n * @param s2Cell {S2Cell} S2 cell\n * @returns {Array<[number, number]>} Array of longitude and latitude pairs (in degrees) for four corners of the cell.\n */\nexport function getCornerLngLats(s2Cell) {\n    const result = [];\n    const offsets = [\n        [0.0, 0.0],\n        [0.0, 1.0],\n        [1.0, 1.0],\n        [1.0, 0.0]\n    ];\n    for (let i = 0; i < 4; i++) {\n        const st = IJToST(s2Cell.ij, s2Cell.level, offsets[i]);\n        const uv = STToUV(st);\n        const xyz = FaceUVToXYZ(s2Cell.face, uv);\n        result.push(XYZToLngLat(xyz));\n    }\n    return result;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { IJToST, STToUV, FaceUVToXYZ, XYZToLngLat } from \"../s2geometry/s2-geometry.js\";\nconst MAX_RESOLUTION = 100;\n/**\n * Get a polygon with corner coordinates for an S2 cell\n * @param s2cell {S2Cell} S2 cell\n * @return {Float64Array} - a simple polygon in flat array format: [lng0, lat0, lng1, lat1, ...]\n *   - the polygon is closed, i.e. last coordinate is a copy of the first coordinate\n */\n// eslint-disable-next-line max-statements\nexport function getS2BoundaryFlatFromS2Cell(s2cell) {\n    const { face, ij, level } = s2cell;\n    const offsets = [\n        [0, 0],\n        [0, 1],\n        [1, 1],\n        [1, 0],\n        [0, 0]\n    ];\n    // The S2 cell edge is curved: http://s2geometry.io/\n    // This is more prominent at lower levels\n    // resolution is the number of segments to generate per edge.\n    // We exponentially reduce resolution as level increases so it doesn't affect perf\n    // when there are a large number of cells\n    const resolution = Math.max(1, Math.ceil(MAX_RESOLUTION * Math.pow(2, -level)));\n    const result = new Float64Array(4 * resolution * 2 + 2);\n    let ptIndex = 0;\n    let prevLng = 0;\n    for (let i = 0; i < 4; i++) {\n        const offset = offsets[i].slice(0);\n        const nextOffset = offsets[i + 1];\n        const stepI = (nextOffset[0] - offset[0]) / resolution;\n        const stepJ = (nextOffset[1] - offset[1]) / resolution;\n        for (let j = 0; j < resolution; j++) {\n            offset[0] += stepI;\n            offset[1] += stepJ;\n            // Cell can be represented by coordinates IJ, ST, UV, XYZ\n            // http://s2geometry.io/devguide/s2cell_hierarchy#coordinate-systems\n            const st = IJToST(ij, level, offset);\n            const uv = STToUV(st);\n            const xyz = FaceUVToXYZ(face, uv);\n            const lngLat = XYZToLngLat(xyz);\n            // Adjust longitude for Web Mercator projection\n            if (Math.abs(lngLat[1]) > 89.999) {\n                lngLat[0] = prevLng;\n            }\n            const deltaLng = lngLat[0] - prevLng;\n            lngLat[0] += deltaLng > 180 ? -360 : deltaLng < -180 ? 360 : 0;\n            result[ptIndex++] = lngLat[0];\n            result[ptIndex++] = lngLat[1];\n            prevLng = lngLat[0];\n        }\n    }\n    // close the loop\n    result[ptIndex++] = result[0];\n    result[ptIndex++] = result[1];\n    return result;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { getS2CellFromQuadKey, getS2QuadkeyFromCellId } from \"./s2-geometry.js\";\nimport { getS2CellIdFromToken } from \"../s2-token-functions.js\";\n/**\n * Return the S2Cell from the cell's hex token or the Hilbert quad key\n * @param tokenOrKey {string} A string that is the cell's hex token or the Hilbert quad key (containing /)\n * @returns {@link S2Cell}\n */\nexport function getS2Cell(tokenOrKey) {\n    const key = getS2QuadKey(tokenOrKey);\n    const s2cell = getS2CellFromQuadKey(key);\n    return s2cell;\n}\n/**\n * Get the underlying Hilbert quad key\n * @param tokenOrKey {string} A string that is the cell's hex token or the Hilbert quad key (containing /)\n * @returns Hilbert quad key\n */\nexport function getS2QuadKey(tokenOrKey) {\n    if (tokenOrKey.indexOf('/') > 0) {\n        // is Hilbert quad key\n        return tokenOrKey;\n    }\n    // is S2 cell's hex token\n    const id = getS2CellIdFromToken(tokenOrKey);\n    return getS2QuadkeyFromCellId(id);\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { getS2BoundaryFlatFromS2Cell } from \"./converters/s2-to-boundary.js\";\nimport { getS2LngLatFromS2Cell } from \"./s2geometry/s2-geometry.js\";\nimport { getS2Cell } from \"./s2geometry/s2-cell-utils.js\";\n// GEOMETRY\n/**\n * Retrieve S2 geometry center\n * @param s2Token {string} A string that is the cell's hex token\n * @returns {[number, number]} Longitude and Latitude coordinates of the S2 cell's center\n */\nexport function getS2LngLat(s2Token) {\n    const s2cell = getS2Cell(s2Token);\n    return getS2LngLatFromS2Cell(s2cell);\n}\n/**\n * Get a polygon with corner coordinates for an s2 cell\n * @param tokenOrKey {string} A string that is the cell's hex token or the Hilbert quad key (containing /)\n * @return {Float64Array} - a simple polygon in flat array format: [lng0, lat0, lng1, lat1, ...]\n *   - the polygon is closed, i.e. last coordinate is a copy of the first coordinate\n */\nexport function getS2BoundaryFlat(tokenOrKey) {\n    const s2cell = getS2Cell(tokenOrKey);\n    return getS2BoundaryFlatFromS2Cell(s2cell);\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { getS2BoundaryFlatFromS2Cell } from \"./s2-to-boundary.js\";\nimport { getS2Cell } from \"../s2geometry/s2-cell-utils.js\";\n/**\n * Converts S2 cell to the 2D region\n * @param s2cell {S2Cell} S2 cell to convert to 2D region\n * @returns 2D region as an object containing: west, north, east, south in degrees\n */\nexport function getS2Region(s2cell) {\n    let region;\n    if (s2cell.face === 2 || s2cell.face === 5) {\n        //    let corners: Float64Array;\n        let corners = null;\n        let len = 0;\n        for (let i = 0; i < 4; i++) {\n            const key = `${s2cell.face}/${i}`;\n            const cell = getS2Cell(key);\n            const corns = getS2BoundaryFlatFromS2Cell(cell);\n            if (typeof corners === 'undefined' || corners === null)\n                corners = new Float64Array(4 * corns.length);\n            corners.set(corns, len);\n            len += corns.length;\n        }\n        region = get2DRegionFromS2Corners(corners);\n    }\n    else {\n        const corners = getS2BoundaryFlatFromS2Cell(s2cell);\n        region = get2DRegionFromS2Corners(corners);\n    }\n    return region;\n}\n/**\n * Converts the S2 cell defined by its corners to the 2D region\n * @param corners {Float64Array} - a simple polygon in flat array format: [lng0, lat0, lng1, lat1, ...]\n * @returns 2D region as an object containing: west, north, east, south in degrees\n */\nfunction get2DRegionFromS2Corners(corners) {\n    if (corners.length % 2 !== 0) {\n        throw new Error('Invalid corners');\n    }\n    const longitudes = [];\n    const latitudes = [];\n    for (let i = 0; i < corners.length; i += 2) {\n        longitudes.push(corners[i]);\n        latitudes.push(corners[i + 1]);\n    }\n    longitudes.sort((a, b) => a - b);\n    latitudes.sort((a, b) => a - b);\n    // Return the region in degrees\n    return {\n        west: longitudes[0],\n        east: longitudes[longitudes.length - 1],\n        north: latitudes[latitudes.length - 1],\n        south: latitudes[0]\n    };\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { getS2Cell } from \"../s2geometry/s2-cell-utils.js\";\nimport { getS2Region } from \"./s2-to-region.js\";\nimport { Vector3 } from '@math.gl/core';\n/**\n * Converts S2HeightInfo to corner points of an oriented bounding box\n * Can be used to constuct an OrientedBoundingBox instance\n * @param tokenOrKey {string} A string that is the cell's hex token or the Hilbert quad key (containing /)\n * @param heightInfo {S2HeightInfo} min and max height of the box\n * @returns corner points of the oriented bounding box\n */\nexport function getS2OrientedBoundingBoxCornerPoints(tokenOrKey, // This can be an S2 key or token\nheightInfo) {\n    const min = heightInfo?.minimumHeight || 0;\n    const max = heightInfo?.maximumHeight || 0;\n    const s2cell = getS2Cell(tokenOrKey);\n    const region = getS2Region(s2cell);\n    // region lng/lat are in degrees\n    const W = region.west;\n    const S = region.south;\n    const E = region.east;\n    const N = region.north;\n    const points = [];\n    points.push(new Vector3(W, N, min));\n    points.push(new Vector3(E, N, min));\n    points.push(new Vector3(E, S, min));\n    points.push(new Vector3(W, S, min));\n    points.push(new Vector3(W, N, max));\n    points.push(new Vector3(E, N, max));\n    points.push(new Vector3(E, S, max));\n    points.push(new Vector3(W, S, max));\n    return points;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { Vector3 } from '@math.gl/core';\nimport { makeOrientedBoundingBoxFromPoints } from '@math.gl/culling';\nimport { getS2OrientedBoundingBoxCornerPoints } from \"../../utils/s2/index.js\";\nimport { getS2LngLat } from \"../../utils/s2/index.js\";\nimport { Ellipsoid } from '@math.gl/geospatial';\n/**\n * Converts S2VolumeInfo to OrientedBoundingBox\n * @param {S2VolumeInfo} s2VolumeInfo - s2 volume to convert\n * @returns Oriented Bounding Box of type Box\n */\nexport function convertS2BoundingVolumetoOBB(s2VolumeInfo) {\n    const token = s2VolumeInfo.token;\n    const heightInfo = {\n        minimumHeight: s2VolumeInfo.minimumHeight,\n        maximumHeight: s2VolumeInfo.maximumHeight\n    };\n    const corners = getS2OrientedBoundingBoxCornerPoints(token, heightInfo);\n    // Add a point that doesn't allow the box dive under the Earth\n    const center = getS2LngLat(token);\n    const centerLng = center[0];\n    const centerLat = center[1];\n    const point = Ellipsoid.WGS84.cartographicToCartesian([\n        centerLng,\n        centerLat,\n        heightInfo.maximumHeight\n    ]);\n    const centerPointAdditional = new Vector3(point[0], point[1], point[2]);\n    corners.push(centerPointAdditional);\n    // corners should be an array of Vector3 (XYZ)\n    const obb = makeOrientedBoundingBoxFromPoints(corners);\n    const box = [...obb.center, ...obb.halfAxes];\n    return box;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { Tile3DSubtreeLoader } from \"../../../tile-3d-subtree-loader.js\";\nimport { load } from '@loaders.gl/core';\nimport { default as log } from '@probe.gl/log';\nimport { getS2CellIdFromToken, getS2ChildCellId, getS2TokenFromCellId } from \"../../utils/s2/index.js\";\nimport { convertS2BoundingVolumetoOBB } from \"../../utils/obb/s2-corners-to-obb.js\";\nconst QUADTREE_DIVISION_COUNT = 4;\nconst OCTREE_DIVISION_COUNT = 8;\nconst SUBDIVISION_COUNT_MAP = {\n    QUADTREE: QUADTREE_DIVISION_COUNT,\n    OCTREE: OCTREE_DIVISION_COUNT\n};\nfunction getChildS2VolumeBox(s2VolumeBox, index, subdivisionScheme) {\n    if (s2VolumeBox?.box) {\n        // Check if the BoundingVolume is of type \"box\"\n        const cellId = getS2CellIdFromToken(s2VolumeBox.s2VolumeInfo.token);\n        const childCellId = getS2ChildCellId(cellId, index);\n        const childToken = getS2TokenFromCellId(childCellId);\n        // Clone object. Note, s2VolumeInfo is a plain object that doesn't contain any nested object.\n        // So, we can use the Spread Operator to make a shallow copy of the object.\n        const s2ChildVolumeInfo = { ...s2VolumeBox.s2VolumeInfo };\n        s2ChildVolumeInfo.token = childToken; // replace the token with the child's one\n        // In case of QUADTREE the sizeZ should NOT be changed!\n        // https://portal.ogc.org/files/102132\n        // A quadtree divides space only on the x and y dimensions.\n        // It divides each tile into 4 smaller tiles where the x and y dimensions are halved.\n        // The quadtree z minimum and maximum remain unchanged.\n        switch (subdivisionScheme) {\n            case 'OCTREE':\n                const s2VolumeInfo = s2VolumeBox.s2VolumeInfo;\n                const delta = s2VolumeInfo.maximumHeight - s2VolumeInfo.minimumHeight;\n                const sizeZ = delta / 2.0; // It's a next level (a child)\n                const midZ = s2VolumeInfo.minimumHeight + delta / 2.0;\n                s2VolumeInfo.minimumHeight = midZ - sizeZ;\n                s2VolumeInfo.maximumHeight = midZ + sizeZ;\n                break;\n            default:\n                break;\n        }\n        const box = convertS2BoundingVolumetoOBB(s2ChildVolumeInfo);\n        const childS2VolumeBox = {\n            box,\n            s2VolumeInfo: s2ChildVolumeInfo\n        };\n        return childS2VolumeBox;\n    }\n    return undefined;\n}\n/**\n * Recursively parse implicit tiles tree\n * Spec - https://github.com/CesiumGS/3d-tiles/tree/main/extensions/3DTILES_implicit_tiling\n * TODO Check out do we able to use Tile3D class as return type here.\n * @param subtree\n * @param lodMetricValue\n * @param options\n * @param parentData\n * @param childIndex\n * @param level\n * @param globalData\n */\n// eslint-disable-next-line max-statements\nexport async function parseImplicitTiles(params) {\n    const { implicitOptions, parentData = {\n        mortonIndex: 0,\n        x: 0,\n        y: 0,\n        z: 0\n    }, childIndex = 0, s2VolumeBox, loaderOptions } = params;\n    let { subtree, level = 0, globalData = {\n        level: 0,\n        mortonIndex: 0,\n        x: 0,\n        y: 0,\n        z: 0\n    } } = params;\n    const { subdivisionScheme, subtreeLevels, maximumLevel, contentUrlTemplate, subtreesUriTemplate, basePath } = implicitOptions;\n    const tile = { children: [], lodMetricValue: 0, contentUrl: '' };\n    if (!maximumLevel) {\n        // eslint-disable-next-line no-console\n        log.once(`Missing 'maximumLevel' or 'availableLevels' property. The subtree ${contentUrlTemplate} won't be loaded...`);\n        return tile;\n    }\n    const lev = level + globalData.level;\n    if (lev > maximumLevel) {\n        return tile;\n    }\n    const childrenPerTile = SUBDIVISION_COUNT_MAP[subdivisionScheme];\n    const bitsPerTile = Math.log2(childrenPerTile);\n    // childIndex is in range [0,4] for quadtrees and [0, 7] for octrees\n    const childX = childIndex & 0b01; // Get first bit for X\n    const childY = (childIndex >> 1) & 0b01; // Get second bit for Y\n    const childZ = (childIndex >> 2) & 0b01; // Get third bit for Z\n    const levelOffset = (childrenPerTile ** level - 1) / (childrenPerTile - 1);\n    let childTileMortonIndex = concatBits(parentData.mortonIndex, childIndex, bitsPerTile);\n    let tileAvailabilityIndex = levelOffset + childTileMortonIndex;\n    // Local tile coordinates\n    let childTileX = concatBits(parentData.x, childX, 1);\n    let childTileY = concatBits(parentData.y, childY, 1);\n    let childTileZ = concatBits(parentData.z, childZ, 1);\n    let isChildSubtreeAvailable = false;\n    if (level >= subtreeLevels) {\n        isChildSubtreeAvailable = getAvailabilityResult(subtree.childSubtreeAvailability, childTileMortonIndex);\n    }\n    const x = concatBits(globalData.x, childTileX, level);\n    const y = concatBits(globalData.y, childTileY, level);\n    const z = concatBits(globalData.z, childTileZ, level);\n    if (isChildSubtreeAvailable) {\n        const subtreePath = `${basePath}/${subtreesUriTemplate}`;\n        const childSubtreeUrl = replaceContentUrlTemplate(subtreePath, lev, x, y, z);\n        const childSubtree = await load(childSubtreeUrl, Tile3DSubtreeLoader, loaderOptions);\n        subtree = childSubtree;\n        globalData = {\n            mortonIndex: childTileMortonIndex,\n            x: childTileX,\n            y: childTileY,\n            z: childTileZ,\n            level\n        };\n        childTileMortonIndex = 0;\n        tileAvailabilityIndex = 0;\n        childTileX = 0;\n        childTileY = 0;\n        childTileZ = 0;\n        level = 0;\n    }\n    const isTileAvailable = getAvailabilityResult(subtree.tileAvailability, tileAvailabilityIndex);\n    if (!isTileAvailable) {\n        return tile;\n    }\n    const isContentAvailable = getAvailabilityResult(subtree.contentAvailability, tileAvailabilityIndex);\n    if (isContentAvailable) {\n        tile.contentUrl = replaceContentUrlTemplate(contentUrlTemplate, lev, x, y, z);\n    }\n    const childTileLevel = level + 1;\n    const pData = { mortonIndex: childTileMortonIndex, x: childTileX, y: childTileY, z: childTileZ };\n    for (let index = 0; index < childrenPerTile; index++) {\n        const childS2VolumeBox = getChildS2VolumeBox(s2VolumeBox, index, subdivisionScheme);\n        // Recursive calling...\n        const childTileParsed = await parseImplicitTiles({\n            subtree,\n            implicitOptions,\n            loaderOptions,\n            parentData: pData,\n            childIndex: index,\n            level: childTileLevel,\n            globalData: { ...globalData },\n            s2VolumeBox: childS2VolumeBox\n        });\n        if (childTileParsed.contentUrl || childTileParsed.children.length) {\n            const globalLevel = lev + 1;\n            const childCoordinates = { childTileX, childTileY, childTileZ };\n            const formattedTile = formatTileData(childTileParsed, globalLevel, childCoordinates, implicitOptions, s2VolumeBox);\n            // @ts-ignore\n            tile.children.push(formattedTile);\n        }\n    }\n    return tile;\n}\n/**\n * Check tile availability in the bitstream array\n * @param availabilityData - tileAvailability / contentAvailability / childSubtreeAvailability object\n * @param index - index in the bitstream array\n * @returns\n */\nfunction getAvailabilityResult(availabilityData, index) {\n    let availabilityObject;\n    if (Array.isArray(availabilityData)) {\n        /** TODO: we don't support `3DTILES_multiple_contents` extension at the moment.\n         * https://github.com/CesiumGS/3d-tiles/blob/main/extensions/3DTILES_implicit_tiling/README.md#multiple-contents\n         * Take first item in the array\n         */\n        availabilityObject = availabilityData[0];\n        if (availabilityData.length > 1) {\n            // eslint-disable-next-line no-console\n            log.once('Not supported extension \"3DTILES_multiple_contents\" has been detected');\n        }\n    }\n    else {\n        availabilityObject = availabilityData;\n    }\n    if ('constant' in availabilityObject) {\n        return Boolean(availabilityObject.constant);\n    }\n    if (availabilityObject.explicitBitstream) {\n        return getBooleanValueFromBitstream(index, availabilityObject.explicitBitstream);\n    }\n    return false;\n}\n/**\n * Do formatting of implicit tile data.\n * TODO Check out do we able to use Tile3D class as type here.\n * @param tile\n * @param lodMetricValue\n * @param options\n * @returns\n */\nfunction formatTileData(tile, level, childCoordinates, options, s2VolumeBox) {\n    const { basePath, refine, getRefine, lodMetricType, getTileType, rootLodMetricValue, rootBoundingVolume } = options;\n    const uri = tile.contentUrl && tile.contentUrl.replace(`${basePath}/`, '');\n    const lodMetricValue = rootLodMetricValue / 2 ** level;\n    const boundingVolume = s2VolumeBox?.box\n        ? { box: s2VolumeBox.box }\n        : rootBoundingVolume;\n    const boundingVolumeForChildTile = calculateBoundingVolumeForChildTile(level, boundingVolume, childCoordinates);\n    return {\n        children: tile.children,\n        contentUrl: tile.contentUrl,\n        content: { uri },\n        id: tile.contentUrl,\n        refine: getRefine(refine),\n        type: getTileType(tile),\n        lodMetricType,\n        lodMetricValue,\n        geometricError: lodMetricValue,\n        transform: tile.transform,\n        boundingVolume: boundingVolumeForChildTile\n    };\n}\n/**\n * Calculate child bounding volume.\n * Spec - https://github.com/CesiumGS/3d-tiles/tree/main/extensions/3DTILES_implicit_tiling#subdivision-rules\n * @param level\n * @param rootBoundingVolume\n * @param childCoordinates\n */\nfunction calculateBoundingVolumeForChildTile(level, rootBoundingVolume, childCoordinates) {\n    if (rootBoundingVolume.region) {\n        const { childTileX, childTileY, childTileZ } = childCoordinates;\n        const [west, south, east, north, minimumHeight, maximumHeight] = rootBoundingVolume.region;\n        const boundingVolumesCount = 2 ** level;\n        const sizeX = (east - west) / boundingVolumesCount;\n        const sizeY = (north - south) / boundingVolumesCount;\n        // TODO : Why is the subdivisionScheme not being checked here?\n        // In case of QUADTREE the sizeZ should NOT be changed!\n        // https://portal.ogc.org/files/102132\n        // A quadtree divides space only on the x and y dimensions. It divides each tile into 4 smaller tiles where the x and y dimensions are halved. The quadtree z minimum and maximum remain unchanged.\n        const sizeZ = (maximumHeight - minimumHeight) / boundingVolumesCount;\n        const [childWest, childEast] = [west + sizeX * childTileX, west + sizeX * (childTileX + 1)];\n        const [childSouth, childNorth] = [south + sizeY * childTileY, south + sizeY * (childTileY + 1)];\n        const [childMinimumHeight, childMaximumHeight] = [\n            minimumHeight + sizeZ * childTileZ,\n            minimumHeight + sizeZ * (childTileZ + 1)\n        ];\n        return {\n            region: [childWest, childSouth, childEast, childNorth, childMinimumHeight, childMaximumHeight]\n        };\n    }\n    if (rootBoundingVolume.box) {\n        return rootBoundingVolume;\n    }\n    throw new Error(`Unsupported bounding volume type ${JSON.stringify(rootBoundingVolume)}`);\n}\n/**\n * Do binary concatenation\n * @param higher - number to put to higher part of result\n * @param lower - number to put to lower part of result\n * @param shift - number of bits to shift lower number\n */\nfunction concatBits(higher, lower, shift) {\n    return (higher << shift) + lower;\n}\n/**\n * Replace implicit tile content url with real coordinates.\n * @param templateUrl\n * @param level\n * @param x\n * @param y\n * @param z\n */\nexport function replaceContentUrlTemplate(templateUrl, level, x, y, z) {\n    const mapUrl = generateMapUrl({ level, x, y, z });\n    return templateUrl.replace(/{level}|{x}|{y}|{z}/gi, (matched) => mapUrl[matched]);\n}\n/**\n * Get Map object for content url generation\n * @param items\n */\nfunction generateMapUrl(items) {\n    const mapUrl = {};\n    for (const key in items) {\n        mapUrl[`{${key}}`] = items[key];\n    }\n    return mapUrl;\n}\n/**\n * Get boolean value from bistream by index\n * A boolean value is encoded as a single bit, either 0 (false) or 1 (true).\n * Multiple boolean values are packed tightly in the same buffer.\n * These buffers of tightly-packed bits are sometimes referred to as bitstreams.\n * Spec - https://github.com/CesiumGS/3d-tiles/tree/implicit-revisions/specification/Metadata#booleans\n * @param availabilitiIndex\n */\nfunction getBooleanValueFromBitstream(availabilityIndex, availabilityBuffer) {\n    const byteIndex = Math.floor(availabilityIndex / 8);\n    const bitIndex = availabilityIndex % 8;\n    const bitValue = (availabilityBuffer[byteIndex] >> bitIndex) & 1;\n    return bitValue === 1;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { path } from '@loaders.gl/loader-utils';\nimport { Tile3DSubtreeLoader } from \"../../tile-3d-subtree-loader.js\";\nimport { load } from '@loaders.gl/core';\nimport { LOD_METRIC_TYPE, TILE_REFINEMENT, TILE_TYPE } from '@loaders.gl/tiles';\nimport { parseImplicitTiles, replaceContentUrlTemplate } from \"./helpers/parse-3d-implicit-tiles.js\";\nimport { convertS2BoundingVolumetoOBB } from \"../utils/obb/s2-corners-to-obb.js\";\nfunction getTileType(tile, tileContentUrl = '') {\n    if (!tileContentUrl) {\n        return TILE_TYPE.EMPTY;\n    }\n    const contentUrl = tileContentUrl.split('?')[0]; // Discard query string\n    const fileExtension = contentUrl.split('.').pop();\n    switch (fileExtension) {\n        case 'pnts':\n            return TILE_TYPE.POINTCLOUD;\n        case 'i3dm':\n        case 'b3dm':\n        case 'glb':\n        case 'gltf':\n            return TILE_TYPE.SCENEGRAPH;\n        default:\n            return fileExtension || TILE_TYPE.EMPTY;\n    }\n}\nfunction getRefine(refine) {\n    switch (refine) {\n        case 'REPLACE':\n        case 'replace':\n            return TILE_REFINEMENT.REPLACE;\n        case 'ADD':\n        case 'add':\n            return TILE_REFINEMENT.ADD;\n        default:\n            return refine;\n    }\n}\nfunction resolveUri(uri, basePath) {\n    // url scheme per RFC3986\n    const urlSchemeRegex = /^[a-z][0-9a-z+.-]*:/i;\n    if (urlSchemeRegex.test(basePath)) {\n        const url = new URL(uri, `${basePath}/`);\n        return decodeURI(url.toString());\n    }\n    else if (uri.startsWith('/')) {\n        return uri;\n    }\n    return path.resolve(basePath, uri);\n}\nexport function normalizeTileData(tile, basePath) {\n    if (!tile) {\n        return null;\n    }\n    let tileContentUrl;\n    if (tile.content) {\n        const contentUri = tile.content.uri || tile.content?.url;\n        if (typeof contentUri !== 'undefined') {\n            // sparse implicit tilesets may not define content for all nodes\n            tileContentUrl = resolveUri(contentUri, basePath);\n        }\n    }\n    const tilePostprocessed = {\n        ...tile,\n        id: tileContentUrl,\n        contentUrl: tileContentUrl,\n        lodMetricType: LOD_METRIC_TYPE.GEOMETRIC_ERROR,\n        lodMetricValue: tile.geometricError,\n        transformMatrix: tile.transform,\n        type: getTileType(tile, tileContentUrl),\n        refine: getRefine(tile.refine)\n    };\n    return tilePostprocessed;\n}\n// normalize tile headers\nexport async function normalizeTileHeaders(tileset, basePath, options) {\n    let root = null;\n    const rootImplicitTilingExtension = getImplicitTilingExtensionData(tileset.root);\n    if (rootImplicitTilingExtension && tileset.root) {\n        root = await normalizeImplicitTileHeaders(tileset.root, tileset, basePath, rootImplicitTilingExtension, options);\n    }\n    else {\n        root = normalizeTileData(tileset.root, basePath);\n    }\n    const stack = [];\n    stack.push(root);\n    while (stack.length > 0) {\n        const tile = stack.pop() || {};\n        const children = tile.children || [];\n        const childrenPostprocessed = [];\n        for (const childHeader of children) {\n            const childImplicitTilingExtension = getImplicitTilingExtensionData(childHeader);\n            let childHeaderPostprocessed;\n            if (childImplicitTilingExtension) {\n                childHeaderPostprocessed = await normalizeImplicitTileHeaders(childHeader, tileset, basePath, childImplicitTilingExtension, options);\n            }\n            else {\n                childHeaderPostprocessed = normalizeTileData(childHeader, basePath);\n            }\n            if (childHeaderPostprocessed) {\n                childrenPostprocessed.push(childHeaderPostprocessed);\n                stack.push(childHeaderPostprocessed);\n            }\n        }\n        tile.children = childrenPostprocessed;\n    }\n    return root;\n}\n/**\n * Do normalisation of implicit tile headers\n * TODO Check if Tile3D class can be a return type here.\n * @param tileset\n */\nexport async function normalizeImplicitTileHeaders(tile, tileset, basePath, implicitTilingExtension, options) {\n    const { subdivisionScheme, maximumLevel, availableLevels, subtreeLevels, subtrees: { uri: subtreesUriTemplate } } = implicitTilingExtension;\n    const replacedUrlTemplate = replaceContentUrlTemplate(subtreesUriTemplate, 0, 0, 0, 0);\n    const subtreeUrl = resolveUri(replacedUrlTemplate, basePath);\n    const subtree = await load(subtreeUrl, Tile3DSubtreeLoader, options);\n    const tileContentUri = tile.content?.uri;\n    const contentUrlTemplate = tileContentUri ? resolveUri(tileContentUri, basePath) : '';\n    const refine = tileset?.root?.refine;\n    // @ts-ignore\n    const rootLodMetricValue = tile.geometricError;\n    // Replace tile.boundingVolume with the the bounding volume specified by the extensions['3DTILES_bounding_volume_S2']\n    const s2VolumeInfo = tile.boundingVolume.extensions?.['3DTILES_bounding_volume_S2'];\n    if (s2VolumeInfo) {\n        const box = convertS2BoundingVolumetoOBB(s2VolumeInfo);\n        const s2VolumeBox = { box, s2VolumeInfo };\n        tile.boundingVolume = s2VolumeBox;\n    }\n    const rootBoundingVolume = tile.boundingVolume;\n    const implicitOptions = {\n        contentUrlTemplate,\n        subtreesUriTemplate,\n        subdivisionScheme,\n        subtreeLevels,\n        maximumLevel: Number.isFinite(availableLevels) ? availableLevels - 1 : maximumLevel,\n        refine,\n        basePath,\n        lodMetricType: LOD_METRIC_TYPE.GEOMETRIC_ERROR,\n        rootLodMetricValue,\n        rootBoundingVolume,\n        getTileType,\n        getRefine\n    };\n    return await normalizeImplicitTileData(tile, basePath, subtree, implicitOptions, options);\n}\n/**\n * Do implicit data normalisation to create hierarchical tile structure\n * @param tile\n * @param rootSubtree\n * @param options\n * @returns\n */\nexport async function normalizeImplicitTileData(tile, basePath, rootSubtree, implicitOptions, loaderOptions) {\n    if (!tile) {\n        return null;\n    }\n    const { children, contentUrl } = await parseImplicitTiles({\n        subtree: rootSubtree,\n        implicitOptions,\n        loaderOptions\n    });\n    let tileContentUrl;\n    let tileContent = null;\n    if (contentUrl) {\n        tileContentUrl = contentUrl;\n        tileContent = { uri: contentUrl.replace(`${basePath}/`, '') };\n    }\n    const tilePostprocessed = {\n        ...tile,\n        id: tileContentUrl,\n        contentUrl: tileContentUrl,\n        lodMetricType: LOD_METRIC_TYPE.GEOMETRIC_ERROR,\n        lodMetricValue: tile.geometricError,\n        transformMatrix: tile.transform,\n        type: getTileType(tile, tileContentUrl),\n        refine: getRefine(tile.refine),\n        content: tileContent || tile.content,\n        children\n    };\n    return tilePostprocessed;\n}\n/**\n * Implicit Tiling data can be in 3DTILES_implicit_tiling for 3DTiles v.Next or directly in implicitTiling object for 3DTiles v1.1.\n * Spec 3DTiles v.Next - https://github.com/CesiumGS/3d-tiles/tree/main/extensions/3DTILES_implicit_tiling\n * Spec 3DTiles v.1.1 - https://github.com/CesiumGS/3d-tiles/tree/draft-1.1/specification/ImplicitTiling\n * @param tile\n * @returns\n */\nfunction getImplicitTilingExtensionData(tile) {\n    return tile?.extensions?.['3DTILES_implicit_tiling'] || tile?.implicitTiling;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { path } from '@loaders.gl/loader-utils';\nimport { TILESET_TYPE, LOD_METRIC_TYPE } from '@loaders.gl/tiles';\nimport { VERSION } from \"./lib/utils/version.js\";\nimport { parse3DTile } from \"./lib/parsers/parse-3d-tile.js\";\nimport { normalizeTileHeaders } from \"./lib/parsers/parse-3d-tile-header.js\";\n/**\n * Loader for 3D Tiles\n */\nexport const Tiles3DLoader = {\n    dataType: null,\n    batchType: null,\n    id: '3d-tiles',\n    name: '3D Tiles',\n    module: '3d-tiles',\n    version: VERSION,\n    extensions: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n    mimeTypes: ['application/octet-stream'],\n    tests: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n    parse,\n    options: {\n        '3d-tiles': {\n            loadGLTF: true,\n            decodeQuantizedPositions: false,\n            isTileset: 'auto',\n            assetGltfUpAxis: null\n        }\n    }\n};\n/** Parses a tileset or tile */\nasync function parse(data, options = {}, context) {\n    // auto detect file type\n    const loaderOptions = options['3d-tiles'] || {};\n    let isTileset;\n    if (loaderOptions.isTileset === 'auto') {\n        isTileset = context?.url && context.url.indexOf('.json') !== -1;\n    }\n    else {\n        isTileset = loaderOptions.isTileset;\n    }\n    return isTileset ? parseTileset(data, options, context) : parseTile(data, options, context);\n}\n/** Parse a tileset */\nasync function parseTileset(data, options, context) {\n    const tilesetJson = JSON.parse(new TextDecoder().decode(data));\n    const tilesetUrl = context?.url || '';\n    const basePath = getBaseUri(tilesetUrl);\n    const normalizedRoot = await normalizeTileHeaders(tilesetJson, basePath, options || {});\n    const tilesetJsonPostprocessed = {\n        ...tilesetJson,\n        shape: 'tileset3d',\n        loader: Tiles3DLoader,\n        url: tilesetUrl,\n        queryString: context?.queryString || '',\n        basePath,\n        root: normalizedRoot || tilesetJson.root,\n        type: TILESET_TYPE.TILES3D,\n        lodMetricType: LOD_METRIC_TYPE.GEOMETRIC_ERROR,\n        lodMetricValue: tilesetJson.root?.geometricError || 0\n    };\n    return tilesetJsonPostprocessed;\n}\n/** Parse a tile */\nasync function parseTile(arrayBuffer, options, context) {\n    const tile = {\n        content: {\n            shape: 'tile3d',\n            featureIds: null\n        }\n    };\n    const byteOffset = 0;\n    // @ts-expect-error\n    await parse3DTile(arrayBuffer, byteOffset, options, context, tile.content);\n    // @ts-expect-error\n    return tile.content;\n}\n/** Get base name */\nfunction getBaseUri(tilesetUrl) {\n    return path.dirname(tilesetUrl);\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\n// Minimal support to load tilsets from the Cesium ION services\nimport { fetchFile } from '@loaders.gl/core';\nimport { assert } from '@loaders.gl/loader-utils';\nconst CESIUM_ION_URL = 'https://api.cesium.com/v1/assets';\n// Returns `{url, headers, type, attributions}` for an ion tileset\nexport async function getIonTilesetMetadata(accessToken, assetId) {\n    // Step 1, if no asset id, look for first 3DTILES asset associated with this token.\n    if (!assetId) {\n        const assets = await getIonAssets(accessToken);\n        for (const item of assets.items) {\n            if (item.type === '3DTILES') {\n                assetId = item.id;\n            }\n        }\n    }\n    // Step 2: Query metdatadata for this asset.\n    const ionAssetMetadata = await getIonAssetMetadata(accessToken, assetId);\n    const { type, url } = ionAssetMetadata;\n    assert(type === '3DTILES' && url);\n    // Prepare a headers object for fetch\n    ionAssetMetadata.headers = {\n        Authorization: `Bearer ${ionAssetMetadata.accessToken}`\n    };\n    return ionAssetMetadata;\n}\n// Return a list of all assets associated with accessToken\nexport async function getIonAssets(accessToken) {\n    assert(accessToken);\n    const url = CESIUM_ION_URL;\n    const headers = { Authorization: `Bearer ${accessToken}` };\n    const response = await fetchFile(url, { headers });\n    if (!response.ok) {\n        throw new Error(response.statusText);\n    }\n    return await response.json();\n}\n// Return metadata for a specific asset associated with token\nexport async function getIonAssetMetadata(accessToken, assetId) {\n    assert(accessToken, assetId);\n    const headers = { Authorization: `Bearer ${accessToken}` };\n    const url = `${CESIUM_ION_URL}/${assetId}`;\n    // https://cesium.com/docs/rest-api/#operation/getAsset\n    // Retrieves metadata information about a specific asset.\n    let response = await fetchFile(`${url}`, { headers });\n    if (!response.ok) {\n        throw new Error(response.statusText);\n    }\n    let metadata = await response.json();\n    // https://cesium.com/docs/rest-api/#operation/getAssetEndpoint\n    // Retrieves information and credentials that allow you to access the tiled asset data for visualization and analysis.\n    response = await fetchFile(`${url}/endpoint`, { headers });\n    if (!response.ok) {\n        throw new Error(response.statusText);\n    }\n    const tilesetInfo = await response.json();\n    // extract dataset description\n    metadata = {\n        ...metadata,\n        ...tilesetInfo\n    };\n    return metadata;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { Tiles3DLoader } from \"./tiles-3d-loader.js\";\nimport { getIonTilesetMetadata } from \"./lib/ion/ion.js\";\nasync function preload(url, options = {}) {\n    options = options['cesium-ion'] || {};\n    // @ts-ignore\n    const { accessToken } = options;\n    // @ts-ignore\n    let assetId = options.assetId;\n    if (!Number.isFinite(assetId)) {\n        const matched = url.match(/\\/([0-9]+)\\/tileset.json/);\n        assetId = matched && matched[1];\n    }\n    return getIonTilesetMetadata(accessToken, assetId);\n}\n/**\n * Loader for 3D tiles from Cesium ION\n */\nexport const CesiumIonLoader = {\n    ...Tiles3DLoader,\n    id: 'cesium-ion',\n    name: 'Cesium Ion',\n    // @ts-ignore\n    preload,\n    parse: async (data, options, context) => {\n        options = { ...options };\n        options['3d-tiles'] = options['cesium-ion'];\n        // @ts-ignore\n        options.loader = CesiumIonLoader;\n        return Tiles3DLoader.parse(data, options, context); // , loader);\n    },\n    options: {\n        'cesium-ion': {\n            ...Tiles3DLoader.options['3d-tiles'],\n            accessToken: null\n        }\n    }\n};\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport JSZip from 'jszip';\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof \"4.2.0-beta.2\" !== 'undefined' ? \"4.2.0-beta.2\" : 'latest';\nexport const ZipLoader = {\n    dataType: null,\n    batchType: null,\n    id: 'zip',\n    module: 'zip',\n    name: 'Zip Archive',\n    version: VERSION,\n    extensions: ['zip'],\n    mimeTypes: ['application/zip'],\n    category: 'archive',\n    tests: ['PK'],\n    options: {},\n    parse: parseZipAsync\n};\n// TODO - Could return a map of promises, perhaps as an option...\nasync function parseZipAsync(data, options = {}) {\n    const promises = [];\n    const fileMap = {};\n    try {\n        const jsZip = new JSZip();\n        const zip = await jsZip.loadAsync(data, options);\n        // start to load each file in this zip\n        zip.forEach((relativePath, zipEntry) => {\n            const subFilename = zipEntry.name;\n            const promise = loadZipEntry(jsZip, subFilename, options).then((arrayBufferOrError) => {\n                fileMap[relativePath] = arrayBufferOrError;\n            });\n            // Ensure Promise.all doesn't ignore rejected promises.\n            promises.push(promise);\n        });\n        await Promise.all(promises);\n        return fileMap;\n    }\n    catch (error) {\n        // @ts-ignore\n        options.log.error(`Unable to read zip archive: ${error}`);\n        throw error;\n    }\n}\nasync function loadZipEntry(jsZip, subFilename, options = {}) {\n    // jszip supports both arraybuffer and text, the main loaders.gl types\n    // https://stuk.github.io/jszip/documentation/api_zipobject/async.html\n    try {\n        const arrayBuffer = await jsZip.file(subFilename).async(options.dataType || 'arraybuffer');\n        return arrayBuffer;\n    }\n    catch (error) {\n        options.log.error(`Unable to read ${subFilename} from zip archive: ${error}`);\n        // Store error in place of data in map\n        return error;\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport JSZip from 'jszip';\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof \"4.2.0-beta.2\" !== 'undefined' ? \"4.2.0-beta.2\" : 'latest';\n/**\n * Zip exporter\n */\nexport const ZipWriter = {\n    name: 'Zip Archive',\n    id: 'zip',\n    module: 'zip',\n    version: VERSION,\n    extensions: ['zip'],\n    category: 'archive',\n    mimeTypes: ['application/zip'],\n    options: {\n        zip: {\n            onUpdate: () => { }\n        },\n        jszip: {}\n    },\n    encode: encodeZipAsync\n};\nasync function encodeZipAsync(fileMap, options = {}) {\n    const jsZip = new JSZip();\n    // add files to the zip\n    for (const subFileName in fileMap) {\n        const subFileData = fileMap[subFileName];\n        // jszip supports both arraybuffer and string data (the main loaders.gl types)\n        // https://stuk.github.io/jszip/documentation/api_zipobject/async.html\n        jsZip.file(subFileName, subFileData, options?.jszip || {});\n    }\n    const zipOptions = { ...ZipWriter.options.zip, ...options?.zip };\n    const jszipOptions = { ...ZipWriter.options?.jszip, ...options.jszip };\n    try {\n        return await jsZip.generateAsync({ ...jszipOptions, type: 'arraybuffer' }, // generate an arraybuffer\n        zipOptions.onUpdate);\n    }\n    catch (error) {\n        options.log.error(`Unable to encode zip archive: ${error}`);\n        throw error;\n    }\n}\n", "import { concatenateArrayBuffers } from '@loaders.gl/loader-utils';\nexport const signature = new Uint8Array([0x01, 0x00]);\n/**\n * creates zip64 extra field\n * @param options info that can be placed into zip64 field\n * @returns buffer with field\n */\nexport function createZip64Info(options) {\n    const optionsToUse = {\n        ...options,\n        zip64Length: (options.offset ? 1 : 0) * 8 + (options.size ? 1 : 0) * 16\n    };\n    const arraysToConcat = [];\n    for (const field of ZIP64_FIELDS) {\n        if (!optionsToUse[field.name ?? ''] && !field.default) {\n            continue; // eslint-disable-line no-continue\n        }\n        const newValue = new DataView(new ArrayBuffer(field.size));\n        NUMBER_SETTERS[field.size](newValue, 0, optionsToUse[field.name ?? ''] ?? field.default);\n        arraysToConcat.push(newValue.buffer);\n    }\n    return concatenateArrayBuffers(...arraysToConcat);\n}\n/**\n * Writes values into buffer according to the bytes amount\n * @param header header where to write the data\n * @param fieldSize size of the field in bytes\n * @param fieldOffset offset of the field\n * @param value value to be written\n */\nexport function setFieldToNumber(header, fieldSize, fieldOffset, value) {\n    NUMBER_SETTERS[fieldSize](header, Number(fieldOffset), value);\n}\n/** functions to write values into buffer according to the bytes amount */\nconst NUMBER_SETTERS = {\n    2: (header, offset, value) => {\n        header.setUint16(offset, Number(value > 0xffff ? 0xffff : value), true);\n    },\n    4: (header, offset, value) => {\n        header.setUint32(offset, Number(value > 0xffffffff ? 0xffffffff : value), true);\n    },\n    8: (header, offset, value) => {\n        header.setBigUint64(offset, BigInt(value), true);\n    }\n};\n/** zip64 info fields description, we need it as a pattern to build a zip64 info */\nconst ZIP64_FIELDS = [\n    // Header ID 0x0001\n    {\n        size: 2,\n        default: new DataView(signature.buffer).getUint16(0, true)\n    },\n    // Size of the extra field chunk (8, 16, 24 or 28)\n    {\n        size: 2,\n        name: 'zip64Length'\n    },\n    // Original uncompressed file size\n    {\n        size: 8,\n        name: 'size'\n    },\n    // Size of compressed data\n    {\n        size: 8,\n        name: 'size'\n    },\n    // Offset of local header record\n    {\n        size: 8,\n        name: 'offset'\n    }\n];\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { compareArrayBuffers, concatenateArrayBuffers } from '@loaders.gl/loader-utils';\nimport { searchFromTheEnd } from \"./search-from-the-end.js\";\nimport { setFieldToNumber } from \"./zip64-info-generation.js\";\nconst eoCDSignature = new Uint8Array([0x50, 0x4b, 0x05, 0x06]);\nconst zip64EoCDLocatorSignature = new Uint8Array([0x50, 0x4b, 0x06, 0x07]);\nconst zip64EoCDSignature = new Uint8Array([0x50, 0x4b, 0x06, 0x06]);\n// offsets accroding to https://en.wikipedia.org/wiki/ZIP_(file_format)\nconst CD_RECORDS_NUMBER_OFFSET = 8n;\nconst CD_RECORDS_NUMBER_ON_DISC_OFFSET = 10n;\nconst CD_CD_BYTE_SIZE_OFFSET = 12n;\nconst CD_START_OFFSET_OFFSET = 16n;\nconst CD_COMMENT_OFFSET = 22n;\nconst ZIP64_EOCD_START_OFFSET_OFFSET = 8n;\nconst ZIP64_CD_RECORDS_NUMBER_OFFSET = 24n;\nconst ZIP64_CD_RECORDS_NUMBER_ON_DISC_OFFSET = 32n;\nconst ZIP64_CD_CD_BYTE_SIZE_OFFSET = 40n;\nconst ZIP64_CD_START_OFFSET_OFFSET = 48n;\nconst ZIP64_COMMENT_OFFSET = 56n;\n/**\n * Parses end of central directory record of zip file\n * @param file - FileProvider instance\n * @returns Info from the header\n */\nexport const parseEoCDRecord = async (file) => {\n    const zipEoCDOffset = await searchFromTheEnd(file, eoCDSignature);\n    let cdRecordsNumber = BigInt(await file.getUint16(zipEoCDOffset + CD_RECORDS_NUMBER_OFFSET));\n    let cdStartOffset = BigInt(await file.getUint32(zipEoCDOffset + CD_START_OFFSET_OFFSET));\n    let zip64EoCDLocatorOffset = zipEoCDOffset - 20n;\n    let zip64EoCDOffset = 0n;\n    const magicBytes = await file.slice(zip64EoCDLocatorOffset, zip64EoCDLocatorOffset + 4n);\n    if (compareArrayBuffers(magicBytes, zip64EoCDLocatorSignature)) {\n        zip64EoCDOffset = await file.getBigUint64(zip64EoCDLocatorOffset + ZIP64_EOCD_START_OFFSET_OFFSET);\n        const endOfCDMagicBytes = await file.slice(zip64EoCDOffset, zip64EoCDOffset + 4n);\n        if (!compareArrayBuffers(endOfCDMagicBytes, zip64EoCDSignature.buffer)) {\n            throw new Error('zip64 EoCD not found');\n        }\n        cdRecordsNumber = await file.getBigUint64(zip64EoCDOffset + ZIP64_CD_RECORDS_NUMBER_OFFSET);\n        cdStartOffset = await file.getBigUint64(zip64EoCDOffset + ZIP64_CD_START_OFFSET_OFFSET);\n    }\n    else {\n        zip64EoCDLocatorOffset = 0n;\n    }\n    return {\n        cdRecordsNumber,\n        cdStartOffset,\n        offsets: {\n            zip64EoCDOffset,\n            zip64EoCDLocatorOffset,\n            zipEoCDOffset\n        }\n    };\n};\n/**\n * updates EoCD record to add more files to the archieve\n * @param eocdBody buffer containing header\n * @param oldEoCDOffsets info read from EoCD record befor updating\n * @param newCDStartOffset CD start offset to be updated\n * @param eocdStartOffset EoCD start offset to be updated\n * @returns new EoCD header\n */\nexport function updateEoCD(eocdBody, oldEoCDOffsets, newCDStartOffset, eocdStartOffset, newCDRecordsNumber) {\n    const eocd = new DataView(eocdBody);\n    const classicEoCDOffset = oldEoCDOffsets.zip64EoCDOffset\n        ? oldEoCDOffsets.zipEoCDOffset - oldEoCDOffsets.zip64EoCDOffset\n        : 0n;\n    // updating classic EoCD record with new CD records number in general and on disc\n    if (Number(newCDRecordsNumber) <= 0xffff) {\n        setFieldToNumber(eocd, 2, classicEoCDOffset + CD_RECORDS_NUMBER_OFFSET, newCDRecordsNumber);\n        setFieldToNumber(eocd, 2, classicEoCDOffset + CD_RECORDS_NUMBER_ON_DISC_OFFSET, newCDRecordsNumber);\n    }\n    // updating zip64 EoCD record with new size of CD\n    if (eocdStartOffset - newCDStartOffset <= 0xffffffff) {\n        setFieldToNumber(eocd, 4, classicEoCDOffset + CD_CD_BYTE_SIZE_OFFSET, eocdStartOffset - newCDStartOffset);\n    }\n    // updating classic EoCD record with new CD start offset\n    if (newCDStartOffset < 0xffffffff) {\n        setFieldToNumber(eocd, 4, classicEoCDOffset + CD_START_OFFSET_OFFSET, newCDStartOffset);\n    }\n    // updating zip64 EoCD locator and record with new EoCD record start offset and cd records number\n    if (oldEoCDOffsets.zip64EoCDLocatorOffset && oldEoCDOffsets.zip64EoCDOffset) {\n        // updating zip64 EoCD locator with new EoCD record start offset\n        const locatorOffset = oldEoCDOffsets.zip64EoCDLocatorOffset - oldEoCDOffsets.zip64EoCDOffset;\n        setFieldToNumber(eocd, 8, locatorOffset + ZIP64_EOCD_START_OFFSET_OFFSET, eocdStartOffset);\n        // updating zip64 EoCD record with new cd start offset\n        setFieldToNumber(eocd, 8, ZIP64_CD_START_OFFSET_OFFSET, newCDStartOffset);\n        // updating zip64 EoCD record with new cd records number\n        setFieldToNumber(eocd, 8, ZIP64_CD_RECORDS_NUMBER_OFFSET, newCDRecordsNumber);\n        setFieldToNumber(eocd, 8, ZIP64_CD_RECORDS_NUMBER_ON_DISC_OFFSET, newCDRecordsNumber);\n        // updating zip64 EoCD record with new size of CD\n        setFieldToNumber(eocd, 8, ZIP64_CD_CD_BYTE_SIZE_OFFSET, eocdStartOffset - newCDStartOffset);\n    }\n    return new Uint8Array(eocd.buffer);\n}\n/**\n * generates EoCD record\n * @param options data to generate EoCD record\n * @returns ArrayBuffer with EoCD record\n */\nexport function generateEoCD(options) {\n    const header = new DataView(new ArrayBuffer(Number(CD_COMMENT_OFFSET)));\n    for (const field of EOCD_FIELDS) {\n        setFieldToNumber(header, field.size, field.offset, options[field.name ?? ''] ?? field.default ?? 0);\n    }\n    const locator = generateZip64InfoLocator(options);\n    const zip64Record = generateZip64Info(options);\n    return concatenateArrayBuffers(zip64Record, locator, header.buffer);\n}\n/** standart EoCD fields */\nconst EOCD_FIELDS = [\n    // End of central directory signature = 0x06054b50\n    {\n        offset: 0,\n        size: 4,\n        default: new DataView(eoCDSignature.buffer).getUint32(0, true)\n    },\n    // Number of this disk (or 0xffff for ZIP64)\n    {\n        offset: 4,\n        size: 2,\n        default: 0\n    },\n    // Disk where central directory starts (or 0xffff for ZIP64)\n    {\n        offset: 6,\n        size: 2,\n        default: 0\n    },\n    // Number of central directory records on this disk (or 0xffff for ZIP64)\n    {\n        offset: 8,\n        size: 2,\n        name: 'recordsNumber'\n    },\n    // Total number of central directory records (or 0xffff for ZIP64)\n    {\n        offset: 10,\n        size: 2,\n        name: 'recordsNumber'\n    },\n    // Size of central directory (bytes) (or 0xffffffff for ZIP64)\n    {\n        offset: 12,\n        size: 4,\n        name: 'cdSize'\n    },\n    // Offset of start of central directory, relative to start of archive (or 0xffffffff for ZIP64)\n    {\n        offset: 16,\n        size: 4,\n        name: 'cdOffset'\n    },\n    // Comment length (n)\n    {\n        offset: 20,\n        size: 2,\n        default: 0\n    }\n];\n/**\n * generates eocd zip64 record\n * @param options data to generate eocd zip64 record\n * @returns buffer with eocd zip64 record\n */\nfunction generateZip64Info(options) {\n    const record = new DataView(new ArrayBuffer(Number(ZIP64_COMMENT_OFFSET)));\n    for (const field of ZIP64_EOCD_FIELDS) {\n        setFieldToNumber(record, field.size, field.offset, options[field.name ?? ''] ?? field.default ?? 0);\n    }\n    return record.buffer;\n}\n/**\n * generates eocd zip64 record locator\n * @param options data to generate eocd zip64 record\n * @returns buffer with eocd zip64 record\n */\nfunction generateZip64InfoLocator(options) {\n    const locator = new DataView(new ArrayBuffer(Number(20)));\n    for (const field of ZIP64_EOCD_LOCATOR_FIELDS) {\n        setFieldToNumber(locator, field.size, field.offset, options[field.name ?? ''] ?? field.default ?? 0);\n    }\n    return locator.buffer;\n}\n/** zip64 EoCD record locater fields */\nconst ZIP64_EOCD_LOCATOR_FIELDS = [\n    // zip64 end of central dir locator signature\n    {\n        offset: 0,\n        size: 4,\n        default: new DataView(zip64EoCDLocatorSignature.buffer).getUint32(0, true)\n    },\n    // number of the disk with the start of the zip64 end of\n    {\n        offset: 4,\n        size: 4,\n        default: 0\n    },\n    // start of the zip64 end of central directory\n    {\n        offset: 8,\n        size: 8,\n        name: 'eoCDStart'\n    },\n    // total number of disks\n    {\n        offset: 16,\n        size: 4,\n        default: 1\n    }\n];\n/** zip64 EoCD recodrd fields */\nconst ZIP64_EOCD_FIELDS = [\n    // End of central directory signature = 0x06064b50\n    {\n        offset: 0,\n        size: 4,\n        default: new DataView(zip64EoCDSignature.buffer).getUint32(0, true)\n    },\n    // Size of the EOCD64 minus 12\n    {\n        offset: 4,\n        size: 8,\n        default: 44\n    },\n    // Version made by\n    {\n        offset: 12,\n        size: 2,\n        default: 45\n    },\n    // Version needed to extract (minimum)\n    {\n        offset: 14,\n        size: 2,\n        default: 45\n    },\n    // Number of this disk\n    {\n        offset: 16,\n        size: 4,\n        default: 0\n    },\n    // Disk where central directory starts\n    {\n        offset: 20,\n        size: 4,\n        default: 0\n    },\n    // Number of central directory records on this disk\n    {\n        offset: 24,\n        size: 8,\n        name: 'recordsNumber'\n    },\n    // Total number of central directory records\n    {\n        offset: 32,\n        size: 8,\n        name: 'recordsNumber'\n    },\n    // Size of central directory (bytes)\n    {\n        offset: 40,\n        size: 8,\n        name: 'cdSize'\n    },\n    // Offset of start of central directory, relative to start of archive\n    {\n        offset: 48,\n        size: 8,\n        name: 'cdOffset'\n    }\n];\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { compareArrayBuffers, concatenateArrayBuffers } from '@loaders.gl/loader-utils';\nimport { parseEoCDRecord } from \"./end-of-central-directory.js\";\nimport { createZip64Info, setFieldToNumber } from \"./zip64-info-generation.js\";\n// offsets accroding to https://en.wikipedia.org/wiki/ZIP_(file_format)\nconst CD_COMPRESSED_SIZE_OFFSET = 20n;\nconst CD_UNCOMPRESSED_SIZE_OFFSET = 24n;\nconst CD_FILE_NAME_LENGTH_OFFSET = 28n;\nconst CD_EXTRA_FIELD_LENGTH_OFFSET = 30n;\nconst CD_START_DISK_OFFSET = 32n;\nconst CD_LOCAL_HEADER_OFFSET_OFFSET = 42n;\nconst CD_FILE_NAME_OFFSET = 46n;\nexport const signature = new Uint8Array([0x50, 0x4b, 0x01, 0x02]);\n/**\n * Parses central directory file header of zip file\n * @param headerOffset - offset in the archive where header starts\n * @param buffer - buffer containing whole array\n * @returns Info from the header\n */\nexport const parseZipCDFileHeader = async (headerOffset, file) => {\n    const magicBytes = await file.slice(headerOffset, headerOffset + 4n);\n    if (!compareArrayBuffers(magicBytes, signature.buffer)) {\n        return null;\n    }\n    const compressedSize = BigInt(await file.getUint32(headerOffset + CD_COMPRESSED_SIZE_OFFSET));\n    const uncompressedSize = BigInt(await file.getUint32(headerOffset + CD_UNCOMPRESSED_SIZE_OFFSET));\n    const extraFieldLength = await file.getUint16(headerOffset + CD_EXTRA_FIELD_LENGTH_OFFSET);\n    const startDisk = BigInt(await file.getUint16(headerOffset + CD_START_DISK_OFFSET));\n    const fileNameLength = await file.getUint16(headerOffset + CD_FILE_NAME_LENGTH_OFFSET);\n    const filenameBytes = await file.slice(headerOffset + CD_FILE_NAME_OFFSET, headerOffset + CD_FILE_NAME_OFFSET + BigInt(fileNameLength));\n    const fileName = new TextDecoder().decode(filenameBytes);\n    const extraOffset = headerOffset + CD_FILE_NAME_OFFSET + BigInt(fileNameLength);\n    const oldFormatOffset = await file.getUint32(headerOffset + CD_LOCAL_HEADER_OFFSET_OFFSET);\n    const localHeaderOffset = BigInt(oldFormatOffset);\n    const extraField = new DataView(await file.slice(extraOffset, extraOffset + BigInt(extraFieldLength)));\n    // looking for info that might be also be in zip64 extra field\n    const zip64data = {\n        uncompressedSize,\n        compressedSize,\n        localHeaderOffset,\n        startDisk\n    };\n    const res = findZip64DataInExtra(zip64data, extraField);\n    return {\n        ...zip64data,\n        ...res,\n        extraFieldLength,\n        fileNameLength,\n        fileName,\n        extraOffset\n    };\n};\n/**\n * Create iterator over files of zip archive\n * @param fileProvider - file provider that provider random access to the file\n */\nexport async function* makeZipCDHeaderIterator(fileProvider) {\n    const { cdStartOffset } = await parseEoCDRecord(fileProvider);\n    let cdHeader = await parseZipCDFileHeader(cdStartOffset, fileProvider);\n    while (cdHeader) {\n        yield cdHeader;\n        cdHeader = await parseZipCDFileHeader(cdHeader.extraOffset + BigInt(cdHeader.extraFieldLength), fileProvider);\n    }\n}\n/**\n * returns the number written in the provided bytes\n * @param bytes two bytes containing the number\n * @returns the number written in the provided bytes\n */\nconst getUint16 = (...bytes) => {\n    return bytes[0] + bytes[1] * 16;\n};\n/**\n * reads all nesessary data from zip64 record in the extra data\n * @param zip64data values that might be in zip64 record\n * @param extraField full extra data\n * @returns data read from zip64\n */\nconst findZip64DataInExtra = (zip64data, extraField) => {\n    const zip64dataList = findExpectedData(zip64data);\n    const zip64DataRes = {};\n    if (zip64dataList.length > 0) {\n        // total length of data in zip64 notation in bytes\n        const zip64chunkSize = zip64dataList.reduce((sum, curr) => sum + curr.length, 0);\n        // we're looking for the zip64 nontation header (0x0001)\n        // and a size field with a correct value next to it\n        const offsetInExtraData = new Uint8Array(extraField.buffer).findIndex((_val, i, arr) => getUint16(arr[i], arr[i + 1]) === 0x0001 &&\n            getUint16(arr[i + 2], arr[i + 3]) === zip64chunkSize);\n        // then we read all the nesessary fields from the zip64 data\n        let bytesRead = 0;\n        for (const note of zip64dataList) {\n            const offset = bytesRead;\n            zip64DataRes[note.name] = extraField.getBigUint64(offsetInExtraData + 4 + offset, true);\n            bytesRead = offset + note.length;\n        }\n    }\n    return zip64DataRes;\n};\n/**\n * frind data that's expected to be in zip64\n * @param zip64data values that might be in zip64 record\n * @returns zip64 data description\n */\nconst findExpectedData = (zip64data) => {\n    // We define fields that should be in zip64 data\n    const zip64dataList = [];\n    if (zip64data.uncompressedSize === BigInt(0xffffffff)) {\n        zip64dataList.push({ name: 'uncompressedSize', length: 8 });\n    }\n    if (zip64data.compressedSize === BigInt(0xffffffff)) {\n        zip64dataList.push({ name: 'compressedSize', length: 8 });\n    }\n    if (zip64data.localHeaderOffset === BigInt(0xffffffff)) {\n        zip64dataList.push({ name: 'localHeaderOffset', length: 8 });\n    }\n    if (zip64data.startDisk === BigInt(0xffffffff)) {\n        zip64dataList.push({ name: 'startDisk', length: 4 });\n    }\n    return zip64dataList;\n};\n/**\n * generates cd header for the file\n * @param options info that can be placed into cd header\n * @returns buffer with header\n */\nexport function generateCDHeader(options) {\n    const optionsToUse = {\n        ...options,\n        fnlength: options.fileName.length,\n        extraLength: 0\n    };\n    let zip64header = new ArrayBuffer(0);\n    const optionsToZip64 = {};\n    if (optionsToUse.offset >= 0xffffffff) {\n        optionsToZip64.offset = optionsToUse.offset;\n        optionsToUse.offset = BigInt(0xffffffff);\n    }\n    if (optionsToUse.length >= 0xffffffff) {\n        optionsToZip64.size = optionsToUse.length;\n        optionsToUse.length = 0xffffffff;\n    }\n    if (Object.keys(optionsToZip64).length) {\n        zip64header = createZip64Info(optionsToZip64);\n        optionsToUse.extraLength = zip64header.byteLength;\n    }\n    const header = new DataView(new ArrayBuffer(Number(CD_FILE_NAME_OFFSET)));\n    for (const field of ZIP_HEADER_FIELDS) {\n        setFieldToNumber(header, field.size, field.offset, optionsToUse[field.name ?? ''] ?? field.default ?? 0);\n    }\n    const encodedName = new TextEncoder().encode(optionsToUse.fileName);\n    const resHeader = concatenateArrayBuffers(header.buffer, encodedName, zip64header);\n    return resHeader;\n}\n/** Fields map */\nconst ZIP_HEADER_FIELDS = [\n    // Central directory file header signature = 0x02014b50\n    {\n        offset: 0,\n        size: 4,\n        default: new DataView(signature.buffer).getUint32(0, true)\n    },\n    // Version made by\n    {\n        offset: 4,\n        size: 2,\n        default: 45\n    },\n    // Version needed to extract (minimum)\n    {\n        offset: 6,\n        size: 2,\n        default: 45\n    },\n    // General purpose bit flag\n    {\n        offset: 8,\n        size: 2,\n        default: 0\n    },\n    // Compression method\n    {\n        offset: 10,\n        size: 2,\n        default: 0\n    },\n    // File last modification time\n    {\n        offset: 12,\n        size: 2,\n        default: 0\n    },\n    // File last modification date\n    {\n        offset: 14,\n        size: 2,\n        default: 0\n    },\n    // CRC-32 of uncompressed data\n    {\n        offset: 16,\n        size: 4,\n        name: 'crc32'\n    },\n    // Compressed size (or 0xffffffff for ZIP64)\n    {\n        offset: 20,\n        size: 4,\n        name: 'length'\n    },\n    // Uncompressed size (or 0xffffffff for ZIP64)\n    {\n        offset: 24,\n        size: 4,\n        name: 'length'\n    },\n    // File name length (n)\n    {\n        offset: 28,\n        size: 2,\n        name: 'fnlength'\n    },\n    // Extra field length (m)\n    {\n        offset: 30,\n        size: 2,\n        default: 0,\n        name: 'extraLength'\n    },\n    // File comment length (k)\n    {\n        offset: 32,\n        size: 2,\n        default: 0\n    },\n    // Disk number where file starts (or 0xffff for ZIP64)\n    {\n        offset: 34,\n        size: 2,\n        default: 0\n    },\n    // Internal file attributes\n    {\n        offset: 36,\n        size: 2,\n        default: 0\n    },\n    // External file attributes\n    {\n        offset: 38,\n        size: 4,\n        default: 0\n    },\n    // Relative offset of local file header\n    {\n        offset: 42,\n        size: 4,\n        name: 'offset'\n    }\n];\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { compareArrayBuffers, concatenateArrayBuffers } from '@loaders.gl/loader-utils';\nimport { createZip64Info, setFieldToNumber } from \"./zip64-info-generation.js\";\n// offsets accroding to https://en.wikipedia.org/wiki/ZIP_(file_format)\nconst COMPRESSION_METHOD_OFFSET = 8n;\nconst COMPRESSED_SIZE_OFFSET = 18n;\nconst UNCOMPRESSED_SIZE_OFFSET = 22n;\nconst FILE_NAME_LENGTH_OFFSET = 26n;\nconst EXTRA_FIELD_LENGTH_OFFSET = 28n;\nconst FILE_NAME_OFFSET = 30n;\nexport const signature = new Uint8Array([0x50, 0x4b, 0x03, 0x04]);\n/**\n * Parses local file header of zip file\n * @param headerOffset - offset in the archive where header starts\n * @param buffer - buffer containing whole array\n * @returns Info from the header\n */\nexport const parseZipLocalFileHeader = async (headerOffset, buffer) => {\n    const magicBytes = await buffer.slice(headerOffset, headerOffset + 4n);\n    if (!compareArrayBuffers(magicBytes, signature)) {\n        return null;\n    }\n    const fileNameLength = await buffer.getUint16(headerOffset + FILE_NAME_LENGTH_OFFSET);\n    const fileName = new TextDecoder()\n        .decode(await buffer.slice(headerOffset + FILE_NAME_OFFSET, headerOffset + FILE_NAME_OFFSET + BigInt(fileNameLength)))\n        .split('\\\\')\n        .join('/');\n    const extraFieldLength = await buffer.getUint16(headerOffset + EXTRA_FIELD_LENGTH_OFFSET);\n    let fileDataOffset = headerOffset + FILE_NAME_OFFSET + BigInt(fileNameLength + extraFieldLength);\n    const compressionMethod = await buffer.getUint16(headerOffset + COMPRESSION_METHOD_OFFSET);\n    let compressedSize = BigInt(await buffer.getUint32(headerOffset + COMPRESSED_SIZE_OFFSET)); // add zip 64 logic\n    let uncompressedSize = BigInt(await buffer.getUint32(headerOffset + UNCOMPRESSED_SIZE_OFFSET)); // add zip 64 logic\n    const extraOffset = headerOffset + FILE_NAME_OFFSET + BigInt(fileNameLength);\n    let offsetInZip64Data = 4n;\n    // looking for info that might be also be in zip64 extra field\n    if (uncompressedSize === BigInt(0xffffffff)) {\n        uncompressedSize = await buffer.getBigUint64(extraOffset + offsetInZip64Data);\n        offsetInZip64Data += 8n;\n    }\n    if (compressedSize === BigInt(0xffffffff)) {\n        compressedSize = await buffer.getBigUint64(extraOffset + offsetInZip64Data);\n        offsetInZip64Data += 8n;\n    }\n    if (fileDataOffset === BigInt(0xffffffff)) {\n        fileDataOffset = await buffer.getBigUint64(extraOffset + offsetInZip64Data); // setting it to the one from zip64\n    }\n    return {\n        fileNameLength,\n        fileName,\n        extraFieldLength,\n        fileDataOffset,\n        compressedSize,\n        compressionMethod\n    };\n};\n/**\n * generates local header for the file\n * @param options info that can be placed into local header\n * @returns buffer with header\n */\nexport function generateLocalHeader(options) {\n    const optionsToUse = {\n        ...options,\n        extraLength: 0,\n        fnlength: options.fileName.length\n    };\n    let zip64header = new ArrayBuffer(0);\n    const optionsToZip64 = {};\n    if (optionsToUse.length >= 0xffffffff) {\n        optionsToZip64.size = optionsToUse.length;\n        optionsToUse.length = 0xffffffff;\n    }\n    if (Object.keys(optionsToZip64).length) {\n        zip64header = createZip64Info(optionsToZip64);\n        optionsToUse.extraLength = zip64header.byteLength;\n    }\n    // base length without file name and extra info is static\n    const header = new DataView(new ArrayBuffer(Number(FILE_NAME_OFFSET)));\n    for (const field of ZIP_HEADER_FIELDS) {\n        setFieldToNumber(header, field.size, field.offset, optionsToUse[field.name ?? ''] ?? field.default ?? 0);\n    }\n    const encodedName = new TextEncoder().encode(optionsToUse.fileName);\n    const resHeader = concatenateArrayBuffers(header.buffer, encodedName, zip64header);\n    return resHeader;\n}\nconst ZIP_HEADER_FIELDS = [\n    // Local file header signature = 0x04034b50\n    {\n        offset: 0,\n        size: 4,\n        default: new DataView(signature.buffer).getUint32(0, true)\n    },\n    // Version needed to extract (minimum)\n    {\n        offset: 4,\n        size: 2,\n        default: 45\n    },\n    // General purpose bit flag\n    {\n        offset: 6,\n        size: 2,\n        default: 0\n    },\n    // Compression method\n    {\n        offset: 8,\n        size: 2,\n        default: 0\n    },\n    // File last modification time\n    {\n        offset: 10,\n        size: 2,\n        default: 0\n    },\n    // File last modification date\n    {\n        offset: 12,\n        size: 2,\n        default: 0\n    },\n    // CRC-32 of uncompressed data\n    {\n        offset: 14,\n        size: 4,\n        name: 'crc32'\n    },\n    // Compressed size (or 0xffffffff for ZIP64)\n    {\n        offset: 18,\n        size: 4,\n        name: 'length'\n    },\n    // Uncompressed size (or 0xffffffff for ZIP64)\n    {\n        offset: 22,\n        size: 4,\n        name: 'length'\n    },\n    // File name length (n)\n    {\n        offset: 26,\n        size: 2,\n        name: 'fnlength'\n    },\n    // Extra field length (m)\n    {\n        offset: 28,\n        size: 2,\n        default: 0,\n        name: 'extraLength'\n    }\n];\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Inspired by https://gist.github.com/wqli78/1330293/6d85cc967f32cccfcbad94ae7d088a3dcfc14bd9\n// Full crc32 docs: https://www.kernel.org/doc/Documentation/crc32.txt\n// Better JS implementation: https://stackoverflow.com/a/18639999\n/**\n * Calculates the CRC32 checksum of a string.\n */\nexport default class CRC32 {\n    crc;\n    constructor() {\n        this.crc = ~0;\n    }\n    update(arrayBuffer) {\n        const CRC32_TABLE = getCRC32Table();\n        const byteArray = new Uint8Array(arrayBuffer);\n        for (let i = 0; i < byteArray.byteLength; i++) {\n            this.crc = (this.crc >>> 8) ^ CRC32_TABLE[(this.crc ^ byteArray[i]) & 0xff];\n            // strings: crc = (crc >>> 8) ^ CRC32TAB[(crc ^ str.charCodeAt(i)) & 0xff];\n        }\n        return this;\n    }\n    finalize() {\n        // performing final division and making crc unsigned.\n        // The reason why we can't use Math.abs() ther is that 1 in bite representation is 00000000000000000000000000000001\n        // and -1 is 11111111111111111111111111111111. So Math.abs() completely changes the bits there,\n        // but what we need is just make JS count first 1 bit as a part of a number and not the sign marker.\n        // We don't need to change anything else in this bit representation. And that's exactly what >>> does.\n        this.crc = (this.crc ^ -1) >>> 0;\n        return this.crc;\n    }\n}\n// Note: Using a typed array here doubles the speed of the cipher\nconst CRC32TAB = Uint32Array.of(0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433, 0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f, 0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1, 0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777, 0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9, 0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d);\nfunction getCRC32Table() {\n    return CRC32TAB;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// From: https://gist.github.com/wqli78/1330293/6d85cc967f32cccfcbad94ae7d088a3dcfc14bd9\n// CRC32 doesn't appear to be supported natively by crypto-js\n// import {toBuffer} from '@loaders.gl/loader-utils';\n// import {calculate as sse4calculate} from 'sse4_crc32';\n/**\n * Calculates the CRC32C checksum of a string.\n */\nexport default class CRC32C {\n    options;\n    crc;\n    constructor(options = {}) {\n        this.options = options;\n        this.crc = ~0;\n    }\n    update(arrayBuffer) {\n        const byteArray = new Uint8Array(arrayBuffer);\n        const CRC32_TABLE = getCRC32Table();\n        for (let i = 0; i < byteArray.length; i++) {\n            this.crc = CRC32_TABLE[(this.crc ^ byteArray[i]) & 0xff] ^ (this.crc >>> 8);\n        }\n        return this;\n    }\n    finalize() {\n        this.crc = (this.crc ^ -1) >>> 0;\n        return this.crc;\n    }\n}\n/**\n * This code is a manual javascript translation of c code generated by\n * pycrc 0.7.1 (http://www.tty1.net/pycrc/). Command line used:\n * './pycrc.py --model=crc-32c --generate c --algorithm=table-driven'\n */\n// Note: Using a typed array here doubles the speed of the cipher\nconst CRC32C_TABLE = Int32Array.of(0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4, 0xc79a971f, 0x35f1141c, 0x26a1e7e8, 0xd4ca64eb, 0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b, 0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24, 0x105ec76f, 0xe235446c, 0xf165b798, 0x030e349b, 0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384, 0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54, 0x5d1d08bf, 0xaf768bbc, 0xbc267848, 0x4e4dfb4b, 0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a, 0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35, 0xaa64d611, 0x580f5512, 0x4b5fa6e6, 0xb93425e5, 0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa, 0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45, 0xf779deae, 0x05125dad, 0x1642ae59, 0xe4292d5a, 0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a, 0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595, 0x417b1dbc, 0xb3109ebf, 0xa0406d4b, 0x522bee48, 0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957, 0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687, 0x0c38d26c, 0xfe53516f, 0xed03a29b, 0x1f682198, 0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927, 0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38, 0xdbfc821c, 0x2997011f, 0x3ac7f2eb, 0xc8ac71e8, 0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7, 0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096, 0xa65c047d, 0x5437877e, 0x4767748a, 0xb50cf789, 0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859, 0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46, 0x7198540d, 0x83f3d70e, 0x90a324fa, 0x62c8a7f9, 0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6, 0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36, 0x3cdb9bdd, 0xceb018de, 0xdde0eb2a, 0x2f8b6829, 0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c, 0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93, 0x082f63b7, 0xfa44e0b4, 0xe9141340, 0x1b7f9043, 0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c, 0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3, 0x55326b08, 0xa759e80b, 0xb4091bff, 0x466298fc, 0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c, 0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033, 0xa24bb5a6, 0x502036a5, 0x4370c551, 0xb11b4652, 0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d, 0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d, 0xef087a76, 0x1d63f975, 0x0e330a81, 0xfc588982, 0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d, 0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622, 0x38cc2a06, 0xcaa7a905, 0xd9f75af1, 0x2b9cd9f2, 0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed, 0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530, 0x0417b1db, 0xf67c32d8, 0xe52cc12c, 0x1747422f, 0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff, 0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0, 0xd3d3e1ab, 0x21b862a8, 0x32e8915c, 0xc083125f, 0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540, 0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90, 0x9e902e7b, 0x6cfbad78, 0x7fab5e8c, 0x8dc0dd8f, 0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee, 0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1, 0x69e9f0d5, 0x9b8273d6, 0x88d28022, 0x7ab90321, 0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e, 0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81, 0x34f4f86a, 0xc69f7b69, 0xd5cf889d, 0x27a40b9e, 0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e, 0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351);\nfunction getCRC32Table() {\n    return CRC32C_TABLE;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/* eslint-disable */\n// @ts-nocheck\n/* !\n * MD5 WebAssembly\n * https://github.com/briantbutton/md5-wasm\n * (c) 2020 Brian Todd Button\n * Released under the MIT license\n */\n// *-*=*  *=*-* *-*=*  *=*-* *-*=*  *=*-* *-*=*  *=*-* *-*=*  *=*-* *-*=*  *=*-*\n// This contains two functions designed to achieve the same thing\n//   -> A WebAssembly function for larger files\n//   -> A JavaScript function for the others\n//\nconst atb = typeof atob === 'function' ? atob : typeof Buffer === 'function' ? nodeATOB : identity, wasmB64 = atb('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'), wasm = WebAssembly && atb !== identity ? str2AB(wasmB64).buffer : false, crypt = makeCrypt(), biteSize = 240 * 16 * 16, bounder = Math.floor(biteSize * 16 * 1.066666667), upperLimit = 268435456 - 65536, parmTypeErrStr = 'Parameter must be Buffer, ArrayBuffer or Uint8Array', tooBigErrStr = 'Parameter exceeds max size of 255.9 Mbytes';\nif (!wasm) {\n    console.log('WebAssembly not available or WASM module could not be decoded; md5WASM will fall back to JavaScript');\n}\n//  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n// This returns a Promise-like object (I was farting around, so sue me)\n// which supports '.catch' and '.then'\nexport default function md5WASM(data) {\n    var mem, memView, importObj, imports, len, buff, thenFun, catchFun, result, endTime;\n    const md5JS = makeMD5JS(), md5WA = makeMD5WA(), returnObj = {}, startTime = new Date().getTime();\n    returnObj['then'] = function (fun) {\n        thenFun = fun;\n        getThen();\n        return returnObj;\n    };\n    returnObj['catch'] = function (fun) {\n        catchFun = fun;\n        return returnObj;\n    };\n    // Sift the incoming parameter and the environment\n    // If we are good, set buff\n    if (true) {\n        if (data && typeof data === 'object') {\n            if (typeof Buffer === 'function' && data.constructor === Buffer) {\n                buff = data;\n            }\n            else {\n                if (data.constructor === Uint8Array || data.constructor === ArrayBuffer) {\n                    buff = data.constructor === ArrayBuffer ? new Uint8Array(data) : data;\n                }\n                else {\n                    getCatch(new TypeError(parmTypeErrStr));\n                }\n            }\n        }\n        else {\n            getCatch(new TypeError(parmTypeErrStr));\n        }\n    }\n    //  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n    // Make some choices based on the size of the incoming data\n    //   ~ Use WebAssembly or just JavaScript\n    //   ~ If Webassemly, allocate appropriate memory\n    //\n    if (buff) {\n        len = buff.length;\n        if (wasm && len > bounder) {\n            if (len > upperLimit) {\n                getCatch(new Error(tooBigErrStr));\n            }\n            else {\n                mem = new WebAssembly.Memory({\n                    initial: len > 32000000 ? (len > 64000000 ? (len > 128000000 ? 4096 : 2048) : 1024) : 512\n                });\n                memView = new Uint32Array(mem.buffer);\n                imports = { mem: mem, log: console.log };\n                importObj = { imports };\n                WebAssembly.instantiate(wasm, importObj).then(giterdone);\n            }\n        }\n        else {\n            getThen(md5JS(buff));\n        }\n    }\n    return returnObj;\n    function giterdone(obj) {\n        getThen(md5WA(buff, obj.instance.exports, memView));\n    }\n    function getThen(r) {\n        var res = Boolean(r) ? r : result;\n        if (Boolean(r)) {\n            endTime = new Date().getTime();\n        }\n        if (typeof thenFun === 'function') {\n            if (Boolean(res)) {\n                thenFun(res, endTime - startTime);\n                thenFun = catchFun = null;\n            }\n        }\n        else {\n            if (Boolean(r)) {\n                result = r;\n            }\n        }\n    }\n    function getCatch(err) {\n        if (typeof catchFun === 'function') {\n            catchFun(err);\n        }\n    }\n}\nfunction makeMD5WA() {\n    var loop, loops;\n    var getA, setA, getB, setB, getC, setC, getD, setD, getX, setX, memView;\n    var md5WA = function (message) {\n        var m00, m01, m02, m03, m04, m05, m06, m07, m08, m09, m10, m11, m12, m13, m14, m15, aa, bb, cc, dd, m, k;\n        var qwerty = new Date().getTime();\n        var md5Used = 0;\n        var a = 1732584193, b = -271733879, c = -1732584194, d = 271733878, i = 0, l = message.length * 8, len;\n        len = bytesToWordsNewer(message, memView);\n        memView[l >>> 5] |= 0x80 << l % 32;\n        memView[(((l + 64) >>> 9) << 4) + 14] = l;\n        len = (((l + 64) >>> 9) << 4) + 15;\n        m = memView;\n        // console.log(\"first loop took \"+((new Date().getTime())-qwerty)+\"ms\");\n        while (i < len) {\n            if (len > i + bounder) {\n                setA(a);\n                setB(b);\n                setC(c);\n                setD(d);\n                loops(biteSize);\n                i = i + biteSize * 16;\n                a = getA();\n                b = getB();\n                c = getC();\n                d = getD();\n                md5Used++;\n            }\n            else {\n                aa = a;\n                bb = b;\n                cc = c;\n                dd = d;\n                m00 = m[i + 0] >>> 0;\n                m01 = m[i + 1] >>> 0;\n                m02 = m[i + 2] >>> 0;\n                m03 = m[i + 3] >>> 0;\n                m04 = m[i + 4] >>> 0;\n                m05 = m[i + 5] >>> 0;\n                m06 = m[i + 6] >>> 0;\n                m07 = m[i + 7] >>> 0;\n                m08 = m[i + 8] >>> 0;\n                m09 = m[i + 9] >>> 0;\n                m10 = m[i + 10] >>> 0;\n                m11 = m[i + 11] >>> 0;\n                m12 = m[i + 12] >>> 0;\n                m13 = m[i + 13] >>> 0;\n                m14 = m[i + 14] >>> 0;\n                m15 = m[i + 15] >>> 0;\n                a = ____(7, 25, a + ((b & c) | (~b & d)) + m00 - 680876936) + b;\n                d = ____(12, 20, d + ((a & b) | (~a & c)) + m01 - 389564586) + a;\n                c = ____(17, 15, c + ((d & a) | (~d & b)) + m02 + 606105819) + d;\n                b = ____(22, 10, b + ((c & d) | (~c & a)) + m03 - 1044525330) + c;\n                a = ____(7, 25, a + ((b & c) | (~b & d)) + m04 - 176418897) + b;\n                d = ____(12, 20, d + ((a & b) | (~a & c)) + m05 + 1200080426) + a;\n                c = ____(17, 15, c + ((d & a) | (~d & b)) + m06 - 1473231341) + d;\n                b = ____(22, 10, b + ((c & d) | (~c & a)) + m07 - 45705983) + c;\n                a = ____(7, 25, a + ((b & c) | (~b & d)) + m08 + 1770035416) + b;\n                d = ____(12, 20, d + ((a & b) | (~a & c)) + m09 - 1958414417) + a;\n                c = ____(17, 15, c + ((d & a) | (~d & b)) + m10 - 42063) + d;\n                b = ____(22, 10, b + ((c & d) | (~c & a)) + m11 - 1990404162) + c;\n                a = ____(7, 25, a + ((b & c) | (~b & d)) + m12 + 1804603682) + b;\n                d = ____(12, 20, d + ((a & b) | (~a & c)) + m13 - 40341101) + a;\n                c = ____(17, 15, c + ((d & a) | (~d & b)) + m14 - 1502002290) + d;\n                b = ____(22, 10, b + ((c & d) | (~c & a)) + m15 + 1236535329) + c;\n                a = ____(5, 27, a + ((b & d) | (c & ~d)) + m01 - 165796510) + b;\n                d = ____(9, 23, d + ((a & c) | (b & ~c)) + m06 - 1069501632) + a;\n                c = ____(14, 18, c + ((d & b) | (a & ~b)) + m11 + 643717713) + d;\n                b = ____(20, 12, b + ((c & a) | (d & ~a)) + m00 - 373897302) + c;\n                a = ____(5, 27, a + ((b & d) | (c & ~d)) + m05 - 701558691) + b;\n                d = ____(9, 23, d + ((a & c) | (b & ~c)) + m10 + 38016083) + a;\n                c = ____(14, 18, c + ((d & b) | (a & ~b)) + m15 - 660478335) + d;\n                b = ____(20, 12, b + ((c & a) | (d & ~a)) + m04 - 405537848) + c;\n                a = ____(5, 27, a + ((b & d) | (c & ~d)) + m09 + 568446438) + b;\n                d = ____(9, 23, d + ((a & c) | (b & ~c)) + m14 - 1019803690) + a;\n                c = ____(14, 18, c + ((d & b) | (a & ~b)) + m03 - 187363961) + d;\n                b = ____(20, 12, b + ((c & a) | (d & ~a)) + m08 + 1163531501) + c;\n                a = ____(5, 27, a + ((b & d) | (c & ~d)) + m13 - 1444681467) + b;\n                d = ____(9, 23, d + ((a & c) | (b & ~c)) + m02 - 51403784) + a;\n                c = ____(14, 18, c + ((d & b) | (a & ~b)) + m07 + 1735328473) + d;\n                b = ____(20, 12, b + ((c & a) | (d & ~a)) + m12 - 1926607734) + c;\n                a = ____(4, 28, a + (b ^ c ^ d) + m05 - 378558) + b;\n                d = ____(11, 21, d + (a ^ b ^ c) + m08 - 2022574463) + a;\n                c = ____(16, 16, c + (d ^ a ^ b) + m11 + 1839030562) + d;\n                b = ____(23, 9, b + (c ^ d ^ a) + m14 - 35309556) + c;\n                a = ____(4, 28, a + (b ^ c ^ d) + m01 - 1530992060) + b;\n                d = ____(11, 21, d + (a ^ b ^ c) + m04 + 1272893353) + a;\n                c = ____(16, 16, c + (d ^ a ^ b) + m07 - 155497632) + d;\n                b = ____(23, 9, b + (c ^ d ^ a) + m10 - 1094730640) + c;\n                a = ____(4, 28, a + (b ^ c ^ d) + m13 + 681279174) + b;\n                d = ____(11, 21, d + (a ^ b ^ c) + m00 - 358537222) + a;\n                c = ____(16, 16, c + (d ^ a ^ b) + m03 - 722521979) + d;\n                b = ____(23, 9, b + (c ^ d ^ a) + m06 + 76029189) + c;\n                a = ____(4, 28, a + (b ^ c ^ d) + m09 - 640364487) + b;\n                d = ____(11, 21, d + (a ^ b ^ c) + m12 - 421815835) + a;\n                c = ____(16, 16, c + (d ^ a ^ b) + m15 + 530742520) + d;\n                b = ____(23, 9, b + (c ^ d ^ a) + m02 - 995338651) + c;\n                a = ____(6, 26, a + (c ^ (b | ~d)) + m00 - 198630844) + b;\n                d = ____(10, 22, d + (b ^ (a | ~c)) + m07 + 1126891415) + a;\n                c = ____(15, 17, c + (a ^ (d | ~b)) + m14 - 1416354905) + d;\n                b = ____(21, 11, b + (d ^ (c | ~a)) + m05 - 57434055) + c;\n                a = ____(6, 26, a + (c ^ (b | ~d)) + m12 + 1700485571) + b;\n                d = ____(10, 22, d + (b ^ (a | ~c)) + m03 - 1894986606) + a;\n                c = ____(15, 17, c + (a ^ (d | ~b)) + m10 - 1051523) + d;\n                b = ____(21, 11, b + (d ^ (c | ~a)) + m01 - 2054922799) + c;\n                a = ____(6, 26, a + (c ^ (b | ~d)) + m08 + 1873313359) + b;\n                d = ____(10, 22, d + (b ^ (a | ~c)) + m15 - 30611744) + a;\n                c = ____(15, 17, c + (a ^ (d | ~b)) + m06 - 1560198380) + d;\n                b = ____(21, 11, b + (d ^ (c | ~a)) + m13 + 1309151649) + c;\n                a = ____(6, 26, a + (c ^ (b | ~d)) + m04 - 145523070) + b;\n                d = ____(10, 22, d + (b ^ (a | ~c)) + m11 - 1120210379) + a;\n                c = ____(15, 17, c + (a ^ (d | ~b)) + m02 + 718787259) + d;\n                b = ____(21, 11, b + (d ^ (c | ~a)) + m09 - 343485551) + c;\n                i = i + 16;\n                a = (a + aa) >>> 0;\n                b = (b + bb) >>> 0;\n                c = (c + cc) >>> 0;\n                d = (d + dd) >>> 0;\n            }\n        }\n        // console.log(\"md5WA, elapsed=\"+((new Date().getTime())-qwerty)+(md5Used?\", WebAssembly called \"+md5Used+\" times\":\", WebAssembly not called\"));\n        return crypt.endian([a, b, c, d]);\n        function ____(s, t, n) {\n            return (n << s) | (n >>> t);\n        }\n        // Convert a byte array to big-endian 32-bit words\n        function bytesToWordsNewer(bytes, words) {\n            var i = -1, l = Math.floor((bytes.length - 1) / 4), j = 0, b0, b1, b2, b3;\n            while (l - 8 > i++) {\n                j = i << 2;\n                words[i] = bytes[j + 0] | (bytes[j + 1] << 8) | (bytes[j + 2] << 16) | (bytes[j + 3] << 24);\n            }\n            i--;\n            while (l > i++) {\n                j = i << 2;\n                b0 = typeof bytes[j + 0] === 'undefined' ? 0 : bytes[j + 0];\n                b1 = typeof bytes[j + 1] === 'undefined' ? 0 : bytes[j + 1];\n                b2 = typeof bytes[j + 2] === 'undefined' ? 0 : bytes[j + 2];\n                b3 = typeof bytes[j + 3] === 'undefined' ? 0 : bytes[j + 3];\n                words[i] = b0 | (b1 << 8) | (b2 << 16) | (b3 << 24);\n            }\n            return l + 1;\n        }\n    };\n    return function (message, exports, mView, options) {\n        var digestbytes;\n        loops = exports.loops;\n        loop = exports.loop;\n        getA = exports.getA;\n        getB = exports.getB;\n        getC = exports.getC;\n        getD = exports.getD;\n        getX = exports.getX;\n        setA = exports.setA;\n        setB = exports.setB;\n        setC = exports.setC;\n        setD = exports.setD;\n        setX = exports.setX;\n        memView = mView;\n        digestbytes = crypt.wordsToBytes(md5WA(message));\n        return options && options.asBytes ? digestbytes : crypt.bytesconvertNumberToHex(digestbytes);\n    };\n}\nfunction makeMD5JS() {\n    var md5JS = function (message, options) {\n        var m00, m01, m02, m03, m04, m05, m06, m07, m08, m09, m10, m11, m12, m13, m14, m15, aa, bb, cc, dd, m;\n        var qwerty = new Date().getTime();\n        // console.log(\"md5 start\");\n        var a = 1732584193, b = -271733879, c = -1732584194, d = 271733878, l = message.length * 8;\n        m = crypt.bytesToWords(message);\n        // Swap endian\n        for (var j = 0; j < m.length; j++) {\n            m[j] =\n                (((m[j] << 8) | (m[j] >>> 24)) & 0x00ff00ff) | (((m[j] << 24) | (m[j] >>> 8)) & 0xff00ff00);\n        }\n        // Padding\n        m[l >>> 5] |= 0x80 << l % 32;\n        m[(((l + 64) >>> 9) << 4) + 14] = l;\n        for (var i = 0; i < m.length; i += 16) {\n            aa = a;\n            bb = b;\n            cc = c;\n            dd = d;\n            m00 = m[i + 0] >>> 0;\n            m01 = m[i + 1] >>> 0;\n            m02 = m[i + 2] >>> 0;\n            m03 = m[i + 3] >>> 0;\n            m04 = m[i + 4] >>> 0;\n            m05 = m[i + 5] >>> 0;\n            m06 = m[i + 6] >>> 0;\n            m07 = m[i + 7] >>> 0;\n            m08 = m[i + 8] >>> 0;\n            m09 = m[i + 9] >>> 0;\n            m10 = m[i + 10] >>> 0;\n            m11 = m[i + 11] >>> 0;\n            m12 = m[i + 12] >>> 0;\n            m13 = m[i + 13] >>> 0;\n            m14 = m[i + 14] >>> 0;\n            m15 = m[i + 15] >>> 0;\n            a = ____(7, 25, a + ((b & c) | (~b & d)) + m00 - 680876936) + b;\n            d = ____(12, 20, d + ((a & b) | (~a & c)) + m01 - 389564586) + a;\n            c = ____(17, 15, c + ((d & a) | (~d & b)) + m02 + 606105819) + d;\n            b = ____(22, 10, b + ((c & d) | (~c & a)) + m03 - 1044525330) + c;\n            a = ____(7, 25, a + ((b & c) | (~b & d)) + m04 - 176418897) + b;\n            d = ____(12, 20, d + ((a & b) | (~a & c)) + m05 + 1200080426) + a;\n            c = ____(17, 15, c + ((d & a) | (~d & b)) + m06 - 1473231341) + d;\n            b = ____(22, 10, b + ((c & d) | (~c & a)) + m07 - 45705983) + c;\n            a = ____(7, 25, a + ((b & c) | (~b & d)) + m08 + 1770035416) + b;\n            d = ____(12, 20, d + ((a & b) | (~a & c)) + m09 - 1958414417) + a;\n            c = ____(17, 15, c + ((d & a) | (~d & b)) + m10 - 42063) + d;\n            b = ____(22, 10, b + ((c & d) | (~c & a)) + m11 - 1990404162) + c;\n            a = ____(7, 25, a + ((b & c) | (~b & d)) + m12 + 1804603682) + b;\n            d = ____(12, 20, d + ((a & b) | (~a & c)) + m13 - 40341101) + a;\n            c = ____(17, 15, c + ((d & a) | (~d & b)) + m14 - 1502002290) + d;\n            b = ____(22, 10, b + ((c & d) | (~c & a)) + m15 + 1236535329) + c;\n            a = ____(5, 27, a + ((b & d) | (c & ~d)) + m01 - 165796510) + b;\n            d = ____(9, 23, d + ((a & c) | (b & ~c)) + m06 - 1069501632) + a;\n            c = ____(14, 18, c + ((d & b) | (a & ~b)) + m11 + 643717713) + d;\n            b = ____(20, 12, b + ((c & a) | (d & ~a)) + m00 - 373897302) + c;\n            a = ____(5, 27, a + ((b & d) | (c & ~d)) + m05 - 701558691) + b;\n            d = ____(9, 23, d + ((a & c) | (b & ~c)) + m10 + 38016083) + a;\n            c = ____(14, 18, c + ((d & b) | (a & ~b)) + m15 - 660478335) + d;\n            b = ____(20, 12, b + ((c & a) | (d & ~a)) + m04 - 405537848) + c;\n            a = ____(5, 27, a + ((b & d) | (c & ~d)) + m09 + 568446438) + b;\n            d = ____(9, 23, d + ((a & c) | (b & ~c)) + m14 - 1019803690) + a;\n            c = ____(14, 18, c + ((d & b) | (a & ~b)) + m03 - 187363961) + d;\n            b = ____(20, 12, b + ((c & a) | (d & ~a)) + m08 + 1163531501) + c;\n            a = ____(5, 27, a + ((b & d) | (c & ~d)) + m13 - 1444681467) + b;\n            d = ____(9, 23, d + ((a & c) | (b & ~c)) + m02 - 51403784) + a;\n            c = ____(14, 18, c + ((d & b) | (a & ~b)) + m07 + 1735328473) + d;\n            b = ____(20, 12, b + ((c & a) | (d & ~a)) + m12 - 1926607734) + c;\n            a = ____(4, 28, a + (b ^ c ^ d) + m05 - 378558) + b;\n            d = ____(11, 21, d + (a ^ b ^ c) + m08 - 2022574463) + a;\n            c = ____(16, 16, c + (d ^ a ^ b) + m11 + 1839030562) + d;\n            b = ____(23, 9, b + (c ^ d ^ a) + m14 - 35309556) + c;\n            a = ____(4, 28, a + (b ^ c ^ d) + m01 - 1530992060) + b;\n            d = ____(11, 21, d + (a ^ b ^ c) + m04 + 1272893353) + a;\n            c = ____(16, 16, c + (d ^ a ^ b) + m07 - 155497632) + d;\n            b = ____(23, 9, b + (c ^ d ^ a) + m10 - 1094730640) + c;\n            a = ____(4, 28, a + (b ^ c ^ d) + m13 + 681279174) + b;\n            d = ____(11, 21, d + (a ^ b ^ c) + m00 - 358537222) + a;\n            c = ____(16, 16, c + (d ^ a ^ b) + m03 - 722521979) + d;\n            b = ____(23, 9, b + (c ^ d ^ a) + m06 + 76029189) + c;\n            a = ____(4, 28, a + (b ^ c ^ d) + m09 - 640364487) + b;\n            d = ____(11, 21, d + (a ^ b ^ c) + m12 - 421815835) + a;\n            c = ____(16, 16, c + (d ^ a ^ b) + m15 + 530742520) + d;\n            b = ____(23, 9, b + (c ^ d ^ a) + m02 - 995338651) + c;\n            a = ____(6, 26, a + (c ^ (b | ~d)) + m00 - 198630844) + b;\n            d = ____(10, 22, d + (b ^ (a | ~c)) + m07 + 1126891415) + a;\n            c = ____(15, 17, c + (a ^ (d | ~b)) + m14 - 1416354905) + d;\n            b = ____(21, 11, b + (d ^ (c | ~a)) + m05 - 57434055) + c;\n            a = ____(6, 26, a + (c ^ (b | ~d)) + m12 + 1700485571) + b;\n            d = ____(10, 22, d + (b ^ (a | ~c)) + m03 - 1894986606) + a;\n            c = ____(15, 17, c + (a ^ (d | ~b)) + m10 - 1051523) + d;\n            b = ____(21, 11, b + (d ^ (c | ~a)) + m01 - 2054922799) + c;\n            a = ____(6, 26, a + (c ^ (b | ~d)) + m08 + 1873313359) + b;\n            d = ____(10, 22, d + (b ^ (a | ~c)) + m15 - 30611744) + a;\n            c = ____(15, 17, c + (a ^ (d | ~b)) + m06 - 1560198380) + d;\n            b = ____(21, 11, b + (d ^ (c | ~a)) + m13 + 1309151649) + c;\n            a = ____(6, 26, a + (c ^ (b | ~d)) + m04 - 145523070) + b;\n            d = ____(10, 22, d + (b ^ (a | ~c)) + m11 - 1120210379) + a;\n            c = ____(15, 17, c + (a ^ (d | ~b)) + m02 + 718787259) + d;\n            b = ____(21, 11, b + (d ^ (c | ~a)) + m09 - 343485551) + c;\n            a = (a + aa) >>> 0;\n            b = (b + bb) >>> 0;\n            c = (c + cc) >>> 0;\n            d = (d + dd) >>> 0;\n        }\n        // console.log(\"md5JS, elapsed=\"+((new Date().getTime())-qwerty));\n        return crypt.endian([a, b, c, d]);\n        function ____(s, t, n) {\n            return (n << s) | (n >>> t);\n        }\n    };\n    return function (message, options) {\n        var digestbytes = crypt.wordsToBytes(md5JS(message, options)), result = options && options.asBytes ? digestbytes : crypt.bytesconvertNumberToHex(digestbytes);\n        return result;\n    };\n}\nfunction str2AB(str) {\n    var l, buff, buffView, i = -1;\n    l = str.length - 1;\n    buff = new ArrayBuffer(str.length);\n    buffView = new Uint8Array(buff);\n    while (l > i++) {\n        buffView[i] = str.charCodeAt(i);\n    }\n    return buffView;\n}\nfunction nodeATOB(str) {\n    return Buffer.from(str, 'base64').toString('binary');\n}\nfunction identity(x) {\n    return x;\n}\nfunction makeCrypt() {\n    var base64map = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    return {\n        rotl: function (n, b) {\n            return (n << b) | (n >>> (32 - b));\n        },\n        endian: function (n) {\n            if (n.constructor == Number) {\n                return (crypt.rotl(n, 8) & 0x00ff00ff) | (crypt.rotl(n, 24) & 0xff00ff00);\n            }\n            for (var i = 0; i < n.length; i++)\n                n[i] = crypt.endian(n[i]);\n            return n;\n        },\n        bytesToWords: function (bytes) {\n            for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n                words[b >>> 5] |= bytes[i] << (24 - (b % 32));\n            return words;\n        },\n        wordsToBytes: function (words) {\n            for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n                bytes.push((words[b >>> 5] >>> (24 - (b % 32))) & 0xff);\n            return bytes;\n        },\n        bytesconvertNumberToHex: function (bytes) {\n            for (var hex = [], i = 0; i < bytes.length; i++) {\n                hex.push((bytes[i] >>> 4).toString(16));\n                hex.push((bytes[i] & 0xf).toString(16));\n            }\n            return hex.join('');\n        }\n    };\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { Compression } from \"./compression.js\";\nimport { isBrowser, toArrayBuffer } from '@loaders.gl/loader-utils';\nimport pako from 'pako'; // https://bundlephobia.com/package/pako\nimport zlib from 'zlib';\nimport { promisify1 } from '@loaders.gl/loader-utils';\n/**\n * DEFLATE compression / decompression\n */\nexport class DeflateCompression extends Compression {\n    name = 'deflate';\n    extensions = [];\n    contentEncodings = ['deflate'];\n    isSupported = true;\n    options;\n    _chunks = [];\n    constructor(options = {}) {\n        super(options);\n        this.options = options;\n    }\n    async compress(input) {\n        // On Node.js we can use built-in zlib\n        if (!isBrowser && this.options.deflate?.useZlib) {\n            const buffer = this.options.deflate?.gzip\n                ? await promisify1(zlib.gzip)(input)\n                : await promisify1(zlib.deflate)(input);\n            return toArrayBuffer(buffer);\n        }\n        return this.compressSync(input);\n    }\n    async decompress(input) {\n        // On Node.js we can use built-in zlib\n        if (!isBrowser && this.options.deflate?.useZlib) {\n            const buffer = this.options.deflate?.gzip\n                ? await promisify1(zlib.gunzip)(input)\n                : await promisify1(zlib.inflate)(input);\n            return toArrayBuffer(buffer);\n        }\n        return this.decompressSync(input);\n    }\n    compressSync(input) {\n        // On Node.js we can use built-in zlib\n        if (!isBrowser && this.options.deflate?.useZlib) {\n            const buffer = this.options.deflate?.gzip ? zlib.gzipSync(input) : zlib.deflateSync(input);\n            return toArrayBuffer(buffer);\n        }\n        const pakoOptions = this.options?.deflate || {};\n        const inputArray = new Uint8Array(input);\n        const deflate = this.options?.raw ? pako.deflateRaw : pako.deflate;\n        return deflate(inputArray, pakoOptions).buffer;\n    }\n    decompressSync(input) {\n        // On Node.js we can use built-in zlib\n        if (!isBrowser && this.options.deflate?.useZlib) {\n            const buffer = this.options.deflate?.gzip ? zlib.gunzipSync(input) : zlib.inflateSync(input);\n            return toArrayBuffer(buffer);\n        }\n        const pakoOptions = this.options?.deflate || {};\n        const inputArray = new Uint8Array(input);\n        const inflate = this.options?.raw ? pako.inflateRaw : pako.inflate;\n        return inflate(inputArray, pakoOptions).buffer;\n    }\n    async *compressBatches(asyncIterator) {\n        const pakoOptions = this.options?.deflate || {};\n        const pakoProcessor = new pako.Deflate(pakoOptions);\n        yield* this.transformBatches(pakoProcessor, asyncIterator);\n    }\n    async *decompressBatches(asyncIterator) {\n        const pakoOptions = this.options?.deflate || {};\n        const pakoProcessor = new pako.Inflate(pakoOptions);\n        yield* this.transformBatches(pakoProcessor, asyncIterator);\n    }\n    async *transformBatches(pakoProcessor, asyncIterator) {\n        pakoProcessor.onData = this._onData.bind(this);\n        pakoProcessor.onEnd = this._onEnd.bind(this);\n        for await (const chunk of asyncIterator) {\n            const uint8Array = new Uint8Array(chunk);\n            const ok = pakoProcessor.push(uint8Array, false); // false -> not last chunk\n            if (!ok) {\n                throw new Error(`${this._getError()}write`);\n            }\n            const chunks = this._getChunks();\n            yield* chunks;\n        }\n        // End\n        const emptyChunk = new Uint8Array(0);\n        const ok = pakoProcessor.push(emptyChunk, true); // true -> last chunk\n        if (!ok) {\n            // For some reason we get error but it still works???\n            // throw new Error(this._getError() + 'end');\n        }\n        const chunks = this._getChunks();\n        yield* chunks;\n    }\n    _onData(chunk) {\n        this._chunks.push(chunk);\n    }\n    _onEnd(status) {\n        if (status !== 0) {\n            throw new Error(this._getError(status) + this._chunks.length);\n        }\n    }\n    _getChunks() {\n        const chunks = this._chunks;\n        this._chunks = [];\n        return chunks;\n    }\n    // TODO - For some reason we don't get the error message from pako in _onEnd?\n    _getError(code = 0) {\n        const MESSAGES = {\n            /* Z_NEED_DICT       2  */\n            2: 'need dictionary',\n            /* Z_STREAM_END      1  */\n            1: 'stream end',\n            /* Z_OK              0  */\n            0: '',\n            /* Z_ERRNO         (-1) */\n            '-1': 'file error',\n            /* Z_STREAM_ERROR  (-2) */\n            '-2': 'stream error',\n            /* Z_DATA_ERROR    (-3) */\n            '-3': 'data error',\n            /* Z_MEM_ERROR     (-4) */\n            '-4': 'insufficient memory',\n            /* Z_BUF_ERROR     (-5) */\n            '-5': 'buffer error',\n            /* Z_VERSION_ERROR (-6) */\n            '-6': 'incompatible version'\n        };\n        return `${this.name}: ${MESSAGES[code]}`;\n    }\n}\n", "// @ts-nocheck\n/* eslint-disable */\n// Forked from https://raw.githubusercontent.com/google/brotli/master/js/decode.js\n// A pure javascript decoder is provided\n/* Copyright 2017 Google Inc. All Rights Reserved.\n *  Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\n/**\n * @typedef {Object} Options\n * @property {?Int8Array} customDictionary\n */\nlet Options;\n/**\n * Private scope / static initializer for decoder.\n *\n * @return {function(!Int8Array, Options=):!Int8Array}\n */\nlet makeBrotliDecode = () => {\n    /**\n     * @constructor\n     * @param {!Int8Array} bytes\n     * @struct\n     */\n    function InputStream(bytes) {\n        /** @type {!Int8Array} */\n        this.data = bytes;\n        /** @type {!number} */\n        this.offset = 0;\n    }\n    /* GENERATED CODE BEGIN */\n    /** @type {!Int32Array} */\n    let MAX_HUFFMAN_TABLE_SIZE = Int32Array.from([\n        256, 402, 436, 468, 500, 534, 566, 598, 630, 662, 694, 726, 758, 790, 822, 854, 886, 920, 952,\n        984, 1016, 1048, 1080\n    ]);\n    /** @type {!Int32Array} */\n    let CODE_LENGTH_CODE_ORDER = Int32Array.from([\n        1, 2, 3, 4, 0, 5, 17, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15\n    ]);\n    /** @type {!Int32Array} */\n    let DISTANCE_SHORT_CODE_INDEX_OFFSET = Int32Array.from([\n        0, 3, 2, 1, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3\n    ]);\n    /** @type {!Int32Array} */\n    let DISTANCE_SHORT_CODE_VALUE_OFFSET = Int32Array.from([\n        0, 0, 0, 0, -1, 1, -2, 2, -3, 3, -1, 1, -2, 2, -3, 3\n    ]);\n    /** @type {!Int32Array} */\n    let FIXED_TABLE = Int32Array.from([\n        0x020000, 0x020004, 0x020003, 0x030002, 0x020000, 0x020004, 0x020003, 0x040001, 0x020000,\n        0x020004, 0x020003, 0x030002, 0x020000, 0x020004, 0x020003, 0x040005\n    ]);\n    /** @type {!Int32Array} */\n    let BLOCK_LENGTH_OFFSET = Int32Array.from([\n        1, 5, 9, 13, 17, 25, 33, 41, 49, 65, 81, 97, 113, 145, 177, 209, 241, 305, 369, 497, 753, 1265,\n        2289, 4337, 8433, 16625\n    ]);\n    /** @type {!Int32Array} */\n    let BLOCK_LENGTH_N_BITS = Int32Array.from([\n        2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 7, 8, 9, 10, 11, 12, 13, 24\n    ]);\n    /** @type {!Int16Array} */\n    let INSERT_LENGTH_N_BITS = Int16Array.from([\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x02, 0x02, 0x03, 0x03, 0x04, 0x04, 0x05, 0x05,\n        0x06, 0x07, 0x08, 0x09, 0x0a, 0x0c, 0x0e, 0x18\n    ]);\n    /** @type {!Int16Array} */\n    let COPY_LENGTH_N_BITS = Int16Array.from([\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x02, 0x02, 0x03, 0x03, 0x04, 0x04,\n        0x05, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x18\n    ]);\n    /** @type {!Int16Array} */\n    let CMD_LOOKUP = new Int16Array(2816);\n    {\n        unpackCommandLookupTable(CMD_LOOKUP);\n    }\n    /**\n     * @param {number} i\n     * @return {number}\n     */\n    function log2floor(i) {\n        let /** @type{number} */ result = -1;\n        let /** @type{number} */ step = 16;\n        while (step > 0) {\n            if (i >>> step != 0) {\n                result += step;\n                i = i >>> step;\n            }\n            step = step >> 1;\n        }\n        return result + i;\n    }\n    /**\n     * @param {number} npostfix\n     * @param {number} ndirect\n     * @param {number} maxndistbits\n     * @return {number}\n     */\n    function calculateDistanceAlphabetSize(npostfix, ndirect, maxndistbits) {\n        return 16 + ndirect + 2 * (maxndistbits << npostfix);\n    }\n    /**\n     * @param {number} maxDistance\n     * @param {number} npostfix\n     * @param {number} ndirect\n     * @return {number}\n     */\n    function calculateDistanceAlphabetLimit(maxDistance, npostfix, ndirect) {\n        if (maxDistance < ndirect + (2 << npostfix)) {\n            throw 'maxDistance is too small';\n        }\n        let /** @type{number} */ offset = ((maxDistance - ndirect) >> npostfix) + 4;\n        let /** @type{number} */ ndistbits = log2floor(offset) - 1;\n        let /** @type{number} */ group = ((ndistbits - 1) << 1) | ((offset >> ndistbits) & 1);\n        return ((group - 1) << npostfix) + (1 << npostfix) + ndirect + 16;\n    }\n    /**\n     * @param {!Int16Array} cmdLookup\n     * @return {void}\n     */\n    function unpackCommandLookupTable(cmdLookup) {\n        let /** @type{!Int16Array} */ insertLengthOffsets = new Int16Array(24);\n        let /** @type{!Int16Array} */ copyLengthOffsets = new Int16Array(24);\n        copyLengthOffsets[0] = 2;\n        for (let /** @type{number} */ i = 0; i < 23; ++i) {\n            insertLengthOffsets[i + 1] = insertLengthOffsets[i] + (1 << INSERT_LENGTH_N_BITS[i]);\n            copyLengthOffsets[i + 1] = copyLengthOffsets[i] + (1 << COPY_LENGTH_N_BITS[i]);\n        }\n        for (let /** @type{number} */ cmdCode = 0; cmdCode < 704; ++cmdCode) {\n            let /** @type{number} */ rangeIdx = cmdCode >>> 6;\n            let /** @type{number} */ distanceContextOffset = -4;\n            if (rangeIdx >= 2) {\n                rangeIdx -= 2;\n                distanceContextOffset = 0;\n            }\n            let /** @type{number} */ insertCode = (((0x29850 >>> (rangeIdx * 2)) & 0x3) << 3) | ((cmdCode >>> 3) & 7);\n            let /** @type{number} */ copyCode = (((0x26244 >>> (rangeIdx * 2)) & 0x3) << 3) | (cmdCode & 7);\n            let /** @type{number} */ copyLengthOffset = copyLengthOffsets[copyCode];\n            let /** @type{number} */ distanceContext = distanceContextOffset + (copyLengthOffset > 4 ? 3 : copyLengthOffset - 2);\n            let /** @type{number} */ index = cmdCode * 4;\n            cmdLookup[index + 0] = INSERT_LENGTH_N_BITS[insertCode] | (COPY_LENGTH_N_BITS[copyCode] << 8);\n            cmdLookup[index + 1] = insertLengthOffsets[insertCode];\n            cmdLookup[index + 2] = copyLengthOffsets[copyCode];\n            cmdLookup[index + 3] = distanceContext;\n        }\n    }\n    /**\n     * @param {!State} s\n     * @return {number}\n     */\n    function decodeWindowBits(s) {\n        let /** @type{number} */ largeWindowEnabled = s.isLargeWindow;\n        s.isLargeWindow = 0;\n        if (s.bitOffset >= 16) {\n            s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n            s.bitOffset -= 16;\n        }\n        if (readFewBits(s, 1) == 0) {\n            return 16;\n        }\n        let /** @type{number} */ n = readFewBits(s, 3);\n        if (n != 0) {\n            return 17 + n;\n        }\n        n = readFewBits(s, 3);\n        if (n != 0) {\n            if (n == 1) {\n                if (largeWindowEnabled == 0) {\n                    return -1;\n                }\n                s.isLargeWindow = 1;\n                if (readFewBits(s, 1) == 1) {\n                    return -1;\n                }\n                n = readFewBits(s, 6);\n                if (n < 10 || n > 30) {\n                    return -1;\n                }\n                return n;\n            }\n            else {\n                return 8 + n;\n            }\n        }\n        return 17;\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function enableEagerOutput(s) {\n        if (s.runningState != 1) {\n            throw 'State MUST be freshly initialized';\n        }\n        s.isEager = 1;\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function enableLargeWindow(s) {\n        if (s.runningState != 1) {\n            throw 'State MUST be freshly initialized';\n        }\n        s.isLargeWindow = 1;\n    }\n    /**\n     * @param {!State} s\n     * @param {!Int8Array} data\n     * @return {void}\n     */\n    function attachDictionaryChunk(s, data) {\n        if (s.runningState != 1) {\n            throw 'State MUST be freshly initialized';\n        }\n        if (s.cdNumChunks == 0) {\n            s.cdChunks = new Array(16);\n            s.cdChunkOffsets = new Int32Array(16);\n            s.cdBlockBits = -1;\n        }\n        if (s.cdNumChunks == 15) {\n            throw 'Too many dictionary chunks';\n        }\n        s.cdChunks[s.cdNumChunks] = data;\n        s.cdNumChunks++;\n        s.cdTotalSize += data.length;\n        s.cdChunkOffsets[s.cdNumChunks] = s.cdTotalSize;\n    }\n    /**\n     * @param {!State} s\n     * @param {!InputStream} input\n     * @return {void}\n     */\n    function initState(s, input) {\n        if (s.runningState != 0) {\n            throw 'State MUST be uninitialized';\n        }\n        s.blockTrees = new Int32Array(3091);\n        s.blockTrees[0] = 7;\n        s.distRbIdx = 3;\n        let /** @type{number} */ maxDistanceAlphabetLimit = calculateDistanceAlphabetLimit(0x7ffffffc, 3, 15 << 3);\n        s.distExtraBits = new Int8Array(maxDistanceAlphabetLimit);\n        s.distOffset = new Int32Array(maxDistanceAlphabetLimit);\n        s.input = input;\n        initBitReader(s);\n        s.runningState = 1;\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function close(s) {\n        if (s.runningState == 0) {\n            throw 'State MUST be initialized';\n        }\n        if (s.runningState == 11) {\n            return;\n        }\n        s.runningState = 11;\n        if (s.input != null) {\n            closeInput(s.input);\n            s.input = null;\n        }\n    }\n    /**\n     * @param {!State} s\n     * @return {number}\n     */\n    function decodeVarLenUnsignedByte(s) {\n        if (s.bitOffset >= 16) {\n            s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n            s.bitOffset -= 16;\n        }\n        if (readFewBits(s, 1) != 0) {\n            let /** @type{number} */ n = readFewBits(s, 3);\n            if (n == 0) {\n                return 1;\n            }\n            else {\n                return readFewBits(s, n) + (1 << n);\n            }\n        }\n        return 0;\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function decodeMetaBlockLength(s) {\n        if (s.bitOffset >= 16) {\n            s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n            s.bitOffset -= 16;\n        }\n        s.inputEnd = readFewBits(s, 1);\n        s.metaBlockLength = 0;\n        s.isUncompressed = 0;\n        s.isMetadata = 0;\n        if (s.inputEnd != 0 && readFewBits(s, 1) != 0) {\n            return;\n        }\n        let /** @type{number} */ sizeNibbles = readFewBits(s, 2) + 4;\n        if (sizeNibbles == 7) {\n            s.isMetadata = 1;\n            if (readFewBits(s, 1) != 0) {\n                throw 'Corrupted reserved bit';\n            }\n            let /** @type{number} */ sizeBytes = readFewBits(s, 2);\n            if (sizeBytes == 0) {\n                return;\n            }\n            for (let /** @type{number} */ i = 0; i < sizeBytes; i++) {\n                if (s.bitOffset >= 16) {\n                    s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                    s.bitOffset -= 16;\n                }\n                let /** @type{number} */ bits = readFewBits(s, 8);\n                if (bits == 0 && i + 1 == sizeBytes && sizeBytes > 1) {\n                    throw 'Exuberant nibble';\n                }\n                s.metaBlockLength |= bits << (i * 8);\n            }\n        }\n        else {\n            for (let /** @type{number} */ i = 0; i < sizeNibbles; i++) {\n                if (s.bitOffset >= 16) {\n                    s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                    s.bitOffset -= 16;\n                }\n                let /** @type{number} */ bits = readFewBits(s, 4);\n                if (bits == 0 && i + 1 == sizeNibbles && sizeNibbles > 4) {\n                    throw 'Exuberant nibble';\n                }\n                s.metaBlockLength |= bits << (i * 4);\n            }\n        }\n        s.metaBlockLength++;\n        if (s.inputEnd == 0) {\n            s.isUncompressed = readFewBits(s, 1);\n        }\n    }\n    /**\n     * @param {!Int32Array} tableGroup\n     * @param {number} tableIdx\n     * @param {!State} s\n     * @return {number}\n     */\n    function readSymbol(tableGroup, tableIdx, s) {\n        let /** @type{number} */ offset = tableGroup[tableIdx];\n        let /** @type{number} */ val = s.accumulator32 >>> s.bitOffset;\n        offset += val & 0xff;\n        let /** @type{number} */ bits = tableGroup[offset] >> 16;\n        let /** @type{number} */ sym = tableGroup[offset] & 0xffff;\n        if (bits <= 8) {\n            s.bitOffset += bits;\n            return sym;\n        }\n        offset += sym;\n        let /** @type{number} */ mask = (1 << bits) - 1;\n        offset += (val & mask) >>> 8;\n        s.bitOffset += (tableGroup[offset] >> 16) + 8;\n        return tableGroup[offset] & 0xffff;\n    }\n    /**\n     * @param {!Int32Array} tableGroup\n     * @param {number} tableIdx\n     * @param {!State} s\n     * @return {number}\n     */\n    function readBlockLength(tableGroup, tableIdx, s) {\n        if (s.bitOffset >= 16) {\n            s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n            s.bitOffset -= 16;\n        }\n        let /** @type{number} */ code = readSymbol(tableGroup, tableIdx, s);\n        let /** @type{number} */ n = BLOCK_LENGTH_N_BITS[code];\n        if (s.bitOffset >= 16) {\n            s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n            s.bitOffset -= 16;\n        }\n        return BLOCK_LENGTH_OFFSET[code] + (n <= 16 ? readFewBits(s, n) : readManyBits(s, n));\n    }\n    /**\n     * @param {!Int32Array} v\n     * @param {number} index\n     * @return {void}\n     */\n    function moveToFront(v, index) {\n        let /** @type{number} */ value = v[index];\n        for (; index > 0; index--) {\n            v[index] = v[index - 1];\n        }\n        v[0] = value;\n    }\n    /**\n     * @param {!Int8Array} v\n     * @param {number} vLen\n     * @return {void}\n     */\n    function inverseMoveToFrontTransform(v, vLen) {\n        let /** @type{!Int32Array} */ mtf = new Int32Array(256);\n        for (let /** @type{number} */ i = 0; i < 256; i++) {\n            mtf[i] = i;\n        }\n        for (let /** @type{number} */ i = 0; i < vLen; i++) {\n            let /** @type{number} */ index = v[i] & 0xff;\n            v[i] = mtf[index];\n            if (index != 0) {\n                moveToFront(mtf, index);\n            }\n        }\n    }\n    /**\n     * @param {!Int32Array} codeLengthCodeLengths\n     * @param {number} numSymbols\n     * @param {!Int32Array} codeLengths\n     * @param {!State} s\n     * @return {void}\n     */\n    function readHuffmanCodeLengths(codeLengthCodeLengths, numSymbols, codeLengths, s) {\n        let /** @type{number} */ symbol = 0;\n        let /** @type{number} */ prevCodeLen = 8;\n        let /** @type{number} */ repeat = 0;\n        let /** @type{number} */ repeatCodeLen = 0;\n        let /** @type{number} */ space = 32768;\n        let /** @type{!Int32Array} */ table = new Int32Array(32 + 1);\n        let /** @type{number} */ tableIdx = table.length - 1;\n        buildHuffmanTable(table, tableIdx, 5, codeLengthCodeLengths, 18);\n        while (symbol < numSymbols && space > 0) {\n            if (s.halfOffset > 2030) {\n                doReadMoreInput(s);\n            }\n            if (s.bitOffset >= 16) {\n                s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                s.bitOffset -= 16;\n            }\n            let /** @type{number} */ p = (s.accumulator32 >>> s.bitOffset) & 31;\n            s.bitOffset += table[p] >> 16;\n            let /** @type{number} */ codeLen = table[p] & 0xffff;\n            if (codeLen < 16) {\n                repeat = 0;\n                codeLengths[symbol++] = codeLen;\n                if (codeLen != 0) {\n                    prevCodeLen = codeLen;\n                    space -= 32768 >> codeLen;\n                }\n            }\n            else {\n                let /** @type{number} */ extraBits = codeLen - 14;\n                let /** @type{number} */ newLen = 0;\n                if (codeLen == 16) {\n                    newLen = prevCodeLen;\n                }\n                if (repeatCodeLen != newLen) {\n                    repeat = 0;\n                    repeatCodeLen = newLen;\n                }\n                let /** @type{number} */ oldRepeat = repeat;\n                if (repeat > 0) {\n                    repeat -= 2;\n                    repeat <<= extraBits;\n                }\n                if (s.bitOffset >= 16) {\n                    s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                    s.bitOffset -= 16;\n                }\n                repeat += readFewBits(s, extraBits) + 3;\n                let /** @type{number} */ repeatDelta = repeat - oldRepeat;\n                if (symbol + repeatDelta > numSymbols) {\n                    throw 'symbol + repeatDelta > numSymbols';\n                }\n                for (let /** @type{number} */ i = 0; i < repeatDelta; i++) {\n                    codeLengths[symbol++] = repeatCodeLen;\n                }\n                if (repeatCodeLen != 0) {\n                    space -= repeatDelta << (15 - repeatCodeLen);\n                }\n            }\n        }\n        if (space != 0) {\n            throw 'Unused space';\n        }\n        codeLengths.fill(0, symbol, numSymbols);\n    }\n    /**\n     * @param {!Int32Array} symbols\n     * @param {number} length\n     * @return {void}\n     */\n    function checkDupes(symbols, length) {\n        for (let /** @type{number} */ i = 0; i < length - 1; ++i) {\n            for (let /** @type{number} */ j = i + 1; j < length; ++j) {\n                if (symbols[i] == symbols[j]) {\n                    throw 'Duplicate simple Huffman code symbol';\n                }\n            }\n        }\n    }\n    /**\n     * @param {number} alphabetSizeMax\n     * @param {number} alphabetSizeLimit\n     * @param {!Int32Array} tableGroup\n     * @param {number} tableIdx\n     * @param {!State} s\n     * @return {number}\n     */\n    function readSimpleHuffmanCode(alphabetSizeMax, alphabetSizeLimit, tableGroup, tableIdx, s) {\n        let /** @type{!Int32Array} */ codeLengths = new Int32Array(alphabetSizeLimit);\n        let /** @type{!Int32Array} */ symbols = new Int32Array(4);\n        let /** @type{number} */ maxBits = 1 + log2floor(alphabetSizeMax - 1);\n        let /** @type{number} */ numSymbols = readFewBits(s, 2) + 1;\n        for (let /** @type{number} */ i = 0; i < numSymbols; i++) {\n            if (s.bitOffset >= 16) {\n                s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                s.bitOffset -= 16;\n            }\n            let /** @type{number} */ symbol = readFewBits(s, maxBits);\n            if (symbol >= alphabetSizeLimit) {\n                throw \"Can't readHuffmanCode\";\n            }\n            symbols[i] = symbol;\n        }\n        checkDupes(symbols, numSymbols);\n        let /** @type{number} */ histogramId = numSymbols;\n        if (numSymbols == 4) {\n            histogramId += readFewBits(s, 1);\n        }\n        switch (histogramId) {\n            case 1:\n                codeLengths[symbols[0]] = 1;\n                break;\n            case 2:\n                codeLengths[symbols[0]] = 1;\n                codeLengths[symbols[1]] = 1;\n                break;\n            case 3:\n                codeLengths[symbols[0]] = 1;\n                codeLengths[symbols[1]] = 2;\n                codeLengths[symbols[2]] = 2;\n                break;\n            case 4:\n                codeLengths[symbols[0]] = 2;\n                codeLengths[symbols[1]] = 2;\n                codeLengths[symbols[2]] = 2;\n                codeLengths[symbols[3]] = 2;\n                break;\n            case 5:\n                codeLengths[symbols[0]] = 1;\n                codeLengths[symbols[1]] = 2;\n                codeLengths[symbols[2]] = 3;\n                codeLengths[symbols[3]] = 3;\n                break;\n            default:\n                break;\n        }\n        return buildHuffmanTable(tableGroup, tableIdx, 8, codeLengths, alphabetSizeLimit);\n    }\n    /**\n     * @param {number} alphabetSizeLimit\n     * @param {number} skip\n     * @param {!Int32Array} tableGroup\n     * @param {number} tableIdx\n     * @param {!State} s\n     * @return {number}\n     */\n    function readComplexHuffmanCode(alphabetSizeLimit, skip, tableGroup, tableIdx, s) {\n        let /** @type{!Int32Array} */ codeLengths = new Int32Array(alphabetSizeLimit);\n        let /** @type{!Int32Array} */ codeLengthCodeLengths = new Int32Array(18);\n        let /** @type{number} */ space = 32;\n        let /** @type{number} */ numCodes = 0;\n        for (let /** @type{number} */ i = skip; i < 18 && space > 0; i++) {\n            let /** @type{number} */ codeLenIdx = CODE_LENGTH_CODE_ORDER[i];\n            if (s.bitOffset >= 16) {\n                s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                s.bitOffset -= 16;\n            }\n            let /** @type{number} */ p = (s.accumulator32 >>> s.bitOffset) & 15;\n            s.bitOffset += FIXED_TABLE[p] >> 16;\n            let /** @type{number} */ v = FIXED_TABLE[p] & 0xffff;\n            codeLengthCodeLengths[codeLenIdx] = v;\n            if (v != 0) {\n                space -= 32 >> v;\n                numCodes++;\n            }\n        }\n        if (space != 0 && numCodes != 1) {\n            throw 'Corrupted Huffman code histogram';\n        }\n        readHuffmanCodeLengths(codeLengthCodeLengths, alphabetSizeLimit, codeLengths, s);\n        return buildHuffmanTable(tableGroup, tableIdx, 8, codeLengths, alphabetSizeLimit);\n    }\n    /**\n     * @param {number} alphabetSizeMax\n     * @param {number} alphabetSizeLimit\n     * @param {!Int32Array} tableGroup\n     * @param {number} tableIdx\n     * @param {!State} s\n     * @return {number}\n     */\n    function readHuffmanCode(alphabetSizeMax, alphabetSizeLimit, tableGroup, tableIdx, s) {\n        if (s.halfOffset > 2030) {\n            doReadMoreInput(s);\n        }\n        if (s.bitOffset >= 16) {\n            s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n            s.bitOffset -= 16;\n        }\n        let /** @type{number} */ simpleCodeOrSkip = readFewBits(s, 2);\n        if (simpleCodeOrSkip == 1) {\n            return readSimpleHuffmanCode(alphabetSizeMax, alphabetSizeLimit, tableGroup, tableIdx, s);\n        }\n        else {\n            return readComplexHuffmanCode(alphabetSizeLimit, simpleCodeOrSkip, tableGroup, tableIdx, s);\n        }\n    }\n    /**\n     * @param {number} contextMapSize\n     * @param {!Int8Array} contextMap\n     * @param {!State} s\n     * @return {number}\n     */\n    function decodeContextMap(contextMapSize, contextMap, s) {\n        if (s.halfOffset > 2030) {\n            doReadMoreInput(s);\n        }\n        let /** @type{number} */ numTrees = decodeVarLenUnsignedByte(s) + 1;\n        if (numTrees == 1) {\n            contextMap.fill(0, 0, contextMapSize);\n            return numTrees;\n        }\n        if (s.bitOffset >= 16) {\n            s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n            s.bitOffset -= 16;\n        }\n        let /** @type{number} */ useRleForZeros = readFewBits(s, 1);\n        let /** @type{number} */ maxRunLengthPrefix = 0;\n        if (useRleForZeros != 0) {\n            maxRunLengthPrefix = readFewBits(s, 4) + 1;\n        }\n        let /** @type{number} */ alphabetSize = numTrees + maxRunLengthPrefix;\n        let /** @type{number} */ tableSize = MAX_HUFFMAN_TABLE_SIZE[(alphabetSize + 31) >> 5];\n        let /** @type{!Int32Array} */ table = new Int32Array(tableSize + 1);\n        let /** @type{number} */ tableIdx = table.length - 1;\n        readHuffmanCode(alphabetSize, alphabetSize, table, tableIdx, s);\n        for (let /** @type{number} */ i = 0; i < contextMapSize;) {\n            if (s.halfOffset > 2030) {\n                doReadMoreInput(s);\n            }\n            if (s.bitOffset >= 16) {\n                s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                s.bitOffset -= 16;\n            }\n            let /** @type{number} */ code = readSymbol(table, tableIdx, s);\n            if (code == 0) {\n                contextMap[i] = 0;\n                i++;\n            }\n            else if (code <= maxRunLengthPrefix) {\n                if (s.bitOffset >= 16) {\n                    s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                    s.bitOffset -= 16;\n                }\n                let /** @type{number} */ reps = (1 << code) + readFewBits(s, code);\n                while (reps != 0) {\n                    if (i >= contextMapSize) {\n                        throw 'Corrupted context map';\n                    }\n                    contextMap[i] = 0;\n                    i++;\n                    reps--;\n                }\n            }\n            else {\n                contextMap[i] = code - maxRunLengthPrefix;\n                i++;\n            }\n        }\n        if (s.bitOffset >= 16) {\n            s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n            s.bitOffset -= 16;\n        }\n        if (readFewBits(s, 1) == 1) {\n            inverseMoveToFrontTransform(contextMap, contextMapSize);\n        }\n        return numTrees;\n    }\n    /**\n     * @param {!State} s\n     * @param {number} treeType\n     * @param {number} numBlockTypes\n     * @return {number}\n     */\n    function decodeBlockTypeAndLength(s, treeType, numBlockTypes) {\n        let /** @type{!Int32Array} */ ringBuffers = s.rings;\n        let /** @type{number} */ offset = 4 + treeType * 2;\n        if (s.bitOffset >= 16) {\n            s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n            s.bitOffset -= 16;\n        }\n        let /** @type{number} */ blockType = readSymbol(s.blockTrees, 2 * treeType, s);\n        let /** @type{number} */ result = readBlockLength(s.blockTrees, 2 * treeType + 1, s);\n        if (blockType == 1) {\n            blockType = ringBuffers[offset + 1] + 1;\n        }\n        else if (blockType == 0) {\n            blockType = ringBuffers[offset];\n        }\n        else {\n            blockType -= 2;\n        }\n        if (blockType >= numBlockTypes) {\n            blockType -= numBlockTypes;\n        }\n        ringBuffers[offset] = ringBuffers[offset + 1];\n        ringBuffers[offset + 1] = blockType;\n        return result;\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function decodeLiteralBlockSwitch(s) {\n        s.literalBlockLength = decodeBlockTypeAndLength(s, 0, s.numLiteralBlockTypes);\n        let /** @type{number} */ literalBlockType = s.rings[5];\n        s.contextMapSlice = literalBlockType << 6;\n        s.literalTreeIdx = s.contextMap[s.contextMapSlice] & 0xff;\n        let /** @type{number} */ contextMode = s.contextModes[literalBlockType];\n        s.contextLookupOffset1 = contextMode << 9;\n        s.contextLookupOffset2 = s.contextLookupOffset1 + 256;\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function decodeCommandBlockSwitch(s) {\n        s.commandBlockLength = decodeBlockTypeAndLength(s, 1, s.numCommandBlockTypes);\n        s.commandTreeIdx = s.rings[7];\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function decodeDistanceBlockSwitch(s) {\n        s.distanceBlockLength = decodeBlockTypeAndLength(s, 2, s.numDistanceBlockTypes);\n        s.distContextMapSlice = s.rings[9] << 2;\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function maybeReallocateRingBuffer(s) {\n        let /** @type{number} */ newSize = s.maxRingBufferSize;\n        if (newSize > s.expectedTotalSize) {\n            let /** @type{number} */ minimalNewSize = s.expectedTotalSize;\n            while (newSize >> 1 > minimalNewSize) {\n                newSize >>= 1;\n            }\n            if (s.inputEnd == 0 && newSize < 16384 && s.maxRingBufferSize >= 16384) {\n                newSize = 16384;\n            }\n        }\n        if (newSize <= s.ringBufferSize) {\n            return;\n        }\n        let /** @type{number} */ ringBufferSizeWithSlack = newSize + 37;\n        let /** @type{!Int8Array} */ newBuffer = new Int8Array(ringBufferSizeWithSlack);\n        if (s.ringBuffer.length != 0) {\n            newBuffer.set(s.ringBuffer.subarray(0, 0 + s.ringBufferSize), 0);\n        }\n        s.ringBuffer = newBuffer;\n        s.ringBufferSize = newSize;\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function readNextMetablockHeader(s) {\n        if (s.inputEnd != 0) {\n            s.nextRunningState = 10;\n            s.runningState = 12;\n            return;\n        }\n        s.literalTreeGroup = new Int32Array(0);\n        s.commandTreeGroup = new Int32Array(0);\n        s.distanceTreeGroup = new Int32Array(0);\n        if (s.halfOffset > 2030) {\n            doReadMoreInput(s);\n        }\n        decodeMetaBlockLength(s);\n        if (s.metaBlockLength == 0 && s.isMetadata == 0) {\n            return;\n        }\n        if (s.isUncompressed != 0 || s.isMetadata != 0) {\n            jumpToByteBoundary(s);\n            s.runningState = s.isMetadata != 0 ? 5 : 6;\n        }\n        else {\n            s.runningState = 3;\n        }\n        if (s.isMetadata != 0) {\n            return;\n        }\n        s.expectedTotalSize += s.metaBlockLength;\n        if (s.expectedTotalSize > 1 << 30) {\n            s.expectedTotalSize = 1 << 30;\n        }\n        if (s.ringBufferSize < s.maxRingBufferSize) {\n            maybeReallocateRingBuffer(s);\n        }\n    }\n    /**\n     * @param {!State} s\n     * @param {number} treeType\n     * @param {number} numBlockTypes\n     * @return {number}\n     */\n    function readMetablockPartition(s, treeType, numBlockTypes) {\n        let /** @type{number} */ offset = s.blockTrees[2 * treeType];\n        if (numBlockTypes <= 1) {\n            s.blockTrees[2 * treeType + 1] = offset;\n            s.blockTrees[2 * treeType + 2] = offset;\n            return 1 << 28;\n        }\n        let /** @type{number} */ blockTypeAlphabetSize = numBlockTypes + 2;\n        offset += readHuffmanCode(blockTypeAlphabetSize, blockTypeAlphabetSize, s.blockTrees, 2 * treeType, s);\n        s.blockTrees[2 * treeType + 1] = offset;\n        let /** @type{number} */ blockLengthAlphabetSize = 26;\n        offset += readHuffmanCode(blockLengthAlphabetSize, blockLengthAlphabetSize, s.blockTrees, 2 * treeType + 1, s);\n        s.blockTrees[2 * treeType + 2] = offset;\n        return readBlockLength(s.blockTrees, 2 * treeType + 1, s);\n    }\n    /**\n     * @param {!State} s\n     * @param {number} alphabetSizeLimit\n     * @return {void}\n     */\n    function calculateDistanceLut(s, alphabetSizeLimit) {\n        let /** @type{!Int8Array} */ distExtraBits = s.distExtraBits;\n        let /** @type{!Int32Array} */ distOffset = s.distOffset;\n        let /** @type{number} */ npostfix = s.distancePostfixBits;\n        let /** @type{number} */ ndirect = s.numDirectDistanceCodes;\n        let /** @type{number} */ postfix = 1 << npostfix;\n        let /** @type{number} */ bits = 1;\n        let /** @type{number} */ half = 0;\n        let /** @type{number} */ i = 16;\n        for (let /** @type{number} */ j = 0; j < ndirect; ++j) {\n            distExtraBits[i] = 0;\n            distOffset[i] = j + 1;\n            ++i;\n        }\n        while (i < alphabetSizeLimit) {\n            let /** @type{number} */ base = ndirect + ((((2 + half) << bits) - 4) << npostfix) + 1;\n            for (let /** @type{number} */ j = 0; j < postfix; ++j) {\n                distExtraBits[i] = bits;\n                distOffset[i] = base + j;\n                ++i;\n            }\n            bits = bits + half;\n            half = half ^ 1;\n        }\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function readMetablockHuffmanCodesAndContextMaps(s) {\n        s.numLiteralBlockTypes = decodeVarLenUnsignedByte(s) + 1;\n        s.literalBlockLength = readMetablockPartition(s, 0, s.numLiteralBlockTypes);\n        s.numCommandBlockTypes = decodeVarLenUnsignedByte(s) + 1;\n        s.commandBlockLength = readMetablockPartition(s, 1, s.numCommandBlockTypes);\n        s.numDistanceBlockTypes = decodeVarLenUnsignedByte(s) + 1;\n        s.distanceBlockLength = readMetablockPartition(s, 2, s.numDistanceBlockTypes);\n        if (s.halfOffset > 2030) {\n            doReadMoreInput(s);\n        }\n        if (s.bitOffset >= 16) {\n            s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n            s.bitOffset -= 16;\n        }\n        s.distancePostfixBits = readFewBits(s, 2);\n        s.numDirectDistanceCodes = readFewBits(s, 4) << s.distancePostfixBits;\n        s.contextModes = new Int8Array(s.numLiteralBlockTypes);\n        for (let /** @type{number} */ i = 0; i < s.numLiteralBlockTypes;) {\n            let /** @type{number} */ limit = min(i + 96, s.numLiteralBlockTypes);\n            for (; i < limit; ++i) {\n                if (s.bitOffset >= 16) {\n                    s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                    s.bitOffset -= 16;\n                }\n                s.contextModes[i] = readFewBits(s, 2);\n            }\n            if (s.halfOffset > 2030) {\n                doReadMoreInput(s);\n            }\n        }\n        s.contextMap = new Int8Array(s.numLiteralBlockTypes << 6);\n        let /** @type{number} */ numLiteralTrees = decodeContextMap(s.numLiteralBlockTypes << 6, s.contextMap, s);\n        s.trivialLiteralContext = 1;\n        for (let /** @type{number} */ j = 0; j < s.numLiteralBlockTypes << 6; j++) {\n            if (s.contextMap[j] != j >> 6) {\n                s.trivialLiteralContext = 0;\n                break;\n            }\n        }\n        s.distContextMap = new Int8Array(s.numDistanceBlockTypes << 2);\n        let /** @type{number} */ numDistTrees = decodeContextMap(s.numDistanceBlockTypes << 2, s.distContextMap, s);\n        s.literalTreeGroup = decodeHuffmanTreeGroup(256, 256, numLiteralTrees, s);\n        s.commandTreeGroup = decodeHuffmanTreeGroup(704, 704, s.numCommandBlockTypes, s);\n        let /** @type{number} */ distanceAlphabetSizeMax = calculateDistanceAlphabetSize(s.distancePostfixBits, s.numDirectDistanceCodes, 24);\n        let /** @type{number} */ distanceAlphabetSizeLimit = distanceAlphabetSizeMax;\n        if (s.isLargeWindow == 1) {\n            distanceAlphabetSizeMax = calculateDistanceAlphabetSize(s.distancePostfixBits, s.numDirectDistanceCodes, 62);\n            distanceAlphabetSizeLimit = calculateDistanceAlphabetLimit(0x7ffffffc, s.distancePostfixBits, s.numDirectDistanceCodes);\n        }\n        s.distanceTreeGroup = decodeHuffmanTreeGroup(distanceAlphabetSizeMax, distanceAlphabetSizeLimit, numDistTrees, s);\n        calculateDistanceLut(s, distanceAlphabetSizeLimit);\n        s.contextMapSlice = 0;\n        s.distContextMapSlice = 0;\n        s.contextLookupOffset1 = s.contextModes[0] * 512;\n        s.contextLookupOffset2 = s.contextLookupOffset1 + 256;\n        s.literalTreeIdx = 0;\n        s.commandTreeIdx = 0;\n        s.rings[4] = 1;\n        s.rings[5] = 0;\n        s.rings[6] = 1;\n        s.rings[7] = 0;\n        s.rings[8] = 1;\n        s.rings[9] = 0;\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function copyUncompressedData(s) {\n        let /** @type{!Int8Array} */ ringBuffer = s.ringBuffer;\n        if (s.metaBlockLength <= 0) {\n            reload(s);\n            s.runningState = 2;\n            return;\n        }\n        let /** @type{number} */ chunkLength = min(s.ringBufferSize - s.pos, s.metaBlockLength);\n        copyRawBytes(s, ringBuffer, s.pos, chunkLength);\n        s.metaBlockLength -= chunkLength;\n        s.pos += chunkLength;\n        if (s.pos == s.ringBufferSize) {\n            s.nextRunningState = 6;\n            s.runningState = 12;\n            return;\n        }\n        reload(s);\n        s.runningState = 2;\n    }\n    /**\n     * @param {!State} s\n     * @return {number}\n     */\n    function writeRingBuffer(s) {\n        let /** @type{number} */ toWrite = min(s.outputLength - s.outputUsed, s.ringBufferBytesReady - s.ringBufferBytesWritten);\n        if (toWrite != 0) {\n            s.output.set(s.ringBuffer.subarray(s.ringBufferBytesWritten, s.ringBufferBytesWritten + toWrite), s.outputOffset + s.outputUsed);\n            s.outputUsed += toWrite;\n            s.ringBufferBytesWritten += toWrite;\n        }\n        if (s.outputUsed < s.outputLength) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * @param {number} alphabetSizeMax\n     * @param {number} alphabetSizeLimit\n     * @param {number} n\n     * @param {!State} s\n     * @return {!Int32Array}\n     */\n    function decodeHuffmanTreeGroup(alphabetSizeMax, alphabetSizeLimit, n, s) {\n        let /** @type{number} */ maxTableSize = MAX_HUFFMAN_TABLE_SIZE[(alphabetSizeLimit + 31) >> 5];\n        let /** @type{!Int32Array} */ group = new Int32Array(n + n * maxTableSize);\n        let /** @type{number} */ next = n;\n        for (let /** @type{number} */ i = 0; i < n; ++i) {\n            group[i] = next;\n            next += readHuffmanCode(alphabetSizeMax, alphabetSizeLimit, group, i, s);\n        }\n        return group;\n    }\n    /**\n     * @param {!State} s\n     * @return {number}\n     */\n    function calculateFence(s) {\n        let /** @type{number} */ result = s.ringBufferSize;\n        if (s.isEager != 0) {\n            result = min(result, s.ringBufferBytesWritten + s.outputLength - s.outputUsed);\n        }\n        return result;\n    }\n    /**\n     * @param {!State} s\n     * @param {number} fence\n     * @return {void}\n     */\n    function doUseDictionary(s, fence) {\n        if (s.distance > 0x7ffffffc) {\n            throw 'Invalid backward reference';\n        }\n        let /** @type{number} */ address = s.distance - s.maxDistance - 1 - s.cdTotalSize;\n        if (address < 0) {\n            initializeCompoundDictionaryCopy(s, -address - 1, s.copyLength);\n            s.runningState = 14;\n        }\n        else {\n            let /** @type{!Int8Array} */ dictionaryData = /** @type{!Int8Array} */ data;\n            let /** @type{number} */ wordLength = s.copyLength;\n            if (wordLength > 31) {\n                throw 'Invalid backward reference';\n            }\n            let /** @type{number} */ shift = sizeBits[wordLength];\n            if (shift == 0) {\n                throw 'Invalid backward reference';\n            }\n            let /** @type{number} */ offset = offsets[wordLength];\n            let /** @type{number} */ mask = (1 << shift) - 1;\n            let /** @type{number} */ wordIdx = address & mask;\n            let /** @type{number} */ transformIdx = address >>> shift;\n            offset += wordIdx * wordLength;\n            let /** @type{!Transforms} */ transforms = RFC_TRANSFORMS;\n            if (transformIdx >= transforms.numTransforms) {\n                throw 'Invalid backward reference';\n            }\n            let /** @type{number} */ len = transformDictionaryWord(s.ringBuffer, s.pos, dictionaryData, offset, wordLength, transforms, transformIdx);\n            s.pos += len;\n            s.metaBlockLength -= len;\n            if (s.pos >= fence) {\n                s.nextRunningState = 4;\n                s.runningState = 12;\n                return;\n            }\n            s.runningState = 4;\n        }\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function initializeCompoundDictionary(s) {\n        s.cdBlockMap = new Int8Array(256);\n        let /** @type{number} */ blockBits = 8;\n        while ((s.cdTotalSize - 1) >>> blockBits != 0) {\n            blockBits++;\n        }\n        blockBits -= 8;\n        s.cdBlockBits = blockBits;\n        let /** @type{number} */ cursor = 0;\n        let /** @type{number} */ index = 0;\n        while (cursor < s.cdTotalSize) {\n            while (s.cdChunkOffsets[index + 1] < cursor) {\n                index++;\n            }\n            s.cdBlockMap[cursor >>> blockBits] = index;\n            cursor += 1 << blockBits;\n        }\n    }\n    /**\n     * @param {!State} s\n     * @param {number} address\n     * @param {number} length\n     * @return {void}\n     */\n    function initializeCompoundDictionaryCopy(s, address, length) {\n        if (s.cdBlockBits == -1) {\n            initializeCompoundDictionary(s);\n        }\n        let /** @type{number} */ index = s.cdBlockMap[address >>> s.cdBlockBits];\n        while (address >= s.cdChunkOffsets[index + 1]) {\n            index++;\n        }\n        if (s.cdTotalSize > address + length) {\n            throw 'Invalid backward reference';\n        }\n        s.distRbIdx = (s.distRbIdx + 1) & 0x3;\n        s.rings[s.distRbIdx] = s.distance;\n        s.metaBlockLength -= length;\n        s.cdBrIndex = index;\n        s.cdBrOffset = address - s.cdChunkOffsets[index];\n        s.cdBrLength = length;\n        s.cdBrCopied = 0;\n    }\n    /**\n     * @param {!State} s\n     * @param {number} fence\n     * @return {number}\n     */\n    function copyFromCompoundDictionary(s, fence) {\n        let /** @type{number} */ pos = s.pos;\n        let /** @type{number} */ origPos = pos;\n        while (s.cdBrLength != s.cdBrCopied) {\n            let /** @type{number} */ space = fence - pos;\n            let /** @type{number} */ chunkLength = s.cdChunkOffsets[s.cdBrIndex + 1] - s.cdChunkOffsets[s.cdBrIndex];\n            let /** @type{number} */ remChunkLength = chunkLength - s.cdBrOffset;\n            let /** @type{number} */ length = s.cdBrLength - s.cdBrCopied;\n            if (length > remChunkLength) {\n                length = remChunkLength;\n            }\n            if (length > space) {\n                length = space;\n            }\n            copyBytes(s.ringBuffer, pos, s.cdChunks[s.cdBrIndex], s.cdBrOffset, s.cdBrOffset + length);\n            pos += length;\n            s.cdBrOffset += length;\n            s.cdBrCopied += length;\n            if (length == remChunkLength) {\n                s.cdBrIndex++;\n                s.cdBrOffset = 0;\n            }\n            if (pos >= fence) {\n                break;\n            }\n        }\n        return pos - origPos;\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function decompress(s) {\n        if (s.runningState == 0) {\n            throw \"Can't decompress until initialized\";\n        }\n        if (s.runningState == 11) {\n            throw \"Can't decompress after close\";\n        }\n        if (s.runningState == 1) {\n            let /** @type{number} */ windowBits = decodeWindowBits(s);\n            if (windowBits == -1) {\n                throw \"Invalid 'windowBits' code\";\n            }\n            s.maxRingBufferSize = 1 << windowBits;\n            s.maxBackwardDistance = s.maxRingBufferSize - 16;\n            s.runningState = 2;\n        }\n        let /** @type{number} */ fence = calculateFence(s);\n        let /** @type{number} */ ringBufferMask = s.ringBufferSize - 1;\n        let /** @type{!Int8Array} */ ringBuffer = s.ringBuffer;\n        while (s.runningState != 10) {\n            switch (s.runningState) {\n                case 2:\n                    if (s.metaBlockLength < 0) {\n                        throw 'Invalid metablock length';\n                    }\n                    readNextMetablockHeader(s);\n                    fence = calculateFence(s);\n                    ringBufferMask = s.ringBufferSize - 1;\n                    ringBuffer = s.ringBuffer;\n                    continue;\n                case 3:\n                    readMetablockHuffmanCodesAndContextMaps(s);\n                    s.runningState = 4;\n                case 4:\n                    if (s.metaBlockLength <= 0) {\n                        s.runningState = 2;\n                        continue;\n                    }\n                    if (s.halfOffset > 2030) {\n                        doReadMoreInput(s);\n                    }\n                    if (s.commandBlockLength == 0) {\n                        decodeCommandBlockSwitch(s);\n                    }\n                    s.commandBlockLength--;\n                    if (s.bitOffset >= 16) {\n                        s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                        s.bitOffset -= 16;\n                    }\n                    let /** @type{number} */ cmdCode = readSymbol(s.commandTreeGroup, s.commandTreeIdx, s) << 2;\n                    let /** @type{number} */ insertAndCopyExtraBits = CMD_LOOKUP[cmdCode];\n                    let /** @type{number} */ insertLengthOffset = CMD_LOOKUP[cmdCode + 1];\n                    let /** @type{number} */ copyLengthOffset = CMD_LOOKUP[cmdCode + 2];\n                    s.distanceCode = CMD_LOOKUP[cmdCode + 3];\n                    if (s.bitOffset >= 16) {\n                        s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                        s.bitOffset -= 16;\n                    }\n                    let /** @type{number} */ insertLengthExtraBits = insertAndCopyExtraBits & 0xff;\n                    s.insertLength =\n                        insertLengthOffset +\n                            (insertLengthExtraBits <= 16\n                                ? readFewBits(s, insertLengthExtraBits)\n                                : readManyBits(s, insertLengthExtraBits));\n                    if (s.bitOffset >= 16) {\n                        s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                        s.bitOffset -= 16;\n                    }\n                    let /** @type{number} */ copyLengthExtraBits = insertAndCopyExtraBits >> 8;\n                    s.copyLength =\n                        copyLengthOffset +\n                            (copyLengthExtraBits <= 16\n                                ? readFewBits(s, copyLengthExtraBits)\n                                : readManyBits(s, copyLengthExtraBits));\n                    s.j = 0;\n                    s.runningState = 7;\n                case 7:\n                    if (s.trivialLiteralContext != 0) {\n                        while (s.j < s.insertLength) {\n                            if (s.halfOffset > 2030) {\n                                doReadMoreInput(s);\n                            }\n                            if (s.literalBlockLength == 0) {\n                                decodeLiteralBlockSwitch(s);\n                            }\n                            s.literalBlockLength--;\n                            if (s.bitOffset >= 16) {\n                                s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                                s.bitOffset -= 16;\n                            }\n                            ringBuffer[s.pos] = readSymbol(s.literalTreeGroup, s.literalTreeIdx, s);\n                            s.pos++;\n                            s.j++;\n                            if (s.pos >= fence) {\n                                s.nextRunningState = 7;\n                                s.runningState = 12;\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        let /** @type{number} */ prevByte1 = ringBuffer[(s.pos - 1) & ringBufferMask] & 0xff;\n                        let /** @type{number} */ prevByte2 = ringBuffer[(s.pos - 2) & ringBufferMask] & 0xff;\n                        while (s.j < s.insertLength) {\n                            if (s.halfOffset > 2030) {\n                                doReadMoreInput(s);\n                            }\n                            if (s.literalBlockLength == 0) {\n                                decodeLiteralBlockSwitch(s);\n                            }\n                            let /** @type{number} */ literalContext = LOOKUP[s.contextLookupOffset1 + prevByte1] |\n                                LOOKUP[s.contextLookupOffset2 + prevByte2];\n                            let /** @type{number} */ literalTreeIdx = s.contextMap[s.contextMapSlice + literalContext] & 0xff;\n                            s.literalBlockLength--;\n                            prevByte2 = prevByte1;\n                            if (s.bitOffset >= 16) {\n                                s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                                s.bitOffset -= 16;\n                            }\n                            prevByte1 = readSymbol(s.literalTreeGroup, literalTreeIdx, s);\n                            ringBuffer[s.pos] = prevByte1;\n                            s.pos++;\n                            s.j++;\n                            if (s.pos >= fence) {\n                                s.nextRunningState = 7;\n                                s.runningState = 12;\n                                break;\n                            }\n                        }\n                    }\n                    if (s.runningState != 7) {\n                        continue;\n                    }\n                    s.metaBlockLength -= s.insertLength;\n                    if (s.metaBlockLength <= 0) {\n                        s.runningState = 4;\n                        continue;\n                    }\n                    let /** @type{number} */ distanceCode = s.distanceCode;\n                    if (distanceCode < 0) {\n                        s.distance = s.rings[s.distRbIdx];\n                    }\n                    else {\n                        if (s.halfOffset > 2030) {\n                            doReadMoreInput(s);\n                        }\n                        if (s.distanceBlockLength == 0) {\n                            decodeDistanceBlockSwitch(s);\n                        }\n                        s.distanceBlockLength--;\n                        if (s.bitOffset >= 16) {\n                            s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                            s.bitOffset -= 16;\n                        }\n                        let /** @type{number} */ distTreeIdx = s.distContextMap[s.distContextMapSlice + distanceCode] & 0xff;\n                        distanceCode = readSymbol(s.distanceTreeGroup, distTreeIdx, s);\n                        if (distanceCode < 16) {\n                            let /** @type{number} */ index = (s.distRbIdx + DISTANCE_SHORT_CODE_INDEX_OFFSET[distanceCode]) & 0x3;\n                            s.distance = s.rings[index] + DISTANCE_SHORT_CODE_VALUE_OFFSET[distanceCode];\n                            if (s.distance < 0) {\n                                throw 'Negative distance';\n                            }\n                        }\n                        else {\n                            let /** @type{number} */ extraBits = s.distExtraBits[distanceCode];\n                            let /** @type{number} */ bits;\n                            if (s.bitOffset + extraBits <= 32) {\n                                bits = readFewBits(s, extraBits);\n                            }\n                            else {\n                                if (s.bitOffset >= 16) {\n                                    s.accumulator32 =\n                                        (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                                    s.bitOffset -= 16;\n                                }\n                                bits = extraBits <= 16 ? readFewBits(s, extraBits) : readManyBits(s, extraBits);\n                            }\n                            s.distance = s.distOffset[distanceCode] + (bits << s.distancePostfixBits);\n                        }\n                    }\n                    if (s.maxDistance != s.maxBackwardDistance && s.pos < s.maxBackwardDistance) {\n                        s.maxDistance = s.pos;\n                    }\n                    else {\n                        s.maxDistance = s.maxBackwardDistance;\n                    }\n                    if (s.distance > s.maxDistance) {\n                        s.runningState = 9;\n                        continue;\n                    }\n                    if (distanceCode > 0) {\n                        s.distRbIdx = (s.distRbIdx + 1) & 0x3;\n                        s.rings[s.distRbIdx] = s.distance;\n                    }\n                    if (s.copyLength > s.metaBlockLength) {\n                        throw 'Invalid backward reference';\n                    }\n                    s.j = 0;\n                    s.runningState = 8;\n                case 8:\n                    let /** @type{number} */ src = (s.pos - s.distance) & ringBufferMask;\n                    let /** @type{number} */ dst = s.pos;\n                    let /** @type{number} */ copyLength = s.copyLength - s.j;\n                    let /** @type{number} */ srcEnd = src + copyLength;\n                    let /** @type{number} */ dstEnd = dst + copyLength;\n                    if (srcEnd < ringBufferMask && dstEnd < ringBufferMask) {\n                        if (copyLength < 12 || (srcEnd > dst && dstEnd > src)) {\n                            for (let /** @type{number} */ k = 0; k < copyLength; k += 4) {\n                                ringBuffer[dst++] = ringBuffer[src++];\n                                ringBuffer[dst++] = ringBuffer[src++];\n                                ringBuffer[dst++] = ringBuffer[src++];\n                                ringBuffer[dst++] = ringBuffer[src++];\n                            }\n                        }\n                        else {\n                            ringBuffer.copyWithin(dst, src, srcEnd);\n                        }\n                        s.j += copyLength;\n                        s.metaBlockLength -= copyLength;\n                        s.pos += copyLength;\n                    }\n                    else {\n                        for (; s.j < s.copyLength;) {\n                            ringBuffer[s.pos] = ringBuffer[(s.pos - s.distance) & ringBufferMask];\n                            s.metaBlockLength--;\n                            s.pos++;\n                            s.j++;\n                            if (s.pos >= fence) {\n                                s.nextRunningState = 8;\n                                s.runningState = 12;\n                                break;\n                            }\n                        }\n                    }\n                    if (s.runningState == 8) {\n                        s.runningState = 4;\n                    }\n                    continue;\n                case 9:\n                    doUseDictionary(s, fence);\n                    continue;\n                case 14:\n                    s.pos += copyFromCompoundDictionary(s, fence);\n                    if (s.pos >= fence) {\n                        s.nextRunningState = 14;\n                        s.runningState = 12;\n                        return;\n                    }\n                    s.runningState = 4;\n                    continue;\n                case 5:\n                    while (s.metaBlockLength > 0) {\n                        if (s.halfOffset > 2030) {\n                            doReadMoreInput(s);\n                        }\n                        if (s.bitOffset >= 16) {\n                            s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                            s.bitOffset -= 16;\n                        }\n                        readFewBits(s, 8);\n                        s.metaBlockLength--;\n                    }\n                    s.runningState = 2;\n                    continue;\n                case 6:\n                    copyUncompressedData(s);\n                    continue;\n                case 12:\n                    s.ringBufferBytesReady = min(s.pos, s.ringBufferSize);\n                    s.runningState = 13;\n                case 13:\n                    if (writeRingBuffer(s) == 0) {\n                        return;\n                    }\n                    if (s.pos >= s.maxBackwardDistance) {\n                        s.maxDistance = s.maxBackwardDistance;\n                    }\n                    if (s.pos >= s.ringBufferSize) {\n                        if (s.pos > s.ringBufferSize) {\n                            ringBuffer.copyWithin(0, s.ringBufferSize, s.pos);\n                        }\n                        s.pos &= ringBufferMask;\n                        s.ringBufferBytesWritten = 0;\n                    }\n                    s.runningState = s.nextRunningState;\n                    continue;\n                default:\n                    throw 'Unexpected state ' + s.runningState;\n            }\n        }\n        if (s.runningState == 10) {\n            if (s.metaBlockLength < 0) {\n                throw 'Invalid metablock length';\n            }\n            jumpToByteBoundary(s);\n            checkHealth(s, 1);\n        }\n    }\n    /**\n     * @constructor\n     * @param {number} numTransforms\n     * @param {number} prefixSuffixLen\n     * @param {number} prefixSuffixCount\n     * @struct\n     */\n    function Transforms(numTransforms, prefixSuffixLen, prefixSuffixCount) {\n        /** @type {!number} */\n        this.numTransforms = 0;\n        /** @type {!Int32Array} */\n        this.triplets = new Int32Array(0);\n        /** @type {!Int8Array} */\n        this.prefixSuffixStorage = new Int8Array(0);\n        /** @type {!Int32Array} */\n        this.prefixSuffixHeads = new Int32Array(0);\n        /** @type {!Int16Array} */\n        this.params = new Int16Array(0);\n        this.numTransforms = numTransforms;\n        this.triplets = new Int32Array(numTransforms * 3);\n        this.params = new Int16Array(numTransforms);\n        this.prefixSuffixStorage = new Int8Array(prefixSuffixLen);\n        this.prefixSuffixHeads = new Int32Array(prefixSuffixCount + 1);\n    }\n    /** @type {!Transforms} */\n    let RFC_TRANSFORMS = new Transforms(121, 167, 50);\n    /**\n     * @param {!Int8Array} prefixSuffix\n     * @param {!Int32Array} prefixSuffixHeads\n     * @param {!Int32Array} transforms\n     * @param {!string} prefixSuffixSrc\n     * @param {!string} transformsSrc\n     * @return {void}\n     */\n    function unpackTransforms(prefixSuffix, prefixSuffixHeads, transforms, prefixSuffixSrc, transformsSrc) {\n        let /** @type{number} */ n = prefixSuffixSrc.length;\n        let /** @type{number} */ index = 1;\n        let /** @type{number} */ j = 0;\n        for (let /** @type{number} */ i = 0; i < n; ++i) {\n            let /** @type{number} */ c = prefixSuffixSrc.charCodeAt(i);\n            if (c == 35) {\n                prefixSuffixHeads[index++] = j;\n            }\n            else {\n                prefixSuffix[j++] = c;\n            }\n        }\n        for (let /** @type{number} */ i = 0; i < 363; ++i) {\n            transforms[i] = transformsSrc.charCodeAt(i) - 32;\n        }\n    }\n    {\n        unpackTransforms(RFC_TRANSFORMS.prefixSuffixStorage, RFC_TRANSFORMS.prefixSuffixHeads, RFC_TRANSFORMS.triplets, '# #s #, #e #.# the #.com/#\\xC2\\xA0# of # and # in # to #\"#\">#\\n#]# for # a # that #. # with #\\'# from # by #. The # on # as # is #ing #\\n\\t#:#ed #(# at #ly #=\"# of the #. This #,# not #er #al #=\\'#ful #ive #less #est #ize #ous #', '     !! ! ,  *!  &!  \" !  ) *   * -  ! # !  #!*!  +  ,$ !  -  %  .  / #   0  1 .  \"   2  3!*   4%  ! # /   5  6  7  8 0  1 &   $   9 +   :  ;  < \\'  !=  >  ?! 4  @ 4  2  &   A *# (   B  C& ) %  ) !*# *-% A +! *.  D! %\\'  & E *6  F  G% ! *A *%  H! D  I!+!  J!+   K +- *4! A  L!*4  M  N +6  O!*% +.! K *G  P +%(  ! G *D +D  Q +# *K!*G!+D!+# +G +A +4!+% +K!+4!*D!+K!*K');\n    }\n    /**\n     * @param {!Int8Array} dst\n     * @param {number} dstOffset\n     * @param {!Int8Array} src\n     * @param {number} srcOffset\n     * @param {number} len\n     * @param {!Transforms} transforms\n     * @param {number} transformIndex\n     * @return {number}\n     */\n    function transformDictionaryWord(dst, dstOffset, src, srcOffset, len, transforms, transformIndex) {\n        let /** @type{number} */ offset = dstOffset;\n        let /** @type{!Int32Array} */ triplets = transforms.triplets;\n        let /** @type{!Int8Array} */ prefixSuffixStorage = transforms.prefixSuffixStorage;\n        let /** @type{!Int32Array} */ prefixSuffixHeads = transforms.prefixSuffixHeads;\n        let /** @type{number} */ transformOffset = 3 * transformIndex;\n        let /** @type{number} */ prefixIdx = triplets[transformOffset];\n        let /** @type{number} */ transformType = triplets[transformOffset + 1];\n        let /** @type{number} */ suffixIdx = triplets[transformOffset + 2];\n        let /** @type{number} */ prefix = prefixSuffixHeads[prefixIdx];\n        let /** @type{number} */ prefixEnd = prefixSuffixHeads[prefixIdx + 1];\n        let /** @type{number} */ suffix = prefixSuffixHeads[suffixIdx];\n        let /** @type{number} */ suffixEnd = prefixSuffixHeads[suffixIdx + 1];\n        let /** @type{number} */ omitFirst = transformType - 11;\n        let /** @type{number} */ omitLast = transformType - 0;\n        if (omitFirst < 1 || omitFirst > 9) {\n            omitFirst = 0;\n        }\n        if (omitLast < 1 || omitLast > 9) {\n            omitLast = 0;\n        }\n        while (prefix != prefixEnd) {\n            dst[offset++] = prefixSuffixStorage[prefix++];\n        }\n        if (omitFirst > len) {\n            omitFirst = len;\n        }\n        srcOffset += omitFirst;\n        len -= omitFirst;\n        len -= omitLast;\n        let /** @type{number} */ i = len;\n        while (i > 0) {\n            dst[offset++] = src[srcOffset++];\n            i--;\n        }\n        if (transformType == 10 || transformType == 11) {\n            let /** @type{number} */ uppercaseOffset = offset - len;\n            if (transformType == 10) {\n                len = 1;\n            }\n            while (len > 0) {\n                let /** @type{number} */ c0 = dst[uppercaseOffset] & 0xff;\n                if (c0 < 0xc0) {\n                    if (c0 >= 97 && c0 <= 122) {\n                        dst[uppercaseOffset] ^= 32;\n                    }\n                    uppercaseOffset += 1;\n                    len -= 1;\n                }\n                else if (c0 < 0xe0) {\n                    dst[uppercaseOffset + 1] ^= 32;\n                    uppercaseOffset += 2;\n                    len -= 2;\n                }\n                else {\n                    dst[uppercaseOffset + 2] ^= 5;\n                    uppercaseOffset += 3;\n                    len -= 3;\n                }\n            }\n        }\n        else if (transformType == 21 || transformType == 22) {\n            let /** @type{number} */ shiftOffset = offset - len;\n            let /** @type{number} */ param = transforms.params[transformIndex];\n            let /** @type{number} */ scalar = (param & 0x7fff) + (0x1000000 - (param & 0x8000));\n            while (len > 0) {\n                let /** @type{number} */ step = 1;\n                let /** @type{number} */ c0 = dst[shiftOffset] & 0xff;\n                if (c0 < 0x80) {\n                    scalar += c0;\n                    dst[shiftOffset] = scalar & 0x7f;\n                }\n                else if (c0 < 0xc0) {\n                }\n                else if (c0 < 0xe0) {\n                    if (len >= 2) {\n                        let /** @type{number} */ c1 = dst[shiftOffset + 1];\n                        scalar += (c1 & 0x3f) | ((c0 & 0x1f) << 6);\n                        dst[shiftOffset] = 0xc0 | ((scalar >> 6) & 0x1f);\n                        dst[shiftOffset + 1] = (c1 & 0xc0) | (scalar & 0x3f);\n                        step = 2;\n                    }\n                    else {\n                        step = len;\n                    }\n                }\n                else if (c0 < 0xf0) {\n                    if (len >= 3) {\n                        let /** @type{number} */ c1 = dst[shiftOffset + 1];\n                        let /** @type{number} */ c2 = dst[shiftOffset + 2];\n                        scalar += (c2 & 0x3f) | ((c1 & 0x3f) << 6) | ((c0 & 0x0f) << 12);\n                        dst[shiftOffset] = 0xe0 | ((scalar >> 12) & 0x0f);\n                        dst[shiftOffset + 1] = (c1 & 0xc0) | ((scalar >> 6) & 0x3f);\n                        dst[shiftOffset + 2] = (c2 & 0xc0) | (scalar & 0x3f);\n                        step = 3;\n                    }\n                    else {\n                        step = len;\n                    }\n                }\n                else if (c0 < 0xf8) {\n                    if (len >= 4) {\n                        let /** @type{number} */ c1 = dst[shiftOffset + 1];\n                        let /** @type{number} */ c2 = dst[shiftOffset + 2];\n                        let /** @type{number} */ c3 = dst[shiftOffset + 3];\n                        scalar += (c3 & 0x3f) | ((c2 & 0x3f) << 6) | ((c1 & 0x3f) << 12) | ((c0 & 0x07) << 18);\n                        dst[shiftOffset] = 0xf0 | ((scalar >> 18) & 0x07);\n                        dst[shiftOffset + 1] = (c1 & 0xc0) | ((scalar >> 12) & 0x3f);\n                        dst[shiftOffset + 2] = (c2 & 0xc0) | ((scalar >> 6) & 0x3f);\n                        dst[shiftOffset + 3] = (c3 & 0xc0) | (scalar & 0x3f);\n                        step = 4;\n                    }\n                    else {\n                        step = len;\n                    }\n                }\n                shiftOffset += step;\n                len -= step;\n                if (transformType == 21) {\n                    len = 0;\n                }\n            }\n        }\n        while (suffix != suffixEnd) {\n            dst[offset++] = prefixSuffixStorage[suffix++];\n        }\n        return offset - dstOffset;\n    }\n    /**\n     * @param {number} key\n     * @param {number} len\n     * @return {number}\n     */\n    function getNextKey(key, len) {\n        let /** @type{number} */ step = 1 << (len - 1);\n        while ((key & step) != 0) {\n            step >>= 1;\n        }\n        return (key & (step - 1)) + step;\n    }\n    /**\n     * @param {!Int32Array} table\n     * @param {number} offset\n     * @param {number} step\n     * @param {number} end\n     * @param {number} item\n     * @return {void}\n     */\n    function replicateValue(table, offset, step, end, item) {\n        do {\n            end -= step;\n            table[offset + end] = item;\n        } while (end > 0);\n    }\n    /**\n     * @param {!Int32Array} count\n     * @param {number} len\n     * @param {number} rootBits\n     * @return {number}\n     */\n    function nextTableBitSize(count, len, rootBits) {\n        let /** @type{number} */ left = 1 << (len - rootBits);\n        while (len < 15) {\n            left -= count[len];\n            if (left <= 0) {\n                break;\n            }\n            len++;\n            left <<= 1;\n        }\n        return len - rootBits;\n    }\n    /**\n     * @param {!Int32Array} tableGroup\n     * @param {number} tableIdx\n     * @param {number} rootBits\n     * @param {!Int32Array} codeLengths\n     * @param {number} codeLengthsSize\n     * @return {number}\n     */\n    function buildHuffmanTable(tableGroup, tableIdx, rootBits, codeLengths, codeLengthsSize) {\n        let /** @type{number} */ tableOffset = tableGroup[tableIdx];\n        let /** @type{number} */ key;\n        let /** @type{!Int32Array} */ sorted = new Int32Array(codeLengthsSize);\n        let /** @type{!Int32Array} */ count = new Int32Array(16);\n        let /** @type{!Int32Array} */ offset = new Int32Array(16);\n        let /** @type{number} */ symbol;\n        for (symbol = 0; symbol < codeLengthsSize; symbol++) {\n            count[codeLengths[symbol]]++;\n        }\n        offset[1] = 0;\n        for (let /** @type{number} */ len = 1; len < 15; len++) {\n            offset[len + 1] = offset[len] + count[len];\n        }\n        for (symbol = 0; symbol < codeLengthsSize; symbol++) {\n            if (codeLengths[symbol] != 0) {\n                sorted[offset[codeLengths[symbol]]++] = symbol;\n            }\n        }\n        let /** @type{number} */ tableBits = rootBits;\n        let /** @type{number} */ tableSize = 1 << tableBits;\n        let /** @type{number} */ totalSize = tableSize;\n        if (offset[15] == 1) {\n            for (key = 0; key < totalSize; key++) {\n                tableGroup[tableOffset + key] = sorted[0];\n            }\n            return totalSize;\n        }\n        key = 0;\n        symbol = 0;\n        for (let /** @type{number} */ len = 1, step = 2; len <= rootBits; len++, step <<= 1) {\n            for (; count[len] > 0; count[len]--) {\n                replicateValue(tableGroup, tableOffset + key, step, tableSize, (len << 16) | sorted[symbol++]);\n                key = getNextKey(key, len);\n            }\n        }\n        let /** @type{number} */ mask = totalSize - 1;\n        let /** @type{number} */ low = -1;\n        let /** @type{number} */ currentOffset = tableOffset;\n        for (let /** @type{number} */ len = rootBits + 1, step = 2; len <= 15; len++, step <<= 1) {\n            for (; count[len] > 0; count[len]--) {\n                if ((key & mask) != low) {\n                    currentOffset += tableSize;\n                    tableBits = nextTableBitSize(count, len, rootBits);\n                    tableSize = 1 << tableBits;\n                    totalSize += tableSize;\n                    low = key & mask;\n                    tableGroup[tableOffset + low] =\n                        ((tableBits + rootBits) << 16) | (currentOffset - tableOffset - low);\n                }\n                replicateValue(tableGroup, currentOffset + (key >> rootBits), step, tableSize, ((len - rootBits) << 16) | sorted[symbol++]);\n                key = getNextKey(key, len);\n            }\n        }\n        return totalSize;\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function doReadMoreInput(s) {\n        if (s.endOfStreamReached != 0) {\n            if (halfAvailable(s) >= -2) {\n                return;\n            }\n            throw 'No more input';\n        }\n        let /** @type{number} */ readOffset = s.halfOffset << 1;\n        let /** @type{number} */ bytesInBuffer = 4096 - readOffset;\n        s.byteBuffer.copyWithin(0, readOffset, 4096);\n        s.halfOffset = 0;\n        while (bytesInBuffer < 4096) {\n            let /** @type{number} */ spaceLeft = 4096 - bytesInBuffer;\n            let /** @type{number} */ len = readInput(s.input, s.byteBuffer, bytesInBuffer, spaceLeft);\n            if (len <= 0) {\n                s.endOfStreamReached = 1;\n                s.tailBytes = bytesInBuffer;\n                bytesInBuffer += 1;\n                break;\n            }\n            bytesInBuffer += len;\n        }\n        bytesToNibbles(s, bytesInBuffer);\n    }\n    /**\n     * @param {!State} s\n     * @param {number} endOfStream\n     * @return {void}\n     */\n    function checkHealth(s, endOfStream) {\n        if (s.endOfStreamReached == 0) {\n            return;\n        }\n        let /** @type{number} */ byteOffset = (s.halfOffset << 1) + ((s.bitOffset + 7) >> 3) - 4;\n        if (byteOffset > s.tailBytes) {\n            throw 'Read after end';\n        }\n        if (endOfStream != 0 && byteOffset != s.tailBytes) {\n            throw 'Unused bytes after end';\n        }\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function assertAccumulatorHealthy(s) {\n        if (s.bitOffset > 32) {\n            throw 'Accumulator underloaded: ' + s.bitOffset;\n        }\n    }\n    /**\n     * @param {!State} s\n     * @param {number} n\n     * @return {number}\n     */\n    function readFewBits(s, n) {\n        let /** @type{number} */ val = (s.accumulator32 >>> s.bitOffset) & ((1 << n) - 1);\n        s.bitOffset += n;\n        return val;\n    }\n    /**\n     * @param {!State} s\n     * @param {number} n\n     * @return {number}\n     */\n    function readManyBits(s, n) {\n        let /** @type{number} */ low = readFewBits(s, 16);\n        s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n        s.bitOffset -= 16;\n        return low | (readFewBits(s, n - 16) << 16);\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function initBitReader(s) {\n        s.byteBuffer = new Int8Array(4160);\n        s.accumulator32 = 0;\n        s.shortBuffer = new Int16Array(2080);\n        s.bitOffset = 32;\n        s.halfOffset = 2048;\n        s.endOfStreamReached = 0;\n        prepare(s);\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function prepare(s) {\n        if (s.halfOffset > 2030) {\n            doReadMoreInput(s);\n        }\n        checkHealth(s, 0);\n        s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n        s.bitOffset -= 16;\n        s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n        s.bitOffset -= 16;\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function reload(s) {\n        if (s.bitOffset == 32) {\n            prepare(s);\n        }\n    }\n    /**\n     * @param {!State} s\n     * @return {void}\n     */\n    function jumpToByteBoundary(s) {\n        let /** @type{number} */ padding = (32 - s.bitOffset) & 7;\n        if (padding != 0) {\n            let /** @type{number} */ paddingBits = readFewBits(s, padding);\n            if (paddingBits != 0) {\n                throw 'Corrupted padding bits';\n            }\n        }\n    }\n    /**\n     * @param {!State} s\n     * @return {number}\n     */\n    function halfAvailable(s) {\n        let /** @type{number} */ limit = 2048;\n        if (s.endOfStreamReached != 0) {\n            limit = (s.tailBytes + 1) >> 1;\n        }\n        return limit - s.halfOffset;\n    }\n    /**\n     * @param {!State} s\n     * @param {!Int8Array} data\n     * @param {number} offset\n     * @param {number} length\n     * @return {void}\n     */\n    function copyRawBytes(s, data, offset, length) {\n        if ((s.bitOffset & 7) != 0) {\n            throw 'Unaligned copyBytes';\n        }\n        while (s.bitOffset != 32 && length != 0) {\n            data[offset++] = s.accumulator32 >>> s.bitOffset;\n            s.bitOffset += 8;\n            length--;\n        }\n        if (length == 0) {\n            return;\n        }\n        let /** @type{number} */ copyNibbles = min(halfAvailable(s), length >> 1);\n        if (copyNibbles > 0) {\n            let /** @type{number} */ readOffset = s.halfOffset << 1;\n            let /** @type{number} */ delta = copyNibbles << 1;\n            data.set(s.byteBuffer.subarray(readOffset, readOffset + delta), offset);\n            offset += delta;\n            length -= delta;\n            s.halfOffset += copyNibbles;\n        }\n        if (length == 0) {\n            return;\n        }\n        if (halfAvailable(s) > 0) {\n            if (s.bitOffset >= 16) {\n                s.accumulator32 = (s.shortBuffer[s.halfOffset++] << 16) | (s.accumulator32 >>> 16);\n                s.bitOffset -= 16;\n            }\n            while (length != 0) {\n                data[offset++] = s.accumulator32 >>> s.bitOffset;\n                s.bitOffset += 8;\n                length--;\n            }\n            checkHealth(s, 0);\n            return;\n        }\n        while (length > 0) {\n            let /** @type{number} */ len = readInput(s.input, data, offset, length);\n            if (len == -1) {\n                throw 'Unexpected end of input';\n            }\n            offset += len;\n            length -= len;\n        }\n    }\n    /**\n     * @param {!State} s\n     * @param {number} byteLen\n     * @return {void}\n     */\n    function bytesToNibbles(s, byteLen) {\n        let /** @type{!Int8Array} */ byteBuffer = s.byteBuffer;\n        let /** @type{number} */ halfLen = byteLen >> 1;\n        let /** @type{!Int16Array} */ shortBuffer = s.shortBuffer;\n        for (let /** @type{number} */ i = 0; i < halfLen; ++i) {\n            shortBuffer[i] = (byteBuffer[i * 2] & 0xff) | ((byteBuffer[i * 2 + 1] & 0xff) << 8);\n        }\n    }\n    /** @type {!Int32Array} */\n    let LOOKUP = new Int32Array(2048);\n    /**\n     * @param {!Int32Array} lookup\n     * @param {!string} map\n     * @param {!string} rle\n     * @return {void}\n     */\n    function unpackLookupTable(lookup, map, rle) {\n        for (let /** @type{number} */ i = 0; i < 256; ++i) {\n            lookup[i] = i & 0x3f;\n            lookup[512 + i] = i >> 2;\n            lookup[1792 + i] = 2 + (i >> 6);\n        }\n        for (let /** @type{number} */ i = 0; i < 128; ++i) {\n            lookup[1024 + i] = 4 * (map.charCodeAt(i) - 32);\n        }\n        for (let /** @type{number} */ i = 0; i < 64; ++i) {\n            lookup[1152 + i] = i & 1;\n            lookup[1216 + i] = 2 + (i & 1);\n        }\n        let /** @type{number} */ offset = 1280;\n        for (let /** @type{number} */ k = 0; k < 19; ++k) {\n            let /** @type{number} */ value = k & 3;\n            let /** @type{number} */ rep = rle.charCodeAt(k) - 32;\n            for (let /** @type{number} */ i = 0; i < rep; ++i) {\n                lookup[offset++] = value;\n            }\n        }\n        for (let /** @type{number} */ i = 0; i < 16; ++i) {\n            lookup[1792 + i] = 1;\n            lookup[2032 + i] = 6;\n        }\n        lookup[1792] = 0;\n        lookup[2047] = 7;\n        for (let /** @type{number} */ i = 0; i < 256; ++i) {\n            lookup[1536 + i] = lookup[1792 + i] << 3;\n        }\n    }\n    {\n        unpackLookupTable(LOOKUP, \"         !!  !                  \\\"#$##%#$&'##(#)#++++++++++((&*'##,---,---,-----,-----,-----&#'###.///.///./////./////./////&#'# \", \"A/*  ':  & : $  \\x81 @\");\n    }\n    /**\n     * @constructor\n     * @struct\n     */\n    function State() {\n        /** @type {!Int8Array} */\n        this.ringBuffer = new Int8Array(0);\n        /** @type {!Int8Array} */\n        this.contextModes = new Int8Array(0);\n        /** @type {!Int8Array} */\n        this.contextMap = new Int8Array(0);\n        /** @type {!Int8Array} */\n        this.distContextMap = new Int8Array(0);\n        /** @type {!Int8Array} */\n        this.distExtraBits = new Int8Array(0);\n        /** @type {!Int8Array} */\n        this.output = new Int8Array(0);\n        /** @type {!Int8Array} */\n        this.byteBuffer = new Int8Array(0);\n        /** @type {!Int16Array} */\n        this.shortBuffer = new Int16Array(0);\n        /** @type {!Int32Array} */\n        this.intBuffer = new Int32Array(0);\n        /** @type {!Int32Array} */\n        this.rings = new Int32Array(0);\n        /** @type {!Int32Array} */\n        this.blockTrees = new Int32Array(0);\n        /** @type {!Int32Array} */\n        this.literalTreeGroup = new Int32Array(0);\n        /** @type {!Int32Array} */\n        this.commandTreeGroup = new Int32Array(0);\n        /** @type {!Int32Array} */\n        this.distanceTreeGroup = new Int32Array(0);\n        /** @type {!Int32Array} */\n        this.distOffset = new Int32Array(0);\n        /** @type {!number} */\n        this.runningState = 0;\n        /** @type {!number} */\n        this.nextRunningState = 0;\n        /** @type {!number} */\n        this.accumulator32 = 0;\n        /** @type {!number} */\n        this.bitOffset = 0;\n        /** @type {!number} */\n        this.halfOffset = 0;\n        /** @type {!number} */\n        this.tailBytes = 0;\n        /** @type {!number} */\n        this.endOfStreamReached = 0;\n        /** @type {!number} */\n        this.metaBlockLength = 0;\n        /** @type {!number} */\n        this.inputEnd = 0;\n        /** @type {!number} */\n        this.isUncompressed = 0;\n        /** @type {!number} */\n        this.isMetadata = 0;\n        /** @type {!number} */\n        this.literalBlockLength = 0;\n        /** @type {!number} */\n        this.numLiteralBlockTypes = 0;\n        /** @type {!number} */\n        this.commandBlockLength = 0;\n        /** @type {!number} */\n        this.numCommandBlockTypes = 0;\n        /** @type {!number} */\n        this.distanceBlockLength = 0;\n        /** @type {!number} */\n        this.numDistanceBlockTypes = 0;\n        /** @type {!number} */\n        this.pos = 0;\n        /** @type {!number} */\n        this.maxDistance = 0;\n        /** @type {!number} */\n        this.distRbIdx = 0;\n        /** @type {!number} */\n        this.trivialLiteralContext = 0;\n        /** @type {!number} */\n        this.literalTreeIdx = 0;\n        /** @type {!number} */\n        this.commandTreeIdx = 0;\n        /** @type {!number} */\n        this.j = 0;\n        /** @type {!number} */\n        this.insertLength = 0;\n        /** @type {!number} */\n        this.contextMapSlice = 0;\n        /** @type {!number} */\n        this.distContextMapSlice = 0;\n        /** @type {!number} */\n        this.contextLookupOffset1 = 0;\n        /** @type {!number} */\n        this.contextLookupOffset2 = 0;\n        /** @type {!number} */\n        this.distanceCode = 0;\n        /** @type {!number} */\n        this.numDirectDistanceCodes = 0;\n        /** @type {!number} */\n        this.distancePostfixBits = 0;\n        /** @type {!number} */\n        this.distance = 0;\n        /** @type {!number} */\n        this.copyLength = 0;\n        /** @type {!number} */\n        this.maxBackwardDistance = 0;\n        /** @type {!number} */\n        this.maxRingBufferSize = 0;\n        /** @type {!number} */\n        this.ringBufferSize = 0;\n        /** @type {!number} */\n        this.expectedTotalSize = 0;\n        /** @type {!number} */\n        this.outputOffset = 0;\n        /** @type {!number} */\n        this.outputLength = 0;\n        /** @type {!number} */\n        this.outputUsed = 0;\n        /** @type {!number} */\n        this.ringBufferBytesWritten = 0;\n        /** @type {!number} */\n        this.ringBufferBytesReady = 0;\n        /** @type {!number} */\n        this.isEager = 0;\n        /** @type {!number} */\n        this.isLargeWindow = 0;\n        /** @type {!number} */\n        this.cdNumChunks = 0;\n        /** @type {!number} */\n        this.cdTotalSize = 0;\n        /** @type {!number} */\n        this.cdBrIndex = 0;\n        /** @type {!number} */\n        this.cdBrOffset = 0;\n        /** @type {!number} */\n        this.cdBrLength = 0;\n        /** @type {!number} */\n        this.cdBrCopied = 0;\n        /** @type {!Array} */\n        this.cdChunks = new Array(0);\n        /** @type {!Int32Array} */\n        this.cdChunkOffsets = new Int32Array(0);\n        /** @type {!number} */\n        this.cdBlockBits = 0;\n        /** @type {!Int8Array} */\n        this.cdBlockMap = new Int8Array(0);\n        /** @type {!InputStream|null} */\n        this.input = null;\n        this.ringBuffer = new Int8Array(0);\n        this.rings = new Int32Array(10);\n        this.rings[0] = 16;\n        this.rings[1] = 15;\n        this.rings[2] = 11;\n        this.rings[3] = 4;\n    }\n    /** @type {!Int8Array|null} */\n    let data = null;\n    /** @type {!Int32Array} */\n    let offsets = new Int32Array(32);\n    /** @type {!Int32Array} */\n    let sizeBits = new Int32Array(32);\n    /**\n     * @param {!Int8Array} newData\n     * @param {!Int32Array} newSizeBits\n     * @return {void}\n     */\n    function setData(newData, newSizeBits) {\n        if (isDirect(newData) == 0 || isReadOnly(newData) == 0) {\n            throw 'newData must be a direct read-only byte buffer';\n        }\n        if (newSizeBits.length > 31) {\n            throw 'sizeBits length must be at most ' + 31;\n        }\n        for (let /** @type{number} */ i = 0; i < 4; ++i) {\n            if (newSizeBits[i] != 0) {\n                throw 'first ' + 4 + ' must be 0';\n            }\n        }\n        let /** @type{!Int32Array} */ dictionaryOffsets = offsets;\n        let /** @type{!Int32Array} */ dictionarySizeBits = sizeBits;\n        dictionarySizeBits.set(newSizeBits.subarray(0, 0 + newSizeBits.length), 0);\n        let /** @type{number} */ pos = 0;\n        let /** @type{number} */ limit = newData.length;\n        for (let /** @type{number} */ i = 0; i < newSizeBits.length; ++i) {\n            dictionaryOffsets[i] = pos;\n            let /** @type{number} */ bits = dictionarySizeBits[i];\n            if (bits != 0) {\n                if (bits >= 31) {\n                    throw 'newSizeBits values must be less than 31';\n                }\n                pos += i << bits;\n                if (pos <= 0 || pos > limit) {\n                    throw 'newSizeBits is inconsistent: overflow';\n                }\n            }\n        }\n        for (let /** @type{number} */ i = newSizeBits.length; i < 32; ++i) {\n            dictionaryOffsets[i] = pos;\n        }\n        if (pos != limit) {\n            throw 'newSizeBits is inconsistent: underflow';\n        }\n        data = newData;\n    }\n    /**\n     * @param {!Int8Array} dictionary\n     * @param {!string} data0\n     * @param {!string} data1\n     * @param {!string} skipFlip\n     * @param {!Int32Array} sizeBits\n     * @param {!string} sizeBitsData\n     * @return {void}\n     */\n    function unpackDictionaryData(dictionary, data0, data1, skipFlip, sizeBits, sizeBitsData) {\n        let /** @type{!Int8Array} */ dict = toUsAsciiBytes(data0 + data1);\n        if (dict.length != dictionary.length) {\n            throw 'Corrupted brotli dictionary';\n        }\n        let /** @type{number} */ offset = 0;\n        let /** @type{number} */ n = skipFlip.length;\n        for (let /** @type{number} */ i = 0; i < n; i += 2) {\n            let /** @type{number} */ skip = skipFlip.charCodeAt(i) - 36;\n            let /** @type{number} */ flip = skipFlip.charCodeAt(i + 1) - 36;\n            for (let /** @type{number} */ j = 0; j < skip; ++j) {\n                dict[offset] ^= 3;\n                offset++;\n            }\n            for (let /** @type{number} */ j = 0; j < flip; ++j) {\n                dict[offset] ^= 236;\n                offset++;\n            }\n        }\n        for (let /** @type{number} */ i = 0; i < sizeBitsData.length; ++i) {\n            sizeBits[i] = sizeBitsData.charCodeAt(i) - 65;\n        }\n        dictionary.set(dict);\n    }\n    {\n        let /** @type{!Int8Array} */ dictionaryData = new Int8Array(122784);\n        let /** @type{!Int32Array} */ dictionarySizeBits = new Int32Array(25);\n        unpackDictionaryData(dictionaryData, 'wjnfgltmojefofewab`h`lgfgbwbpkltlmozpjwf`jwzlsfmivpwojhfeqfftlqhwf{wzfbqlufqalgzolufelqnallhsobzojufojmfkfosklnfpjgfnlqftlqgolmdwkfnujftejmgsbdfgbzpevookfbgwfqnfb`kbqfbeqlnwqvfnbqhbaofvslmkjdkgbwfobmgmftpfufmmf{w`bpfalwkslpwvpfgnbgfkbmgkfqftkbwmbnfOjmhaoldpjyfabpfkfognbhfnbjmvpfq$*#(klogfmgptjwkMftpqfbgtfqfpjdmwbhfkbufdbnfpffm`boosbwktfoosovpnfmvejonsbqwiljmwkjpojpwdllgmffgtbzptfpwilapnjmgboploldlqj`kvpfpobpwwfbnbqnzellghjmdtjoofbpwtbqgafpwejqfSbdfhmltbtbz-smdnlufwkbmolbgdjufpfoemlwfnv`keffgnbmzql`hj`lmlm`follhkjgfgjfgKlnfqvofklpwbib{jmel`ovaobtpofppkboeplnfpv`kylmf233&lmfp`bqfWjnfqb`faovfelvqtffheb`fklsfdbufkbqgolpwtkfmsbqhhfswsbpppkjsqllnKWNOsobmWzsfglmfpbufhffseobdojmhplogejufwllhqbwfwltmivnswkvpgbqh`bqgejofefbqpwbzhjoowkbweboobvwlfufq-`lnwbohpklsulwfgffsnlgfqfpwwvqmalqmabmgefooqlpfvqo+phjmqlof`lnfb`wpbdfpnffwdlog-isdjwfnubqzefowwkfmpfmggqlsUjft`lsz2-3!?,b=pwlsfopfojfpwlvqsb`h-djesbpw`pp<dqbznfbm%dw8qjgfpklwobwfpbjgqlbgubq#effoilkmqj`hslqwebpw$VB.gfbg?,a=sllqajoowzsfV-P-tllgnvpw1s{8JmelqbmhtjgftbmwtbooofbgX3^8sbvotbufpvqf\\'+$ tbjwnbppbqnpdlfpdbjmobmdsbjg\"..#ol`hvmjwqllwtbohejqntjef{no!plmdwfpw13s{hjmgqltpwlloelmwnbjopbefpwbqnbsp`lqfqbjmeoltabazpsbmpbzp7s{85s{8bqwpellwqfbotjhjkfbwpwfswqjslqd,obhftfbhwlogElqn`bpwebmpabmhufqzqvmpivozwbph2s{8dlbodqftpoltfgdfjg>!pfwp6s{8-ip<73s{je#+pllmpfbwmlmfwvafyfqlpfmwqffgeb`wjmwldjewkbqn2;s{`bnfkjooalogyllnuljgfbpzqjmdejoosfbhjmjw`lpw0s{8ib`hwbdpajwpqloofgjwhmftmfbq?\"..dqltIPLMgvwzMbnfpbofzlv#olwpsbjmibyy`logfzfpejpkttt-qjphwbapsqfu23s{qjpf16s{Aovfgjmd033/abooelqgfbqmtjogal{-ebjqob`hufqpsbjqivmfwf`kje+\"sj`hfujo\\'+! tbqnolqgglfpsvoo/333jgfbgqbtkvdfpslwevmgavqmkqfe`foohfzpwj`hklvqolppevfo21s{pvjwgfboQPP!bdfgdqfzDFW!fbpfbjnpdjqobjgp;s{8mbuzdqjgwjsp :::tbqpobgz`bqp*8#~sks<kfoowbootklnyk9\\t),\\x0E\\t#233kboo-\\t\\tB4s{8svpk`kbw3s{8`qft),?,kbpk46s{eobwqbqf#%%#wfoo`bnslmwlobjgnjppphjswfmwejmfnbofdfwpsolw733/\\x0E\\t\\x0E\\t`lloeffw-sks?aq=fqj`nlpwdvjgafoogfp`kbjqnbwkbwln,jnd% ;1ov`h`fmw3338wjmzdlmfkwnopfoogqvdEQFFmlgfmj`h<jg>olpfmvooubpwtjmgQPP#tfbqqfozaffmpbnfgvhfmbpb`bsftjpkdvoeW109kjwppolwdbwfhj`haovqwkfz26s{$$*8*8!=npjftjmpajqgplqwafwbpffhW2;9lqgpwqffnboo53s{ebqn\\x0ElupalzpX3^-$*8!SLPWafbqhjgp*8~~nbqzwfmg+VH*rvbgyk9\\n.pjy....sqls$*8\\x0EojewW2:9uj`fbmgzgfaw=QPPsllomf`haoltW259gllqfuboW249ofwpebjolqbosloomlub`lopdfmf#\\x0Elxplewqlnfwjooqlpp?k0=slvqebgfsjmh?wq=njmj*\\x7F\"+njmfyk9\\x04abqpkfbq33*8njoh#..=jqlmeqfggjphtfmwpljosvwp,ip,klozW119JPAMW139bgbnpffp?k1=iplm$/#$`lmwW129#QPPollsbpjbnllm?,s=plvoOJMFelqw`bqwW279?k2=;3s{\"..?:s{8W379njhf975Ymj`fjm`kZlqhqj`fyk9\\b$**8svqfnbdfsbqbwlmfalmg904Y\\\\le\\\\$^*8333/yk9\\x0Bwbmhzbqgaltoavpk965YIbub03s{\\t\\x7F~\\t&@0&907YifeeF[SJ`bpkujpbdloepmltyk9\\x05rvfq-`pppj`hnfbwnjm-ajmggfookjqfsj`pqfmw905YKWWS.132elwltloeFMG#{al{967YALGZgj`h8\\t~\\tf{jw906Yubqpafbw$~*8gjfw:::8bmmf~~?,Xj^-Obmdhn.^tjqfwlzpbggppfbobof{8\\t\\n~f`klmjmf-lqd336*wlmziftppbmgofdpqlle333*#133tjmfdfbqgldpallwdbqz`vwpwzofwfnswjlm-{no`l`hdbmd\\'+$-63s{Sk-Gnjp`bobmolbmgfphnjofqzbmvmj{gjp`*8~\\tgvpw`ojs*-\\t\\t43s{.133GUGp4^=?wbsfgfnlj((*tbdffvqlskjolswpklofEBRpbpjm.15WobapsfwpVQO#avoh`llh8~\\x0E\\tKFBGX3^*baaqivbm+2:;ofpkwtjm?,j=plmzdvzpev`hsjsf\\x7F.\\t\"331*mgltX2^8X^8\\tOld#pbow\\x0E\\t\\n\\nabmdwqjnabwk*x\\x0E\\t33s{\\t~*8hl9\\0effpbg=\\x0Ep9,,#X^8wloosovd+*x\\tx\\x0E\\t#-ip$133sgvboalbw-ISD*8\\t~rvlw*8\\t\\t$*8\\t\\x0E\\t~\\x0E1327132613251324132;132:13131312131113101317131613151314131;131:130313021301130013071306130513041320132113221323133:133;133413351336133713301331133213332:::2::;2::42::52::62::72::02::12::22::32:;:2:;;2:;42:;52:;62:;72:;02:;12:;22:;32:4:2:4;2:442:452:462:472:402:412:422:432:5:2:5;2:542:552:562:572:502:512:522:532:6:2:6;2:642:652:662:672:602:612:622:632333231720:73333::::`lnln/Mpfpwffpwbsfqlwlglkb`f`bgbb/]lajfmg/Abbp/Aujgb`bpllwqlelqlplollwqb`vbogjilpjgldqbmwjslwfnbgfafbodlrv/Efpwlmbgbwqfpsl`l`bpbabilwlgbpjmlbdvbsvfpvmlpbmwfgj`fovjpfoobnbzlylmbbnlqsjpllaqb`oj`foolgjlpklqb`bpj<[<\\\\<Q<\\\\<R<P=l<\\\\=l=o=n<\\\\<Q<Y<S<R<R=n<T<[<Q<R<X<R=n<R<Z<Y<R<Q<T=i<q<\\\\<Y<Y<]=g<P=g<~=g=m<R<^=g<^<R<q<R<R<]<s<R<W<T<Q<T<L<H<q<Y<p=g=n=g<r<Q<T<P<X<\\\\<{<\\\\<x<\\\\<q=o<r<]=n<Y<t<[<Y<U<Q=o<P<P<N=g=o<Z5m5f4O5j5i4K5i4U5o5h4O5d4]4C5f4K5m5e5k5d5h5i5h5o4K5d5h5k4D4_4K5h4I5j5k5f4O5f5n4C5k5h4G5i4D5k5h5d5h5f4D5h4K5f4D5o4X5f4K5i4O5i5j4F4D5f5h5j4A4D5k5i5i4X5d4Xejqpwujgflojdkwtlqognfgjbtkjwf`olpfaob`hqjdkwpnbooallhpsob`fnvpj`ejfoglqgfqsljmwubovfofufowbaofalbqgklvpfdqlvstlqhpzfbqppwbwfwlgbztbwfqpwbqwpwzofgfbwksltfqsklmfmjdkwfqqlqjmsvwbalvwwfqnpwjwofwllopfufmwol`bowjnfpobqdftlqgpdbnfppklqwpsb`fel`vp`ofbqnlgfoaol`hdvjgfqbgjlpkbqftlnfmbdbjmnlmfzjnbdfmbnfpzlvmdojmfpobwfq`lolqdqffmeqlmw%bns8tbw`kelq`fsqj`fqvofpafdjmbewfqujpjwjppvfbqfbpafoltjmgf{wlwboklvqpobafosqjmwsqfppavjowojmhppsffgpwvgzwqbgfelvmgpfmpfvmgfqpkltmelqnpqbmdfbggfgpwjoonlufgwbhfmbalufeobpkej{fglewfmlwkfqujftp`kf`hofdboqjufqjwfnprvj`hpkbsfkvnbmf{jpwdljmdnlujfwkjqgabpj`sfb`fpwbdftjgwkoldjmjgfbptqlwfsbdfpvpfqpgqjufpwlqfaqfbhplvwkulj`fpjwfpnlmwktkfqfavjogtkj`kfbqwkelqvnwkqffpslqwsbqwz@oj`holtfqojufp`obppobzfqfmwqzpwlqzvpbdfplvmg`lvqwzlvq#ajqwkslsvswzsfpbssozJnbdfafjmdvssfqmlwfpfufqzpkltpnfbmpf{wqbnbw`kwqb`hhmltmfbqozafdbmpvsfqsbsfqmlqwkofbqmdjufmmbnfgfmgfgWfqnpsbqwpDqlvsaqbmgvpjmdtlnbmebopfqfbgzbvgjlwbhfptkjof-`ln,ojufg`bpfpgbjoz`kjogdqfbwivgdfwklpfvmjwpmfufqaqlbg`lbpw`lufqbssofejofp`z`ofp`fmfsobmp`oj`htqjwfrvffmsjf`ffnbjoeqbnflogfqsklwlojnjw`b`kf`jujop`boffmwfqwkfnfwkfqfwlv`kalvmgqlzbobphfgtklofpjm`fpwl`h#mbnfebjwkkfbqwfnswzleefqp`lsfltmfgnjdkwboavnwkjmhaollgbqqbznbilqwqvpw`bmlmvmjlm`lvmwubojgpwlmfPwzofOldjmkbsszl``vqofew9eqfpkrvjwfejonpdqbgfmffgpvqabmejdkwabpjpklufqbvwl8qlvwf-kwnonj{fgejmboZlvq#pojgfwlsj`aqltmbolmfgqbtmpsojwqfb`kQjdkwgbwfpnbq`krvlwfdllgpOjmhpglvawbpzm`wkvnaboolt`kjfezlvwkmlufo23s{8pfqufvmwjokbmgp@kf`hPsb`frvfqzibnfpfrvbowtj`f3/333Pwbqwsbmfoplmdpqlvmgfjdkwpkjewtlqwkslpwpofbgptffhpbuljgwkfpfnjofpsobmfpnbqwboskbsobmwnbqhpqbwfpsobzp`objnpbofpwf{wppwbqptqlmd?,k0=wkjmd-lqd,nvowjkfbqgSltfqpwbmgwlhfmplojg+wkjpaqjmdpkjsppwbeewqjfg`boopevoozeb`wpbdfmwWkjp#,,..=bgnjmfdzswFufmw26s{8Fnbjowqvf!`qlpppsfmwaoldpal{!=mlwfgofbuf`kjmbpjyfpdvfpw?,k7=qlalwkfbuzwqvf/pfufmdqbmg`qjnfpjdmpbtbqfgbm`fskbpf=?\"..fm\\\\VP% 0:8133s{\\\\mbnfobwjmfmilzbib{-bwjlmpnjwkV-P-#klogpsfwfqjmgjbmbu!=`kbjmp`lqf`lnfpgljmdsqjlqPkbqf2::3pqlnbmojpwpibsbmeboopwqjboltmfqbdqff?,k1=bavpfbofqwlsfqb!.,,T`bqgpkjoopwfbnpSklwlwqvwk`ofbm-sks<pbjmwnfwboolvjpnfbmwsqlleaqjfeqlt!=dfmqfwqv`hollhpUbovfEqbnf-mfw,..=\\t?wqz#x\\tubq#nbhfp`lpwpsobjmbgvowrvfpwwqbjmobalqkfosp`bvpfnbdj`nlwlqwkfjq163s{ofbpwpwfsp@lvmw`lvogdobpppjgfpevmgpklwfobtbqgnlvwknlufpsbqjpdjufpgvw`kwf{bpeqvjwmvoo/\\x7F\\x7FX^8wls!=\\t?\"..SLPW!l`fbm?aq,=eollqpsfbhgfswk#pjyfabmhp`bw`k`kbqw13s{8bojdmgfboptlvog63s{8vqo>!sbqhpnlvpfNlpw#---?,bnlmdaqbjmalgz#mlmf8abpfg`bqqzgqbewqfefqsbdf\\\\klnf-nfwfqgfobzgqfbnsqlufiljmw?,wq=gqvdp?\"..#bsqjojgfboboofmf{b`welqwk`lgfpoldj`Ujft#pffnpaobmhslqwp#+133pbufg\\\\ojmhdlbopdqbmwdqffhklnfpqjmdpqbwfg03s{8tklpfsbqpf+*8!#Aol`hojmv{ilmfpsj{fo$*8!=*8je+.ofewgbujgklqpfEl`vpqbjpfal{fpWqb`hfnfmw?,fn=abq!=-pq`>wltfqbow>!`baofkfmqz17s{8pfwvsjwbozpkbqsnjmlqwbpwftbmwpwkjp-qfpfwtkffodjqop,`pp,233&8`ovappwveeajaofulwfp#2333hlqfb~*8\\x0E\\tabmgprvfvf>#x~8;3s{8`hjmdx\\x0E\\t\\n\\nbkfbg`ol`hjqjpkojhf#qbwjlpwbwpElqn!zbkll*X3^8Balvwejmgp?,k2=gfavdwbphpVQO#>`foop~*+*821s{8sqjnfwfoopwvqmp3{533-isd!psbjmafb`kwb{fpnj`qlbmdfo..=?,djewppwfuf.ojmhalgz-~*8\\t\\nnlvmw#+2::EBR?,qldfqeqbmh@obpp1;s{8effgp?k2=?p`lwwwfpwp11s{8gqjmh*#\\x7F\\x7F#oftjppkboo 30:8#elq#olufgtbpwf33s{8ib9\\x0Fnpjnlm?elmwqfsoznffwpvmwfq`kfbswjdkwAqbmg*#\">#gqfpp`ojspqllnplmhfznlajonbjm-Mbnf#sobwfevmmzwqffp`ln,!2-isdtnlgfsbqbnPWBQWofew#jggfm/#132*8\\t~\\telqn-ujqvp`kbjqwqbmptlqpwSbdfpjwjlmsbw`k?\"..\\tl.`b`ejqnpwlvqp/333#bpjbmj((*xbglaf$*X3^jg>23alwk8nfmv#-1-nj-smd!hfujm`lb`k@kjogaqv`f1-isdVQO*(-isd\\x7Fpvjwfpoj`fkbqqz213!#ptffwwq=\\x0E\\tmbnf>gjfdlsbdf#ptjpp..=\\t\\t eee8!=Old-`ln!wqfbwpkffw*#%%#27s{8poffsmwfmwejofgib9\\x0Fojg>!`Mbnf!tlqpfpklwp.al{.gfowb\\t%ow8afbqp97;Y?gbwb.qvqbo?,b=#psfmgabhfqpklsp>#!!8sks!=`wjlm20s{8aqjbmkfoolpjyf>l>&1E#iljmnbzaf?jnd#jnd!=/#eipjnd!#!*X3^NWlsAWzsf!mftozGbmph`yf`kwqbjohmltp?,k6=ebr!=yk.`m23*8\\t.2!*8wzsf>aovfpwqvozgbujp-ip$8=\\x0E\\t?\"pwffo#zlv#k1=\\x0E\\telqn#ifpvp233&#nfmv-\\x0E\\t\\n\\x0E\\ttbofpqjphpvnfmwggjmda.ojhwfb`kdje!#ufdbpgbmphffpwjpkrjspvlnjplaqfgfpgffmwqfwlglpsvfgfb/]lpfpw/Mwjfmfkbpwblwqlpsbqwfglmgfmvfulkb`fqelqnbnjpnlnfilqnvmglbrv/Ag/Abpp/_olbzvgbef`kbwlgbpwbmwlnfmlpgbwlplwqbppjwjlnv`klbklqbovdbqnbzlqfpwlpklqbpwfmfqbmwfpelwlpfpwbpsb/Apmvfubpbovgelqlpnfgjlrvjfmnfpfpslgfq`kjofpfq/Muf`fpgf`jqilp/Efpwbqufmwbdqvslkf`klfoolpwfmdlbnjdl`lpbpmjufodfmwfnjpnbbjqfpivojlwfnbpkb`jbebulqivmjlojaqfsvmwlavfmlbvwlqbaqjoavfmbwf{wlnbqylpbafqojpwbovfdl`/_nlfmfqlivfdlsfq/Vkbafqfpwlzmvm`bnvifqubolqevfqbojaqldvpwbjdvboulwlp`bplpdv/Absvfglplnlpbujplvpwfggfafmml`kfavp`bebowbfvqlppfqjfgj`kl`vqpl`obuf`bpbpof/_msobylobqdllaqbpujpwbbslzlivmwlwqbwbujpwl`qfbq`bnslkfnlp`jm`l`bqdlsjplplqgfmkb`fm/Mqfbgjp`lsfgql`fq`bsvfgbsbsfonfmlq/Vwjo`obqlilqdf`boofslmfqwbqgfmbgjfnbq`bpjdvffoobppjdol`l`kfnlwlpnbgqf`obpfqfpwlmj/]lrvfgbsbpbqabm`lkjilpujbifsbaol/Epwfujfmfqfjmlgfibqelmgl`bmbomlqwfofwqb`bvpbwlnbqnbmlpovmfpbvwlpujoobufmglsfpbqwjslpwfmdbnbq`loofubsbgqfvmjglubnlpylmbpbnalpabmgbnbqjbbavplnv`kbpvajqqjlibujujqdqbgl`kj`bboo/Ailufmgj`kbfpwbmwbofppbojqpvfolsfplpejmfpoobnbavp`l/Epwboofdbmfdqlsobybkvnlqsbdbqivmwbglaofjpobpalopbab/]lkbaobov`kb/mqfbgj`fmivdbqmlwbpuboofboo/M`bqdbglolqbabilfpw/Edvpwlnfmwfnbqjlejqnb`lpwlej`kbsobwbkldbqbqwfpofzfpbrvfonvpflabpfpsl`lpnjwbg`jfol`kj`lnjfgldbmbqpbmwlfwbsbgfafpsobzbqfgfppjfwf`lqwf`lqfbgvgbpgfpflujfilgfpfbbdvbp%rvlw8glnbjm`lnnlmpwbwvpfufmwpnbpwfqpzpwfnb`wjlmabmmfqqfnlufp`qloovsgbwfdolabonfgjvnejowfqmvnafq`kbmdfqfpvowsvaoj`p`qffm`kllpfmlqnbowqbufojppvfpplvq`fwbqdfwpsqjmdnlgvofnlajofptjw`ksklwlpalqgfqqfdjlmjwpfoepl`jbob`wjuf`lovnmqf`lqgelooltwjwof=fjwkfqofmdwkebnjozeqjfmgobzlvwbvwklq`qfbwfqfujftpvnnfqpfqufqsobzfgsobzfqf{sbmgsloj`zelqnbwglvaofsljmwppfqjfpsfqplmojujmdgfpjdmnlmwkpelq`fpvmjrvftfjdkwsflsoffmfqdzmbwvqfpfbq`kejdvqfkbujmd`vpwlnleepfwofwwfqtjmgltpvanjwqfmgfqdqlvspvsolbgkfbowknfwklgujgflpp`klloevwvqfpkbgltgfabwfubovfpLaif`wlwkfqpqjdkwpofbdvf`kqlnfpjnsofmlwj`fpkbqfgfmgjmdpfbplmqfslqwlmojmfprvbqfavwwlmjnbdfpfmbaofnlujmdobwfpwtjmwfqEqbm`fsfqjlgpwqlmdqfsfbwOlmglmgfwbjoelqnfggfnbmgpf`vqfsbppfgwlddofsob`fpgfuj`fpwbwj``jwjfppwqfbnzfooltbwwb`hpwqffweojdkwkjggfmjmel!=lsfmfgvpfevouboofz`bvpfpofbgfqpf`qfwpf`lmggbnbdfpslqwpf{`fswqbwjmdpjdmfgwkjmdpfeef`wejfogppwbwfpleej`fujpvbofgjwlqulovnfQfslqwnvpfvnnlujfpsbqfmwb``fppnlpwoznlwkfq!#jg>!nbqhfwdqlvmg`kbm`fpvqufzafelqfpznalonlnfmwpsff`knlwjlmjmpjgfnbwwfq@fmwfqlaif`wf{jpwpnjggofFvqlsfdqltwkofdb`znbmmfqfmlvdk`bqffqbmptfqlqjdjmslqwbo`ojfmwpfof`wqbmgln`olpfgwlsj`p`lnjmdebwkfqlswjlmpjnsozqbjpfgfp`bsf`klpfm`kvq`kgfejmfqfbplm`lqmfqlvwsvwnfnlqzjeqbnfsloj`fnlgfopMvnafqgvqjmdleefqppwzofphjoofgojpwfg`boofgpjoufqnbqdjmgfofwfafwwfqaqltpfojnjwpDolabopjmdoftjgdfw`fmwfqavgdfwmltqbs`qfgjw`objnpfmdjmfpbefwz`klj`fpsjqjw.pwzofpsqfbgnbhjmdmffgfgqvppjbsofbpff{wfmwP`qjswaqlhfmbooltp`kbqdfgjujgfeb`wlqnfnafq.abpfgwkflqz`lmejdbqlvmgtlqhfgkfosfg@kvq`kjnsb`wpklvogbotbzpoldl!#alwwlnojpw!=*xubq#sqfej{lqbmdfKfbgfq-svpk+`lvsofdbqgfmaqjgdfobvm`kQfujftwbhjmdujpjlmojwwofgbwjmdAvwwlmafbvwzwkfnfpelqdlwPfbq`kbm`klqbonlpwolbgfg@kbmdfqfwvqmpwqjmdqfolbgNlajofjm`lnfpvssozPlvq`flqgfqpujftfg%maps8`lvqpfBalvw#jpobmg?kwno#`llhjfmbnf>!bnbylmnlgfqmbguj`fjm?,b=9#Wkf#gjboldklvpfpAFDJM#Nf{j`lpwbqwp`fmwqfkfjdkwbggjmdJpobmgbppfwpFnsjqfP`kllofeelqwgjqf`wmfbqoznbmvboPfof`w-\\t\\tLmfiljmfgnfmv!=SkjojsbtbqgpkbmgofjnslqwLeej`fqfdbqgphjoopmbwjlmPslqwpgfdqfftffhoz#+f-d-afkjmggl`wlqolddfgvmjwfg?,a=?,afdjmpsobmwpbppjpwbqwjpwjppvfg033s{\\x7F`bmbgbbdfm`zp`kfnfqfnbjmAqbyjopbnsofoldl!=afzlmg.p`bofb``fswpfqufgnbqjmfEllwfq`bnfqb?,k2=\\t\\\\elqn!ofbufppwqfpp!#,=\\x0E\\t-dje!#lmolbgolbgfqL{elqgpjpwfqpvqujuojpwfmefnbofGfpjdmpjyf>!bssfbowf{w!=ofufopwkbmhpkjdkfqelq`fgbmjnbobmzlmfBeqj`bbdqffgqf`fmwSflsof?aq#,=tlmgfqsqj`fpwvqmfg\\x7F\\x7F#x~8nbjm!=jmojmfpvmgbztqbs!=ebjofg`fmpvpnjmvwfafb`lmrvlwfp263s{\\x7Ffpwbwfqfnlwffnbjo!ojmhfgqjdkw8pjdmboelqnbo2-kwnopjdmvssqjm`feolbw9-smd!#elqvn-B``fppsbsfqpplvmgpf{wfmgKfjdkwpojgfqVWE.;!%bns8#Afelqf-#TjwkpwvgjlltmfqpnbmbdfsqlejwiRvfqzbmmvbosbqbnpalvdkwebnlvpdlldofolmdfqj((*#xjpqbfopbzjmdgf`jgfklnf!=kfbgfqfmpvqfaqbm`ksjf`fpaol`h8pwbwfgwls!=?qb`jmdqfpjyf..%dw8sb`jwzpf{vboavqfbv-isd!#23/333lawbjmwjwofpbnlvmw/#Jm`-`lnfgznfmv!#ozqj`pwlgbz-jmgffg`lvmwz\\\\oldl-EbnjozollhfgNbqhfwopf#jeSobzfqwvqhfz*8ubq#elqfpwdjujmdfqqlqpGlnbjm~fopfxjmpfqwAold?,ellwfqoldjm-ebpwfqbdfmwp?algz#23s{#3sqbdnbeqjgbzivmjlqgloobqsob`fg`lufqpsovdjm6/333#sbdf!=alpwlm-wfpw+bubwbqwfpwfg\\\\`lvmwelqvnpp`kfnbjmgf{/ejoofgpkbqfpqfbgfqbofqw+bssfbqPvanjwojmf!=algz!=\\t)#WkfWklvdkpffjmdifqpfzMftp?,ufqjezf{sfqwjmivqztjgwk>@llhjfPWBQW#b`qlpp\\\\jnbdfwkqfbgmbwjufsl`hfwal{!=\\tPzpwfn#Gbujg`bm`fqwbaofpsqlufgBsqjo#qfboozgqjufqjwfn!=nlqf!=albqgp`lolqp`bnsvpejqpw#\\x7F\\x7F#X^8nfgjb-dvjwbqejmjpktjgwk9pkltfgLwkfq#-sks!#bppvnfobzfqptjoplmpwlqfpqfojfeptfgfm@vpwlnfbpjoz#zlvq#Pwqjmd\\t\\tTkjowbzolq`ofbq9qfplqweqfm`kwklvdk!*#(#!?algz=avzjmdaqbmgpNfnafqmbnf!=lssjmdpf`wlq6s{8!=upsb`fslpwfqnbilq#`leeffnbqwjmnbwvqfkbssfm?,mbu=hbmpbpojmh!=Jnbdfp>ebopftkjof#kpsb`f3%bns8#\\t\\tJm##sltfqSlophj.`lolqilqgbmAlwwlnPwbqw#.`lvmw1-kwnomftp!=32-isdLmojmf.qjdkwnjoofqpfmjlqJPAM#33/333#dvjgfpubovf*f`wjlmqfsbjq-{no!##qjdkwp-kwno.aol`hqfdF{s9klufqtjwkjmujqdjmsklmfp?,wq=\\x0Evpjmd#\\t\\nubq#=$*8\\t\\n?,wg=\\t?,wq=\\tabkbpbaqbpjodbofdlnbdzbqslophjpqsphj4]4C5d\\bTA\\nzk\\x0BBl\\bQ\\x7F\\x0BUm\\x05Gx\\bSM\\nmC\\bTA\\twQ\\nd}\\bW@\\bTl\\bTF\\ti@\\tcT\\x0BBM\\x0B|j\\x04BV\\tqw\\tcC\\bWI\\npa\\tfM\\n{Z\\x05{X\\bTF\\bVV\\bVK\\t\\x7Fm\\x04kF\\t[]\\bPm\\bTv\\nsI\\x0Bpg\\t[I\\bQp\\x04mx\\x0B_W\\n^M\\npe\\x0BQ}\\x0BGu\\nel\\npe\\x04Ch\\x04BV\\bTA\\tSo\\nzk\\x0BGL\\x0BxD\\nd[\\x05Jz\\x05MY\\bQp\\x04li\\nfl\\npC\\x05{B\\x05Nt\\x0BwT\\ti_\\bTg\\x04QQ\\n|p\\x0BXN\\bQS\\x0BxD\\x04QC\\bWZ\\tpD\\x0BVS\\bTW\\x05Nt\\x04Yh\\nzu\\x04Kj\\x05N}\\twr\\tHa\\n_D\\tj`\\x0BQ}\\x0BWp\\nxZ\\x04{c\\tji\\tBU\\nbD\\x04a|\\tTn\\tpV\\nZd\\nmC\\x0BEV\\x05{X\\tc}\\tTo\\bWl\\bUd\\tIQ\\tcg\\x0Bxs\\nXW\\twR\\x0Bek\\tc}\\t]y\\tJn\\nrp\\neg\\npV\\nz\\\\\\x05{W\\npl\\nz\\\\\\nzU\\tPc\\t`{\\bV@\\nc|\\bRw\\ti_\\bVb\\nwX\\tHv\\x04Su\\bTF\\x0B_W\\x0BWs\\x0BsI\\x05m\\x7F\\nTT\\ndc\\tUS\\t}f\\tiZ\\bWz\\tc}\\x04MD\\tBe\\tiD\\x0B@@\\bTl\\bPv\\t}t\\x04Sw\\x04M`\\x0BnU\\tkW\\x0Bed\\nqo\\x0BxY\\tA|\\bTz\\x0By`\\x04BR\\x04BM\\tia\\x04XU\\nyu\\x04n^\\tfL\\tiI\\nXW\\tfD\\bWz\\bW@\\tyj\\t\\x7Fm\\tav\\tBN\\x0Bb\\\\\\tpD\\bTf\\nY[\\tJn\\bQy\\t[^\\x0BWc\\x0Byu\\x04Dl\\x04CJ\\x0BWj\\x0BHR\\t`V\\x0BuW\\tQy\\np@\\x0BGu\\x05pl\\x04Jm\\bW[\\nLP\\nxC\\n`m\\twQ\\x05ui\\x05\\x7FR\\nbI\\twQ\\tBZ\\tWV\\x04BR\\npg\\tcg\\x05ti\\x04CW\\n_y\\tRg\\bQa\\x0BQB\\x0BWc\\nYb\\x05le\\ngE\\x04Su\\nL[\\tQ\\x7F\\tea\\tdj\\x0B]W\\nb~\\x04M`\\twL\\bTV\\bVH\\nt\\x7F\\npl\\t|b\\x05s_\\bU|\\bTa\\x04oQ\\x05lv\\x04Sk\\x04M`\\bTv\\x0BK}\\nfl\\tcC\\x04oQ\\x04BR\\tHk\\t|d\\bQp\\tHK\\tBZ\\x0BHR\\bPv\\x0BLx\\x0BEZ\\bT\\x7F\\bTv\\tiD\\x05oD\\x05MU\\x0BwB\\x04Su\\x05k`\\x04St\\ntC\\tPl\\tKg\\noi\\tjY\\x0BxY\\x04h}\\nzk\\bWZ\\t\\x7Fm\\x0Be`\\tTB\\tfE\\nzk\\t`z\\x04Yh\\nV|\\tHK\\tAJ\\tAJ\\bUL\\tp\\\\\\tql\\nYc\\x04Kd\\nfy\\x04Yh\\t[I\\x0BDg\\x04Jm\\n]n\\nlb\\bUd\\n{Z\\tlu\\tfs\\x04oQ\\bTW\\x04Jm\\x0BwB\\tea\\x04Yh\\x04BC\\tsb\\tTn\\nzU\\n_y\\x0BxY\\tQ]\\ngw\\x04mt\\tO\\\\\\ntb\\bWW\\bQy\\tmI\\tV[\\ny\\\\\\naB\\x0BRb\\twQ\\n]Q\\x04QJ\\bWg\\x0BWa\\bQj\\ntC\\bVH\\nYm\\x0Bxs\\bVK\\nel\\bWI\\x0BxY\\x04Cq\\ntR\\x0BHV\\bTl\\bVw\\tay\\bQa\\bVV\\t}t\\tdj\\nr|\\tp\\\\\\twR\\n{i\\nTT\\t[I\\ti[\\tAJ\\x0Bxs\\x0B_W\\td{\\x0BQ}\\tcg\\tTz\\tA|\\tCj\\x0BLm\\x05N}\\x05m\\x7F\\nbK\\tdZ\\tp\\\\\\t`V\\tsV\\np@\\tiD\\twQ\\x0BQ}\\bTf\\x05ka\\x04Jm\\x0B@@\\bV`\\tzp\\n@N\\x04Sw\\tiI\\tcg\\noi\\x04Su\\bVw\\x04lo\\x04Cy\\tc}\\x0Bb\\\\\\tsU\\x04BA\\bWI\\bTf\\nxS\\tVp\\nd|\\bTV\\x0BbC\\tNo\\x05Ju\\nTC\\t|`\\n{Z\\tD]\\bU|\\tc}\\x05lm\\bTl\\tBv\\tPl\\tc}\\bQp\\t\\x7Fm\\nLk\\tkj\\n@N\\x04Sb\\x04KO\\tj_\\tp\\\\\\nzU\\bTl\\bTg\\bWI\\tcf\\x04XO\\bWW\\ndz\\x04li\\tBN\\nd[\\bWO\\x04MD\\x0BKC\\tdj\\tI_\\bVV\\ny\\\\\\x0BLm\\x05xl\\txB\\tkV\\x0Bb\\\\\\x0BJW\\x0BVS\\tVx\\x0BxD\\td{\\x04MD\\bTa\\t|`\\x0BPz\\x04R}\\x0BWs\\x04BM\\nsI\\x04CN\\bTa\\x04Jm\\npe\\ti_\\npV\\nrh\\tRd\\tHv\\n~A\\nxR\\x0BWh\\x0BWk\\nxS\\x0BAz\\x0BwX\\nbI\\x04oQ\\tfw\\nqI\\nV|\\nun\\x05z\\x7F\\x0Bpg\\td\\\\\\x0BoA\\x05{D\\ti_\\x05xB\\bT\\x7F\\t`V\\x05qr\\tTT\\x04g]\\x04CA\\x0BuR\\tVJ\\tT`\\npw\\x0BRb\\tI_\\nCx\\x04Ro\\x0BsI\\x04Cj\\x04Kh\\tBv\\tWV\\x04BB\\x05oD\\x05{D\\nhc\\x04Km\\x0B^R\\tQE\\n{I\\np@\\nc|\\x05Gt\\tc}\\x04Dl\\nzU\\x05qN\\tsV\\x05k}\\tHh\\x0B|j\\nqo\\x05u|\\tQ]\\x0Bek\\x05\\x7FZ\\x04M`\\x04St\\npe\\tdj\\bVG\\x0BeE\\t\\x7Fm\\x0BWc\\x04|I\\n[W\\tfL\\bT\\x7F\\tBZ\\x04Su\\x0BKa\\x04Cq\\x05Nt\\x04Y[\\nqI\\bTv\\tfM\\ti@\\t}f\\x04B\\\\\\tQy\\x0BBl\\bWg\\x04XD\\x05kc\\x0Bx[\\bVV\\tQ]\\t\\x7Fa\\tPy\\x0BxD\\nfI\\t}f\\x05oD\\tdj\\tSG\\x05ls\\t~D\\x04CN\\n{Z\\t\\\\v\\n_D\\nhc\\x0Bx_\\x04C[\\tAJ\\nLM\\tVx\\x04CI\\tbj\\tc^\\tcF\\ntC\\x04Sx\\twr\\x04XA\\bU\\\\\\t|a\\x0BK\\\\\\bTV\\bVj\\nd|\\tfs\\x04CX\\ntb\\bRw\\tVx\\tAE\\tA|\\bT\\x7F\\x05Nt\\x0BDg\\tVc\\bTl\\x04d@\\npo\\t\\x7FM\\tcF\\npe\\tiZ\\tBo\\bSq\\nfH\\x04l`\\bTx\\bWf\\tHE\\x0BF{\\tcO\\tfD\\nlm\\x0BfZ\\nlm\\x0BeU\\tdG\\x04BH\\bTV\\tSi\\x05MW\\nwX\\nz\\\\\\t\\\\c\\x04CX\\nd}\\tl}\\bQp\\bTV\\tF~\\bQ\\x7F\\t`i\\ng@\\x05nO\\bUd\\bTl\\nL[\\twQ\\tji\\ntC\\t|J\\nLU\\naB\\x0BxY\\x04Kj\\tAJ\\x05uN\\ti[\\npe\\x04Sk\\x0BDg\\x0Bx]\\bVb\\bVV\\nea\\tkV\\nqI\\bTa\\x04Sk\\nAO\\tpD\\ntb\\nts\\nyi\\bVg\\ti_\\x0B_W\\nLk\\x05Nt\\tyj\\tfM\\x04R\\x7F\\tiI\\bTl\\x0BwX\\tsV\\x0BMl\\nyu\\tAJ\\bVj\\x04KO\\tWV\\x0BA}\\x0BW\\x7F\\nrp\\tiD\\x0B|o\\x05lv\\x0BsI\\x04BM\\td~\\tCU\\bVb\\x04eV\\npC\\x0BwT\\tj`\\tc}\\x0Bxs\\x0Bps\\x0Bvh\\tWV\\x0BGg\\x0BAe\\x0BVK\\x0B]W\\trg\\x0BWc\\x05F`\\tBr\\x0Bb\\\\\\tdZ\\bQp\\nqI\\x04kF\\nLk\\x0BAR\\bWI\\bTg\\tbs\\tdw\\n{L\\n_y\\tiZ\\bTA\\tlg\\bVV\\bTl\\tdk\\n`k\\ta{\\ti_\\x05{A\\x05wj\\twN\\x0B@@\\bTe\\ti_\\n_D\\twL\\nAH\\x0BiK\\x0Bek\\n[]\\tp_\\tyj\\bTv\\tUS\\t[r\\n{I\\nps\\x05Gt\\x0BVK\\npl\\x04S}\\x0BWP\\t|d\\x04MD\\x0BHV\\bT\\x7F\\x04R}\\x04M`\\bTV\\bVH\\x05lv\\x04Ch\\bW[\\x04Ke\\tR{\\x0B^R\\tab\\tBZ\\tVA\\tB`\\nd|\\nhs\\x04Ke\\tBe\\x04Oi\\tR{\\td\\\\\\x05nB\\bWZ\\tdZ\\tVJ\\x05Os\\t\\x7Fm\\x04uQ\\x0BhZ\\x04Q@\\x04QQ\\nfI\\bW[\\x04B\\\\\\x04li\\nzU\\nMd\\x04M`\\nxS\\bVV\\n\\\\}\\x0BxD\\t\\x7Fm\\bTp\\x04IS\\nc|\\tkV\\x05i~\\tV{\\x0BhZ\\t|b\\bWt\\n@R\\x0BoA\\x0BnU\\bWI\\tea\\tB`\\tiD\\tc}\\tTz\\x04BR\\x0BQB\\x05Nj\\tCP\\t[I\\bTv\\t`W\\x05uN\\x0Bpg\\x0Bpg\\x0BWc\\tiT\\tbs\\twL\\tU_\\tc\\\\\\t|h\\x0BKa\\tNr\\tfL\\nq|\\nzu\\nz\\\\\\tNr\\bUg\\t|b\\x04m`\\bTv\\nyd\\nrp\\bWf\\tUX\\x04BV\\nzk\\nd}\\twQ\\t}f\\x04Ce\\x0Bed\\bTW\\bSB\\nxU\\tcn\\bTb\\ne\\x7F\\ta\\\\\\tSG\\bU|\\npV\\nN\\\\\\x04Kn\\x0BnU\\tAt\\tpD\\x0B^R\\x0BIr\\x04b[\\tR{\\tdE\\x0BxD\\x0BWK\\x0BWA\\bQL\\bW@\\x04Su\\bUd\\nDM\\tPc\\x04CA\\x04Dl\\x04oQ\\tHs\\x05wi\\x04ub\\n\\x7Fa\\bQp\\x05Ob\\nLP\\bTl\\x04Y[\\x0BK}\\tAJ\\bQ\\x7F\\x04n^\\x0BsA\\bSM\\nqM\\bWZ\\n^W\\x0Bz{\\x04S|\\tfD\\bVK\\bTv\\bPv\\x04BB\\tCP\\x04dF\\tid\\x0Bxs\\x04mx\\x0Bws\\tcC\\ntC\\tyc\\x05M`\\x0BW\\x7F\\nrh\\bQp\\x0BxD\\x04\\\\o\\nsI\\x04_k\\nzu\\x04kF\\tfD\\x04Xs\\x04XO\\tjp\\bTv\\x04BS\\x05{B\\tBr\\nzQ\\nbI\\tc{\\x04BD\\x04BV\\x05nO\\bTF\\tca\\x05Jd\\tfL\\tPV\\tI_\\nlK\\x04`o\\twX\\npa\\tgu\\bP}\\x05{^\\bWf\\n{I\\tBN\\npa\\x04Kl\\x0Bpg\\tcn\\tfL\\x0Bvh\\x04Cq\\bTl\\x0BnU\\bSq\\x04Cm\\twR\\bUJ\\npe\\nyd\\nYg\\x04Cy\\x0BKW\\tfD\\nea\\x04oQ\\tj_\\tBv\\x04nM\\x0BID\\bTa\\nzA\\x05pl\\n]n\\bTa\\tR{\\tfr\\n_y\\bUg\\x05{X\\x05kk\\x0BxD\\x04|I\\x05xl\\nfy\\x04Ce\\x0BwB\\nLk\\x0Bd]\\noi\\n}h\\tQ]\\npe\\bVw\\x04Hk\\x04OQ\\nzk\\tAJ\\npV\\bPv\\ny\\\\\\tA{\\x04Oi\\bSB\\x04XA\\x0BeE\\tjp\\nq}\\tiD\\x05qN\\x0B^R\\t\\x7Fm\\tiZ\\tBr\\bVg\\noi\\n\\\\X\\tU_\\nc|\\x0BHV\\bTf\\tTn\\x04\\\\N\\x04\\\\N\\nuB\\x05lv\\nyu\\tTd\\bTf\\bPL\\x0B]W\\tdG\\nA`\\nw^\\ngI\\npe\\tdw\\nz\\\\\\x05ia\\bWZ\\tcF\\x04Jm\\n{Z\\bWO\\x04_k\\x04Df\\x04RR\\td\\\\\\bVV\\x0Bxs\\x04BN\\x05ti\\x04lm\\tTd\\t]y\\x0BHV\\tSo\\x0B|j\\x04XX\\tA|\\x0BZ^\\x0BGu\\bTW\\x05M`\\x04kF\\x0BhZ\\x0BVK\\tdG\\x0BBl\\tay\\nxU\\x05qE\\x05nO\\bVw\\nqI\\x04CX\\ne\\x7F\\tPl\\bWO\\x0BLm\\tdL\\x05uH\\x04Cm\\tdT\\x04fn\\x0BwB\\x05ka\\x0BnU\\n@M\\nyT\\tHv\\t\\\\}\\x04Kh\\td~\\x04Yh\\x05k}\\neR\\td\\\\\\bWI\\t|b\\tHK\\tiD\\bTW\\x05MY\\npl\\bQ_\\twr\\x0BAx\\tHE\\bTg\\bSq\\x05vp\\x0Bb\\\\\\bWO\\nOl\\nsI\\nfy\\x0BID\\t\\\\c\\n{Z\\n^~\\npe\\nAO\\tTT\\x0Bxv\\x04k_\\bWO\\x0B|j\\x0BwB\\tQy\\ti@\\tPl\\tHa\\tdZ\\x05k}\\x04ra\\tUT\\x0BJc\\x0Bed\\np@\\tQN\\nd|\\tkj\\tHk\\x04M`\\noi\\twr\\td\\\\\\nlq\\no_\\nlb\\nL[\\tac\\x04BB\\x04BH\\x04Cm\\npl\\tIQ\\bVK\\x0Bxs\\n`e\\x0BiK\\npa\\x04Oi\\tUS\\bTp\\tfD\\nPG\\x05kk\\x04XA\\nz\\\\\\neg\\x0BWh\\twR\\x05qN\\nqS\\tcn\\x04lo\\nxS\\n^W\\tBU\\nt\\x7F\\tHE\\tp\\\\\\tfF\\tfw\\bVV\\bW@\\tak\\x0BVK\\x05ls\\tVJ\\bVV\\x0BeE\\x04\\\\o\\nyX\\nYm\\x04M`\\x05lL\\nd|\\nzk\\tA{\\x05sE\\twQ\\x04XT\\nt\\x7F\\tPl\\t]y\\x0BwT\\x05{p\\x04MD\\x0Bb\\\\\\tQ]\\x04Kj\\tJn\\nAH\\x0BRb\\tBU\\tHK\\t\\\\c\\nfI\\x05m\\x7F\\nqM\\n@R\\tSo\\noi\\x04BT\\tHv\\n_y\\x04Kh\\tBZ\\t]i\\bUJ\\tV{\\x04Sr\\nbI\\x0BGg\\ta_\\bTR\\nfI\\nfl\\t[K\\tII\\x04S|\\x0BuW\\tiI\\bWI\\nqI\\x0B|j\\x04BV\\bVg\\bWZ\\x04kF\\x0Bx]\\bTA\\tab\\tfr\\ti@\\tJd\\tJd\\x0Bps\\nAO\\bTa\\x05xu\\tiD\\nzk\\t|d\\t|`\\bW[\\tlP\\tdG\\bVV\\x0Bw}\\x0BqO\\ti[\\bQ\\x7F\\bTz\\x0BVF\\twN\\x05ts\\tdw\\bTv\\neS\\ngi\\tNr\\x05yS\\npe\\bVV\\bSq\\n`m\\tyj\\tBZ\\x0BWX\\bSB\\tc\\\\\\nUR\\t[J\\tc_\\x04nM\\bWQ\\x0BAx\\nMd\\tBr\\x05ui\\x0BxY\\bSM\\x0BWc\\x0B|j\\x0Bxs\\t}Q\\tBO\\bPL\\bWW\\tfM\\nAO\\tPc\\x0BeU\\x04e^\\bTg\\nqI\\tac\\bPv\\tcF\\x04oQ\\tQ\\x7F\\x0BhZ\\x05ka\\nz\\\\\\tiK\\tBU\\n`k\\tCP\\x04S|\\x04M`\\n{I\\tS{\\x04_O\\tBZ\\x04Zi\\x04Sk\\tps\\tp\\\\\\nYu\\n]s\\nxC\\bWt\\nbD\\tkV\\x0BGu\\x05yS\\nqA\\t[r\\neK\\x04M`\\tdZ\\x05lL\\bUg\\bTl\\nbD\\tUS\\x0Bb\\\\\\tpV\\ncc\\x04S\\\\\\tct\\t`z\\bPL\\x0BWs\\nA`\\neg\\bSq\\x05uE\\x04CR\\x0BDg\\t`W\\x0Bz{\\x0BWc\\x04Sk\\x04Sk\\tbW\\bUg\\tea\\nxZ\\tiI\\tUX\\tVJ\\nqn\\tS{\\x0BRb\\bTQ\\npl\\x05Gt\\x0BuW\\x05uj\\npF\\nqI\\tfL\\t[I\\tia\\x04XO\\nyu\\x0BDg\\x0Bed\\tq{\\x04VG\\bQ\\x7F\\x05ka\\tVj\\tkV\\txB\\nd|\\np@\\tQN\\tPc\\tps\\x04]j\\tkV\\toU\\bTp\\nzU\\x05nB\\x0BB]\\ta{\\bV@\\n]n\\x04m`\\tcz\\tR{\\x04m`\\bQa\\x0BwT\\bSM\\x05MY\\x05qN\\tdj\\x05~s\\x0BQ}\\x05MY\\x0BMB\\tBv\\twR\\bRg\\x0BQ}\\tql\\x0BKC\\nrm\\x05xu\\x04CC\\x0BwB\\x0Bvh\\tBq\\x04Xq\\npV\\ti_\\x05Ob\\x05uE\\nbd\\nqo\\x0B{i\\nC~\\tBL\\x0BeE\\x05uH\\bVj\\x04Ey\\x04Gz\\x0BzR\\x0B{i\\tcf\\n{Z\\n]n\\x04XA\\x0BGu\\x0BnU\\thS\\x0BGI\\nCc\\tHE\\bTA\\tHB\\x04BH\\x04Cj\\nCc\\bTF\\tHE\\nXI\\tA{\\bQ\\x7F\\tc\\\\\\x0BmO\\x0BWX\\nfH\\np@\\x05MY\\bTF\\nlK\\tBt\\nzU\\tTT\\x04Km\\x0BwT\\npV\\ndt\\x0ByI\\tVx\\tQ\\x7F\\tRg\\tTd\\nzU\\bRS\\nLM\\twA\\x04nM\\tTn\\ndS\\t]g\\nLc\\x0BwB\\t}t\\t[I\\tCP\\x04kX\\x0BFm\\x0BhZ\\x05m\\x7F\\ti[\\np@\\x0BQ}\\x0BW\\x7F\\t|d\\nMO\\nMd\\tf_\\tfD\\tcJ\\tHz\\x0BRb\\tio\\tPy\\x04Y[\\nxU\\tct\\x0B@@\\tww\\bPv\\x04BM\\x04FF\\ntb\\x05v|\\x0BKm\\tBq\\tBq\\x04Kh\\x04`o\\nZd\\x04XU\\ti]\\t|`\\tSt\\x04B\\\\\\bQ\\x7F\\x0B_W\\tTJ\\nqI\\t|a\\tA{\\x0BuP\\x04MD\\tPl\\nxR\\tfL\\x0Bws\\tc{\\td\\\\\\bV`\\neg\\tHK\\x05kc\\nd|\\bVV\\ny\\\\\\x05kc\\ti]\\bVG\\t`V\\tss\\tI_\\tAE\\tbs\\tdu\\nel\\tpD\\x0BW\\x7F\\nqs\\x05lv\\bSM\\x04Zi\\x0BVK\\x05ia\\x0BQB\\tQ\\x7F\\n{Z\\bPt\\x0BKl\\nlK\\nhs\\ndS\\bVK\\x05mf\\nd^\\tkV\\tcO\\nc|\\bVH\\t\\\\]\\bTv\\bSq\\tmI\\x0BDg\\tVJ\\tcn\\ny\\\\\\bVg\\bTv\\nyX\\bTF\\t]]\\bTp\\noi\\nhs\\x0BeU\\nBf\\tdj\\x05Mr\\n|p\\t\\\\g\\t]r\\bVb\\x05{D\\nd[\\x04XN\\tfM\\tO\\\\\\x05s_\\tcf\\tiZ\\x04XN\\x0BWc\\tqv\\n`m\\tU^\\x05oD\\nd|\\x0BGg\\tdE\\x0Bwf\\x04lo\\x04u}\\nd|\\x05oQ\\t`i\\x04Oi\\x0BxD\\ndZ\\nCx\\x04Yw\\nzk\\ntb\\ngw\\tyj\\tB`\\nyX\\x0Bps\\ntC\\x0BpP\\x0Bqw\\bPu\\bPX\\tDm\\npw\\x05Nj\\tss\\taG\\x0Bxs\\bPt\\noL\\x04Gz\\tOk\\ti@\\ti]\\x04eC\\tIQ\\tii\\tdj\\x0B@J\\t|d\\x05uh\\bWZ\\x0BeU\\x0BnU\\bTa\\tcC\\x04g]\\nzk\\x04Yh\\bVK\\nLU\\np@\\ntb\\ntR\\tCj\\x0BNP\\ti@\\bP{\\n\\\\}\\n{c\\nwX\\tfL\\bVG\\tc{\\t|`\\tAJ\\t|C\\tfD\\x05ln\\t|d\\tbs\\nqI\\x05{B\\x0BAx\\np@\\nzk\\x0BRb\\x05Os\\x0BWS\\x04e^\\x0BD_\\tBv\\x0BWd\\bVb\\x0Bxs\\x0BeE\\bRw\\n]n\\n|p\\x0Bg|\\tfw\\x05kc\\bTI\\x05ka\\n\\\\T\\x04Sp\\tju\\x0Bps\\npe\\x05u|\\x0BGr\\bVe\\tCU\\x04]M\\x04XU\\x0BxD\\bTa\\tIQ\\x0BWq\\tCU\\tam\\tdj\\bSo\\x04Sw\\x0BnU\\x04Ch\\tQ]\\x05s_\\bPt\\tfS\\bTa\\t\\\\}\\n@O\\x04Yc\\tUZ\\bTx\\npe\\x0BnU\\nzU\\t|}\\tiD\\nz\\\\\\bSM\\x0BxD\\x04BR\\nzQ\\tQN\\x04]M\\x04Yh\\nLP\\x0BFm\\x0BLX\\x05vc\\x0Bql\\x05ka\\tHK\\bVb\\ntC\\nCy\\bTv\\nuV\\x04oQ\\t`z\\t[I\\tB`\\x0BRb\\tyj\\tsb\\x0BWs\\bTl\\tkV\\x0Bed\\ne\\x7F\\x05lL\\x0BxN\\t\\x7Fm\\nJn\\tjY\\x0BxD\\bVb\\bSq\\x0Byu\\twL\\x0BXL\\bTA\\tpg\\tAt\\tnD\\x04XX\\twR\\npl\\nhw\\x05yS\\nps\\tcO\\bW[\\x0B|j\\x04XN\\tsV\\tp\\\\\\tBe\\nb~\\nAJ\\n]e\\x05k`\\x05qN\\tdw\\tWV\\tHE\\x0BEV\\x05Jz\\tid\\tB`\\tzh\\x05E]\\tfD\\bTg\\x05qN\\bTa\\tja\\x04Cv\\bSM\\nhc\\bUe\\x05t_\\tie\\x04g]\\twQ\\nPn\\bVB\\tjw\\bVg\\x0BbE\\tBZ\\x0BRH\\bP{\\tjp\\n\\\\}\\ta_\\tcC\\t|a\\x0BD]\\tBZ\\ti[\\tfD\\x0BxW\\no_\\td\\\\\\n_D\\ntb\\t\\\\c\\tAJ\\nlK\\x04oQ\\x04lo\\x0BLx\\x0BM@\\bWZ\\x04Kn\\x0Bpg\\nTi\\nIv\\n|r\\x0B@}\\x05Jz\\x05Lm\\x05Wh\\x05k}\\x05ln\\x0BxD\\n]s\\x04gc\\x0Bps\\tBr\\bTW\\x0BBM\\x05tZ\\nBY\\x04DW\\tjf\\x0BSW\\x04C}\\nqo\\tdE\\tmv\\tIQ\\bPP\\bUb\\x05lv\\x04BC\\nzQ\\t[I\\x0Bgl\\nig\\bUs\\x04BT\\x0BbC\\bSq\\tsU\\tiW\\nJn\\tSY\\tHK\\trg\\npV\\x0BID\\x0B|j\\x04KO\\t`S\\t|a`vbmglfmujbqnbgqjgavp`bqjmj`jlwjfnslslqrvf`vfmwbfpwbglsvfgfmivfdlp`lmwqbfpw/Mmmlnaqfwjfmfmsfqejonbmfqbbnjdlp`jvgbg`fmwqlbvmrvfsvfgfpgfmwqlsqjnfqsqf`jlpfd/Vmavfmlpuloufqsvmwlppfnbmbkba/Abbdlpwlmvfulpvmjglp`bqolpfrvjslmj/]lpnv`klpbodvmb`lqqfljnbdfmsbqwjqbqqjabnbq/Abklnaqffnsoflufqgbg`bnajlnv`kbpevfqlmsbpbglo/Amfbsbqf`fmvfubp`vqplpfpwbabrvjfqlojaqlp`vbmwlb``fplnjdvfoubqjlp`vbwqlwjfmfpdqvslppfq/Mmfvqlsbnfgjlpeqfmwfb`fq`bgfn/Mplefqwb`l`kfpnlgfoljwbojbofwqbpbod/Vm`lnsqb`vbofpf{jpwf`vfqslpjfmglsqfmpboofdbqujbifpgjmfqlnvq`jbslgq/Msvfpwlgjbqjlsvfaolrvjfqfnbmvfosqlsjl`qjpjp`jfqwlpfdvqlnvfqwfevfmwf`fqqbqdqbmgffef`wlsbqwfpnfgjgbsqlsjbleqf`fwjfqqbf.nbjoubqjbpelqnbpevwvqllaifwlpfdvjqqjfpdlmlqnbpnjpnlp/Vmj`l`bnjmlpjwjlpqby/_mgfajglsqvfabwlofglwfm/Abifp/Vpfpsfql`l`jmblqjdfmwjfmgb`jfmwl`/Mgjykbaobqpfq/Abobwjmbevfqybfpwjoldvfqqbfmwqbq/E{jwlo/_sfybdfmgbu/Agflfujwbqsbdjmbnfwqlpibujfqsbgqfpe/M`jo`bafyb/Mqfbppbojgbfmu/Alibs/_mbavplpajfmfpwf{wlpoofubqsvfgbmevfqwf`ln/Vm`obpfpkvnbmlwfmjglajoablvmjgbgfpw/Mpfgjwbq`qfbgl<X<W=c=k=n<R<V<\\\\<V<T<W<T=a=n<R<^=m<Y<Y<_<R<S=l<T=n<\\\\<V<Y=e<Y=o<Z<Y<v<\\\\<V<]<Y<[<]=g<W<R<Q<T<~=m<Y<S<R<X<A=n<R=n<R<P=k<Y<P<Q<Y=n<W<Y=n=l<\\\\<[<R<Q<\\\\<_<X<Y<P<Q<Y<x<W=c<s=l<T<Q<\\\\=m<Q<T=i=n<Y<P<V=n<R<_<R<X<^<R=n=n<\\\\<P<M<D<|<P<\\\\=c<K=n<R<^<\\\\=m<^<\\\\<P<Y<P=o<N<\\\\<V<X<^<\\\\<Q<\\\\<P=a=n<T=a=n=o<~<\\\\<P=n<Y=i<S=l<R=n=o=n<Q<\\\\<X<X<Q=c<~<R=n=n=l<T<Q<Y<U<~<\\\\=m<Q<T<P=m<\\\\<P=n<R=n=l=o<]<r<Q<T<P<T=l<Q<Y<Y<r<r<r<W<T=j=a=n<\\\\<r<Q<\\\\<Q<Y<P<X<R<P<P<R<U<X<^<Y<R<Q<R=m=o<X\\fHy\\fIk\\fHU\\fId\\fHy\\fIl\\fHT\\fIk\\fHy\\fHR\\fHy\\fIg\\fHx\\fH\\\\\\fHF\\fH\\\\\\fHD\\fIk\\fHc\\fHy\\fHy\\fHS\\fHA\\fIl\\fHk\\fHT\\fHy\\fH\\\\\\fHH\\fIg\\fHU\\fIg\\fHj\\fHF\\fHU\\fIl\\fHC\\fHU\\fHC\\fHR\\fHH\\fHy\\fHI\\fHRibdqbm\\fHj\\fHp\\fHp\\fIg\\fHi\\fH@\\fHJ\\fIg\\fH{\\fHd\\fHp\\fHR\\fH{\\fHc\\fHU\\fHB\\fHk\\fHD\\fHY\\fHU\\fHC\\fIk\\fHI\\fIk\\fHI\\fIl\\fHt\\fH\\\\\\fHp\\fH@\\fHJ\\fIl\\fHy\\fHd\\fHp\\fIl\\fHY\\fIk\\fHD\\fHd\\fHD\\fHc\\fHU\\fH\\\\\\fHe\\fHT\\fHB\\fIk\\fHy\\fHB\\fHY\\fIg\\fH^\\fIk\\fHT\\fH@\\fHB\\fHd\\fHJ\\fIk\\fH\\x7F\\fH\\\\\\fHj\\fHB\\fH@\\fHT\\fHA\\fH\\\\\\fH@\\fHD\\fHv\\fH^\\fHB\\fHD\\fHj\\fH{\\fHT\\fIl\\fH^\\fIl4U5h5e4I5h5e5k4\\\\4K4N4B4]4U4C4C4K5h5e5k4\\\\5k4Y5d4]4V5f4]5o4K5j5d5h4K4D5f5j4U4]4Z4\\\\5h5o5k5j4K5f5d5i5n4K5h4U5h5f4K5j4K5h5o5j4A4F5e5n4D5h5d4A4E4K4B4]5m5n4[4U4D4C4]5o5j4I4\\\\4K5o5i4K4K4A4C4I5h4K5m5f5k4D4U4Z5o5f5m4D4A4G5d5i5j5d5k5d4O5j4K4@4C4K5h5k4K4_5h5i4U5j4C5h5f4_4U4D4]4Y5h5e5i5j4\\\\4D5k4K4O5j5k5i4G5h5o5j4F4K5h4K4A5f4G5i4Y4]4X4]4A4A5d5h5d5m5f4K4\\\\4K5h5o5h5i4]4E4K5j4F4K5h5m4O4D5d4B4K4Y4O5j4F4K5j5k4K5h5f4U4Z5d5d5n4C4K4D5j4B5f4]4D5j4F5h5o5i4X4K4M5d5k5f4K4D5d5n4Y4Y5d5i4K4]5n5i4O4A4C5j4A5j4U4C5i4]4O5f4K4A4E5o4F4D4C5d5j5f4@4D5i5j5k4F4A4F4@5k4E4_5j4E5f4F5i5o4]4E4V4^4E5j5m4_4D5f4F5h5h5k5h5j4K4F5h5o5n5h4D5h5i4K4U5j5k4O5d5h4X5f4M5j5d4]4O5i4K5m5f5o4D5o5h4\\\\4K4F4]4F4D4D4O5j5k5i4_4K5j5o4D5f4U5m5n4C4A4_5j5h5k5i4X4U4]4O5k5h4X5k4]5n4[4]4[5h4Dsqlejofpfquj`fgfebvowkjnpfoegfwbjop`lmwfmwpvsslqwpwbqwfgnfppbdfpv``fppebpkjlm?wjwof=`lvmwqzb``lvmw`qfbwfgpwlqjfpqfpvowpqvmmjmdsql`fpptqjwjmdlaif`wpujpjaoftfo`lnfbqwj`ofvmhmltmmfwtlqh`lnsbmzgzmbnj`aqltpfqsqjub`zsqlaofnPfquj`fqfpsf`wgjpsobzqfrvfpwqfpfquftfapjwfkjpwlqzeqjfmgplswjlmptlqhjmdufqpjlmnjoojlm`kbmmfotjmglt-bggqfppujpjwfgtfbwkfq`lqqf`wsqlgv`wfgjqf`welqtbqgzlv#`bmqfnlufgpvaif`w`lmwqlobq`kjuf`vqqfmwqfbgjmdojaqbqzojnjwfgnbmbdfqevqwkfqpvnnbqznb`kjmfnjmvwfpsqjubwf`lmwf{wsqldqbnpl`jfwzmvnafqptqjwwfmfmbaofgwqjddfqplvq`fpolbgjmdfofnfmwsbqwmfqejmboozsfqef`wnfbmjmdpzpwfnphffsjmd`vowvqf%rvlw8/ilvqmbosqlif`wpvqeb`fp%rvlw8f{sjqfpqfujftpabobm`fFmdojpk@lmwfmwwkqlvdkSofbpf#lsjmjlm`lmwb`wbufqbdfsqjnbqzujoobdfPsbmjpkdboofqzgf`ojmfnffwjmdnjppjlmslsvobqrvbojwznfbpvqfdfmfqbopsf`jfppfppjlmpf`wjlmtqjwfqp`lvmwfqjmjwjboqfslqwpejdvqfpnfnafqpklogjmdgjpsvwffbqojfqf{sqfppgjdjwbosj`wvqfBmlwkfqnbqqjfgwqbeej`ofbgjmd`kbmdfg`fmwqbouj`wlqzjnbdfp,qfbplmppwvgjfpefbwvqfojpwjmdnvpw#afp`kllopUfqpjlmvpvboozfsjplgfsobzjmddqltjmdlaujlvplufqobzsqfpfmwb`wjlmp?,vo=\\x0E\\ttqbssfqboqfbgz`fqwbjmqfbojwzpwlqbdfbmlwkfqgfphwlsleefqfgsbwwfqmvmvpvboGjdjwbo`bsjwboTfapjwfebjovqf`lmmf`wqfgv`fgBmgqljggf`bgfpqfdvobq#%bns8#bmjnbopqfofbpfBvwlnbwdfwwjmdnfwklgpmlwkjmdSlsvobq`bswjlmofwwfqp`bswvqfp`jfm`foj`fmpf`kbmdfpFmdobmg>2%bns8Kjpwlqz#>#mft#@fmwqbovsgbwfgPsf`jboMfwtlqhqfrvjqf`lnnfmwtbqmjmd@loofdfwlloabqqfnbjmpaf`bvpffof`wfgGfvwp`kejmbm`ftlqhfqprvj`hozafwtffmf{b`wozpfwwjmdgjpfbpfPl`jfwztfbslmpf{kjajw%ow8\"..@lmwqlo`obppfp`lufqfglvwojmfbwwb`hpgfuj`fp+tjmgltsvqslpfwjwof>!Nlajof#hjoojmdpkltjmdJwbojbmgqlssfgkfbujozfeef`wp.2$^*8\\t`lmejqn@vqqfmwbgubm`fpkbqjmdlsfmjmdgqbtjmdajoojlmlqgfqfgDfqnbmzqfobwfg?,elqn=jm`ovgftkfwkfqgfejmfgP`jfm`f`bwboldBqwj`ofavwwlmpobqdfpwvmjelqnilvqmfzpjgfabq@kj`bdlklojgbzDfmfqbosbppbdf/%rvlw8bmjnbwfeffojmdbqqjufgsbppjmdmbwvqboqlvdkoz-\\t\\tWkf#avw#mlwgfmpjwzAqjwbjm@kjmfpfob`h#lewqjavwfJqfobmg!#gbwb.eb`wlqpqf`fjufwkbw#jpOjaqbqzkvpabmgjm#eb`wbeebjqp@kbqofpqbgj`boaqlvdkwejmgjmdobmgjmd9obmd>!qfwvqm#ofbgfqpsobmmfgsqfnjvnsb`hbdfBnfqj`bFgjwjlm^%rvlw8Nfppbdfmffg#wlubovf>!`lnsof{ollhjmdpwbwjlmafojfufpnboofq.nlajofqf`lqgptbmw#wlhjmg#leEjqfel{zlv#bqfpjnjobqpwvgjfgnb{jnvnkfbgjmdqbsjgoz`ojnbwfhjmdglnfnfqdfgbnlvmwpelvmgfgsjlmffqelqnvobgzmbpwzklt#wl#Pvsslqwqfufmvff`lmlnzQfpvowpaqlwkfqplogjfqobqdfoz`boojmd-%rvlw8B``lvmwFgtbqg#pfdnfmwQlafqw#feelqwpSb`jej`ofbqmfgvs#tjwkkfjdkw9tf#kbufBmdfofpmbwjlmp\\\\pfbq`kbssojfgb`rvjqfnbppjufdqbmwfg9#ebopfwqfbwfgajddfpwafmfejwgqjujmdPwvgjfpnjmjnvnsfqkbspnlqmjmdpfoojmdjp#vpfgqfufqpfubqjbmw#qlof>!njppjmdb`kjfufsqlnlwfpwvgfmwplnflmff{wqfnfqfpwlqfalwwln9fuloufgboo#wkfpjwfnbsfmdojpktbz#wl##Bvdvpwpznalop@lnsbmznbwwfqpnvpj`bobdbjmpwpfqujmd~*+*8\\x0E\\tsbznfmwwqlvaof`lm`fsw`lnsbqfsbqfmwpsobzfqpqfdjlmpnlmjwlq#$$Wkf#tjmmjmdf{solqfbgbswfgDboofqzsqlgv`fbajojwzfmkbm`f`bqffqp*-#Wkf#`loof`wPfbq`k#bm`jfmwf{jpwfgellwfq#kbmgofqsqjmwfg`lmplofFbpwfqmf{slqwptjmgltp@kbmmfojoofdbomfvwqbopvddfpw\\\\kfbgfqpjdmjmd-kwno!=pfwwofgtfpwfqm`bvpjmd.tfahjw`objnfgIvpwj`f`kbswfquj`wjnpWklnbp#nlyjoobsqlnjpfsbqwjfpfgjwjlmlvwpjgf9ebopf/kvmgqfgLoznsj`\\\\avwwlmbvwklqpqfb`kfg`kqlmj`gfnbmgppf`lmgpsqlwf`wbglswfgsqfsbqfmfjwkfqdqfbwozdqfbwfqlufqboojnsqluf`lnnbmgpsf`jbopfbq`k-tlqpkjsevmgjmdwklvdkwkjdkfpwjmpwfbgvwjojwzrvbqwfq@vowvqfwfpwjmd`ofbqozf{slpfgAqltpfqojafqbo~#`bw`kSqlif`wf{bnsofkjgf+*8EolqjgbbmptfqpbooltfgFnsfqlqgfefmpfpfqjlvpeqffglnPfufqbo.avwwlmEvqwkfqlvw#le#\">#mvoowqbjmfgGfmnbqhuljg+3*,boo-ipsqfufmwQfrvfpwPwfskfm\\t\\tTkfm#lapfquf?,k1=\\x0E\\tNlgfqm#sqlujgf!#bow>!alqgfqp-\\t\\tElq#\\t\\tNbmz#bqwjpwpsltfqfgsfqelqnej`wjlmwzsf#lenfgj`bowj`hfwplsslpfg@lvm`jotjwmfppivpwj`fDflqdf#Afodjvn---?,b=wtjwwfqmlwbaoztbjwjmdtbqebqf#Lwkfq#qbmhjmdskqbpfpnfmwjlmpvqujufp`klobq?,s=\\x0E\\t#@lvmwqzjdmlqfgolpp#leivpw#bpDflqdjbpwqbmdf?kfbg=?pwlssfg2$^*8\\x0E\\tjpobmgpmlwbaofalqgfq9ojpw#le`bqqjfg233/333?,k0=\\t#pfufqboaf`lnfppfof`w#tfggjmd33-kwnonlmbq`klee#wkfwfb`kfqkjdkoz#ajloldzojef#lelq#fufmqjpf#le%qbrvl8sovplmfkvmwjmd+wklvdkGlvdobpiljmjmd`jq`ofpElq#wkfBm`jfmwUjfwmbnufkj`ofpv`k#bp`qzpwboubovf#>Tjmgltpfmilzfgb#pnboobppvnfg?b#jg>!elqfjdm#Boo#qjklt#wkfGjpsobzqfwjqfgkltfufqkjggfm8abwwofppffhjmd`bajmfwtbp#mlwollh#bw`lmgv`wdfw#wkfIbmvbqzkbssfmpwvqmjmdb9klufqLmojmf#Eqfm`k#ob`hjmdwzsj`bof{wqb`wfmfnjfpfufm#jedfmfqbwgf`jgfgbqf#mlw,pfbq`kafojfep.jnbdf9ol`bwfgpwbwj`-oldjm!=`lmufqwujlofmwfmwfqfgejqpw!=`jq`vjwEjmobmg`kfnjpwpkf#tbp23s{8!=bp#pv`kgjujgfg?,psbm=tjoo#afojmf#leb#dqfbwnzpwfqz,jmgf{-eboojmdgvf#wl#qbjotbz`loofdfnlmpwfqgfp`fmwjw#tjwkmv`ofbqIftjpk#sqlwfpwAqjwjpkeoltfqpsqfgj`wqfelqnpavwwlm#tkl#tbpof`wvqfjmpwbmwpvj`jgfdfmfqj`sfqjlgpnbqhfwpPl`jbo#ejpkjmd`lnajmfdqbskj`tjmmfqp?aq#,=?az#wkf#MbwvqboSqjub`z`llhjfplvw`lnfqfploufPtfgjpkaqjfeozSfqpjbmpl#nv`k@fmwvqzgfsj`wp`lovnmpklvpjmdp`qjswpmf{w#wlafbqjmdnbssjmdqfujpfgiRvfqz+.tjgwk9wjwof!=wllowjsPf`wjlmgfpjdmpWvqhjpkzlvmdfq-nbw`k+~*+*8\\t\\tavqmjmdlsfqbwfgfdqffpplvq`f>Qj`kbqg`olpfozsobpwj`fmwqjfp?,wq=\\x0E\\t`lolq9 vo#jg>!slppfppqloojmdskzpj`pebjojmdf{f`vwf`lmwfpwojmh#wlGfebvow?aq#,=\\t9#wqvf/`kbqwfqwlvqjpn`obppj`sql`ffgf{sobjm?,k2=\\x0E\\tlmojmf-<{no#ufkfosjmdgjbnlmgvpf#wkfbjqojmffmg#..=*-bwwq+qfbgfqpklpwjmd eeeeeeqfbojyfUjm`fmwpjdmbop#pq`>!,Sqlgv`wgfpsjwfgjufqpfwfoojmdSvaoj`#kfog#jmIlpfsk#wkfbwqfbeef`wp?pwzof=b#obqdfglfpm$wobwfq/#Fofnfmwebuj`lm`qfbwlqKvmdbqzBjqslqwpff#wkfpl#wkbwNj`kbfoPzpwfnpSqldqbnp/#bmg##tjgwk>f%rvlw8wqbgjmdofew!=\\tsfqplmpDlogfm#Beebjqpdqbnnbqelqnjmdgfpwqlzjgfb#le`bpf#lelogfpw#wkjp#jp-pq`#>#`bqwllmqfdjpwq@lnnlmpNvpojnpTkbw#jpjm#nbmznbqhjmdqfufbopJmgffg/frvbooz,pklt\\\\blvwgllqfp`bsf+Bvpwqjbdfmfwj`pzpwfn/Jm#wkf#pjwwjmdKf#boplJpobmgpB`bgfnz\\t\\n\\n?\"..Gbmjfo#ajmgjmdaol`h!=jnslpfgvwjojyfBaqbkbn+f{`fswxtjgwk9svwwjmd*-kwno+\\x7F\\x7F#X^8\\tGBWBX#)hjw`kfmnlvmwfgb`wvbo#gjbof`wnbjmoz#\\\\aobmh$jmpwboof{sfqwpje+wzsfJw#bopl%`lsz8#!=Wfqnpalqm#jmLswjlmpfbpwfqmwbohjmd`lm`fqmdbjmfg#lmdljmdivpwjez`qjwj`peb`wlqzjwp#ltmbppbvowjmujwfgobpwjmdkjp#ltmkqfe>!,!#qfo>!gfufols`lm`fqwgjbdqbngloobqp`ovpwfqsks<jg>bo`lklo*8~*+*8vpjmd#b=?psbm=ufppfopqfujuboBggqfppbnbwfvqbmgqljgboofdfgjoomfpptbohjmd`fmwfqprvbojeznbw`kfpvmjejfgf{wjm`wGfefmpfgjfg#jm\\t\\n?\"..#`vpwlnpojmhjmdOjwwof#Allh#lefufmjmdnjm-ip<bqf#wkfhlmwbhwwlgbz$p-kwno!#wbqdfw>tfbqjmdBoo#Qjd8\\t~*+*8qbjpjmd#Bopl/#`qv`jbobalvw!=gf`obqf..=\\t?p`ejqfel{bp#nv`kbssojfpjmgf{/#p/#avw#wzsf#>#\\t\\x0E\\t?\"..wltbqgpQf`lqgpSqjubwfElqfjdmSqfnjfq`klj`fpUjqwvboqfwvqmp@lnnfmwSltfqfgjmojmf8slufqwz`kbnafqOjujmd#ulovnfpBmwklmzoldjm!#QfobwfgF`lmlnzqfb`kfp`vwwjmddqbujwzojef#jm@kbswfq.pkbgltMlwbaof?,wg=\\x0E\\t#qfwvqmpwbgjvntjgdfwpubqzjmdwqbufopkfog#aztkl#bqftlqh#jmeb`vowzbmdvobqtkl#kbgbjqslqwwltm#le\\t\\tPlnf#$`oj`h$`kbqdfphfztlqgjw#tjoo`jwz#le+wkjp*8Bmgqft#vmjrvf#`kf`hfglq#nlqf033s{8#qfwvqm8qpjlm>!sovdjmptjwkjm#kfqpfoePwbwjlmEfgfqboufmwvqfsvaojpkpfmw#wlwfmpjlmb`wqfpp`lnf#wlejmdfqpGvhf#lesflsof/f{soljwtkbw#jpkbqnlmzb#nbilq!9!kwwsjm#kjp#nfmv!=\\tnlmwkozleej`fq`lvm`jodbjmjmdfufm#jmPvnnbqzgbwf#leolzbowzejwmfppbmg#tbpfnsfqlqpvsqfnfPf`lmg#kfbqjmdQvppjbmolmdfpwBoafqwbobwfqbopfw#le#pnboo!=-bssfmggl#tjwkefgfqboabmh#leafmfbwkGfpsjwf@bsjwbodqlvmgp*/#bmg#sfq`fmwjw#eqln`olpjmd`lmwbjmJmpwfbgejewffmbp#tfoo-zbkll-qfpslmgejdkwfqlap`vqfqfeof`wlqdbmj`>#Nbwk-fgjwjmdlmojmf#sbggjmdb#tkloflmfqqlqzfbq#lefmg#le#abqqjfqtkfm#jwkfbgfq#klnf#leqfpvnfgqfmbnfgpwqlmd=kfbwjmdqfwbjmp`olvgeqtbz#le#Nbq`k#2hmltjmdjm#sbqwAfwtffmofpplmp`olpfpwujqwvboojmhp!=`qlppfgFMG#..=ebnlvp#btbqgfgOj`fmpfKfbowk#ebjqoz#tfbowkznjmjnboBeqj`bm`lnsfwfobafo!=pjmdjmdebqnfqpAqbpjo*gjp`vppqfsob`fDqfdlqzelmw#`lsvqpvfgbssfbqpnbhf#vsqlvmgfgalwk#leaol`hfgpbt#wkfleej`fp`lolvqpje+gl`vtkfm#kffmelq`fsvpk+evBvdvpw#VWE.;!=Ebmwbpzjm#nlpwjmivqfgVpvboozebqnjmd`olpvqflaif`w#gfefm`fvpf#le#Nfgj`bo?algz=\\tfujgfmwaf#vpfghfz@lgfpj{wffmJpobnj` 333333fmwjqf#tjgfoz#b`wjuf#+wzsflelmf#`bm`lolq#>psfbhfqf{wfmgpSkzpj`pwfqqbjm?walgz=evmfqboujftjmdnjggof#`qj`hfwsqlskfwpkjewfggl`wlqpQvppfoo#wbqdfw`lnsb`wbodfaqbpl`jbo.avoh#lenbm#bmg?,wg=\\t#kf#ofew*-ubo+*ebopf*8oldj`boabmhjmdklnf#wlmbnjmd#Bqjylmb`qfgjwp*8\\t~*8\\telvmgfqjm#wvqm@loojmpafelqf#Avw#wkf`kbqdfgWjwof!=@bswbjmpsfoofgdlggfppWbd#..=Bggjmd9avw#tbpQf`fmw#sbwjfmwab`h#jm>ebopf%Ojm`lomtf#hmlt@lvmwfqIvgbjpnp`qjsw#bowfqfg$^*8\\t##kbp#wkfvm`ofbqFufmw$/alwk#jmmlw#boo\\t\\t?\"..#sob`jmdkbqg#wl#`fmwfqplqw#le`ojfmwppwqffwpAfqmbqgbppfqwpwfmg#wlebmwbpzgltm#jmkbqalvqEqffglniftfoqz,balvw--pfbq`kofdfmgpjp#nbgfnlgfqm#lmoz#lmlmoz#wljnbdf!#ojmfbq#sbjmwfqbmg#mlwqbqfoz#b`qlmzngfojufqpklqwfq33%bns8bp#nbmztjgwk>!,)#?\"X@wjwof#>le#wkf#oltfpw#sj`hfg#fp`bsfgvpfp#lesflsofp#Svaoj`Nbwwkftwb`wj`pgbnbdfgtbz#elqobtp#lefbpz#wl#tjmgltpwqlmd##pjnsof~`bw`k+pfufmwkjmelal{tfmw#wlsbjmwfg`jwjyfmJ#glm$wqfwqfbw-#Plnf#tt-!*8\\talnajmdnbjowl9nbgf#jm-#Nbmz#`bqqjfp\\x7F\\x7Fx~8tjtlqh#lepzmlmzngfefbwpebulqfglswj`bosbdfWqbvmofpp#pfmgjmdofew!=?`lnP`lqBoo#wkfiRvfqz-wlvqjpw@obppj`ebopf!#Tjokfonpvavqapdfmvjmfajpklsp-psojw+dolabo#elooltpalgz#lemlnjmbo@lmwb`wpf`vobqofew#wl`kjfeoz.kjggfm.abmmfq?,oj=\\t\\t-#Tkfm#jm#alwkgjpnjppF{solqfbotbzp#ujb#wkfpsb/]lotfoebqfqvojmd#bqqbmdf`bswbjmkjp#plmqvof#lekf#wllhjwpfoe/>3%bns8+`boofgpbnsofpwl#nbhf`ln,sbdNbqwjm#Hfmmfgzb``fswpevoo#lekbmgofgAfpjgfp,,..=?,baof#wlwbqdfwpfppfm`fkjn#wl#jwp#az#`lnnlm-njmfqbowl#wbhftbzp#wlp-lqd,obgujpfgsfmbowzpjnsof9je#wkfzOfwwfqpb#pklqwKfqafqwpwqjhfp#dqlvsp-ofmdwkeojdkwplufqobspoltoz#ofppfq#pl`jbo#?,s=\\t\\n\\njw#jmwlqbmhfg#qbwf#levo=\\x0E\\t##bwwfnswsbjq#lenbhf#jwHlmwbhwBmwlmjlkbujmd#qbwjmdp#b`wjufpwqfbnpwqbssfg!*-`pp+klpwjofofbg#wlojwwof#dqlvsp/Sj`wvqf..=\\x0E\\t\\x0E\\t#qltp>!#laif`wjmufqpf?ellwfq@vpwlnU=?_,p`qploujmd@kbnafqpobufqztlvmgfgtkfqfbp\">#$vmgelq#boosbqwoz#.qjdkw9Bqbajbmab`hfg#`fmwvqzvmjw#lenlajof.Fvqlsf/jp#klnfqjph#legfpjqfg@ojmwlm`lpw#lebdf#le#af`lnf#mlmf#les%rvlw8Njggof#fbg$*X3@qjwj`ppwvgjlp=%`lsz8dqlvs!=bppfnaonbhjmd#sqfppfgtjgdfw-sp9!#<#qfavjowaz#plnfElqnfq#fgjwlqpgfobzfg@bmlmj`kbg#wkfsvpkjmd`obpp>!avw#bqfsbqwjboAbazolmalwwln#`bqqjfq@lnnbmgjwp#vpfBp#tjwk`lvqpfpb#wkjqggfmlwfpbopl#jmKlvpwlm13s{8!=b``vpfgglvaof#dlbo#leEbnlvp#*-ajmg+sqjfpwp#Lmojmfjm#Ivozpw#(#!d`lmpvowgf`jnbokfosevoqfujufgjp#ufqzq$($jswolpjmd#efnbofpjp#boplpwqjmdpgbzp#lebqqjuboevwvqf#?laif`welq`jmdPwqjmd+!#,=\\t\\n\\nkfqf#jpfm`lgfg-##Wkf#aboollmglmf#az,`lnnlmad`lolqobt#le#Jmgjbmbbuljgfgavw#wkf1s{#0s{irvfqz-bewfq#bsloj`z-nfm#bmgellwfq.>#wqvf8elq#vpfp`qffm-Jmgjbm#jnbdf#>ebnjoz/kwws9,,#%maps8gqjufqpfwfqmbopbnf#bpmlwj`fgujftfqp~*+*8\\t#jp#nlqfpfbplmpelqnfq#wkf#mftjp#ivpw`lmpfmw#Pfbq`ktbp#wkftkz#wkfpkjssfgaq=?aq=tjgwk9#kfjdkw>nbgf#le`vjpjmfjp#wkbwb#ufqz#Bgnjqbo#ej{fg8mlqnbo#NjppjlmSqfpp/#lmwbqjl`kbqpfwwqz#wl#jmubgfg>!wqvf!psb`jmdjp#nlpwb#nlqf#wlwboozeboo#le~*8\\x0E\\t##jnnfmpfwjnf#jmpfw#lvwpbwjpezwl#ejmggltm#wlolw#le#Sobzfqpjm#Ivmfrvbmwvnmlw#wkfwjnf#wlgjpwbmwEjmmjpkpq`#>#+pjmdof#kfos#leDfqnbm#obt#bmgobafofgelqfpwp`llhjmdpsb`f!=kfbgfq.tfoo#bpPwbmofzaqjgdfp,dolabo@qlbwjb#Balvw#X3^8\\t##jw/#bmgdqlvsfgafjmd#b*xwkqltkf#nbgfojdkwfqfwkj`boEEEEEE!alwwln!ojhf#b#fnsolzpojuf#jmbp#pffmsqjmwfqnlpw#leva.ojmhqfif`wpbmg#vpfjnbdf!=pv``ffgeffgjmdMv`ofbqjmelqnbwl#kfosTlnfm$pMfjwkfqNf{j`bmsqlwfjm?wbaof#az#nbmzkfbowkzobtpvjwgfujpfg-svpk+xpfoofqppjnsoz#Wkqlvdk-`llhjf#Jnbdf+logfq!=vp-ip!=#Pjm`f#vmjufqpobqdfq#lsfm#wl\"..#fmgojfp#jm$^*8\\x0E\\t##nbqhfwtkl#jp#+!GLN@lnbmbdfglmf#elqwzsfle#Hjmdglnsqlejwpsqlslpfwl#pklt`fmwfq8nbgf#jwgqfppfgtfqf#jmnj{wvqfsqf`jpfbqjpjmdpq`#>#$nbhf#b#pf`vqfgAbswjpwulwjmd#\\t\\n\\nubq#Nbq`k#1dqft#vs@ojnbwf-qfnlufphjoofgtbz#wkf?,kfbg=eb`f#leb`wjmd#qjdkw!=wl#tlqhqfgv`fpkbp#kbgfqf`wfgpklt+*8b`wjlm>allh#lebm#bqfb>>#!kww?kfbgfq\\t?kwno=`lmelqneb`jmd#`llhjf-qfoz#lmklpwfg#-`vpwlnkf#tfmwavw#elqpsqfbg#Ebnjoz#b#nfbmplvw#wkfelqvnp-ellwbdf!=Nlajo@ofnfmwp!#jg>!bp#kjdkjmwfmpf..=?\"..efnbof#jp#pffmjnsojfgpfw#wkfb#pwbwfbmg#kjpebpwfpwafpjgfpavwwlm\\\\alvmgfg!=?jnd#Jmelal{fufmwp/b#zlvmdbmg#bqfMbwjuf#`kfbsfqWjnflvwbmg#kbpfmdjmfptlm#wkf+nlpwozqjdkw9#ejmg#b#.alwwlnSqjm`f#bqfb#lenlqf#lepfbq`k\\\\mbwvqf/ofdboozsfqjlg/obmg#lelq#tjwkjmgv`fgsqlujmdnjppjofol`boozBdbjmpwwkf#tbzh%rvlw8s{8!=\\x0E\\tsvpkfg#babmglmmvnfqbo@fqwbjmJm#wkjpnlqf#jmlq#plnfmbnf#jpbmg/#jm`qltmfgJPAM#3.`qfbwfpL`wlafqnbz#mlw`fmwfq#obwf#jmGfefm`ffmb`wfgtjpk#wlaqlbgoz`llojmdlmolbg>jw-#Wkfqf`lufqNfnafqpkfjdkw#bppvnfp?kwno=\\tsflsof-jm#lmf#>tjmgltellwfq\\\\b#dllg#qfhobnblwkfqp/wl#wkjp\\\\`llhjfsbmfo!=Olmglm/gfejmfp`qvpkfgabswjpn`lbpwbopwbwvp#wjwof!#nluf#wlolpw#jmafwwfq#jnsojfpqjuboqzpfqufqp#PzpwfnSfqkbspfp#bmg#`lmwfmgeoltjmdobpwfg#qjpf#jmDfmfpjpujft#leqjpjmd#pffn#wlavw#jm#ab`hjmdkf#tjoodjufm#bdjujmd#`jwjfp-eolt#le#Obwfq#boo#avwKjdktbzlmoz#azpjdm#lekf#glfpgjeefqpabwwfqz%bns8obpjmdofpwkqfbwpjmwfdfqwbhf#lmqfevpfg`boofg#>VP%bnsPff#wkfmbwjufpaz#wkjppzpwfn-kfbg#le9klufq/ofpajbmpvqmbnfbmg#boo`lnnlm,kfbgfq\\\\\\\\sbqbnpKbqubqg,sj{fo-qfnlubopl#olmdqlof#leiljmwozphzp`qbVmj`lgfaq#,=\\x0E\\tBwobmwbmv`ofvp@lvmwz/svqfoz#`lvmw!=fbpjoz#avjog#blm`oj`hb#djufmsljmwfqk%rvlw8fufmwp#fopf#x\\tgjwjlmpmlt#wkf/#tjwk#nbm#tkllqd,Tfalmf#bmg`buboqzKf#gjfgpfbwwof33/333#xtjmgltkbuf#wlje+tjmgbmg#jwpplofoz#n%rvlw8qfmftfgGfwqljwbnlmdpwfjwkfq#wkfn#jmPfmbwlqVp?,b=?Hjmd#leEqbm`jp.sqlgv`kf#vpfgbqw#bmgkjn#bmgvpfg#azp`lqjmdbw#klnfwl#kbufqfobwfpjajojwzeb`wjlmAveebolojmh!=?tkbw#kfeqff#wl@jwz#le`lnf#jmpf`wlqp`lvmwfglmf#gbzmfqulvpprvbqf#~8je+dljm#tkbwjnd!#bojp#lmozpfbq`k,wvfpgbzollpfozPlolnlmpf{vbo#.#?b#kqnfgjvn!GL#MLW#Eqbm`f/tjwk#b#tbq#bmgpf`lmg#wbhf#b#=\\x0E\\t\\x0E\\t\\x0E\\tnbqhfw-kjdktbzglmf#jm`wjujwz!obpw!=laojdfgqjpf#wl!vmgfejnbgf#wl#Fbqoz#sqbjpfgjm#jwp#elq#kjpbwkofwfIvsjwfqZbkll\"#wfqnfg#pl#nbmzqfbooz#p-#Wkf#b#tlnbm<ubovf>gjqf`w#qjdkw!#aj`z`ofb`jmd>!gbz#bmgpwbwjmdQbwkfq/kjdkfq#Leej`f#bqf#mltwjnfp/#tkfm#b#sbz#elqlm#wkjp.ojmh!=8alqgfqbqlvmg#bmmvbo#wkf#Mftsvw#wkf-`ln!#wbhjm#wlb#aqjfe+jm#wkfdqlvsp-8#tjgwkfmyznfppjnsof#jm#obwfxqfwvqmwkfqbszb#sljmwabmmjmdjmhp!=\\t+*8!#qfb#sob`f_v330@bbalvw#bwq=\\x0E\\t\\n\\n``lvmw#djufp#b?P@QJSWQbjotbzwkfnfp,wlloal{AzJg+!{kvnbmp/tbw`kfpjm#plnf#je#+tj`lnjmd#elqnbwp#Vmgfq#avw#kbpkbmgfg#nbgf#azwkbm#jmefbq#legfmlwfg,jeqbnfofew#jmulowbdfjm#fb`kb%rvlw8abpf#leJm#nbmzvmgfqdlqfdjnfpb`wjlm#?,s=\\x0E\\t?vpwlnUb8%dw8?,jnslqwplq#wkbwnlpwoz#%bns8qf#pjyf>!?,b=?,kb#`obppsbppjufKlpw#>#TkfwkfqefqwjofUbqjlvp>X^8+ev`bnfqbp,=?,wg=b`wp#bpJm#plnf=\\x0E\\t\\x0E\\t?\"lqdbmjp#?aq#,=Afjijmd`bwbo/Lgfvwp`kfvqlsfvfvphbqbdbfjodfpufmphbfpsb/]bnfmpbifvpvbqjlwqbabiln/E{j`ls/Mdjmbpjfnsqfpjpwfnbl`wvaqfgvqbmwfb/]bgjqfnsqfpbnlnfmwlmvfpwqlsqjnfqbwqbu/Epdqb`jbpmvfpwqbsql`fplfpwbglp`bojgbgsfqplmbm/Vnfqlb`vfqgln/Vpj`bnjfnaqllefqwbpbodvmlpsb/Apfpfifnsolgfqf`klbgfn/Mpsqjubglbdqfdbqfmob`fpslpjaofklwfofppfujoobsqjnfql/Vowjnlfufmwlpbq`kjul`vowvqbnvifqfpfmwqbgbbmvm`jlfnabqdlnfq`bgldqbmgfpfpwvgjlnfilqfpefaqfqlgjpf/]lwvqjpnl`/_gjdlslqwbgbfpsb`jlebnjojbbmwlmjlsfqnjwfdvbqgbqbodvmbpsqf`jlpbodvjfmpfmwjglujpjwbpw/Awvol`lml`fqpfdvmgl`lmpfileqbm`jbnjmvwlppfdvmgbwfmfnlpfef`wlpn/Mobdbpfpj/_mqfujpwbdqbmbgb`lnsqbqjmdqfpldbq`/Abb``j/_mf`vbglqrvjfmfpjm`ovplgfafq/Mnbwfqjbklnaqfpnvfpwqbslgq/Abnb/]bmb/Vowjnbfpwbnlplej`jbowbnajfmmjmd/Vmpbovglpslgfnlpnfilqbqslpjwjlmavpjmfppklnfsbdfpf`vqjwzobmdvbdfpwbmgbqg`bnsbjdmefbwvqfp`bwfdlqzf{wfqmbo`kjogqfmqfpfqufgqfpfbq`kf{`kbmdfebulqjwfwfnsobwfnjojwbqzjmgvpwqzpfquj`fpnbwfqjbosqlgv`wpy.jmgf{9`lnnfmwpplewtbqf`lnsofwf`bofmgbqsobwelqnbqwj`ofpqfrvjqfgnlufnfmwrvfpwjlmavjogjmdslojwj`pslppjaofqfojdjlmskzpj`boeffgab`hqfdjpwfqsj`wvqfpgjpbaofgsqlwl`lobvgjfm`fpfwwjmdpb`wjujwzfofnfmwpofbqmjmdbmzwkjmdbapwqb`wsqldqfpplufqujftnbdbyjmff`lmlnj`wqbjmjmdsqfppvqfubqjlvp#?pwqlmd=sqlsfqwzpklssjmdwldfwkfqbgubm`fgafkbujlqgltmolbgefbwvqfgellwaboopfof`wfgObmdvbdfgjpwbm`fqfnfnafqwqb`hjmdsbpptlqgnlgjejfgpwvgfmwpgjqf`wozejdkwjmdmlqwkfqmgbwbabpfefpwjuboaqfbhjmdol`bwjlmjmwfqmfwgqlsgltmsqb`wj`ffujgfm`fevm`wjlmnbqqjbdfqfpslmpfsqlaofnpmfdbwjufsqldqbnpbmbozpjpqfofbpfgabmmfq!=svq`kbpfsloj`jfpqfdjlmbo`qfbwjufbqdvnfmwallhnbqhqfefqqfq`kfnj`bogjujpjlm`booab`hpfsbqbwfsqlif`wp`lmeoj`wkbqgtbqfjmwfqfpwgfojufqznlvmwbjmlawbjmfg>#ebopf8elq+ubq#b``fswfg`bsb`jwz`lnsvwfqjgfmwjwzbjq`qbewfnsolzfgsqlslpfgglnfpwj`jm`ovgfpsqlujgfgklpsjwboufqwj`bo`loobspfbssqlb`ksbqwmfqpoldl!=?bgbvdkwfqbvwklq!#`vowvqboebnjojfp,jnbdfp,bppfnaozsltfqevowfb`kjmdejmjpkfggjpwqj`w`qjwj`bo`dj.ajm,svqslpfpqfrvjqfpfof`wjlmaf`lnjmdsqlujgfpb`bgfnj`f{fq`jpfb`wvbooznfgj`jmf`lmpwbmwb``jgfmwNbdbyjmfgl`vnfmwpwbqwjmdalwwln!=lapfqufg9#%rvlw8f{wfmgfgsqfujlvpPlewtbqf`vpwlnfqgf`jpjlmpwqfmdwkgfwbjofgpojdkwozsobmmjmdwf{wbqfb`vqqfm`zfufqzlmfpwqbjdkwwqbmpefqslpjwjufsqlgv`fgkfqjwbdfpkjssjmdbaplovwfqf`fjufgqfofubmwavwwlm!#ujlofm`fbmztkfqfafmfejwpobvm`kfgqf`fmwozboojbm`felooltfgnvowjsofavoofwjmjm`ovgfgl``vqqfgjmwfqmbo\\'+wkjp*-qfsvaoj`=?wq=?wg`lmdqfppqf`lqgfgvowjnbwfplovwjlm?vo#jg>!gjp`lufqKlnf?,b=tfapjwfpmfwtlqhpbowklvdkfmwjqfoznfnlqjbonfppbdfp`lmwjmvfb`wjuf!=plnftkbwuj`wlqjbTfpwfqm##wjwof>!Ol`bwjlm`lmwqb`wujpjwlqpGltmolbgtjwklvw#qjdkw!=\\tnfbpvqfptjgwk#>#ubqjbaofjmuloufgujqdjmjbmlqnboozkbssfmfgb``lvmwppwbmgjmdmbwjlmboQfdjpwfqsqfsbqfg`lmwqlopb``vqbwfajqwkgbzpwqbwfdzleej`jbodqbskj`p`qjnjmboslppjaoz`lmpvnfqSfqplmbopsfbhjmdubojgbwfb`kjfufg-isd!#,=nb`kjmfp?,k1=\\t##hfztlqgpeqjfmgozaqlwkfqp`lnajmfglqjdjmbo`lnslpfgf{sf`wfgbgfrvbwfsbhjpwbmeloolt!#ubovbaof?,obafo=qfobwjufaqjmdjmdjm`qfbpfdlufqmlqsovdjmp,Ojpw#le#Kfbgfq!=!#mbnf>!#+%rvlw8dqbgvbwf?,kfbg=\\t`lnnfq`fnbobzpjbgjqf`wlqnbjmwbjm8kfjdkw9p`kfgvof`kbmdjmdab`h#wl#`bwkloj`sbwwfqmp`lolq9# dqfbwfpwpvssojfpqfojbaof?,vo=\\t\\n\\n?pfof`w#`jwjyfmp`olwkjmdtbw`kjmd?oj#jg>!psf`jej``bqqzjmdpfmwfm`f?`fmwfq=`lmwqbpwwkjmhjmd`bw`k+f*plvwkfqmNj`kbfo#nfq`kbmw`bqlvpfosbggjmd9jmwfqjlq-psojw+!ojybwjlmL`wlafq#*xqfwvqmjnsqlufg..%dw8\\t\\t`lufqbdf`kbjqnbm-smd!#,=pvaif`wpQj`kbqg#tkbwfufqsqlabaozqf`lufqzabpfabooivgdnfmw`lmmf`w--`pp!#,=#tfapjwfqfslqwfggfebvow!,=?,b=\\x0E\\tfof`wqj`p`lwobmg`qfbwjlmrvbmwjwz-#JPAM#3gjg#mlw#jmpwbm`f.pfbq`k.!#obmd>!psfbhfqp@lnsvwfq`lmwbjmpbq`kjufpnjmjpwfqqfb`wjlmgjp`lvmwJwbojbml`qjwfqjbpwqlmdoz9#$kwws9$p`qjsw$`lufqjmdleefqjmdbssfbqfgAqjwjpk#jgfmwjezEb`fallhmvnfqlvpufkj`ofp`lm`fqmpBnfqj`bmkbmgojmdgju#jg>!Tjoojbn#sqlujgfq\\\\`lmwfmwb``vqb`zpf`wjlm#bmgfqplmeof{jaof@bwfdlqzobtqfm`f?p`qjsw=obzlvw>!bssqlufg#nb{jnvnkfbgfq!=?,wbaof=Pfquj`fpkbnjowlm`vqqfmw#`bmbgjbm`kbmmfop,wkfnfp,,bqwj`oflswjlmboslqwvdboubovf>!!jmwfqubotjqfofppfmwjwofgbdfm`jfpPfbq`k!#nfbpvqfgwklvpbmgpsfmgjmd%kfoojs8mft#Gbwf!#pjyf>!sbdfMbnfnjggof!#!#,=?,b=kjggfm!=pfrvfm`fsfqplmbolufqeoltlsjmjlmpjoojmljpojmhp!=\\t\\n?wjwof=ufqpjlmppbwvqgbzwfqnjmbojwfnsqlsfmdjmffqpf`wjlmpgfpjdmfqsqlslpbo>!ebopf!Fpsb/]loqfofbpfppvanjw!#fq%rvlw8bggjwjlmpznswlnplqjfmwfgqfplvq`fqjdkw!=?sofbpvqfpwbwjlmpkjpwlqz-ofbujmd##alqgfq>`lmwfmwp`fmwfq!=-\\t\\tPlnf#gjqf`wfgpvjwbaofavodbqjb-pklt+*8gfpjdmfgDfmfqbo#`lm`fswpF{bnsofptjoojbnpLqjdjmbo!=?psbm=pfbq`k!=lsfqbwlqqfrvfpwpb#%rvlw8booltjmdGl`vnfmwqfujpjlm-#\\t\\tWkf#zlvqpfoe@lmwb`w#nj`kjdbmFmdojpk#`lovnajbsqjlqjwzsqjmwjmdgqjmhjmdeb`jojwzqfwvqmfg@lmwfmw#leej`fqpQvppjbm#dfmfqbwf.;;6:.2!jmgj`bwfebnjojbq#rvbojwznbqdjm93#`lmwfmwujftslqw`lmwb`wp.wjwof!=slqwbaof-ofmdwk#fojdjaofjmuloufpbwobmwj`lmolbg>!gfebvow-pvssojfgsbznfmwpdolppbqz\\t\\tBewfq#dvjgbm`f?,wg=?wgfm`lgjmdnjggof!=`bnf#wl#gjpsobzpp`lwwjpkilmbwkbmnbilqjwztjgdfwp-`ojmj`bowkbjobmgwfb`kfqp?kfbg=\\t\\nbeef`wfgpvsslqwpsljmwfq8wlPwqjmd?,pnboo=lhobklnbtjoo#af#jmufpwlq3!#bow>!klojgbzpQfplvq`foj`fmpfg#+tkj`k#-#Bewfq#`lmpjgfqujpjwjmdf{solqfqsqjnbqz#pfbq`k!#bmgqljg!rvj`hoz#nffwjmdpfpwjnbwf8qfwvqm#8`lolq9 #kfjdkw>bssqlubo/#%rvlw8#`kf`hfg-njm-ip!nbdmfwj`=?,b=?,kelqf`bpw-#Tkjof#wkvqpgbzgufqwjpf%fb`vwf8kbp@obppfubovbwflqgfqjmdf{jpwjmdsbwjfmwp#Lmojmf#`lolqbglLswjlmp!`bnsafoo?\"..#fmg?,psbm=??aq#,=\\x0E\\t\\\\slsvsp\\x7Fp`jfm`fp/%rvlw8#rvbojwz#Tjmgltp#bppjdmfgkfjdkw9#?a#`obppof%rvlw8#ubovf>!#@lnsbmzf{bnsofp?jeqbnf#afojfufpsqfpfmwpnbqpkboosbqw#le#sqlsfqoz*-\\t\\tWkf#wb{lmlnznv`k#le#?,psbm=\\t!#gbwb.pqwvdv/Fpp`qlooWl#sqlif`w?kfbg=\\x0E\\tbwwlqmfzfnskbpjppslmplqpebm`zal{tlqog$p#tjogojef`kf`hfg>pfppjlmpsqldqbnns{8elmw.#Sqlif`wilvqmbopafojfufgub`bwjlmwklnsplmojdkwjmdbmg#wkf#psf`jbo#alqgfq>3`kf`hjmd?,walgz=?avwwlm#@lnsofwf`ofbqej{\\t?kfbg=\\tbqwj`of#?pf`wjlmejmgjmdpqlof#jm#slsvobq##L`wlafqtfapjwf#f{slpvqfvpfg#wl##`kbmdfplsfqbwfg`oj`hjmdfmwfqjmd`lnnbmgpjmelqnfg#mvnafqp##?,gju=`qfbwjmdlmPvanjwnbqzobmg`loofdfpbmbozwj`ojpwjmdp`lmwb`w-olddfgJmbgujplqzpjaojmdp`lmwfmw!p%rvlw8*p-#Wkjp#sb`hbdfp`kf`hal{pvddfpwpsqfdmbmwwlnlqqltpsb`jmd>j`lm-smdibsbmfpf`lgfabpfavwwlm!=dbnaojmdpv`k#bp#/#tkjof#?,psbm=#njpplvqjpslqwjmdwls92s{#-?,psbm=wfmpjlmptjgwk>!1obyzolbgmlufnafqvpfg#jm#kfjdkw>!`qjsw!=\\t%maps8?,?wq=?wg#kfjdkw91,sqlgv`w`lvmwqz#jm`ovgf#ellwfq!#%ow8\"..#wjwof!=?,irvfqz-?,elqn=\\t+\\x0BBl\\bQ\\x7F*+\\x0BUm\\x05Gx*kqubwphjjwbojbmlqln/Nm(ow/Pqh/Kf4K4]4C5dwbnaj/Emmlwj`jbpnfmpbifpsfqplmbpgfqf`klpmb`jlmbopfquj`jl`lmwb`wlvpvbqjlpsqldqbnbdlajfqmlfnsqfpbpbmvm`jlpubofm`jb`lolnajbgfpsv/Epgfslqwfpsqlzf`wlsqlgv`wls/Vaoj`lmlplwqlpkjpwlqjbsqfpfmwfnjoolmfpnfgjbmwfsqfdvmwbbmwfqjlqqf`vqplpsqlaofnbpbmwjbdlmvfpwqlplsjmj/_mjnsqjnjqnjfmwqbpbn/Eqj`bufmgfglqpl`jfgbgqfpsf`wlqfbojybqqfdjpwqlsbobaqbpjmwfq/Epfmwlm`fpfpsf`jbonjfnaqlpqfbojgbg`/_qglabybqbdlybs/Mdjmbppl`jbofpaolrvfbqdfpwj/_mborvjofqpjpwfnbp`jfm`jbp`lnsofwlufqpj/_m`lnsofwbfpwvgjlps/Vaoj`blaifwjulboj`bmwfavp`bglq`bmwjgbgfmwqbgbpb``jlmfpbq`kjulppvsfqjlqnbzlq/Abbofnbmjbevm`j/_m/Vowjnlpkb`jfmglbrvfoolpfgj`j/_mefqmbmglbnajfmwfeb`fallhmvfpwqbp`ojfmwfpsql`fplpabpwbmwfsqfpfmwbqfslqwbq`lmdqfplsvaoj`bq`lnfq`jl`lmwqbwli/_ufmfpgjpwqjwlw/E`mj`b`lmivmwlfmfqd/Abwqbabibqbpwvqjbpqf`jfmwfvwjojybqalofw/Ampboubglq`lqqf`wbwqbabilpsqjnfqlpmfdl`jlpojafqwbggfwboofpsbmwboobsq/_{jnlbonfq/Abbmjnbofprvj/Emfp`lqby/_mpf``j/_mavp`bmglls`jlmfpf{wfqjlq`lm`fswlwlgbu/Abdbofq/Abfp`qjajqnfgj`jmboj`fm`jb`lmpvowbbpsf`wlp`q/Awj`bg/_obqfpivpwj`jbgfafq/Mmsfq/Alglmf`fpjwbnbmwfmfqsfrvf/]lqf`jajgbwqjavmbowfmfqjef`bm`j/_m`bmbqjbpgfp`bqdbgjufqplpnboolq`bqfrvjfqfw/E`mj`lgfafq/Abujujfmgbejmbmybpbgfobmwfevm`jlmb`lmpfilpgje/A`jo`jvgbgfpbmwjdvbpbubmybgbw/Eqnjmlvmjgbgfpp/Mm`kfy`bnsb/]bplewlmj`qfujpwbp`lmwjfmfpf`wlqfpnlnfmwlpeb`vowbg`q/Egjwlgjufqpbppvsvfpwleb`wlqfppfdvmglpsfrvf/]b<_<R<X<\\\\<Y=m<W<T<Y=m=n=`<]=g<W<R<]=g=n=`=a=n<R<P<y=m<W<T=n<R<_<R<P<Y<Q=c<^=m<Y=i=a=n<R<U<X<\\\\<Z<Y<]=g<W<T<_<R<X=o<X<Y<Q=`=a=n<R=n<]=g<W<\\\\=m<Y<]=c<R<X<T<Q=m<Y<]<Y<Q<\\\\<X<R=m<\\\\<U=n=h<R=n<R<Q<Y<_<R=m<^<R<T=m<^<R<U<T<_=l=g=n<R<Z<Y<^=m<Y<P=m<^<R=b<W<T=d=`=a=n<T=i<S<R<V<\\\\<X<Q<Y<U<X<R<P<\\\\<P<T=l<\\\\<W<T<]<R=n<Y<P=o=i<R=n=c<X<^=o=i=m<Y=n<T<W=b<X<T<X<Y<W<R<P<T=l<Y=n<Y<]=c=m<^<R<Y<^<T<X<Y=k<Y<_<R=a=n<T<P=m=k<Y=n=n<Y<P=g=j<Y<Q=g=m=n<\\\\<W<^<Y<X=`=n<Y<P<Y<^<R<X=g=n<Y<]<Y<^=g=d<Y<Q<\\\\<P<T=n<T<S<\\\\=n<R<P=o<S=l<\\\\<^<W<T=j<\\\\<R<X<Q<\\\\<_<R<X=g<[<Q<\\\\=b<P<R<_=o<X=l=o<_<^=m<Y<U<T<X<Y=n<V<T<Q<R<R<X<Q<R<X<Y<W<\\\\<X<Y<W<Y=m=l<R<V<T=b<Q=c<^<Y=m=`<y=m=n=`=l<\\\\<[<\\\\<Q<\\\\=d<T4K5h5h5k4K5h4F5f4@5i5f4U4B4K4Y4E4K5h4\\\\5f4U5h5f5k4@4C5f4C4K5h4N5j4K5h4]4C4F4A5o5i4Y5m4A4E5o4K5j4F4K5h5h5f5f5o5d5j4X4D5o4E5m5f5k4K4D5j4K4F4A5d4K4M4O5o4G4]4B5h4K5h4K5h4A4D4C5h5f5h4C4]5d4_4K4Z4V4[4F5o5d5j5k5j4K5o4_4K4A4E5j4K4C5f4K5h4[4D4U5h5f5o4X5o4]4K5f5i5o5j5i5j5k4K4X4]5o4E4]4J5f4_5j4X5f4[5i4K4\\\\4K4K5h5m5j4X4D4K4D4F4U4D4]4]4A5i4E5o4K5m4E5f5n5d5h5i4]5o4^5o5h5i4E4O4A5i4C5n5h4D5f5f4U5j5f4Y5d4]4E4[4]5f5n4X4K4]5o4@5d4K5h4O4B4]5e5i4U5j4K4K4D4A4G4U4]5d4Z4D4X5o5h5i4_4@5h4D5j4K5j4B4K5h4C5o4F4K4D5o5h5f4E4D4C5d5j4O5f4Z4K5f5d4@4C5m4]5f5n5o4F4D4F4O5m4Z5h5i4[4D4B4K5o4G4]4D4K4]5o4K5m4Z5h4K4A5h5e5j5m4_5k4O5f4K5i4]4C5d4C4O5j5k4K4C5f5j4K4K5h4K5j5i4U4]4Z4F4U5h5i4C4K4B5h5i5i5o5j\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x02\\x03\\x02\\x03\\x02\\x03\\x02\\x03\\x01\\x03\\x01\\x03\\x01\\x03\\x01\\x03\\x07\\x03\\x07\\x03\\x07\\x03\\x07\\x03\\x03\\x02\\x01\\0\\x07\\x06\\x05\\x04\\x04\\x05\\x06\\x07\\0\\x01\\x02\\x03\\x0B\\n\\t\\b\\x0F\\x0E\\r\\f\\f\\r\\x0E\\x0F\\b\\t\\n\\x0B\\x13\\x12\\x11\\x10\\x17\\x16\\x15\\x14\\x14\\x15\\x16\\x17\\x10\\x11\\x12\\x13\\x1B\\x1A\\x19\\x18\\x1F\\x1E\\x1D\\x1C\\x1C\\x1D\\x1E\\x1F\\x18\\x19\\x1A\\x1B\\x13\\x13\\x13\\x13\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x13\\x13\\x13\\x13\\x02\\x03\\x03\\x03\\x01\\x03\\x03\\x03\\x01\\x03\\x03\\x03\\x02\\x03\\x03\\x03\\x02\\x03\\x03\\x03\\0\\x03\\x03\\x03\\x13\\x13\\x03\\x02\\x03\\x03\\x03\\x02\\x03\\x03\\x13\\x13\\x03\\x02\\x03\\x03\\x03\\x0B\\x03\\x0B\\x03\\x0B\\x03\\x0B\\x03\\x03\\x03\\x02\\x03\\x01\\x03\\0\\x03\\x07\\x03\\x06\\x03\\x05\\x03\\x04qfplvq`fp`lvmwqjfprvfpwjlmpfrvjsnfmw`lnnvmjwzbubjobaofkjdkojdkwGWG,{kwnonbqhfwjmdhmltofgdfplnfwkjmd`lmwbjmfqgjqf`wjlmpvap`qjafbgufqwjpf`kbqb`wfq!#ubovf>!?,pfof`w=Bvpwqbojb!#`obpp>!pjwvbwjlmbvwklqjwzelooltjmdsqjnbqjozlsfqbwjlm`kboofmdfgfufolsfgbmlmznlvpevm`wjlm#evm`wjlmp`lnsbmjfppwqv`wvqfbdqffnfmw!#wjwof>!slwfmwjbofgv`bwjlmbqdvnfmwppf`lmgbqz`lszqjdkwobmdvbdfpf{`ovpjuf`lmgjwjlm?,elqn=\\x0E\\tpwbwfnfmwbwwfmwjlmAjldqbskz~#fopf#x\\tplovwjlmptkfm#wkf#Bmbozwj`pwfnsobwfpgbmdfqlvppbwfoojwfgl`vnfmwpsvaojpkfqjnslqwbmwsqlwlwzsfjmeovfm`f%qbrvl8?,feef`wjufdfmfqboozwqbmpelqnafbvwjevowqbmpslqwlqdbmjyfgsvaojpkfgsqlnjmfmwvmwjo#wkfwkvnambjoMbwjlmbo#-el`vp+*8lufq#wkf#njdqbwjlmbmmlvm`fgellwfq!=\\tf{`fswjlmofpp#wkbmf{sfmpjufelqnbwjlmeqbnftlqhwfqqjwlqzmgj`bwjlm`vqqfmwoz`obppMbnf`qjwj`jpnwqbgjwjlmfopftkfqfBof{bmgfqbssljmwfgnbwfqjbopaqlbg`bpwnfmwjlmfgbeejojbwf?,lswjlm=wqfbwnfmwgjeefqfmw,gfebvow-Sqfpjgfmwlm`oj`h>!ajldqbskzlwkfqtjpfsfqnbmfmwEqbm/KbjpKlooztllgf{sbmpjlmpwbmgbqgp?,pwzof=\\tqfgv`wjlmGf`fnafq#sqfefqqfg@bnaqjgdflsslmfmwpAvpjmfpp#`lmevpjlm=\\t?wjwof=sqfpfmwfgf{sobjmfgglfp#mlw#tlqogtjgfjmwfqeb`fslpjwjlmpmftpsbsfq?,wbaof=\\tnlvmwbjmpojhf#wkf#fppfmwjboejmbm`jbopfof`wjlmb`wjlm>!,babmglmfgFgv`bwjlmsbqpfJmw+pwbajojwzvmbaof#wl?,wjwof=\\tqfobwjlmpMlwf#wkbwfeej`jfmwsfqelqnfgwtl#zfbqpPjm`f#wkfwkfqfelqftqbssfq!=bowfqmbwfjm`qfbpfgAbwwof#lesfq`fjufgwqzjmd#wlmf`fppbqzslqwqbzfgfof`wjlmpFojybafwk?,jeqbnf=gjp`lufqzjmpvqbm`fp-ofmdwk8ofdfmgbqzDfldqbskz`bmgjgbwf`lqslqbwfplnfwjnfppfquj`fp-jmkfqjwfg?,pwqlmd=@lnnvmjwzqfojdjlvpol`bwjlmp@lnnjwwffavjogjmdpwkf#tlqogml#olmdfqafdjmmjmdqfefqfm`f`bmmlw#afeqfrvfm`zwzsj`boozjmwl#wkf#qfobwjuf8qf`lqgjmdsqfpjgfmwjmjwjboozwf`kmjrvfwkf#lwkfqjw#`bm#aff{jpwfm`fvmgfqojmfwkjp#wjnfwfofsklmfjwfnp`lsfsqb`wj`fpbgubmwbdf*8qfwvqm#Elq#lwkfqsqlujgjmdgfnl`qb`zalwk#wkf#f{wfmpjufpveefqjmdpvsslqwfg`lnsvwfqp#evm`wjlmsqb`wj`bopbjg#wkbwjw#nbz#afFmdojpk?,eqln#wkf#p`kfgvofggltmolbgp?,obafo=\\tpvpsf`wfgnbqdjm9#3psjqjwvbo?,kfbg=\\t\\tnj`qlplewdqbgvboozgjp`vppfgkf#af`bnff{f`vwjufirvfqz-ipklvpfklog`lmejqnfgsvq`kbpfgojwfqboozgfpwqlzfgvs#wl#wkfubqjbwjlmqfnbjmjmdjw#jp#mlw`fmwvqjfpIbsbmfpf#bnlmd#wkf`lnsofwfgbodlqjwknjmwfqfpwpqfafoojlmvmgfejmfgfm`lvqbdfqfpjybaofjmuloujmdpfmpjwjufvmjufqpbosqlujpjlm+bowklvdkefbwvqjmd`lmgv`wfg*/#tkj`k#`lmwjmvfg.kfbgfq!=Efaqvbqz#mvnfqlvp#lufqeolt9`lnslmfmweqbdnfmwpf{`foofmw`lopsbm>!wf`kmj`bomfbq#wkf#Bgubm`fg#plvq`f#lef{sqfppfgKlmd#Hlmd#Eb`fallhnvowjsof#nf`kbmjpnfofubwjlmleefmpjuf?,elqn=\\t\\npslmplqfggl`vnfmw-lq#%rvlw8wkfqf#bqfwklpf#tklnlufnfmwpsql`fppfpgjeej`vowpvanjwwfgqf`lnnfmg`lmujm`fgsqlnlwjmd!#tjgwk>!-qfsob`f+`obppj`bo`lbojwjlmkjp#ejqpwgf`jpjlmpbppjpwbmwjmgj`bwfgfulovwjlm.tqbssfq!fmlvdk#wlbolmd#wkfgfojufqfg..=\\x0E\\t?\"..Bnfqj`bm#sqlwf`wfgMlufnafq#?,pwzof=?evqmjwvqfJmwfqmfw##lmaovq>!pvpsfmgfgqf`jsjfmwabpfg#lm#Nlqflufq/balojpkfg`loof`wfgtfqf#nbgffnlwjlmbofnfqdfm`zmbqqbwjufbgul`bwfps{8alqgfq`lnnjwwfggjq>!owq!fnsolzffpqfpfbq`k-#pfof`wfgpv``fpplq`vpwlnfqpgjpsobzfgPfswfnafqbgg@obpp+Eb`fallh#pvddfpwfgbmg#obwfqlsfqbwjmdfobalqbwfPlnfwjnfpJmpwjwvwf`fqwbjmozjmpwboofgelooltfqpIfqvpbofnwkfz#kbuf`lnsvwjmddfmfqbwfgsqlujm`fpdvbqbmwffbqajwqbqzqf`ldmjyftbmwfg#wls{8tjgwk9wkflqz#leafkbujlvqTkjof#wkffpwjnbwfgafdbm#wl#jw#af`bnfnbdmjwvgfnvpw#kbufnlqf#wkbmGjqf`wlqzf{wfmpjlmpf`qfwbqzmbwvqboozl``vqqjmdubqjbaofpdjufm#wkfsobwelqn-?,obafo=?ebjofg#wl`lnslvmgphjmgp#le#pl`jfwjfpbolmdpjgf#..%dw8\\t\\tplvwktfpwwkf#qjdkwqbgjbwjlmnbz#kbuf#vmfp`bsf+pslhfm#jm!#kqfe>!,sqldqbnnflmoz#wkf#`lnf#eqlngjqf`wlqzavqjfg#jmb#pjnjobqwkfz#tfqf?,elmw=?,Mlqtfdjbmpsf`jejfgsqlgv`jmdsbppfmdfq+mft#Gbwfwfnslqbqzej`wjlmboBewfq#wkffrvbwjlmpgltmolbg-qfdvobqozgfufolsfqbaluf#wkfojmhfg#wlskfmlnfmbsfqjlg#lewllowjs!=pvapwbm`fbvwlnbwj`bpsf`w#leBnlmd#wkf`lmmf`wfgfpwjnbwfpBjq#Elq`fpzpwfn#lelaif`wjufjnnfgjbwfnbhjmd#jwsbjmwjmdp`lmrvfqfgbqf#pwjoosql`fgvqfdqltwk#lekfbgfg#azFvqlsfbm#gjujpjlmpnlof`vofpeqbm`kjpfjmwfmwjlmbwwqb`wfg`kjogkllgbopl#vpfggfgj`bwfgpjmdbslqfgfdqff#leebwkfq#le`lmeoj`wp?,b=?,s=\\t`bnf#eqlntfqf#vpfgmlwf#wkbwqf`fjujmdF{f`vwjuffufm#nlqfb``fpp#wl`lnnbmgfqSlojwj`bonvpj`jbmpgfoj`jlvpsqjplmfqpbgufmw#leVWE.;!#,=?\"X@GBWBX!=@lmwb`wPlvwkfqm#ad`lolq>!pfqjfp#le-#Jw#tbp#jm#Fvqlsfsfqnjwwfgubojgbwf-bssfbqjmdleej`jboppfqjlvpoz.obmdvbdfjmjwjbwfgf{wfmgjmdolmd.wfqnjmeobwjlmpv`k#wkbwdfw@llhjfnbqhfg#az?,avwwlm=jnsofnfmwavw#jw#jpjm`qfbpfpgltm#wkf#qfrvjqjmdgfsfmgfmw..=\\t?\"..#jmwfqujftTjwk#wkf#`lsjfp#le`lmpfmpvptbp#avjowUfmfyvfob+elqnfqozwkf#pwbwfsfqplmmfopwqbwfdj`ebulvq#lejmufmwjlmTjhjsfgjb`lmwjmfmwujqwvbooztkj`k#tbpsqjm`jsof@lnsofwf#jgfmwj`bopklt#wkbwsqjnjwjufbtbz#eqlnnlof`vobqsqf`jpfozgjpploufgVmgfq#wkfufqpjlm>!=%maps8?,Jw#jp#wkf#Wkjp#jp#tjoo#kbuflqdbmjpnpplnf#wjnfEqjfgqj`ktbp#ejqpwwkf#lmoz#eb`w#wkbwelqn#jg>!sqf`fgjmdWf`kmj`boskzpj`jpwl``vqp#jmmbujdbwlqpf`wjlm!=psbm#jg>!plvdkw#wlafolt#wkfpvqujujmd~?,pwzof=kjp#gfbwkbp#jm#wkf`bvpfg#azsbqwjboozf{jpwjmd#vpjmd#wkftbp#djufmb#ojpw#leofufop#lemlwjlm#leLeej`jbo#gjpnjppfgp`jfmwjpwqfpfnaofpgvsoj`bwff{solpjufqf`lufqfgboo#lwkfqdboofqjfpxsbggjmd9sflsof#leqfdjlm#lebggqfppfpbppl`jbwfjnd#bow>!jm#nlgfqmpklvog#afnfwklg#leqfslqwjmdwjnfpwbnsmffgfg#wlwkf#Dqfbwqfdbqgjmdpffnfg#wlujftfg#bpjnsb`w#lmjgfb#wkbwwkf#Tlqogkfjdkw#lef{sbmgjmdWkfpf#bqf`vqqfmw!=`bqfevooznbjmwbjmp`kbqdf#le@obppj`bobggqfppfgsqfgj`wfgltmfqpkjs?gju#jg>!qjdkw!=\\x0E\\tqfpjgfm`fofbuf#wkf`lmwfmw!=bqf#lewfm##~*+*8\\x0E\\tsqlabaoz#Sqlefpplq.avwwlm!#qfpslmgfgpbzp#wkbwkbg#wl#afsob`fg#jmKvmdbqjbmpwbwvp#lepfqufp#bpVmjufqpbof{f`vwjlmbddqfdbwfelq#tkj`kjmef`wjlmbdqffg#wlkltfufq/#slsvobq!=sob`fg#lm`lmpwqv`wfof`wlqbopznalo#lejm`ovgjmdqfwvqm#wlbq`kjwf`w@kqjpwjbmsqfujlvp#ojujmd#jmfbpjfq#wlsqlefpplq\\t%ow8\"..#feef`w#lebmbozwj`ptbp#wbhfmtkfqf#wkfwllh#lufqafojfe#jmBeqjhbbmpbp#ebq#bpsqfufmwfgtlqh#tjwkb#psf`jbo?ejfogpfw@kqjpwnbpQfwqjfufg\\t\\tJm#wkf#ab`h#jmwlmlqwkfbpwnbdbyjmfp=?pwqlmd=`lnnjwwffdlufqmjmddqlvsp#lepwlqfg#jmfpwbaojpkb#dfmfqbojwp#ejqpwwkfjq#ltmslsvobwfgbm#laif`w@bqjaafbmboolt#wkfgjpwqj`wptjp`lmpjmol`bwjlm-8#tjgwk9#jmkbajwfgPl`jbojpwIbmvbqz#2?,ellwfq=pjnjobqoz`klj`f#lewkf#pbnf#psf`jej`#avpjmfpp#Wkf#ejqpw-ofmdwk8#gfpjqf#wlgfbo#tjwkpjm`f#wkfvpfqBdfmw`lm`fjufgjmgf{-sksbp#%rvlw8fmdbdf#jmqf`fmwoz/eft#zfbqptfqf#bopl\\t?kfbg=\\t?fgjwfg#azbqf#hmltm`jwjfp#jmb``fpphfz`lmgfnmfgbopl#kbufpfquj`fp/ebnjoz#leP`kllo#le`lmufqwfgmbwvqf#le#obmdvbdfnjmjpwfqp?,laif`w=wkfqf#jp#b#slsvobqpfrvfm`fpbgul`bwfgWkfz#tfqfbmz#lwkfqol`bwjlm>fmwfq#wkfnv`k#nlqfqfeof`wfgtbp#mbnfglqjdjmbo#b#wzsj`botkfm#wkfzfmdjmffqp`lvog#mlwqfpjgfmwptfgmfpgbzwkf#wkjqg#sqlgv`wpIbmvbqz#1tkbw#wkfzb#`fqwbjmqfb`wjlmpsql`fpplqbewfq#kjpwkf#obpw#`lmwbjmfg!=?,gju=\\t?,b=?,wg=gfsfmg#lmpfbq`k!=\\tsjf`fp#le`lnsfwjmdQfefqfm`fwfmmfppfftkj`k#kbp#ufqpjlm>?,psbm=#??,kfbgfq=djufp#wkfkjpwlqjbmubovf>!!=sbggjmd93ujft#wkbwwldfwkfq/wkf#nlpw#tbp#elvmgpvapfw#lebwwb`h#lm`kjogqfm/sljmwp#lesfqplmbo#slpjwjlm9boofdfgoz@ofufobmgtbp#obwfqbmg#bewfqbqf#djufmtbp#pwjoop`qloojmdgfpjdm#lenbhfp#wkfnv`k#ofppBnfqj`bmp-\\t\\tBewfq#/#avw#wkfNvpfvn#leolvjpjbmb+eqln#wkfnjmmfplwbsbqwj`ofpb#sql`fppGlnjmj`bmulovnf#leqfwvqmjmdgfefmpjuf33s{\\x7Fqjdknbgf#eqlnnlvpflufq!#pwzof>!pwbwfp#le+tkj`k#jp`lmwjmvfpEqbm`jp`lavjogjmd#tjwklvw#btjwk#plnftkl#tlvogb#elqn#leb#sbqw#leafelqf#jwhmltm#bp##Pfquj`fpol`bwjlm#bmg#lewfmnfbpvqjmdbmg#jw#jpsbsfqab`hubovfp#le\\x0E\\t?wjwof=>#tjmglt-gfwfqnjmffq%rvlw8#sobzfg#azbmg#fbqoz?,`fmwfq=eqln#wkjpwkf#wkqffsltfq#bmgle#%rvlw8jmmfqKWNO?b#kqfe>!z9jmojmf8@kvq`k#lewkf#fufmwufqz#kjdkleej`jbo#.kfjdkw9#`lmwfmw>!,`dj.ajm,wl#`qfbwfbeqjhbbmpfpsfqbmwleqbm/Kbjpobwujf)Mvojfwvuj)_(`f)Mwjmb(af)Mwjmb\\fUh\\fT{\\fTN\\n{I\\np@\\x04Fr\\x0BBl\\bQ\\x7F\\tA{\\x0BUm\\x05Gx\\tA{\\x01yp\\x06YA\\0zX\\bTV\\bWl\\bUd\\x04BM\\x0BB{\\npV\\x0B@x\\x04B\\\\\\np@\\x04Db\\x04Gz\\tal\\npa\\tfM\\tuD\\bV~\\x04mx\\x0BQ}\\ndS\\tp\\\\\\bVK\\bS]\\bU|\\x05oD\\tkV\\x0Bed\\x0BHR\\nb~\\x04M`\\nJp\\x05oD\\x04|Q\\nLP\\x04Sw\\bTl\\nAI\\nxC\\bWt\\tBq\\x05F`\\x04Cm\\x0BLm\\tKx\\t}t\\bPv\\ny\\\\\\naB\\tV\\x7F\\nZd\\x04XU\\x04li\\tfr\\ti@\\tBH\\x04BD\\x04BV\\t`V\\n[]\\tp_\\tTn\\n~A\\nxR\\tuD\\t`{\\bV@\\tTn\\tHK\\tAJ\\x0Bxs\\x04Zf\\nqI\\x04Zf\\x0BBM\\x0B|j\\t}t\\bSM\\nmC\\x0BQ}pfquj`jlpbqw/A`volbqdfmwjmbabq`folmb`vborvjfqsvaoj`bglsqlgv`wlpslo/Awj`bqfpsvfpwbtjhjsfgjbpjdvjfmwfa/Vprvfgb`lnvmjgbgpfdvqjgbgsqjm`jsbosqfdvmwbp`lmwfmjglqfpslmgfqufmfyvfobsqlaofnbpgj`jfnaqfqfob`j/_mmlujfnaqfpjnjobqfpsqlzf`wlpsqldqbnbpjmpwjwvwlb`wjujgbgfm`vfmwqbf`lmln/Abjn/Mdfmfp`lmwb`wbqgfp`bqdbqmf`fpbqjlbwfm`j/_mwfo/Eelml`lnjpj/_m`bm`jlmfp`bsb`jgbgfm`lmwqbqbm/Mojpjpebulqjwlpw/Eqnjmlpsqlujm`jbfwjrvfwbpfofnfmwlpevm`jlmfpqfpvowbgl`bq/M`wfqsqlsjfgbgsqjm`jsjlmf`fpjgbgnvmj`jsbo`qfb`j/_mgfp`bqdbpsqfpfm`jb`lnfq`jbolsjmjlmfpfifq`j`jlfgjwlqjbopbobnbm`bdlmy/Mofygl`vnfmwlsfo/A`vobqf`jfmwfpdfmfqbofpwbqqbdlmbsq/M`wj`bmlufgbgfpsqlsvfpwbsb`jfmwfpw/E`mj`bplaifwjulp`lmwb`wlp\\fHB\\fIk\\fHn\\fH^\\fHS\\fHc\\fHU\\fId\\fHn\\fH{\\fHC\\fHR\\fHT\\fHR\\fHI\\fHc\\fHY\\fHn\\fH\\\\\\fHU\\fIk\\fHy\\fIg\\fHd\\fHy\\fIm\\fHw\\fH\\\\\\fHU\\fHR\\fH@\\fHR\\fHJ\\fHy\\fHU\\fHR\\fHT\\fHA\\fIl\\fHU\\fIm\\fHc\\fH\\\\\\fHU\\fIl\\fHB\\fId\\fHn\\fHJ\\fHS\\fHD\\fH@\\fHR\\fHHgjsolgl`p\\fHT\\fHB\\fHC\\fH\\\\\\fIn\\fHF\\fHD\\fHR\\fHB\\fHF\\fHH\\fHR\\fHG\\fHS\\fH\\\\\\fHx\\fHT\\fHH\\fHH\\fH\\\\\\fHU\\fH^\\fIg\\fH{\\fHU\\fIm\\fHj\\fH@\\fHR\\fH\\\\\\fHJ\\fIk\\fHZ\\fHU\\fIm\\fHd\\fHz\\fIk\\fH^\\fHC\\fHJ\\fHS\\fHy\\fHR\\fHB\\fHY\\fIk\\fH@\\fHH\\fIl\\fHD\\fH@\\fIl\\fHv\\fHB\\fI`\\fHH\\fHT\\fHR\\fH^\\fH^\\fIk\\fHz\\fHp\\fIe\\fH@\\fHB\\fHJ\\fHJ\\fHH\\fHI\\fHR\\fHD\\fHU\\fIl\\fHZ\\fHU\\fH\\\\\\fHi\\fH^\\fH{\\fHy\\fHA\\fIl\\fHD\\fH{\\fH\\\\\\fHF\\fHR\\fHT\\fH\\\\\\fHR\\fHH\\fHy\\fHS\\fHc\\fHe\\fHT\\fIk\\fH{\\fHC\\fIl\\fHU\\fIn\\fHm\\fHj\\fH{\\fIk\\fHs\\fIl\\fHB\\fHz\\fIg\\fHp\\fHy\\fHR\\fH\\\\\\fHi\\fHA\\fIl\\fH{\\fHC\\fIk\\fHH\\fIm\\fHB\\fHY\\fIg\\fHs\\fHJ\\fIk\\fHn\\fHi\\fH{\\fH\\\\\\fH|\\fHT\\fIk\\fHB\\fIk\\fH^\\fH^\\fH{\\fHR\\fHU\\fHR\\fH^\\fHf\\fHF\\fH\\\\\\fHv\\fHR\\fH\\\\\\fH|\\fHT\\fHR\\fHJ\\fIk\\fH\\\\\\fHp\\fHS\\fHT\\fHJ\\fHS\\fH^\\fH@\\fHn\\fHJ\\fH@\\fHD\\fHR\\fHU\\fIn\\fHn\\fH^\\fHR\\fHz\\fHp\\fIl\\fHH\\fH@\\fHs\\fHD\\fHB\\fHS\\fH^\\fHk\\fHT\\fIk\\fHj\\fHD\\fIk\\fHD\\fHC\\fHR\\fHy\\fIm\\fH^\\fH^\\fIe\\fH{\\fHA\\fHR\\fH{\\fH\\\\\\fIk\\fH^\\fHp\\fH{\\fHU\\fH\\\\\\fHR\\fHB\\fH^\\fH{\\fIk\\fHF\\fIk\\fHp\\fHU\\fHR\\fHI\\fHk\\fHT\\fIl\\fHT\\fHU\\fIl\\fHy\\fH^\\fHR\\fHL\\fIl\\fHy\\fHU\\fHR\\fHm\\fHJ\\fIn\\fH\\\\\\fHH\\fHU\\fHH\\fHT\\fHR\\fHH\\fHC\\fHR\\fHJ\\fHj\\fHC\\fHR\\fHF\\fHR\\fHy\\fHy\\fI`\\fHD\\fHZ\\fHR\\fHB\\fHJ\\fIk\\fHz\\fHC\\fHU\\fIl\\fH\\\\\\fHR\\fHC\\fHz\\fIm\\fHJ\\fH^\\fH{\\fIl`bwfdlqjfpf{sfqjfm`f?,wjwof=\\x0E\\t@lszqjdkw#ibubp`qjsw`lmgjwjlmpfufqzwkjmd?s#`obpp>!wf`kmloldzab`hdqlvmg?b#`obpp>!nbmbdfnfmw%`lsz8#132ibubP`qjsw`kbqb`wfqpaqfbg`qvnawkfnpfoufpklqjylmwbodlufqmnfmw@bojelqmjbb`wjujwjfpgjp`lufqfgMbujdbwjlmwqbmpjwjlm`lmmf`wjlmmbujdbwjlmbssfbqbm`f?,wjwof=?n`kf`hal{!#wf`kmjrvfpsqlwf`wjlmbssbqfmwozbp#tfoo#bpvmw$/#$VB.qfplovwjlmlsfqbwjlmpwfofujpjlmwqbmpobwfgTbpkjmdwlmmbujdbwlq-#>#tjmglt-jnsqfppjlm%ow8aq%dw8ojwfqbwvqfslsvobwjlmad`lolq>! fpsf`jbooz#`lmwfmw>!sqlgv`wjlmmftpofwwfqsqlsfqwjfpgfejmjwjlmofbgfqpkjsWf`kmloldzSbqojbnfmw`lnsbqjplmvo#`obpp>!-jmgf{Le+!`lm`ovpjlmgjp`vppjlm`lnslmfmwpajloldj`boQfulovwjlm\\\\`lmwbjmfqvmgfqpwllgmlp`qjsw=?sfqnjppjlmfb`k#lwkfqbwnlpskfqf#lmel`vp>!?elqn#jg>!sql`fppjmdwkjp-ubovfdfmfqbwjlm@lmefqfm`fpvapfrvfmwtfoo.hmltmubqjbwjlmpqfsvwbwjlmskfmlnfmlmgjp`jsojmfoldl-smd!#+gl`vnfmw/alvmgbqjfpf{sqfppjlmpfwwofnfmwAb`hdqlvmglvw#le#wkffmwfqsqjpf+!kwwsp9!#vmfp`bsf+!sbpptlqg!#gfnl`qbwj`?b#kqfe>!,tqbssfq!=\\tnfnafqpkjsojmdvjpwj`s{8sbggjmdskjolplskzbppjpwbm`fvmjufqpjwzeb`jojwjfpqf`ldmjyfgsqfefqfm`fje#+wzsflenbjmwbjmfgul`bavobqzkzslwkfpjp-pvanjw+*8%bns8maps8bmmlwbwjlmafkjmg#wkfElvmgbwjlmsvaojpkfq!bppvnswjlmjmwqlgv`fg`lqqvswjlmp`jfmwjpwpf{soj`jwozjmpwfbg#legjnfmpjlmp#lm@oj`h>!`lmpjgfqfggfsbqwnfmwl``vsbwjlmpllm#bewfqjmufpwnfmwsqlmlvm`fgjgfmwjejfgf{sfqjnfmwNbmbdfnfmwdfldqbskj`!#kfjdkw>!ojmh#qfo>!-qfsob`f+,gfsqfppjlm`lmefqfm`fsvmjpknfmwfojnjmbwfgqfpjpwbm`fbgbswbwjlmlsslpjwjlmtfoo#hmltmpvssofnfmwgfwfqnjmfgk2#`obpp>!3s{8nbqdjmnf`kbmj`bopwbwjpwj`p`fofaqbwfgDlufqmnfmw\\t\\tGvqjmd#wgfufolsfqpbqwjej`jbofrvjubofmwlqjdjmbwfg@lnnjppjlmbwwb`knfmw?psbm#jg>!wkfqf#tfqfMfgfqobmgpafzlmg#wkfqfdjpwfqfgilvqmbojpweqfrvfmwozboo#le#wkfobmd>!fm!#?,pwzof=\\x0E\\tbaplovwf8#pvsslqwjmdf{wqfnfoz#nbjmpwqfbn?,pwqlmd=#slsvobqjwzfnsolznfmw?,wbaof=\\x0E\\t#`lopsbm>!?,elqn=\\t##`lmufqpjlmbalvw#wkf#?,s=?,gju=jmwfdqbwfg!#obmd>!fmSlqwvdvfpfpvapwjwvwfjmgjujgvbojnslppjaofnvowjnfgjbbonlpw#boos{#plojg# bsbqw#eqlnpvaif`w#wljm#Fmdojpk`qjwj`jyfgf{`fsw#elqdvjgfojmfplqjdjmboozqfnbqhbaofwkf#pf`lmgk1#`obpp>!?b#wjwof>!+jm`ovgjmdsbqbnfwfqpsqlkjajwfg>#!kwws9,,gj`wjlmbqzsfq`fswjlmqfulovwjlmelvmgbwjlms{8kfjdkw9pv``fppevopvsslqwfqpnjoofmmjvnkjp#ebwkfqwkf#%rvlw8ml.qfsfbw8`lnnfq`jbojmgvpwqjbofm`lvqbdfgbnlvmw#le#vmleej`jbofeej`jfm`zQfefqfm`fp`llqgjmbwfgjp`objnfqf{sfgjwjlmgfufolsjmd`bo`vobwfgpjnsojejfgofdjwjnbwfpvapwqjmd+3!#`obpp>!`lnsofwfozjoovpwqbwfejuf#zfbqpjmpwqvnfmwSvaojpkjmd2!#`obpp>!spz`kloldz`lmejgfm`fmvnafq#le#bapfm`f#leel`vpfg#lmiljmfg#wkfpwqv`wvqfpsqfujlvpoz=?,jeqbnf=lm`f#bdbjmavw#qbwkfqjnnjdqbmwple#`lvqpf/b#dqlvs#leOjwfqbwvqfVmojhf#wkf?,b=%maps8\\tevm`wjlm#jw#tbp#wkf@lmufmwjlmbvwlnlajofSqlwfpwbmwbddqfppjufbewfq#wkf#Pjnjobqoz/!#,=?,gju=`loof`wjlm\\x0E\\tevm`wjlmujpjajojwzwkf#vpf#leulovmwffqpbwwqb`wjlmvmgfq#wkf#wkqfbwfmfg)?\"X@GBWBXjnslqwbm`fjm#dfmfqbowkf#obwwfq?,elqn=\\t?,-jmgf{Le+$j#>#38#j#?gjeefqfm`fgfulwfg#wlwqbgjwjlmppfbq`k#elqvowjnbwfozwlvqmbnfmwbwwqjavwfppl.`boofg#~\\t?,pwzof=fubovbwjlmfnskbpjyfgb``fppjaof?,pf`wjlm=pv``fppjlmbolmd#tjwkNfbmtkjof/jmgvpwqjfp?,b=?aq#,=kbp#af`lnfbpsf`wp#leWfofujpjlmpveej`jfmwabphfwabooalwk#pjgfp`lmwjmvjmdbm#bqwj`of?jnd#bow>!bgufmwvqfpkjp#nlwkfqnbm`kfpwfqsqjm`jsofpsbqwj`vobq`lnnfmwbqzfeef`wp#legf`jgfg#wl!=?pwqlmd=svaojpkfqpIlvqmbo#legjeej`vowzeb`jojwbwfb``fswbaofpwzof-`pp!\\nevm`wjlm#jmmlubwjlm=@lszqjdkwpjwvbwjlmptlvog#kbufavpjmfppfpGj`wjlmbqzpwbwfnfmwplewfm#vpfgsfqpjpwfmwjm#Ibmvbqz`lnsqjpjmd?,wjwof=\\t\\ngjsolnbwj``lmwbjmjmdsfqelqnjmdf{wfmpjlmpnbz#mlw#af`lm`fsw#le#lm`oj`h>!Jw#jp#boplejmbm`jbo#nbhjmd#wkfOv{fnalvqdbggjwjlmbobqf#`boofgfmdbdfg#jm!p`qjsw!*8avw#jw#tbpfof`wqlmj`lmpvanjw>!\\t?\"..#Fmg#fof`wqj`boleej`jboozpvddfpwjlmwls#le#wkfvmojhf#wkfBvpwqbojbmLqjdjmboozqfefqfm`fp\\t?,kfbg=\\x0E\\tqf`ldmjpfgjmjwjbojyfojnjwfg#wlBof{bmgqjbqfwjqfnfmwBgufmwvqfpelvq#zfbqp\\t\\t%ow8\"..#jm`qfbpjmdgf`lqbwjlmk0#`obpp>!lqjdjmp#lelaojdbwjlmqfdvobwjlm`obppjejfg+evm`wjlm+bgubmwbdfpafjmd#wkf#kjpwlqjbmp?abpf#kqfeqfsfbwfgoztjoojmd#wl`lnsbqbaofgfpjdmbwfgmlnjmbwjlmevm`wjlmbojmpjgf#wkfqfufobwjlmfmg#le#wkfp#elq#wkf#bvwklqjyfgqfevpfg#wlwbhf#sob`fbvwlmlnlvp`lnsqlnjpfslojwj`bo#qfpwbvqbmwwtl#le#wkfEfaqvbqz#1rvbojwz#leptelaif`w-vmgfqpwbmgmfbqoz#bootqjwwfm#azjmwfqujftp!#tjgwk>!2tjwkgqbtboeolbw9ofewjp#vpvbooz`bmgjgbwfpmftpsbsfqpnzpwfqjlvpGfsbqwnfmwafpw#hmltmsbqojbnfmwpvssqfppfg`lmufmjfmwqfnfnafqfggjeefqfmw#pzpwfnbwj`kbp#ofg#wlsqlsbdbmgb`lmwqloofgjmeovfm`fp`fqfnlmjbosql`objnfgSqlwf`wjlmoj#`obpp>!P`jfmwjej``obpp>!ml.wqbgfnbqhpnlqf#wkbm#tjgfpsqfbgOjafqbwjlmwllh#sob`fgbz#le#wkfbp#olmd#bpjnsqjplmfgBggjwjlmbo\\t?kfbg=\\t?nObalqbwlqzMlufnafq#1f{`fswjlmpJmgvpwqjboubqjfwz#leeolbw9#ofeGvqjmd#wkfbppfppnfmwkbuf#affm#gfbop#tjwkPwbwjpwj`pl``vqqfm`f,vo=?,gju=`ofbqej{!=wkf#svaoj`nbmz#zfbqptkj`k#tfqflufq#wjnf/pzmlmznlvp`lmwfmw!=\\tsqfpvnbaozkjp#ebnjozvpfqBdfmw-vmf{sf`wfgjm`ovgjmd#`kboofmdfgb#njmlqjwzvmgfejmfg!afolmdp#wlwbhfm#eqlnjm#L`wlafqslpjwjlm9#pbjg#wl#afqfojdjlvp#Efgfqbwjlm#qltpsbm>!lmoz#b#eftnfbmw#wkbwofg#wl#wkf..=\\x0E\\t?gju#?ejfogpfw=Bq`kajpkls#`obpp>!mlafjmd#vpfgbssqlb`kfpsqjujofdfpmlp`qjsw=\\tqfpvowp#jmnbz#af#wkfFbpwfq#fddnf`kbmjpnpqfbplmbaofSlsvobwjlm@loof`wjlmpfof`wfg!=mlp`qjsw=\\x0E,jmgf{-sksbqqjubo#le.ippgh$**8nbmbdfg#wljm`lnsofwf`bpvbowjfp`lnsofwjlm@kqjpwjbmpPfswfnafq#bqjwknfwj`sql`fgvqfpnjdkw#kbufSqlgv`wjlmjw#bssfbqpSkjolplskzeqjfmgpkjsofbgjmd#wldjujmd#wkfwltbqg#wkfdvbqbmwffggl`vnfmwfg`lolq9 333ujgfl#dbnf`lnnjppjlmqfeof`wjmd`kbmdf#wkfbppl`jbwfgpbmp.pfqjelmhfzsqfpp8#sbggjmd9Kf#tbp#wkfvmgfqozjmdwzsj`booz#/#bmg#wkf#pq`Fofnfmwpv``fppjufpjm`f#wkf#pklvog#af#mfwtlqhjmdb``lvmwjmdvpf#le#wkfoltfq#wkbmpkltp#wkbw?,psbm=\\t\\n\\n`lnsobjmwp`lmwjmvlvprvbmwjwjfpbpwqlmlnfqkf#gjg#mlwgvf#wl#jwpbssojfg#wlbm#bufqbdffeelqwp#wlwkf#evwvqfbwwfnsw#wlWkfqfelqf/`bsbajojwzQfsvaoj`bmtbp#elqnfgFof`wqlmj`hjolnfwfqp`kboofmdfpsvaojpkjmdwkf#elqnfqjmgjdfmlvpgjqf`wjlmppvapjgjbqz`lmpsjqb`zgfwbjop#lebmg#jm#wkfbeelqgbaofpvapwbm`fpqfbplm#elq`lmufmwjlmjwfnwzsf>!baplovwfozpvsslpfgozqfnbjmfg#bbwwqb`wjufwqbufoojmdpfsbqbwfozel`vpfp#lmfofnfmwbqzbssoj`baofelvmg#wkbwpwzofpkffwnbmvp`qjswpwbmgp#elq#ml.qfsfbw+plnfwjnfp@lnnfq`jbojm#Bnfqj`bvmgfqwbhfmrvbqwfq#lebm#f{bnsofsfqplmboozjmgf{-sks<?,avwwlm=\\tsfq`fmwbdfafpw.hmltm`qfbwjmd#b!#gjq>!owqOjfvwfmbmw\\t?gju#jg>!wkfz#tlvogbajojwz#lenbgf#vs#lemlwfg#wkbw`ofbq#wkbwbqdvf#wkbwwl#bmlwkfq`kjogqfm$psvqslpf#leelqnvobwfgabpfg#vslmwkf#qfdjlmpvaif`w#lesbppfmdfqpslppfppjlm-\\t\\tJm#wkf#Afelqf#wkfbewfqtbqgp`vqqfmwoz#b`qlpp#wkfp`jfmwjej``lnnvmjwz-`bsjwbojpnjm#Dfqnbmzqjdkw.tjmdwkf#pzpwfnPl`jfwz#leslojwj`jbmgjqf`wjlm9tfmw#lm#wlqfnlubo#le#Mft#Zlqh#bsbqwnfmwpjmgj`bwjlmgvqjmd#wkfvmofpp#wkfkjpwlqj`bokbg#affm#bgfejmjwjufjmdqfgjfmwbwwfmgbm`f@fmwfq#elqsqlnjmfm`fqfbgzPwbwfpwqbwfdjfpavw#jm#wkfbp#sbqw#le`lmpwjwvwf`objn#wkbwobalqbwlqz`lnsbwjaofebjovqf#le/#pv`k#bp#afdbm#tjwkvpjmd#wkf#wl#sqlujgfefbwvqf#leeqln#tkj`k,!#`obpp>!dfloldj`bopfufqbo#legfojafqbwfjnslqwbmw#klogp#wkbwjmd%rvlw8#ubojdm>wlswkf#Dfqnbmlvwpjgf#lemfdlwjbwfgkjp#`bqffqpfsbqbwjlmjg>!pfbq`ktbp#`boofgwkf#elvqwkqf`qfbwjlmlwkfq#wkbmsqfufmwjlmtkjof#wkf#fgv`bwjlm/`lmmf`wjmdb``vqbwfoztfqf#avjowtbp#hjoofgbdqffnfmwpnv`k#nlqf#Gvf#wl#wkftjgwk9#233plnf#lwkfqHjmdgln#lewkf#fmwjqfebnlvp#elqwl#`lmmf`wlaif`wjufpwkf#Eqfm`ksflsof#bmgefbwvqfg!=jp#pbjg#wlpwqv`wvqboqfefqfmgvnnlpw#lewfmb#pfsbqbwf.=\\t?gju#jg#Leej`jbo#tlqogtjgf-bqjb.obafowkf#sobmfwbmg#jw#tbpg!#ubovf>!ollhjmd#bwafmfej`jbobqf#jm#wkfnlmjwlqjmdqfslqwfgozwkf#nlgfqmtlqhjmd#lmbooltfg#wltkfqf#wkf#jmmlubwjuf?,b=?,gju=plvmgwqb`hpfbq`kElqnwfmg#wl#afjmsvw#jg>!lsfmjmd#leqfpwqj`wfgbglswfg#azbggqfppjmdwkfloldjbmnfwklgp#leubqjbmw#le@kqjpwjbm#ufqz#obqdfbvwlnlwjufaz#ebq#wkfqbmdf#eqlnsvqpvjw#leeloolt#wkfaqlvdkw#wljm#Fmdobmgbdqff#wkbwb``vpfg#le`lnfp#eqlnsqfufmwjmdgju#pwzof>kjp#lq#kfqwqfnfmglvpeqffgln#le`lm`fqmjmd3#2fn#2fn8Abphfwaboo,pwzof-`ppbm#fbqojfqfufm#bewfq,!#wjwof>!-`ln,jmgf{wbhjmd#wkfsjwwpavqdk`lmwfmw!=\\x0E?p`qjsw=+ewvqmfg#lvwkbujmd#wkf?,psbm=\\x0E\\t#l``bpjlmboaf`bvpf#jwpwbqwfg#wlskzpj`booz=?,gju=\\t##`qfbwfg#az@vqqfmwoz/#ad`lolq>!wbajmgf{>!gjpbpwqlvpBmbozwj`p#bopl#kbp#b=?gju#jg>!?,pwzof=\\t?`boofg#elqpjmdfq#bmg-pq`#>#!,,ujlobwjlmpwkjp#sljmw`lmpwbmwozjp#ol`bwfgqf`lqgjmdpg#eqln#wkfmfgfqobmgpslqwvdv/Fp;N;};D;u;F5m4K4]4_7`gfpbqqlool`lnfmwbqjlfgv`b`j/_mpfswjfnaqfqfdjpwqbglgjqf``j/_mvaj`b`j/_msvaoj`jgbgqfpsvfpwbpqfpvowbglpjnslqwbmwfqfpfqubglpbqw/A`volpgjefqfmwfppjdvjfmwfpqfs/Vaoj`bpjwvb`j/_mnjmjpwfqjlsqjub`jgbggjqf`wlqjlelqnb`j/_mslaob`j/_msqfpjgfmwf`lmw', 'fmjglpb``fplqjlpwf`kmlqbwjsfqplmbofp`bwfdlq/Abfpsf`jbofpgjpslmjaofb`wvbojgbgqfefqfm`jbuboobglojgajaojlwf`bqfob`jlmfp`bofmgbqjlslo/Awj`bpbmwfqjlqfpgl`vnfmwlpmbwvqbofybnbwfqjbofpgjefqfm`jbf`lm/_nj`bwqbmpslqwfqlgq/Advfysbqwj`jsbqfm`vfmwqbmgjp`vpj/_mfpwqv`wvqbevmgb`j/_meqf`vfmwfpsfqnbmfmwfwlwbonfmwf<P<R<Z<Q<R<]=o<X<Y=n<P<R<Z<Y=n<^=l<Y<P=c=n<\\\\<V<Z<Y=k=n<R<]=g<]<R<W<Y<Y<R=k<Y<Q=`=a=n<R<_<R<V<R<_<X<\\\\<S<R=m<W<Y<^=m<Y<_<R=m<\\\\<U=n<Y=k<Y=l<Y<[<P<R<_=o=n=m<\\\\<U=n<\\\\<Z<T<[<Q<T<P<Y<Z<X=o<]=o<X=o=n<s<R<T=m<V<[<X<Y=m=`<^<T<X<Y<R=m<^=c<[<T<Q=o<Z<Q<R=m<^<R<Y<U<W=b<X<Y<U<S<R=l<Q<R<P<Q<R<_<R<X<Y=n<Y<U=m<^<R<T=i<S=l<\\\\<^<\\\\=n<\\\\<V<R<U<P<Y=m=n<R<T<P<Y<Y=n<Z<T<[<Q=`<R<X<Q<R<U<W=o=k=d<Y<S<Y=l<Y<X=k<\\\\=m=n<T=k<\\\\=m=n=`=l<\\\\<]<R=n<Q<R<^=g=i<S=l<\\\\<^<R=m<R<]<R<U<S<R=n<R<P<P<Y<Q<Y<Y=k<T=m<W<Y<Q<R<^=g<Y=o=m<W=o<_<R<V<R<W<R<Q<\\\\<[<\\\\<X=n<\\\\<V<R<Y=n<R<_<X<\\\\<S<R=k=n<T<s<R=m<W<Y=n<\\\\<V<T<Y<Q<R<^=g<U=m=n<R<T=n=n<\\\\<V<T=i=m=l<\\\\<[=o<M<\\\\<Q<V=n=h<R=l=o<P<v<R<_<X<\\\\<V<Q<T<_<T=m<W<R<^<\\\\<Q<\\\\=d<Y<U<Q<\\\\<U=n<T=m<^<R<T<P=m<^=c<[=`<W=b<]<R<U=k<\\\\=m=n<R=m=l<Y<X<T<v=l<R<P<Y<H<R=l=o<P=l=g<Q<V<Y=m=n<\\\\<W<T<S<R<T=m<V=n=g=m=c=k<P<Y=m=c=j=j<Y<Q=n=l=n=l=o<X<\\\\=m<\\\\<P=g=i=l=g<Q<V<\\\\<q<R<^=g<U=k<\\\\=m<R<^<P<Y=m=n<\\\\=h<T<W=`<P<P<\\\\=l=n<\\\\=m=n=l<\\\\<Q<P<Y=m=n<Y=n<Y<V=m=n<Q<\\\\=d<T=i<P<T<Q=o=n<T<P<Y<Q<T<T<P<Y=b=n<Q<R<P<Y=l<_<R=l<R<X=m<\\\\<P<R<P=a=n<R<P=o<V<R<Q=j<Y=m<^<R<Y<P<V<\\\\<V<R<U<|=l=i<T<^5i5j4F4C5e4I4]4_4K5h4]4_4K5h4E4K5h4U4K5i5o4F4D5k4K4D4]4K5i4@4K5h5f5d5i4K5h4Y5d4]4@4C5f4C4E4K5h4U4Z5d4I4Z4K5m4E4K5h5n4_5i4K5h4U4K4D4F4A5i5f5h5i5h5m4K4F5i5h4F5n5e4F4U4C5f5h4K5h4X4U4]4O4B4D4K4]4F4[5d5f4]4U5h5f5o5i4I4]5m4K5n4[5h4D4K4F4K5h5h4V4E4F4]4F5f4D4K5h5j4K4_4K5h4X5f4B5i5j4F4C5f4K5h4U4]4D4K5h5n4Y4Y4K5m5h4K5i4U5h5f5k4K4F4A4C5f4G4K5h5h5k5i4K5h4U5i5h5i5o4F4D4E5f5i5o5j5o4K5h4[5m5h5m5f4C5f5d4I4C4K4]4E4F4K4]5f4B4K5h4Y4A4E4F4_4@5f5h4K5h5d5n4F4U5j4C5i4K5i4C5f5j4E4F4Y5i5f5i4O4]4X5f5m4K5h4\\\\5f5j4U4]4D5f4E4D5d4K4D4E4O5h4U4K4D4K5h4_5m4]5i4X4K5o5h4F4U4K5h5e4K5h4O5d5h4K5h4_5j4E4@4K5i4U4E4K5h4Y4A5m4K5h4C5f5j5o5h5i4K4F4K5h4B4K4Y4K5h5i5h5m4O4U4Z4K4M5o4F4K4D4E4K5h4B5f4]4]4_4K4J5h4K5h5n5h4D4K5h4O4C4D5i5n4K4[4U5i4]4K4_5h5i5j4[5n4E4K5h5o4F4D4K5h4]4@5h4K4X4F4]5o4K5h5n4C5i5f4U4[5f5opAzWbdMbnf+-isd!#bow>!2s{#plojg# -dje!#bow>!wqbmpsbqfmwjmelqnbwjlmbssoj`bwjlm!#lm`oj`h>!fpwbaojpkfgbgufqwjpjmd-smd!#bow>!fmujqlmnfmwsfqelqnbm`fbssqlsqjbwf%bns8ngbpk8jnnfgjbwfoz?,pwqlmd=?,qbwkfq#wkbmwfnsfqbwvqfgfufolsnfmw`lnsfwjwjlmsob`fklogfqujpjajojwz9`lszqjdkw!=3!#kfjdkw>!fufm#wklvdkqfsob`fnfmwgfpwjmbwjlm@lqslqbwjlm?vo#`obpp>!Bppl`jbwjlmjmgjujgvbopsfqpsf`wjufpfwWjnflvw+vqo+kwws9,,nbwkfnbwj`pnbqdjm.wls9fufmwvbooz#gfp`qjswjlm*#ml.qfsfbw`loof`wjlmp-ISD\\x7Fwkvna\\x7Fsbqwj`jsbwf,kfbg=?algzeolbw9ofew8?oj#`obpp>!kvmgqfgp#le\\t\\tKltfufq/#`lnslpjwjlm`ofbq9alwk8`llsfqbwjlmtjwkjm#wkf#obafo#elq>!alqgfq.wls9Mft#Yfbobmgqf`lnnfmgfgsklwldqbskzjmwfqfpwjmd%ow8pvs%dw8`lmwqlufqpzMfwkfqobmgpbowfqmbwjufnb{ofmdwk>!ptjwyfqobmgGfufolsnfmwfppfmwjbooz\\t\\tBowklvdk#?,wf{wbqfb=wkvmgfqajqgqfsqfpfmwfg%bns8mgbpk8psf`vobwjlm`lnnvmjwjfpofdjpobwjlmfof`wqlmj`p\\t\\n?gju#jg>!joovpwqbwfgfmdjmffqjmdwfqqjwlqjfpbvwklqjwjfpgjpwqjavwfg5!#kfjdkw>!pbmp.pfqje8`bsbaof#le#gjpbssfbqfgjmwfqb`wjufollhjmd#elqjw#tlvog#afBedkbmjpwbmtbp#`qfbwfgNbwk-eollq+pvqqlvmgjmd`bm#bopl#aflapfqubwjlmnbjmwfmbm`ffm`lvmwfqfg?k1#`obpp>!nlqf#qf`fmwjw#kbp#affmjmubpjlm#le*-dfwWjnf+*evmgbnfmwboGfpsjwf#wkf!=?gju#jg>!jmpsjqbwjlmf{bnjmbwjlmsqfsbqbwjlmf{sobmbwjlm?jmsvw#jg>!?,b=?,psbm=ufqpjlmp#lejmpwqvnfmwpafelqf#wkf##>#$kwws9,,Gfp`qjswjlmqfobwjufoz#-pvapwqjmd+fb`k#le#wkff{sfqjnfmwpjmeovfmwjbojmwfdqbwjlmnbmz#sflsofgvf#wl#wkf#`lnajmbwjlmgl#mlw#kbufNjggof#Fbpw?mlp`qjsw=?`lszqjdkw!#sfqkbsp#wkfjmpwjwvwjlmjm#Gf`fnafqbqqbmdfnfmwnlpw#ebnlvpsfqplmbojwz`qfbwjlm#leojnjwbwjlmpf{`ovpjufozplufqfjdmwz.`lmwfmw!=\\t?wg#`obpp>!vmgfqdqlvmgsbqboofo#wlgl`wqjmf#lel``vsjfg#azwfqnjmloldzQfmbjppbm`fb#mvnafq#lepvsslqw#elqf{solqbwjlmqf`ldmjwjlmsqfgf`fpplq?jnd#pq`>!,?k2#`obpp>!svaoj`bwjlmnbz#bopl#afpsf`jbojyfg?,ejfogpfw=sqldqfppjufnjoojlmp#lepwbwfp#wkbwfmelq`fnfmwbqlvmg#wkf#lmf#bmlwkfq-sbqfmwMlgfbdqj`vowvqfBowfqmbwjufqfpfbq`kfqpwltbqgp#wkfNlpw#le#wkfnbmz#lwkfq#+fpsf`jbooz?wg#tjgwk>!8tjgwk9233&jmgfsfmgfmw?k0#`obpp>!#lm`kbmdf>!*-bgg@obpp+jmwfqb`wjlmLmf#le#wkf#gbvdkwfq#leb``fpplqjfpaqbm`kfp#le\\x0E\\t?gju#jg>!wkf#obqdfpwgf`obqbwjlmqfdvobwjlmpJmelqnbwjlmwqbmpobwjlmgl`vnfmwbqzjm#lqgfq#wl!=\\t?kfbg=\\t?!#kfjdkw>!2b`qlpp#wkf#lqjfmwbwjlm*8?,p`qjsw=jnsofnfmwfg`bm#af#pffmwkfqf#tbp#bgfnlmpwqbwf`lmwbjmfq!=`lmmf`wjlmpwkf#Aqjwjpktbp#tqjwwfm\"jnslqwbmw8s{8#nbqdjm.elooltfg#azbajojwz#wl#`lnsoj`bwfggvqjmd#wkf#jnnjdqbwjlmbopl#`boofg?k7#`obpp>!gjpwjm`wjlmqfsob`fg#azdlufqmnfmwpol`bwjlm#lejm#Mlufnafqtkfwkfq#wkf?,s=\\t?,gju=b`rvjpjwjlm`boofg#wkf#sfqpf`vwjlmgfpjdmbwjlmxelmw.pjyf9bssfbqfg#jmjmufpwjdbwff{sfqjfm`fgnlpw#ojhfoztjgfoz#vpfggjp`vppjlmpsqfpfm`f#le#+gl`vnfmw-f{wfmpjufozJw#kbp#affmjw#glfp#mlw`lmwqbqz#wljmkbajwbmwpjnsqlufnfmwp`klobqpkjs`lmpvnswjlmjmpwqv`wjlmelq#f{bnsoflmf#lq#nlqfs{8#sbggjmdwkf#`vqqfmwb#pfqjfp#lebqf#vpvboozqlof#jm#wkfsqfujlvpoz#gfqjubwjufpfujgfm`f#lef{sfqjfm`fp`lolqp`kfnfpwbwfg#wkbw`fqwjej`bwf?,b=?,gju=\\t#pfof`wfg>!kjdk#p`klloqfpslmpf#wl`lnelqwbaofbglswjlm#lewkqff#zfbqpwkf#`lvmwqzjm#Efaqvbqzpl#wkbw#wkfsflsof#tkl#sqlujgfg#az?sbqbn#mbnfbeef`wfg#azjm#wfqnp#lebssljmwnfmwJPL.;;6:.2!tbp#alqm#jmkjpwlqj`bo#qfdbqgfg#bpnfbpvqfnfmwjp#abpfg#lm#bmg#lwkfq#9#evm`wjlm+pjdmjej`bmw`fofaqbwjlmwqbmpnjwwfg,ip,irvfqz-jp#hmltm#bpwkflqfwj`bo#wbajmgf{>!jw#`lvog#af?mlp`qjsw=\\tkbujmd#affm\\x0E\\t?kfbg=\\x0E\\t?#%rvlw8Wkf#`lnsjobwjlmkf#kbg#affmsqlgv`fg#azskjolplskfq`lmpwqv`wfgjmwfmgfg#wlbnlmd#lwkfq`lnsbqfg#wlwl#pbz#wkbwFmdjmffqjmdb#gjeefqfmwqfefqqfg#wlgjeefqfm`fpafojfe#wkbwsklwldqbskpjgfmwjezjmdKjpwlqz#le#Qfsvaoj`#lemf`fppbqjozsqlabajojwzwf`kmj`boozofbujmd#wkfpsf`wb`vobqeqb`wjlm#lefof`wqj`jwzkfbg#le#wkfqfpwbvqbmwpsbqwmfqpkjsfnskbpjp#lmnlpw#qf`fmwpkbqf#tjwk#pbzjmd#wkbwejoofg#tjwkgfpjdmfg#wljw#jp#lewfm!=?,jeqbnf=bp#elooltp9nfqdfg#tjwkwkqlvdk#wkf`lnnfq`jbo#sljmwfg#lvwlsslqwvmjwzujft#le#wkfqfrvjqfnfmwgjujpjlm#lesqldqbnnjmdkf#qf`fjufgpfwJmwfqubo!=?,psbm=?,jm#Mft#Zlqhbggjwjlmbo#`lnsqfppjlm\\t\\t?gju#jg>!jm`lqslqbwf8?,p`qjsw=?bwwb`kFufmwaf`bnf#wkf#!#wbqdfw>!\\\\`bqqjfg#lvwPlnf#le#wkfp`jfm`f#bmgwkf#wjnf#le@lmwbjmfq!=nbjmwbjmjmd@kqjpwlskfqNv`k#le#wkftqjwjmdp#le!#kfjdkw>!1pjyf#le#wkfufqpjlm#le#nj{wvqf#le#afwtffm#wkfF{bnsofp#lefgv`bwjlmbo`lnsfwjwjuf#lmpvanjw>!gjqf`wlq#legjpwjm`wjuf,GWG#[KWNO#qfobwjmd#wlwfmgfm`z#wlsqlujm`f#letkj`k#tlvoggfpsjwf#wkfp`jfmwjej`#ofdjpobwvqf-jmmfqKWNO#boofdbwjlmpBdqj`vowvqftbp#vpfg#jmbssqlb`k#wljmwfoojdfmwzfbqp#obwfq/pbmp.pfqjegfwfqnjmjmdSfqelqnbm`fbssfbqbm`fp/#tkj`k#jp#elvmgbwjlmpbaaqfujbwfgkjdkfq#wkbmp#eqln#wkf#jmgjujgvbo#`lnslpfg#lepvsslpfg#wl`objnp#wkbwbwwqjavwjlmelmw.pjyf92fofnfmwp#leKjpwlqj`bo#kjp#aqlwkfqbw#wkf#wjnfbmmjufqpbqzdlufqmfg#azqfobwfg#wl#vowjnbwfoz#jmmlubwjlmpjw#jp#pwjoo`bm#lmoz#afgfejmjwjlmpwlDNWPwqjmdB#mvnafq#lejnd#`obpp>!Fufmwvbooz/tbp#`kbmdfgl``vqqfg#jmmfjdkalqjmdgjpwjmdvjpktkfm#kf#tbpjmwqlgv`jmdwfqqfpwqjboNbmz#le#wkfbqdvfp#wkbwbm#Bnfqj`bm`lmrvfpw#letjgfpsqfbg#tfqf#hjoofgp`qffm#bmg#Jm#lqgfq#wlf{sf`wfg#wlgfp`fmgbmwpbqf#ol`bwfgofdjpobwjufdfmfqbwjlmp#ab`hdqlvmgnlpw#sflsofzfbqp#bewfqwkfqf#jp#mlwkf#kjdkfpweqfrvfmwoz#wkfz#gl#mlwbqdvfg#wkbwpkltfg#wkbwsqfglnjmbmwwkfloldj`boaz#wkf#wjnf`lmpjgfqjmdpklqw.ojufg?,psbm=?,b=`bm#af#vpfgufqz#ojwwoflmf#le#wkf#kbg#boqfbgzjmwfqsqfwfg`lnnvmj`bwfefbwvqfp#ledlufqmnfmw/?,mlp`qjsw=fmwfqfg#wkf!#kfjdkw>!0Jmgfsfmgfmwslsvobwjlmpobqdf.p`bof-#Bowklvdk#vpfg#jm#wkfgfpwqv`wjlmslppjajojwzpwbqwjmd#jmwtl#lq#nlqff{sqfppjlmppvalqgjmbwfobqdfq#wkbmkjpwlqz#bmg?,lswjlm=\\x0E\\t@lmwjmfmwbofojnjmbwjmdtjoo#mlw#afsqb`wj`f#lejm#eqlmw#lepjwf#le#wkffmpvqf#wkbwwl#`qfbwf#bnjppjppjssjslwfmwjboozlvwpwbmgjmdafwwfq#wkbmtkbw#jp#mltpjwvbwfg#jmnfwb#mbnf>!WqbgjwjlmbopvddfpwjlmpWqbmpobwjlmwkf#elqn#lebwnlpskfqj`jgfloldj`bofmwfqsqjpfp`bo`vobwjmdfbpw#le#wkfqfnmbmwp#lesovdjmpsbdf,jmgf{-sks<qfnbjmfg#jmwqbmpelqnfgKf#tbp#bopltbp#boqfbgzpwbwjpwj`bojm#ebulq#leNjmjpwqz#lenlufnfmw#leelqnvobwjlmjp#qfrvjqfg?ojmh#qfo>!Wkjp#jp#wkf#?b#kqfe>!,slsvobqjyfgjmuloufg#jmbqf#vpfg#wlbmg#pfufqbonbgf#az#wkfpffnp#wl#afojhfoz#wkbwSbofpwjmjbmmbnfg#bewfqjw#kbg#affmnlpw#`lnnlmwl#qfefq#wlavw#wkjp#jp`lmpf`vwjufwfnslqbqjozJm#dfmfqbo/`lmufmwjlmpwbhfp#sob`fpvagjujpjlmwfqqjwlqjbolsfqbwjlmbosfqnbmfmwoztbp#obqdfozlvwaqfbh#lejm#wkf#sbpwelooltjmd#b#{nomp9ld>!=?b#`obpp>!`obpp>!wf{w@lmufqpjlm#nbz#af#vpfgnbmveb`wvqfbewfq#afjmd`ofbqej{!=\\trvfpwjlm#letbp#fof`wfgwl#af`lnf#baf`bvpf#le#plnf#sflsofjmpsjqfg#azpv``fppevo#b#wjnf#tkfmnlqf#`lnnlmbnlmdpw#wkfbm#leej`jbotjgwk9233&8wf`kmloldz/tbp#bglswfgwl#hffs#wkfpfwwofnfmwpojuf#ajqwkpjmgf{-kwno!@lmmf`wj`vwbppjdmfg#wl%bns8wjnfp8b``lvmw#elqbojdm>qjdkwwkf#`lnsbmzbotbzp#affmqfwvqmfg#wljmuloufnfmwAf`bvpf#wkfwkjp#sfqjlg!#mbnf>!r!#`lmejmfg#wlb#qfpvow#leubovf>!!#,=jp#b`wvboozFmujqlmnfmw\\x0E\\t?,kfbg=\\x0E\\t@lmufqpfoz/=\\t?gju#jg>!3!#tjgwk>!2jp#sqlabaozkbuf#af`lnf`lmwqloojmdwkf#sqlaofn`jwjyfmp#leslojwj`jbmpqfb`kfg#wkfbp#fbqoz#bp9mlmf8#lufq?wbaof#`fooubojgjwz#legjqf`woz#wllmnlvpfgltmtkfqf#jw#jptkfm#jw#tbpnfnafqp#le#qfobwjlm#wlb``lnnlgbwfbolmd#tjwk#Jm#wkf#obwfwkf#Fmdojpkgfoj`jlvp!=wkjp#jp#mlwwkf#sqfpfmwje#wkfz#bqfbmg#ejmboozb#nbwwfq#le\\x0E\\t\\n?,gju=\\x0E\\t\\x0E\\t?,p`qjsw=ebpwfq#wkbmnbilqjwz#lebewfq#tkj`k`lnsbqbwjufwl#nbjmwbjmjnsqluf#wkfbtbqgfg#wkffq!#`obpp>!eqbnfalqgfqqfpwlqbwjlmjm#wkf#pbnfbmbozpjp#lewkfjq#ejqpwGvqjmd#wkf#`lmwjmfmwbopfrvfm`f#leevm`wjlm+*xelmw.pjyf9#tlqh#lm#wkf?,p`qjsw=\\t?afdjmp#tjwkibubp`qjsw9`lmpwjwvfmwtbp#elvmgfgfrvjojaqjvnbppvnf#wkbwjp#djufm#azmffgp#wl#af`llqgjmbwfpwkf#ubqjlvpbqf#sbqw#lelmoz#jm#wkfpf`wjlmp#lejp#b#`lnnlmwkflqjfp#legjp`lufqjfpbppl`jbwjlmfgdf#le#wkfpwqfmdwk#leslpjwjlm#jmsqfpfmw.gbzvmjufqpboozwl#elqn#wkfavw#jmpwfbg`lqslqbwjlmbwwb`kfg#wljp#`lnnlmozqfbplmp#elq#%rvlw8wkf#`bm#af#nbgftbp#baof#wltkj`k#nfbmpavw#gjg#mlwlmNlvpfLufqbp#slppjaoflsfqbwfg#az`lnjmd#eqlnwkf#sqjnbqzbggjwjlm#leelq#pfufqbowqbmpefqqfgb#sfqjlg#lebqf#baof#wlkltfufq/#jwpklvog#kbufnv`k#obqdfq\\t\\n?,p`qjsw=bglswfg#wkfsqlsfqwz#legjqf`wfg#azfeef`wjufoztbp#aqlvdkw`kjogqfm#leSqldqbnnjmdolmdfq#wkbmnbmvp`qjswptbq#bdbjmpwaz#nfbmp#lebmg#nlpw#lepjnjobq#wl#sqlsqjfwbqzlqjdjmbwjmdsqfpwjdjlvpdqbnnbwj`bof{sfqjfm`f-wl#nbhf#wkfJw#tbp#bopljp#elvmg#jm`lnsfwjwlqpjm#wkf#V-P-qfsob`f#wkfaqlvdkw#wkf`bo`vobwjlmeboo#le#wkfwkf#dfmfqbosqb`wj`boozjm#klmlq#leqfofbpfg#jmqfpjgfmwjbobmg#plnf#lehjmd#le#wkfqfb`wjlm#wl2pw#Fbqo#le`vowvqf#bmgsqjm`jsbooz?,wjwof=\\t##wkfz#`bm#afab`h#wl#wkfplnf#le#kjpf{slpvqf#wlbqf#pjnjobqelqn#le#wkfbggEbulqjwf`jwjyfmpkjssbqw#jm#wkfsflsof#tjwkjm#sqb`wj`fwl#`lmwjmvf%bns8njmvp8bssqlufg#az#wkf#ejqpw#booltfg#wkfbmg#elq#wkfevm`wjlmjmdsobzjmd#wkfplovwjlm#wlkfjdkw>!3!#jm#kjp#allhnlqf#wkbm#belooltp#wkf`qfbwfg#wkfsqfpfm`f#jm%maps8?,wg=mbwjlmbojpwwkf#jgfb#leb#`kbqb`wfqtfqf#elq`fg#`obpp>!awmgbzp#le#wkfefbwvqfg#jmpkltjmd#wkfjmwfqfpw#jmjm#sob`f#lewvqm#le#wkfwkf#kfbg#leOlqg#le#wkfslojwj`boozkbp#jwp#ltmFgv`bwjlmbobssqlubo#leplnf#le#wkffb`k#lwkfq/afkbujlq#lebmg#af`bvpfbmg#bmlwkfqbssfbqfg#lmqf`lqgfg#jmaob`h%rvlw8nbz#jm`ovgfwkf#tlqog$p`bm#ofbg#wlqfefqp#wl#balqgfq>!3!#dlufqmnfmw#tjmmjmd#wkfqfpvowfg#jm#tkjof#wkf#Tbpkjmdwlm/wkf#pvaif`w`jwz#jm#wkf=?,gju=\\x0E\\t\\n\\nqfeof`w#wkfwl#`lnsofwfaf`bnf#nlqfqbgjlb`wjufqfif`wfg#aztjwklvw#bmzkjp#ebwkfq/tkj`k#`lvog`lsz#le#wkfwl#jmgj`bwfb#slojwj`bob``lvmwp#le`lmpwjwvwfptlqhfg#tjwkfq?,b=?,oj=le#kjp#ojefb``lnsbmjfg`ojfmwTjgwksqfufmw#wkfOfdjpobwjufgjeefqfmwozwldfwkfq#jmkbp#pfufqboelq#bmlwkfqwf{w#le#wkfelvmgfg#wkff#tjwk#wkf#jp#vpfg#elq`kbmdfg#wkfvpvbooz#wkfsob`f#tkfqftkfqfbp#wkf=#?b#kqfe>!!=?b#kqfe>!wkfnpfoufp/bowklvdk#kfwkbw#`bm#afwqbgjwjlmboqlof#le#wkfbp#b#qfpvowqfnluf@kjoggfpjdmfg#aztfpw#le#wkfPlnf#sflsofsqlgv`wjlm/pjgf#le#wkfmftpofwwfqpvpfg#az#wkfgltm#wl#wkfb``fswfg#azojuf#jm#wkfbwwfnswp#wllvwpjgf#wkfeqfrvfm`jfpKltfufq/#jmsqldqbnnfqpbw#ofbpw#jmbssql{jnbwfbowklvdk#jwtbp#sbqw#lebmg#ubqjlvpDlufqmlq#lewkf#bqwj`ofwvqmfg#jmwl=?b#kqfe>!,wkf#f`lmlnzjp#wkf#nlpwnlpw#tjgfoztlvog#obwfqbmg#sfqkbspqjpf#wl#wkfl``vqp#tkfmvmgfq#tkj`k`lmgjwjlmp-wkf#tfpwfqmwkflqz#wkbwjp#sqlgv`fgwkf#`jwz#lejm#tkj`k#kfpffm#jm#wkfwkf#`fmwqboavjogjmd#lenbmz#le#kjpbqfb#le#wkfjp#wkf#lmoznlpw#le#wkfnbmz#le#wkfwkf#TfpwfqmWkfqf#jp#mlf{wfmgfg#wlPwbwjpwj`bo`lopsbm>1#\\x7Fpklqw#pwlqzslppjaof#wlwlsloldj`bo`qjwj`bo#leqfslqwfg#wlb#@kqjpwjbmgf`jpjlm#wljp#frvbo#wlsqlaofnp#leWkjp#`bm#afnfq`kbmgjpfelq#nlpw#leml#fujgfm`ffgjwjlmp#lefofnfmwp#jm%rvlw8-#Wkf`ln,jnbdfp,tkj`k#nbhfpwkf#sql`fppqfnbjmp#wkfojwfqbwvqf/jp#b#nfnafqwkf#slsvobqwkf#bm`jfmwsqlaofnp#jmwjnf#le#wkfgfefbwfg#azalgz#le#wkfb#eft#zfbqpnv`k#le#wkfwkf#tlqh#le@bojelqmjb/pfqufg#bp#bdlufqmnfmw-`lm`fswp#lenlufnfmw#jm\\n\\n?gju#jg>!jw!#ubovf>!obmdvbdf#lebp#wkfz#bqfsqlgv`fg#jmjp#wkbw#wkff{sobjm#wkfgju=?,gju=\\tKltfufq#wkfofbg#wl#wkf\\n?b#kqfe>!,tbp#dqbmwfgsflsof#kbuf`lmwjmvbooztbp#pffm#bpbmg#qfobwfgwkf#qlof#lesqlslpfg#azle#wkf#afpwfb`k#lwkfq-@lmpwbmwjmfsflsof#eqlngjbof`wp#lewl#qfujpjlmtbp#qfmbnfgb#plvq`f#lewkf#jmjwjboobvm`kfg#jmsqlujgf#wkfwl#wkf#tfpwtkfqf#wkfqfbmg#pjnjobqafwtffm#wtljp#bopl#wkfFmdojpk#bmg`lmgjwjlmp/wkbw#jw#tbpfmwjwofg#wlwkfnpfoufp-rvbmwjwz#leqbmpsbqfm`zwkf#pbnf#bpwl#iljm#wkf`lvmwqz#bmgwkjp#jp#wkfWkjp#ofg#wlb#pwbwfnfmw`lmwqbpw#wlobpwJmgf{Lewkqlvdk#kjpjp#gfpjdmfgwkf#wfqn#jpjp#sqlujgfgsqlwf`w#wkfmd?,b=?,oj=Wkf#`vqqfmwwkf#pjwf#lepvapwbmwjbof{sfqjfm`f/jm#wkf#Tfpwwkfz#pklvogpolufm(ajmb`lnfmwbqjlpvmjufqpjgbg`lmgj`jlmfpb`wjujgbgfpf{sfqjfm`jbwf`mlold/Absqlgv``j/_msvmwvb`j/_mbsoj`b`j/_m`lmwqbpf/]b`bwfdlq/Abpqfdjpwqbqpfsqlefpjlmbowqbwbnjfmwlqfd/Apwqbwfpf`qfwbq/Absqjm`jsbofpsqlwf``j/_mjnslqwbmwfpjnslqwbm`jbslpjajojgbgjmwfqfpbmwf`qf`jnjfmwlmf`fpjgbgfppvp`qjajqpfbpl`jb`j/_mgjpslmjaofpfubovb`j/_mfpwvgjbmwfpqfpslmpbaofqfplov`j/_mdvbgbobibqbqfdjpwqbglplslqwvmjgbg`lnfq`jbofpelwldqbe/Abbvwlqjgbgfpjmdfmjfq/Abwfofujpj/_m`lnsfwfm`jblsfqb`jlmfpfpwbaof`jglpjnsofnfmwfb`wvbonfmwfmbufdb`j/_m`lmelqnjgbgojmf.kfjdkw9elmw.ebnjoz9!#9#!kwws9,,bssoj`bwjlmpojmh!#kqfe>!psf`jej`booz,,?\"X@GBWBX\\tLqdbmjybwjlmgjpwqjavwjlm3s{8#kfjdkw9qfobwjlmpkjsgfuj`f.tjgwk?gju#`obpp>!?obafo#elq>!qfdjpwqbwjlm?,mlp`qjsw=\\t,jmgf{-kwno!tjmglt-lsfm+#\"jnslqwbmw8bssoj`bwjlm,jmgfsfmgfm`f,,ttt-dlldoflqdbmjybwjlmbvwl`lnsofwfqfrvjqfnfmwp`lmpfqubwjuf?elqn#mbnf>!jmwfoof`wvbonbqdjm.ofew92;wk#`fmwvqzbm#jnslqwbmwjmpwjwvwjlmpbaaqfujbwjlm?jnd#`obpp>!lqdbmjpbwjlm`jujojybwjlm2:wk#`fmwvqzbq`kjwf`wvqfjm`lqslqbwfg13wk#`fmwvqz.`lmwbjmfq!=nlpw#mlwbaoz,=?,b=?,gju=mlwjej`bwjlm$vmgfejmfg$*Evqwkfqnlqf/afojfuf#wkbwjmmfqKWNO#>#sqjlq#wl#wkfgqbnbwj`boozqfefqqjmd#wlmfdlwjbwjlmpkfbgrvbqwfqpPlvwk#Beqj`bvmpv``fppevoSfmmpzoubmjbBp#b#qfpvow/?kwno#obmd>!%ow8,pvs%dw8gfbojmd#tjwkskjobgfoskjbkjpwlqj`booz*8?,p`qjsw=\\tsbggjmd.wls9f{sfqjnfmwbodfwBwwqjavwfjmpwqv`wjlmpwf`kmloldjfpsbqw#le#wkf#>evm`wjlm+*xpvap`qjswjlmo-gwg!=\\x0E\\t?kwdfldqbskj`bo@lmpwjwvwjlm$/#evm`wjlm+pvsslqwfg#azbdqj`vowvqbo`lmpwqv`wjlmsvaoj`bwjlmpelmw.pjyf9#2b#ubqjfwz#le?gju#pwzof>!Fm`z`olsfgjbjeqbnf#pq`>!gfnlmpwqbwfgb``lnsojpkfgvmjufqpjwjfpGfnldqbskj`p*8?,p`qjsw=?gfgj`bwfg#wlhmltofgdf#lepbwjpeb`wjlmsbqwj`vobqoz?,gju=?,gju=Fmdojpk#+VP*bssfmg@kjog+wqbmpnjppjlmp-#Kltfufq/#jmwfoojdfm`f!#wbajmgf{>!eolbw9qjdkw8@lnnlmtfbowkqbmdjmd#eqlnjm#tkj`k#wkfbw#ofbpw#lmfqfsqlgv`wjlmfm`z`olsfgjb8elmw.pjyf92ivqjpgj`wjlmbw#wkbw#wjnf!=?b#`obpp>!Jm#bggjwjlm/gfp`qjswjlm(`lmufqpbwjlm`lmwb`w#tjwkjp#dfmfqboozq!#`lmwfmw>!qfsqfpfmwjmd%ow8nbwk%dw8sqfpfmwbwjlml``bpjlmbooz?jnd#tjgwk>!mbujdbwjlm!=`lnsfmpbwjlm`kbnsjlmpkjsnfgjb>!boo!#ujlobwjlm#leqfefqfm`f#wlqfwvqm#wqvf8Pwqj`w,,FM!#wqbmpb`wjlmpjmwfqufmwjlmufqjej`bwjlmJmelqnbwjlm#gjeej`vowjfp@kbnsjlmpkjs`bsbajojwjfp?\"Xfmgje^..=~\\t?,p`qjsw=\\t@kqjpwjbmjwzelq#f{bnsof/Sqlefppjlmboqfpwqj`wjlmppvddfpw#wkbwtbp#qfofbpfg+pv`k#bp#wkfqfnluf@obpp+vmfnsolznfmwwkf#Bnfqj`bmpwqv`wvqf#le,jmgf{-kwno#svaojpkfg#jmpsbm#`obpp>!!=?b#kqfe>!,jmwqlgv`wjlmafolmdjmd#wl`objnfg#wkbw`lmpfrvfm`fp?nfwb#mbnf>!Dvjgf#wl#wkflufqtkfonjmdbdbjmpw#wkf#`lm`fmwqbwfg/\\t-mlmwlv`k#lapfqubwjlmp?,b=\\t?,gju=\\te#+gl`vnfmw-alqgfq9#2s{#xelmw.pjyf92wqfbwnfmw#le3!#kfjdkw>!2nlgjej`bwjlmJmgfsfmgfm`fgjujgfg#jmwldqfbwfq#wkbmb`kjfufnfmwpfpwbaojpkjmdIbubP`qjsw!#mfufqwkfofpppjdmjej`bm`fAqlbg`bpwjmd=%maps8?,wg=`lmwbjmfq!=\\tpv`k#bp#wkf#jmeovfm`f#leb#sbqwj`vobqpq`>$kwws9,,mbujdbwjlm!#kboe#le#wkf#pvapwbmwjbo#%maps8?,gju=bgubmwbdf#legjp`lufqz#leevmgbnfmwbo#nfwqlslojwbmwkf#lsslpjwf!#{no9obmd>!gfojafqbwfozbojdm>`fmwfqfulovwjlm#lesqfpfqubwjlmjnsqlufnfmwpafdjmmjmd#jmIfpvp#@kqjpwSvaoj`bwjlmpgjpbdqffnfmwwf{w.bojdm9q/#evm`wjlm+*pjnjobqjwjfpalgz=?,kwno=jp#`vqqfmwozboskbafwj`bojp#plnfwjnfpwzsf>!jnbdf,nbmz#le#wkf#eolt9kjggfm8bubjobaof#jmgfp`qjaf#wkff{jpwfm`f#leboo#lufq#wkfwkf#Jmwfqmfw\\n?vo#`obpp>!jmpwboobwjlmmfjdkalqkllgbqnfg#elq`fpqfgv`jmd#wkf`lmwjmvfp#wlMlmfwkfofpp/wfnsfqbwvqfp\\t\\n\\n?b#kqfe>!`olpf#wl#wkff{bnsofp#le#jp#balvw#wkf+pff#afolt*-!#jg>!pfbq`ksqlefppjlmbojp#bubjobaofwkf#leej`jbo\\n\\n?,p`qjsw=\\t\\t\\n\\n?gju#jg>!b``fofqbwjlmwkqlvdk#wkf#Kboo#le#Ebnfgfp`qjswjlmpwqbmpobwjlmpjmwfqefqfm`f#wzsf>$wf{w,qf`fmw#zfbqpjm#wkf#tlqogufqz#slsvobqxab`hdqlvmg9wqbgjwjlmbo#plnf#le#wkf#`lmmf`wfg#wlf{soljwbwjlmfnfqdfm`f#le`lmpwjwvwjlmB#Kjpwlqz#lepjdmjej`bmw#nbmveb`wvqfgf{sf`wbwjlmp=?mlp`qjsw=?`bm#af#elvmgaf`bvpf#wkf#kbp#mlw#affmmfjdkalvqjmdtjwklvw#wkf#bggfg#wl#wkf\\n?oj#`obpp>!jmpwqvnfmwboPlujfw#Vmjlmb`hmltofgdfgtkj`k#`bm#afmbnf#elq#wkfbwwfmwjlm#wlbwwfnswp#wl#gfufolsnfmwpJm#eb`w/#wkf?oj#`obpp>!bjnsoj`bwjlmppvjwbaof#elqnv`k#le#wkf#`lolmjybwjlmsqfpjgfmwjbo`bm`foAvaaof#Jmelqnbwjlmnlpw#le#wkf#jp#gfp`qjafgqfpw#le#wkf#nlqf#lq#ofppjm#PfswfnafqJmwfoojdfm`fpq`>!kwws9,,s{8#kfjdkw9#bubjobaof#wlnbmveb`wvqfqkvnbm#qjdkwpojmh#kqfe>!,bubjobajojwzsqlslqwjlmbolvwpjgf#wkf#bpwqlmlnj`bokvnbm#afjmdpmbnf#le#wkf#bqf#elvmg#jmbqf#abpfg#lmpnboofq#wkbmb#sfqplm#tklf{sbmpjlm#lebqdvjmd#wkbwmlt#hmltm#bpJm#wkf#fbqozjmwfqnfgjbwfgfqjufg#eqlnP`bmgjmbujbm?,b=?,gju=\\x0E\\t`lmpjgfq#wkfbm#fpwjnbwfgwkf#Mbwjlmbo?gju#jg>!sbdqfpvowjmd#jm`lnnjppjlmfgbmboldlvp#wlbqf#qfrvjqfg,vo=\\t?,gju=\\ttbp#abpfg#lmbmg#af`bnf#b%maps8%maps8w!#ubovf>!!#tbp#`bswvqfgml#nlqf#wkbmqfpsf`wjufoz`lmwjmvf#wl#=\\x0E\\t?kfbg=\\x0E\\t?tfqf#`qfbwfgnlqf#dfmfqbojmelqnbwjlm#vpfg#elq#wkfjmgfsfmgfmw#wkf#Jnsfqjbo`lnslmfmw#lewl#wkf#mlqwkjm`ovgf#wkf#@lmpwqv`wjlmpjgf#le#wkf#tlvog#mlw#afelq#jmpwbm`fjmufmwjlm#lenlqf#`lnsof{`loof`wjufozab`hdqlvmg9#wf{w.bojdm9#jwp#lqjdjmbojmwl#b``lvmwwkjp#sql`fppbm#f{wfmpjufkltfufq/#wkfwkfz#bqf#mlwqfif`wfg#wkf`qjwj`jpn#legvqjmd#tkj`ksqlabaoz#wkfwkjp#bqwj`of+evm`wjlm+*xJw#pklvog#afbm#bdqffnfmwb``jgfmwboozgjeefqp#eqlnBq`kjwf`wvqfafwwfq#hmltmbqqbmdfnfmwpjmeovfm`f#lmbwwfmgfg#wkfjgfmwj`bo#wlplvwk#le#wkfsbpp#wkqlvdk{no!#wjwof>!tfjdkw9alog8`qfbwjmd#wkfgjpsobz9mlmfqfsob`fg#wkf?jnd#pq`>!,jkwwsp9,,ttt-Tlqog#Tbq#JJwfpwjnlmjbopelvmg#jm#wkfqfrvjqfg#wl#bmg#wkbw#wkfafwtffm#wkf#tbp#gfpjdmfg`lmpjpwp#le#`lmpjgfqbaozsvaojpkfg#azwkf#obmdvbdf@lmpfqubwjlm`lmpjpwfg#leqfefq#wl#wkfab`h#wl#wkf#`pp!#nfgjb>!Sflsof#eqln#bubjobaof#lmsqlufg#wl#afpvddfpwjlmp!tbp#hmltm#bpubqjfwjfp#leojhfoz#wl#af`lnsqjpfg#lepvsslqw#wkf#kbmgp#le#wkf`lvsofg#tjwk`lmmf`w#bmg#alqgfq9mlmf8sfqelqnbm`fpafelqf#afjmdobwfq#af`bnf`bo`vobwjlmplewfm#`boofgqfpjgfmwp#lenfbmjmd#wkbw=?oj#`obpp>!fujgfm`f#elqf{sobmbwjlmpfmujqlmnfmwp!=?,b=?,gju=tkj`k#booltpJmwqlgv`wjlmgfufolsfg#azb#tjgf#qbmdflm#afkboe#leubojdm>!wls!sqjm`jsof#lebw#wkf#wjnf/?,mlp`qjsw=\\x0Epbjg#wl#kbufjm#wkf#ejqpwtkjof#lwkfqpkzslwkfwj`boskjolplskfqpsltfq#le#wkf`lmwbjmfg#jmsfqelqnfg#azjmbajojwz#wltfqf#tqjwwfmpsbm#pwzof>!jmsvw#mbnf>!wkf#rvfpwjlmjmwfmgfg#elqqfif`wjlm#lejnsojfp#wkbwjmufmwfg#wkfwkf#pwbmgbqgtbp#sqlabaozojmh#afwtffmsqlefpplq#lejmwfqb`wjlmp`kbmdjmd#wkfJmgjbm#L`fbm#`obpp>!obpwtlqhjmd#tjwk$kwws9,,ttt-zfbqp#afelqfWkjp#tbp#wkfqf`qfbwjlmbofmwfqjmd#wkfnfbpvqfnfmwpbm#f{wqfnfozubovf#le#wkfpwbqw#le#wkf\\t?,p`qjsw=\\t\\tbm#feelqw#wljm`qfbpf#wkfwl#wkf#plvwkpsb`jmd>!3!=pveej`jfmwozwkf#Fvqlsfbm`lmufqwfg#wl`ofbqWjnflvwgjg#mlw#kbuf`lmpfrvfmwozelq#wkf#mf{wf{wfmpjlm#lef`lmlnj`#bmgbowklvdk#wkfbqf#sqlgv`fgbmg#tjwk#wkfjmpveej`jfmwdjufm#az#wkfpwbwjmd#wkbwf{sfmgjwvqfp?,psbm=?,b=\\twklvdkw#wkbwlm#wkf#abpjp`foosbggjmd>jnbdf#le#wkfqfwvqmjmd#wljmelqnbwjlm/pfsbqbwfg#azbppbppjmbwfgp!#`lmwfmw>!bvwklqjwz#lemlqwktfpwfqm?,gju=\\t?gju#!=?,gju=\\x0E\\t##`lmpvowbwjlm`lnnvmjwz#lewkf#mbwjlmbojw#pklvog#afsbqwj`jsbmwp#bojdm>!ofewwkf#dqfbwfpwpfof`wjlm#lepvsfqmbwvqbogfsfmgfmw#lmjp#nfmwjlmfgbooltjmd#wkftbp#jmufmwfgb``lnsbmzjmdkjp#sfqplmbobubjobaof#bwpwvgz#le#wkflm#wkf#lwkfqf{f`vwjlm#leKvnbm#Qjdkwpwfqnp#le#wkfbppl`jbwjlmpqfpfbq`k#bmgpv``ffgfg#azgfefbwfg#wkfbmg#eqln#wkfavw#wkfz#bqf`lnnbmgfq#lepwbwf#le#wkfzfbqp#le#bdfwkf#pwvgz#le?vo#`obpp>!psob`f#jm#wkftkfqf#kf#tbp?oj#`obpp>!ewkfqf#bqf#mltkj`k#af`bnfkf#svaojpkfgf{sqfppfg#jmwl#tkj`k#wkf`lnnjppjlmfqelmw.tfjdkw9wfqqjwlqz#lef{wfmpjlmp!=Qlnbm#Fnsjqffrvbo#wl#wkfJm#`lmwqbpw/kltfufq/#bmgjp#wzsj`boozbmg#kjp#tjef+bopl#`boofg=?vo#`obpp>!feef`wjufoz#fuloufg#jmwlpffn#wl#kbuftkj`k#jp#wkfwkfqf#tbp#mlbm#f{`foofmwboo#le#wkfpfgfp`qjafg#azJm#sqb`wj`f/aqlbg`bpwjmd`kbqdfg#tjwkqfeof`wfg#jmpvaif`wfg#wlnjojwbqz#bmgwl#wkf#sljmwf`lmlnj`boozpfwWbqdfwjmdbqf#b`wvboozuj`wlqz#lufq+*8?,p`qjsw=`lmwjmvlvpozqfrvjqfg#elqfulovwjlmbqzbm#feef`wjufmlqwk#le#wkf/#tkj`k#tbp#eqlmw#le#wkflq#lwkfqtjpfplnf#elqn#lekbg#mlw#affmdfmfqbwfg#azjmelqnbwjlm-sfqnjwwfg#wljm`ovgfp#wkfgfufolsnfmw/fmwfqfg#jmwlwkf#sqfujlvp`lmpjpwfmwozbqf#hmltm#bpwkf#ejfog#lewkjp#wzsf#ledjufm#wl#wkfwkf#wjwof#le`lmwbjmp#wkfjmpwbm`fp#lejm#wkf#mlqwkgvf#wl#wkfjqbqf#gfpjdmfg`lqslqbwjlmptbp#wkbw#wkflmf#le#wkfpfnlqf#slsvobqpv``ffgfg#jmpvsslqw#eqlnjm#gjeefqfmwglnjmbwfg#azgfpjdmfg#elqltmfqpkjs#lebmg#slppjaozpwbmgbqgjyfgqfpslmpfWf{wtbp#jmwfmgfgqf`fjufg#wkfbppvnfg#wkbwbqfbp#le#wkfsqjnbqjoz#jmwkf#abpjp#lejm#wkf#pfmpfb``lvmwp#elqgfpwqlzfg#azbw#ofbpw#wtltbp#gf`obqfg`lvog#mlw#afPf`qfwbqz#lebssfbq#wl#afnbqdjm.wls92,]_p(\\x7F_p(\\',df*xwkqlt#f~8wkf#pwbqw#lewtl#pfsbqbwfobmdvbdf#bmgtkl#kbg#affmlsfqbwjlm#legfbwk#le#wkfqfbo#mvnafqp\\n?ojmh#qfo>!sqlujgfg#wkfwkf#pwlqz#le`lnsfwjwjlmpfmdojpk#+VH*fmdojpk#+VP*<p<R<Q<_<R<W<M=l<S=m<V<T=m=l<S=m<V<T=m=l<S=m<V<R5h4U4]4D5f4E\\nAO\\x05Gx\\bTA\\nzk\\x0BBl\\bQ\\x7F\\bTA\\nzk\\x0BUm\\bQ\\x7F\\bTA\\nzk\\npe\\x05u|\\ti@\\tcT\\bVV\\n\\\\}\\nxS\\tVp\\x05tS\\x05k`\\t[X\\t[X\\x0BHR\\bPv\\bTW\\bUe\\n\\x7Fa\\bQp\\x0B_W\\x0BWs\\nxS\\x0BAz\\n_y\\x04Khjmelqnb`j/_mkfqqbnjfmwbpfof`wq/_mj`lgfp`qjs`j/_m`obpjej`bglp`lml`jnjfmwlsvaoj`b`j/_mqfob`jlmbgbpjmelqn/Mwj`bqfob`jlmbglpgfsbqwbnfmwlwqbabibglqfpgjqf`wbnfmwfbzvmwbnjfmwlnfq`bglOjaqf`lmw/M`wfmlpkbajwb`jlmfp`vnsojnjfmwlqfpwbvqbmwfpgjpslpj`j/_m`lmpf`vfm`jbfof`wq/_mj`bbsoj`b`jlmfpgfp`lmf`wbgljmpwbob`j/_mqfbojyb`j/_mvwjojyb`j/_mfm`j`olsfgjbfmefqnfgbgfpjmpwqvnfmwlpf{sfqjfm`jbpjmpwjwv`j/_msbqwj`vobqfppva`bwfdlqjb=n<R<W=`<V<R<L<R=m=m<T<T=l<\\\\<]<R=n=g<]<R<W=`=d<Y<S=l<R=m=n<R<P<R<Z<Y=n<Y<X=l=o<_<T=i=m<W=o=k<\\\\<Y=m<Y<U=k<\\\\=m<^=m<Y<_<X<\\\\<L<R=m=m<T=c<p<R=m<V<^<Y<X=l=o<_<T<Y<_<R=l<R<X<\\\\<^<R<S=l<R=m<X<\\\\<Q<Q=g=i<X<R<W<Z<Q=g<T<P<Y<Q<Q<R<p<R=m<V<^=g=l=o<]<W<Y<U<p<R=m<V<^<\\\\=m=n=l<\\\\<Q=g<Q<T=k<Y<_<R=l<\\\\<]<R=n<Y<X<R<W<Z<Y<Q=o=m<W=o<_<T=n<Y<S<Y=l=`<r<X<Q<\\\\<V<R<S<R=n<R<P=o=l<\\\\<]<R=n=o<\\\\<S=l<Y<W=c<^<R<R<]=e<Y<R<X<Q<R<_<R=m<^<R<Y<_<R=m=n<\\\\=n=`<T<X=l=o<_<R<U=h<R=l=o<P<Y=i<R=l<R=d<R<S=l<R=n<T<^=m=m=g<W<V<\\\\<V<\\\\<Z<X=g<U<^<W<\\\\=m=n<T<_=l=o<S<S=g<^<P<Y=m=n<Y=l<\\\\<]<R=n<\\\\=m<V<\\\\<[<\\\\<W<S<Y=l<^=g<U<X<Y<W<\\\\=n=`<X<Y<Q=`<_<T<S<Y=l<T<R<X<]<T<[<Q<Y=m<R=m<Q<R<^<Y<P<R<P<Y<Q=n<V=o<S<T=n=`<X<R<W<Z<Q<\\\\=l<\\\\<P<V<\\\\=i<Q<\\\\=k<\\\\<W<R<L<\\\\<]<R=n<\\\\<N<R<W=`<V<R=m<R<^=m<Y<P<^=n<R=l<R<U<Q<\\\\=k<\\\\<W<\\\\=m<S<T=m<R<V=m<W=o<Z<]=g=m<T=m=n<Y<P<S<Y=k<\\\\=n<T<Q<R<^<R<_<R<S<R<P<R=e<T=m<\\\\<U=n<R<^<S<R=k<Y<P=o<S<R<P<R=e=`<X<R<W<Z<Q<R=m=m=g<W<V<T<]=g=m=n=l<R<X<\\\\<Q<Q=g<Y<P<Q<R<_<T<Y<S=l<R<Y<V=n<M<Y<U=k<\\\\=m<P<R<X<Y<W<T=n<\\\\<V<R<_<R<R<Q<W<\\\\<U<Q<_<R=l<R<X<Y<^<Y=l=m<T=c=m=n=l<\\\\<Q<Y=h<T<W=`<P=g=o=l<R<^<Q=c=l<\\\\<[<Q=g=i<T=m<V<\\\\=n=`<Q<Y<X<Y<W=b=c<Q<^<\\\\=l=c<P<Y<Q=`=d<Y<P<Q<R<_<T=i<X<\\\\<Q<Q<R<U<[<Q<\\\\=k<T=n<Q<Y<W=`<[=c=h<R=l=o<P<\\\\<N<Y<S<Y=l=`<P<Y=m=c=j<\\\\<[<\\\\=e<T=n=g<w=o=k=d<T<Y\\fHD\\fHU\\fIl\\fHn\\fHy\\fH\\\\\\fHD\\fIk\\fHi\\fHF\\fHD\\fIk\\fHy\\fHS\\fHC\\fHR\\fHy\\fH\\\\\\fIk\\fHn\\fHi\\fHD\\fIa\\fHC\\fHy\\fIa\\fHC\\fHR\\fH{\\fHR\\fHk\\fHM\\fH@\\fHR\\fH\\\\\\fIk\\fHy\\fHS\\fHT\\fIl\\fHJ\\fHS\\fHC\\fHR\\fHF\\fHU\\fH^\\fIk\\fHT\\fHS\\fHn\\fHU\\fHA\\fHR\\fH\\\\\\fHH\\fHi\\fHF\\fHD\\fIl\\fHY\\fHR\\fH^\\fIk\\fHT\\fIk\\fHY\\fHR\\fHy\\fH\\\\\\fHH\\fIk\\fHB\\fIk\\fH\\\\\\fIk\\fHU\\fIg\\fHD\\fIk\\fHT\\fHy\\fHH\\fIk\\fH@\\fHU\\fIm\\fHH\\fHT\\fHR\\fHk\\fHs\\fHU\\fIg\\fH{\\fHR\\fHp\\fHR\\fHD\\fIk\\fHB\\fHS\\fHD\\fHs\\fHy\\fH\\\\\\fHH\\fHR\\fHy\\fH\\\\\\fHD\\fHR\\fHe\\fHD\\fHy\\fIk\\fHC\\fHU\\fHR\\fHm\\fHT\\fH@\\fHT\\fIk\\fHA\\fHR\\fH[\\fHR\\fHj\\fHF\\fHy\\fIk\\fH^\\fHS\\fHC\\fIk\\fHZ\\fIm\\fH\\\\\\fIn\\fHk\\fHT\\fHy\\fIk\\fHt\\fHn\\fHs\\fIk\\fHB\\fIk\\fH\\\\\\fIl\\fHT\\fHy\\fHH\\fHR\\fHB\\fIk\\fH\\\\\\fHR\\fH^\\fIk\\fHy\\fH\\\\\\fHi\\fHK\\fHS\\fHy\\fHi\\fHF\\fHD\\fHR\\fHT\\fHB\\fHR\\fHp\\fHB\\fIm\\fHq\\fIk\\fHy\\fHR\\fH\\\\\\fHO\\fHU\\fIg\\fHH\\fHR\\fHy\\fHM\\fHP\\fIl\\fHC\\fHU\\fHR\\fHn\\fHU\\fIg\\fHs\\fH^\\fHZ\\fH@\\fIa\\fHJ\\fH^\\fHS\\fHC\\fHR\\fHp\\fIl\\fHY\\fHD\\fHp\\fHR\\fHH\\fHR\\fHy\\fId\\fHT\\fIk\\fHj\\fHF\\fHy\\fHR\\fHY\\fHR\\fH^\\fIl\\fHJ\\fIk\\fHD\\fIk\\fHF\\fIn\\fH\\\\\\fIl\\fHF\\fHR\\fHD\\fIl\\fHe\\fHT\\fHy\\fIk\\fHU\\fIg\\fH{\\fIl\\fH@\\fId\\fHL\\fHy\\fHj\\fHF\\fHy\\fIl\\fHY\\fH\\\\\\fIa\\fH[\\fH{\\fHR\\fHn\\fHY\\fHj\\fHF\\fHy\\fIg\\fHp\\fHS\\fH^\\fHR\\fHp\\fHR\\fHD\\fHR\\fHT\\fHU\\fHB\\fHH\\fHU\\fHB\\fIk\\fHn\\fHe\\fHD\\fHy\\fIl\\fHC\\fHR\\fHU\\fIn\\fHJ\\fH\\\\\\fIa\\fHp\\fHT\\fIn\\fHv\\fIl\\fHF\\fHT\\fHn\\fHJ\\fHT\\fHY\\fHR\\fH^\\fHU\\fIg\\fHD\\fHR\\fHU\\fIg\\fHH\\fIl\\fHp\\fId\\fHT\\fIk\\fHY\\fHR\\fHF\\fHT\\fHp\\fHD\\fHH\\fHR\\fHD\\fIk\\fHH\\fHR\\fHp\\fHR\\fH\\\\\\fIl\\fHt\\fHR\\fHC\\fH^\\fHp\\fHS\\fH^\\fIk\\fHD\\fIl\\fHv\\fIk\\fHp\\fHR\\fHn\\fHv\\fHF\\fHH\\fIa\\fH\\\\\\fH{\\fIn\\fH{\\fH^\\fHp\\fHR\\fHH\\fIk\\fH@\\fHR\\fHU\\fH\\\\\\fHj\\fHF\\fHD\\fIk\\fHY\\fHR\\fHU\\fHD\\fHk\\fHT\\fHy\\fHR\\fHT\\fIm\\fH@\\fHU\\fH\\\\\\fHU\\fHD\\fIk\\fHk\\fHT\\fHT\\fIk\\fHT\\fHU\\fHS\\fHH\\fH@\\fHM\\fHP\\fIk\\fHt\\fHs\\fHD\\fHR\\fHH\\fH^\\fHR\\fHZ\\fHF\\fHR\\fHn\\fHv\\fHZ\\fIa\\fH\\\\\\fIl\\fH@\\fHM\\fHP\\fIl\\fHU\\fIg\\fHH\\fIk\\fHT\\fHR\\fHd\\fHs\\fHZ\\fHR\\fHC\\fHJ\\fHT\\fHy\\fHH\\fIl\\fHp\\fHR\\fHH\\fIl\\fHY\\fHR\\fH^\\fHR\\fHU\\fHp\\fHR\\fH\\\\\\fHF\\fHs\\fHD\\fHR\\fH\\\\\\fHz\\fHD\\fIk\\fHT\\fHM\\fHP\\fHy\\fHB\\fHS\\fH^\\fHR\\fHe\\fHT\\fHy\\fIl\\fHy\\fIk\\fHY\\fH^\\fH^\\fH{\\fHH\\fHR\\fHz\\fHR\\fHD\\fHR\\fHi\\fH\\\\\\fIa\\fHI\\fHp\\fHU\\fHR\\fHn\\fHJ\\fIk\\fHz\\fHR\\fHF\\fHU\\fH^\\fIl\\fHD\\fHS\\fHC\\fHB\\fH@\\fHS\\fHD\\fHR\\fH@\\fId\\fHn\\fHy\\fHy\\fHU\\fIl\\fHn\\fHy\\fHU\\fHD\\fHR\\fHJ\\fIk\\fHH\\fHR\\fHU\\fHB\\fH^\\fIk\\fHy\\fHR\\fHG\\fIl\\fHp\\fH@\\fHy\\fHS\\fHH\\fIm\\fH\\\\\\fHH\\fHB\\fHR\\fHn\\fH{\\fHY\\fHU\\fIl\\fHn\\fH\\\\\\fIg\\fHp\\fHP\\fHB\\fHS\\fH^\\fIl\\fHj\\fH\\\\\\fIg\\fHF\\fHT\\fIk\\fHD\\fHR\\fHC\\fHR\\fHJ\\fHY\\fH^\\fIk\\fHD\\fIk\\fHz\\fHR\\fHH\\fHR\\fHy\\fH\\\\\\fIl\\fH@\\fHe\\fHD\\fHy\\fHR\\fHp\\fHY\\fHR\\fH@\\fHF\\fIn\\fH\\\\\\fHR\\fH@\\fHM\\fHP\\fHR\\fHT\\fI`\\fHJ\\fHR\\fHZ\\fIk\\fHC\\fH\\\\\\fHy\\fHS\\fHC\\fIk\\fHy\\fHU\\fHR\\fHn\\fHi\\fHy\\fHT\\fH\\\\\\fH@\\fHD\\fHR\\fHc\\fHY\\fHU\\fHR\\fHn\\fHT\\fIa\\fHI\\fH^\\fHB\\fHS\\fH^\\fIk\\fH^\\fIk\\fHz\\fHy\\fHY\\fHS\\fH[\\fHC\\fHy\\fIa\\fH\\\\\\fHn\\fHT\\fHB\\fIn\\fHU\\fHI\\fHR\\fHD\\fHR4F4_4F4[5f4U5i4X4K4]5o4E4D5d4K4_4[4E4K5h4Y5m4A4E5i5d4K4Z5f4U4K5h4B4K4Y4E4K5h5i4^5f4C4K5h4U4K5i4E4K5h5o4K4F4D4K5h4]4C5d4C4D4]5j4K5i4@4K5h4C5d5h4E4K5h4U4K5h5i4K5h5i5d5n4U4K5h4U4]4D5f4K5h4_4]5f4U4K5h4@5d4K5h4K5h4\\\\5k4K4D4K5h4A5f4K4E4K5h4A5n5d5n4K5h5o4]5f5i4K5h4U4]4K5n5i4A5m5d4T4E4K5h4G4K5j5f5i4X4K5k4C4E4K5h5i4]4O4E4K5h5n4]4N5j4K5h4X4D4K4D4K5h4A5d4K4]4K5h4@4C5f4C4K5h4O4_4]4E4K5h4U5h5d5i5i4@5i5d4U4E4K5h4]4A5i5j4K5h5j5n4K4[5m5h4_4[5f5j4K5h5o5d5f4F4K5h4C5j5f4K4D4]5o4K4F5k4K5h4]5f4K4Z4F4A5f4K4F5f4D4F5d5n5f4F4K5h4O5d5h5e4K5h4D4]5f4C4K5h5o5h4K5i4K5h4]4K4D4[4K5h4X4B4Y5f4_5f4K4]4K4F4K5h4G4K5h4G4K5h4Y5h4K4E4K5h4A4C5f4G4K5h4^5d4K4]4K5h4B5h5f4@4K5h4@5i5f4U4K5h4U4K5i5k4K5h4@5i4K5h4K5h4_4K4U4E5i4X4K5k4C5k4K5h4]4J5f4_4K5h4C4B5d5h4K5h5m5j5f4E4K5h5o4F4K4D4K5h4C5d4]5f4K5h4C4]5d4_4K4_4F4V4]5n4F4Y4K5i5f5i4K5h4D5j4K4F4K5h4U4T5f5ifmwfqwbjmnfmwvmgfqpwbmgjmd#>#evm`wjlm+*-isd!#tjgwk>!`lmejdvqbwjlm-smd!#tjgwk>!?algz#`obpp>!Nbwk-qbmgln+*`lmwfnslqbqz#Vmjwfg#Pwbwfp`jq`vnpwbm`fp-bssfmg@kjog+lqdbmjybwjlmp?psbm#`obpp>!!=?jnd#pq`>!,gjpwjmdvjpkfgwklvpbmgp#le#`lnnvmj`bwjlm`ofbq!=?,gju=jmufpwjdbwjlmebuj`lm-j`l!#nbqdjm.qjdkw9abpfg#lm#wkf#Nbppb`kvpfwwpwbaof#alqgfq>jmwfqmbwjlmbobopl#hmltm#bpsqlmvm`jbwjlmab`hdqlvmg9 esbggjmd.ofew9Elq#f{bnsof/#njp`foobmflvp%ow8,nbwk%dw8spz`kloldj`bojm#sbqwj`vobqfbq`k!#wzsf>!elqn#nfwklg>!bp#lsslpfg#wlPvsqfnf#@lvqwl``bpjlmbooz#Bggjwjlmbooz/Mlqwk#Bnfqj`bs{8ab`hdqlvmglsslqwvmjwjfpFmwfqwbjmnfmw-wlOltfq@bpf+nbmveb`wvqjmdsqlefppjlmbo#`lnajmfg#tjwkElq#jmpwbm`f/`lmpjpwjmd#le!#nb{ofmdwk>!qfwvqm#ebopf8`lmp`jlvpmfppNfgjwfqqbmfbmf{wqblqgjmbqzbppbppjmbwjlmpvapfrvfmwoz#avwwlm#wzsf>!wkf#mvnafq#lewkf#lqjdjmbo#`lnsqfkfmpjufqfefqp#wl#wkf?,vo=\\t?,gju=\\tskjolplskj`bool`bwjlm-kqfetbp#svaojpkfgPbm#Eqbm`jp`l+evm`wjlm+*x\\t?gju#jg>!nbjmplskjpwj`bwfgnbwkfnbwj`bo#,kfbg=\\x0E\\t?algzpvddfpwp#wkbwgl`vnfmwbwjlm`lm`fmwqbwjlmqfobwjlmpkjspnbz#kbuf#affm+elq#f{bnsof/Wkjp#bqwj`of#jm#plnf#`bpfpsbqwp#le#wkf#gfejmjwjlm#leDqfbw#Aqjwbjm#`foosbggjmd>frvjubofmw#wlsob`fklogfq>!8#elmw.pjyf9#ivpwjej`bwjlmafojfufg#wkbwpveefqfg#eqlnbwwfnswfg#wl#ofbgfq#le#wkf`qjsw!#pq`>!,+evm`wjlm+*#xbqf#bubjobaof\\t\\n?ojmh#qfo>!#pq`>$kwws9,,jmwfqfpwfg#jm`lmufmwjlmbo#!#bow>!!#,=?,bqf#dfmfqboozkbp#bopl#affmnlpw#slsvobq#`lqqfpslmgjmd`qfgjwfg#tjwkwzof>!alqgfq9?,b=?,psbm=?,-dje!#tjgwk>!?jeqbnf#pq`>!wbaof#`obpp>!jmojmf.aol`h8b``lqgjmd#wl#wldfwkfq#tjwkbssql{jnbwfozsbqojbnfmwbqznlqf#bmg#nlqfgjpsobz9mlmf8wqbgjwjlmboozsqfglnjmbmwoz%maps8\\x7F%maps8%maps8?,psbm=#`foopsb`jmd>?jmsvw#mbnf>!lq!#`lmwfmw>!`lmwqlufqpjbosqlsfqwz>!ld9,{.pkl`htbuf.gfnlmpwqbwjlmpvqqlvmgfg#azMfufqwkfofpp/tbp#wkf#ejqpw`lmpjgfqbaof#Bowklvdk#wkf#`loobalqbwjlmpklvog#mlw#afsqlslqwjlm#le?psbm#pwzof>!hmltm#bp#wkf#pklqwoz#bewfqelq#jmpwbm`f/gfp`qjafg#bp#,kfbg=\\t?algz#pwbqwjmd#tjwkjm`qfbpjmdoz#wkf#eb`w#wkbwgjp`vppjlm#lenjggof#le#wkfbm#jmgjujgvbogjeej`vow#wl#sljmw#le#ujftklnlpf{vbojwzb``fswbm`f#le?,psbm=?,gju=nbmveb`wvqfqplqjdjm#le#wkf`lnnlmoz#vpfgjnslqwbm`f#legfmlnjmbwjlmpab`hdqlvmg9# ofmdwk#le#wkfgfwfqnjmbwjlmb#pjdmjej`bmw!#alqgfq>!3!=qfulovwjlmbqzsqjm`jsofp#lejp#`lmpjgfqfgtbp#gfufolsfgJmgl.Fvqlsfbmuvomfqbaof#wlsqlslmfmwp#lebqf#plnfwjnfp`olpfq#wl#wkfMft#Zlqh#@jwz#mbnf>!pfbq`kbwwqjavwfg#wl`lvqpf#le#wkfnbwkfnbwj`jbmaz#wkf#fmg#lebw#wkf#fmg#le!#alqgfq>!3!#wf`kmloldj`bo-qfnluf@obpp+aqbm`k#le#wkffujgfm`f#wkbw\"Xfmgje^..=\\x0E\\tJmpwjwvwf#le#jmwl#b#pjmdofqfpsf`wjufoz-bmg#wkfqfelqfsqlsfqwjfp#lejp#ol`bwfg#jmplnf#le#tkj`kWkfqf#jp#bopl`lmwjmvfg#wl#bssfbqbm`f#le#%bns8mgbpk8#gfp`qjafp#wkf`lmpjgfqbwjlmbvwklq#le#wkfjmgfsfmgfmwozfrvjssfg#tjwkglfp#mlw#kbuf?,b=?b#kqfe>!`lmevpfg#tjwk?ojmh#kqfe>!,bw#wkf#bdf#lebssfbq#jm#wkfWkfpf#jm`ovgfqfdbqgofpp#le`lvog#af#vpfg#pwzof>%rvlw8pfufqbo#wjnfpqfsqfpfmw#wkfalgz=\\t?,kwno=wklvdkw#wl#afslsvobwjlm#leslppjajojwjfpsfq`fmwbdf#leb``fpp#wl#wkfbm#bwwfnsw#wlsqlgv`wjlm#leirvfqz,irvfqzwtl#gjeefqfmwafolmd#wl#wkffpwbaojpknfmwqfsob`jmd#wkfgfp`qjswjlm!#gfwfqnjmf#wkfbubjobaof#elqB``lqgjmd#wl#tjgf#qbmdf#le\\n?gju#`obpp>!nlqf#`lnnlmozlqdbmjpbwjlmpevm`wjlmbojwztbp#`lnsofwfg#%bns8ngbpk8#sbqwj`jsbwjlmwkf#`kbqb`wfqbm#bggjwjlmbobssfbqp#wl#afeb`w#wkbw#wkfbm#f{bnsof#lepjdmjej`bmwozlmnlvpflufq>!af`bvpf#wkfz#bpzm`#>#wqvf8sqlaofnp#tjwkpffnp#wl#kbufwkf#qfpvow#le#pq`>!kwws9,,ebnjojbq#tjwkslppfppjlm#leevm`wjlm#+*#xwllh#sob`f#jmbmg#plnfwjnfppvapwbmwjbooz?psbm=?,psbm=jp#lewfm#vpfgjm#bm#bwwfnswdqfbw#gfbo#leFmujqlmnfmwbopv``fppevooz#ujqwvbooz#boo13wk#`fmwvqz/sqlefppjlmbopmf`fppbqz#wl#gfwfqnjmfg#az`lnsbwjajojwzaf`bvpf#jw#jpGj`wjlmbqz#lenlgjej`bwjlmpWkf#elooltjmdnbz#qfefq#wl9@lmpfrvfmwoz/Jmwfqmbwjlmbobowklvdk#plnfwkbw#tlvog#aftlqog$p#ejqpw`obppjejfg#bpalwwln#le#wkf+sbqwj`vobqozbojdm>!ofew!#nlpw#`lnnlmozabpjp#elq#wkfelvmgbwjlm#le`lmwqjavwjlmpslsvobqjwz#le`fmwfq#le#wkfwl#qfgv`f#wkfivqjpgj`wjlmpbssql{jnbwjlm#lmnlvpflvw>!Mft#Wfpwbnfmw`loof`wjlm#le?,psbm=?,b=?,jm#wkf#Vmjwfgejon#gjqf`wlq.pwqj`w-gwg!=kbp#affm#vpfgqfwvqm#wl#wkfbowklvdk#wkjp`kbmdf#jm#wkfpfufqbo#lwkfqavw#wkfqf#bqfvmsqf`fgfmwfgjp#pjnjobq#wlfpsf`jbooz#jmtfjdkw9#alog8jp#`boofg#wkf`lnsvwbwjlmbojmgj`bwf#wkbwqfpwqj`wfg#wl\\n?nfwb#mbnf>!bqf#wzsj`booz`lmeoj`w#tjwkKltfufq/#wkf#Bm#f{bnsof#le`lnsbqfg#tjwkrvbmwjwjfp#leqbwkfq#wkbm#b`lmpwfoobwjlmmf`fppbqz#elqqfslqwfg#wkbwpsf`jej`bwjlmslojwj`bo#bmg%maps8%maps8?qfefqfm`fp#wlwkf#pbnf#zfbqDlufqmnfmw#ledfmfqbwjlm#lekbuf#mlw#affmpfufqbo#zfbqp`lnnjwnfmw#wl\\n\\n?vo#`obpp>!ujpvbojybwjlm2:wk#`fmwvqz/sqb`wjwjlmfqpwkbw#kf#tlvogbmg#`lmwjmvfgl``vsbwjlm#lejp#gfejmfg#bp`fmwqf#le#wkfwkf#bnlvmw#le=?gju#pwzof>!frvjubofmw#legjeefqfmwjbwfaqlvdkw#balvwnbqdjm.ofew9#bvwlnbwj`boozwklvdkw#le#bpPlnf#le#wkfpf\\t?gju#`obpp>!jmsvw#`obpp>!qfsob`fg#tjwkjp#lmf#le#wkffgv`bwjlm#bmgjmeovfm`fg#azqfsvwbwjlm#bp\\t?nfwb#mbnf>!b``lnnlgbwjlm?,gju=\\t?,gju=obqdf#sbqw#leJmpwjwvwf#elqwkf#pl.`boofg#bdbjmpw#wkf#Jm#wkjp#`bpf/tbp#bssljmwfg`objnfg#wl#afKltfufq/#wkjpGfsbqwnfmw#lewkf#qfnbjmjmdfeef`w#lm#wkfsbqwj`vobqoz#gfbo#tjwk#wkf\\t?gju#pwzof>!bonlpw#botbzpbqf#`vqqfmwozf{sqfppjlm#leskjolplskz#leelq#nlqf#wkbm`jujojybwjlmplm#wkf#jpobmgpfof`wfgJmgf{`bm#qfpvow#jm!#ubovf>!!#,=wkf#pwqv`wvqf#,=?,b=?,gju=Nbmz#le#wkfpf`bvpfg#az#wkfle#wkf#Vmjwfgpsbm#`obpp>!n`bm#af#wqb`fgjp#qfobwfg#wlaf`bnf#lmf#lejp#eqfrvfmwozojujmd#jm#wkfwkflqfwj`boozElooltjmd#wkfQfulovwjlmbqzdlufqmnfmw#jmjp#gfwfqnjmfgwkf#slojwj`bojmwqlgv`fg#jmpveej`jfmw#wlgfp`qjswjlm!=pklqw#pwlqjfppfsbqbwjlm#lebp#wl#tkfwkfqhmltm#elq#jwptbp#jmjwjboozgjpsobz9aol`hjp#bm#f{bnsofwkf#sqjm`jsbo`lmpjpwp#le#bqf`ldmjyfg#bp,algz=?,kwno=b#pvapwbmwjboqf`lmpwqv`wfgkfbg#le#pwbwfqfpjpwbm`f#wlvmgfqdqbgvbwfWkfqf#bqf#wtldqbujwbwjlmbobqf#gfp`qjafgjmwfmwjlmboozpfqufg#bp#wkf`obpp>!kfbgfqlsslpjwjlm#wlevmgbnfmwboozglnjmbwfg#wkfbmg#wkf#lwkfqboojbm`f#tjwktbp#elq`fg#wlqfpsf`wjufoz/bmg#slojwj`bojm#pvsslqw#lesflsof#jm#wkf13wk#`fmwvqz-bmg#svaojpkfgolbg@kbqwafbwwl#vmgfqpwbmgnfnafq#pwbwfpfmujqlmnfmwboejqpw#kboe#le`lvmwqjfp#bmgbq`kjwf`wvqboaf#`lmpjgfqfg`kbqb`wfqjyfg`ofbqJmwfqubobvwklqjwbwjufEfgfqbwjlm#letbp#pv``ffgfgbmg#wkfqf#bqfb#`lmpfrvfm`fwkf#Sqfpjgfmwbopl#jm`ovgfgeqff#plewtbqfpv``fppjlm#legfufolsfg#wkftbp#gfpwqlzfgbtbz#eqln#wkf8\\t?,p`qjsw=\\t?bowklvdk#wkfzelooltfg#az#bnlqf#sltfqevoqfpvowfg#jm#bVmjufqpjwz#leKltfufq/#nbmzwkf#sqfpjgfmwKltfufq/#plnfjp#wklvdkw#wlvmwjo#wkf#fmgtbp#bmmlvm`fgbqf#jnslqwbmwbopl#jm`ovgfp=?jmsvw#wzsf>wkf#`fmwfq#le#GL#MLW#BOWFQvpfg#wl#qfefqwkfnfp,<plqw>wkbw#kbg#affmwkf#abpjp#elqkbp#gfufolsfgjm#wkf#pvnnfq`lnsbqbwjufozgfp`qjafg#wkfpv`k#bp#wklpfwkf#qfpvowjmdjp#jnslppjaofubqjlvp#lwkfqPlvwk#Beqj`bmkbuf#wkf#pbnffeef`wjufmfppjm#tkj`k#`bpf8#wf{w.bojdm9pwqv`wvqf#bmg8#ab`hdqlvmg9qfdbqgjmd#wkfpvsslqwfg#wkfjp#bopl#hmltmpwzof>!nbqdjmjm`ovgjmd#wkfabkbpb#Nfobzvmlqph#alhn/Iomlqph#mzmlqphpolufm)M(ajmbjmwfqmb`jlmbo`bojej`b`j/_m`lnvmj`b`j/_m`lmpwqv``j/_m!=?gju#`obpp>!gjpbnajdvbwjlmGlnbjmMbnf$/#$bgnjmjpwqbwjlmpjnvowbmflvpozwqbmpslqwbwjlmJmwfqmbwjlmbo#nbqdjm.alwwln9qfpslmpjajojwz?\"Xfmgje^..=\\t?,=?nfwb#mbnf>!jnsofnfmwbwjlmjmeqbpwqv`wvqfqfsqfpfmwbwjlmalqgfq.alwwln9?,kfbg=\\t?algz=>kwws&0B&1E&1E?elqn#nfwklg>!nfwklg>!slpw!#,ebuj`lm-j`l!#~*8\\t?,p`qjsw=\\t-pfwBwwqjavwf+Bgnjmjpwqbwjlm>#mft#Bqqbz+*8?\"Xfmgje^..=\\x0E\\tgjpsobz9aol`h8Vmelqwvmbwfoz/!=%maps8?,gju=,ebuj`lm-j`l!=>$pwzofpkffw$#jgfmwjej`bwjlm/#elq#f{bnsof/?oj=?b#kqfe>!,bm#bowfqmbwjufbp#b#qfpvow#lesw!=?,p`qjsw=\\twzsf>!pvanjw!#\\t+evm`wjlm+*#xqf`lnnfmgbwjlmelqn#b`wjlm>!,wqbmpelqnbwjlmqf`lmpwqv`wjlm-pwzof-gjpsobz#B``lqgjmd#wl#kjggfm!#mbnf>!bolmd#tjwk#wkfgl`vnfmw-algz-bssql{jnbwfoz#@lnnvmj`bwjlmpslpw!#b`wjlm>!nfbmjmd#%rvlw8..?\"Xfmgje^..=Sqjnf#Njmjpwfq`kbqb`wfqjpwj`?,b=#?b#`obpp>wkf#kjpwlqz#le#lmnlvpflufq>!wkf#dlufqmnfmwkqfe>!kwwsp9,,tbp#lqjdjmbooztbp#jmwqlgv`fg`obppjej`bwjlmqfsqfpfmwbwjufbqf#`lmpjgfqfg?\"Xfmgje^..=\\t\\tgfsfmgp#lm#wkfVmjufqpjwz#le#jm#`lmwqbpw#wl#sob`fklogfq>!jm#wkf#`bpf#lejmwfqmbwjlmbo#`lmpwjwvwjlmbopwzof>!alqgfq.9#evm`wjlm+*#xAf`bvpf#le#wkf.pwqj`w-gwg!=\\t?wbaof#`obpp>!b``lnsbmjfg#azb``lvmw#le#wkf?p`qjsw#pq`>!,mbwvqf#le#wkf#wkf#sflsof#jm#jm#bggjwjlm#wlp*8#ip-jg#>#jg!#tjgwk>!233&!qfdbqgjmd#wkf#Qlnbm#@bwkloj`bm#jmgfsfmgfmwelooltjmd#wkf#-dje!#tjgwk>!2wkf#elooltjmd#gjp`qjnjmbwjlmbq`kbfloldj`bosqjnf#njmjpwfq-ip!=?,p`qjsw=`lnajmbwjlm#le#nbqdjmtjgwk>!`qfbwfFofnfmw+t-bwwb`kFufmw+?,b=?,wg=?,wq=pq`>!kwwsp9,,bJm#sbqwj`vobq/#bojdm>!ofew!#@yf`k#Qfsvaoj`Vmjwfg#Hjmdgln`lqqfpslmgfm`f`lm`ovgfg#wkbw-kwno!#wjwof>!+evm`wjlm#+*#x`lnfp#eqln#wkfbssoj`bwjlm#le?psbm#`obpp>!pafojfufg#wl#affnfmw+$p`qjsw$?,b=\\t?,oj=\\t?ojufqz#gjeefqfmw=?psbm#`obpp>!lswjlm#ubovf>!+bopl#hmltm#bp\\n?oj=?b#kqfe>!=?jmsvw#mbnf>!pfsbqbwfg#eqlnqfefqqfg#wl#bp#ubojdm>!wls!=elvmgfq#le#wkfbwwfnswjmd#wl#`bqalm#gjl{jgf\\t\\t?gju#`obpp>!`obpp>!pfbq`k.,algz=\\t?,kwno=lsslqwvmjwz#wl`lnnvmj`bwjlmp?,kfbg=\\x0E\\t?algz#pwzof>!tjgwk9Wj\\rVSmd#Uj\\rWkw`kbmdfp#jm#wkfalqgfq.`lolq9 3!#alqgfq>!3!#?,psbm=?,gju=?tbp#gjp`lufqfg!#wzsf>!wf{w!#*8\\t?,p`qjsw=\\t\\tGfsbqwnfmw#le#f``ofpjbpwj`bowkfqf#kbp#affmqfpvowjmd#eqln?,algz=?,kwno=kbp#mfufq#affmwkf#ejqpw#wjnfjm#qfpslmpf#wlbvwlnbwj`booz#?,gju=\\t\\t?gju#jtbp#`lmpjgfqfgsfq`fmw#le#wkf!#,=?,b=?,gju=`loof`wjlm#le#gfp`fmgfg#eqlnpf`wjlm#le#wkfb``fsw.`kbqpfwwl#af#`lmevpfgnfnafq#le#wkf#sbggjmd.qjdkw9wqbmpobwjlm#lejmwfqsqfwbwjlm#kqfe>$kwws9,,tkfwkfq#lq#mlwWkfqf#bqf#boplwkfqf#bqf#nbmzb#pnboo#mvnafqlwkfq#sbqwp#lejnslppjaof#wl##`obpp>!avwwlmol`bwfg#jm#wkf-#Kltfufq/#wkfbmg#fufmwvboozBw#wkf#fmg#le#af`bvpf#le#jwpqfsqfpfmwp#wkf?elqn#b`wjlm>!#nfwklg>!slpw!jw#jp#slppjaofnlqf#ojhfoz#wlbm#jm`qfbpf#jmkbuf#bopl#affm`lqqfpslmgp#wlbmmlvm`fg#wkbwbojdm>!qjdkw!=nbmz#`lvmwqjfpelq#nbmz#zfbqpfbqojfpw#hmltmaf`bvpf#jw#tbpsw!=?,p`qjsw=\\x0E#ubojdm>!wls!#jmkbajwbmwp#leelooltjmd#zfbq\\x0E\\t?gju#`obpp>!njoojlm#sflsof`lmwqlufqpjbo#`lm`fqmjmd#wkfbqdvf#wkbw#wkfdlufqmnfmw#bmgb#qfefqfm`f#wlwqbmpefqqfg#wlgfp`qjajmd#wkf#pwzof>!`lolq9bowklvdk#wkfqfafpw#hmltm#elqpvanjw!#mbnf>!nvowjsoj`bwjlmnlqf#wkbm#lmf#qf`ldmjwjlm#le@lvm`jo#le#wkffgjwjlm#le#wkf##?nfwb#mbnf>!Fmwfqwbjmnfmw#btbz#eqln#wkf#8nbqdjm.qjdkw9bw#wkf#wjnf#lejmufpwjdbwjlmp`lmmf`wfg#tjwkbmg#nbmz#lwkfqbowklvdk#jw#jpafdjmmjmd#tjwk#?psbm#`obpp>!gfp`fmgbmwp#le?psbm#`obpp>!j#bojdm>!qjdkw!?,kfbg=\\t?algz#bpsf`wp#le#wkfkbp#pjm`f#affmFvqlsfbm#Vmjlmqfnjmjp`fmw#lenlqf#gjeej`vowUj`f#Sqfpjgfmw`lnslpjwjlm#lesbppfg#wkqlvdknlqf#jnslqwbmwelmw.pjyf922s{f{sobmbwjlm#lewkf#`lm`fsw#letqjwwfm#jm#wkf\\n?psbm#`obpp>!jp#lmf#le#wkf#qfpfnaobm`f#wllm#wkf#dqlvmgptkj`k#`lmwbjmpjm`ovgjmd#wkf#gfejmfg#az#wkfsvaoj`bwjlm#lenfbmp#wkbw#wkflvwpjgf#le#wkfpvsslqw#le#wkf?jmsvw#`obpp>!?psbm#`obpp>!w+Nbwk-qbmgln+*nlpw#sqlnjmfmwgfp`qjswjlm#le@lmpwbmwjmlsoftfqf#svaojpkfg?gju#`obpp>!pfbssfbqp#jm#wkf2!#kfjdkw>!2!#nlpw#jnslqwbmwtkj`k#jm`ovgfptkj`k#kbg#affmgfpwqv`wjlm#lewkf#slsvobwjlm\\t\\n?gju#`obpp>!slppjajojwz#leplnfwjnfp#vpfgbssfbq#wl#kbufpv``fpp#le#wkfjmwfmgfg#wl#afsqfpfmw#jm#wkfpwzof>!`ofbq9a\\x0E\\t?,p`qjsw=\\x0E\\t?tbp#elvmgfg#jmjmwfqujft#tjwk\\\\jg!#`lmwfmw>!`bsjwbo#le#wkf\\x0E\\t?ojmh#qfo>!pqfofbpf#le#wkfsljmw#lvw#wkbw{NOKwwsQfrvfpwbmg#pvapfrvfmwpf`lmg#obqdfpwufqz#jnslqwbmwpsf`jej`bwjlmppvqeb`f#le#wkfbssojfg#wl#wkfelqfjdm#sloj`z\\\\pfwGlnbjmMbnffpwbaojpkfg#jmjp#afojfufg#wlJm#bggjwjlm#wlnfbmjmd#le#wkfjp#mbnfg#bewfqwl#sqlwf`w#wkfjp#qfsqfpfmwfgGf`obqbwjlm#lenlqf#feej`jfmw@obppjej`bwjlmlwkfq#elqnp#lekf#qfwvqmfg#wl?psbm#`obpp>!`sfqelqnbm`f#le+evm`wjlm+*#x\\x0Eje#bmg#lmoz#jeqfdjlmp#le#wkfofbgjmd#wl#wkfqfobwjlmp#tjwkVmjwfg#Mbwjlmppwzof>!kfjdkw9lwkfq#wkbm#wkfzsf!#`lmwfmw>!Bppl`jbwjlm#le\\t?,kfbg=\\t?algzol`bwfg#lm#wkfjp#qfefqqfg#wl+jm`ovgjmd#wkf`lm`fmwqbwjlmpwkf#jmgjujgvbobnlmd#wkf#nlpwwkbm#bmz#lwkfq,=\\t?ojmh#qfo>!#qfwvqm#ebopf8wkf#svqslpf#lewkf#bajojwz#wl8`lolq9 eee~\\t-\\t?psbm#`obpp>!wkf#pvaif`w#legfejmjwjlmp#le=\\x0E\\t?ojmh#qfo>!`objn#wkbw#wkfkbuf#gfufolsfg?wbaof#tjgwk>!`fofaqbwjlm#leElooltjmd#wkf#wl#gjpwjmdvjpk?psbm#`obpp>!awbhfp#sob`f#jmvmgfq#wkf#mbnfmlwfg#wkbw#wkf=?\"Xfmgje^..=\\tpwzof>!nbqdjm.jmpwfbg#le#wkfjmwqlgv`fg#wkfwkf#sql`fpp#lejm`qfbpjmd#wkfgjeefqfm`fp#jmfpwjnbwfg#wkbwfpsf`jbooz#wkf,gju=?gju#jg>!tbp#fufmwvboozwkqlvdklvw#kjpwkf#gjeefqfm`fplnfwkjmd#wkbwpsbm=?,psbm=?,pjdmjej`bmwoz#=?,p`qjsw=\\x0E\\t\\x0E\\tfmujqlmnfmwbo#wl#sqfufmw#wkfkbuf#affm#vpfgfpsf`jbooz#elqvmgfqpwbmg#wkfjp#fppfmwjbooztfqf#wkf#ejqpwjp#wkf#obqdfpwkbuf#affm#nbgf!#pq`>!kwws9,,jmwfqsqfwfg#bppf`lmg#kboe#le`qloojmd>!ml!#jp#`lnslpfg#leJJ/#Kloz#Qlnbmjp#f{sf`wfg#wlkbuf#wkfjq#ltmgfejmfg#bp#wkfwqbgjwjlmbooz#kbuf#gjeefqfmwbqf#lewfm#vpfgwl#fmpvqf#wkbwbdqffnfmw#tjwk`lmwbjmjmd#wkfbqf#eqfrvfmwozjmelqnbwjlm#lmf{bnsof#jp#wkfqfpvowjmd#jm#b?,b=?,oj=?,vo=#`obpp>!ellwfqbmg#fpsf`jboozwzsf>!avwwlm!#?,psbm=?,psbm=tkj`k#jm`ovgfg=\\t?nfwb#mbnf>!`lmpjgfqfg#wkf`bqqjfg#lvw#azKltfufq/#jw#jpaf`bnf#sbqw#lejm#qfobwjlm#wlslsvobq#jm#wkfwkf#`bsjwbo#letbp#leej`jbooztkj`k#kbp#affmwkf#Kjpwlqz#lebowfqmbwjuf#wlgjeefqfmw#eqlnwl#pvsslqw#wkfpvddfpwfg#wkbwjm#wkf#sql`fpp##?gju#`obpp>!wkf#elvmgbwjlmaf`bvpf#le#kjp`lm`fqmfg#tjwkwkf#vmjufqpjwzlsslpfg#wl#wkfwkf#`lmwf{w#le?psbm#`obpp>!swf{w!#mbnf>!r!\\n\\n?gju#`obpp>!wkf#p`jfmwjej`qfsqfpfmwfg#aznbwkfnbwj`jbmpfof`wfg#az#wkfwkbw#kbuf#affm=?gju#`obpp>!`gju#jg>!kfbgfqjm#sbqwj`vobq/`lmufqwfg#jmwl*8\\t?,p`qjsw=\\t?skjolplskj`bo#pqsphlkqubwphjwj\\rVSmd#Uj\\rWkw<L=o=m=m<V<T<U=l=o=m=m<V<T<Ujmufpwjdb`j/_msbqwj`jsb`j/_m<V<R=n<R=l=g<Y<R<]<W<\\\\=m=n<T<V<R=n<R=l=g<U=k<Y<W<R<^<Y<V=m<T=m=n<Y<P=g<q<R<^<R=m=n<T<V<R=n<R=l=g=i<R<]<W<\\\\=m=n=`<^=l<Y<P<Y<Q<T<V<R=n<R=l<\\\\=c=m<Y<_<R<X<Q=c=m<V<\\\\=k<\\\\=n=`<Q<R<^<R=m=n<T<O<V=l<\\\\<T<Q=g<^<R<S=l<R=m=g<V<R=n<R=l<R<U=m<X<Y<W<\\\\=n=`<S<R<P<R=e=`=b=m=l<Y<X=m=n<^<R<]=l<\\\\<[<R<P=m=n<R=l<R<Q=g=o=k<\\\\=m=n<T<Y=n<Y=k<Y<Q<T<Y<\\x7F<W<\\\\<^<Q<\\\\=c<T=m=n<R=l<T<T=m<T=m=n<Y<P<\\\\=l<Y=d<Y<Q<T=c<M<V<\\\\=k<\\\\=n=`<S<R=a=n<R<P=o=m<W<Y<X=o<Y=n=m<V<\\\\<[<\\\\=n=`=n<R<^<\\\\=l<R<^<V<R<Q<Y=k<Q<R=l<Y=d<Y<Q<T<Y<V<R=n<R=l<R<Y<R=l<_<\\\\<Q<R<^<V<R=n<R=l<R<P<L<Y<V<W<\\\\<P<\\\\4K5h5i5j4F4C5e5i5j4F4C5f4K4F4K5h5i5d4Z5d4U4K5h4D4]4K5i4@4K5h5i5d4K5n4U4K5h4]4_4K4J5h5i4X4K4]5o4K4F4K5h4O4U4Z4K4M4K5h4]5f4K4Z4E4K5h4F4Y5i5f5i4K5h4K4U4Z4K4M4K5h5j4F4K4J4@4K5h4O5h4U4K4D4K5h4F4_4@5f5h4K5h4O5n4_4K5i4K5h4Z4V4[4K4F4K5h5m5f4C5f5d4K5h4F4]4A5f4D4K5h4@4C5f4C4E4K5h4F4U5h5f5i4K5h4O4B4D4K4]4K5h4K5m5h4K5i4K5h4O5m5h4K5i4K5h4F4K4]5f4B4K5h4F5n5j5f4E4K5h4K5h4U4K4D4K5h4B5d4K4[4]4K5h5i4@4F5i4U4K5h4C5f5o5d4]4K5h4_5f4K4A4E4U4D4C4K5h5h5k4K5h4F4]4D5f4E4K5h4]5d4K4D4[4K5h4O4C4D5f4E4K5h4K4B4D4K4]4K5h5i4F4A4C4E4K5h4K4V4K5j5f`vqplq9sljmwfq8?,wjwof=\\t?nfwb#!#kqfe>!kwws9,,!=?psbm#`obpp>!nfnafqp#le#wkf#tjmglt-ol`bwjlmufqwj`bo.bojdm9,b=#\\x7F#?b#kqfe>!?\"gl`wzsf#kwno=nfgjb>!p`qffm!#?lswjlm#ubovf>!ebuj`lm-j`l!#,=\\t\\n\\n?gju#`obpp>!`kbqb`wfqjpwj`p!#nfwklg>!dfw!#,algz=\\t?,kwno=\\tpklqw`vw#j`lm!#gl`vnfmw-tqjwf+sbggjmd.alwwln9qfsqfpfmwbwjufppvanjw!#ubovf>!bojdm>!`fmwfq!#wkqlvdklvw#wkf#p`jfm`f#ej`wjlm\\t##?gju#`obpp>!pvanjw!#`obpp>!lmf#le#wkf#nlpw#ubojdm>!wls!=?tbp#fpwbaojpkfg*8\\x0E\\t?,p`qjsw=\\x0E\\tqfwvqm#ebopf8!=*-pwzof-gjpsobzaf`bvpf#le#wkf#gl`vnfmw-`llhjf?elqn#b`wjlm>!,~algzxnbqdjm938Fm`z`olsfgjb#leufqpjlm#le#wkf#-`qfbwfFofnfmw+mbnf!#`lmwfmw>!?,gju=\\t?,gju=\\t\\tbgnjmjpwqbwjuf#?,algz=\\t?,kwno=kjpwlqz#le#wkf#!=?jmsvw#wzsf>!slqwjlm#le#wkf#bp#sbqw#le#wkf#%maps8?b#kqfe>!lwkfq#`lvmwqjfp!=\\t?gju#`obpp>!?,psbm=?,psbm=?Jm#lwkfq#tlqgp/gjpsobz9#aol`h8`lmwqlo#le#wkf#jmwqlgv`wjlm#le,=\\t?nfwb#mbnf>!bp#tfoo#bp#wkf#jm#qf`fmw#zfbqp\\x0E\\t\\n?gju#`obpp>!?,gju=\\t\\n?,gju=\\tjmpsjqfg#az#wkfwkf#fmg#le#wkf#`lnsbwjaof#tjwkaf`bnf#hmltm#bp#pwzof>!nbqdjm9-ip!=?,p`qjsw=?#Jmwfqmbwjlmbo#wkfqf#kbuf#affmDfqnbm#obmdvbdf#pwzof>!`lolq9 @lnnvmjpw#Sbqwz`lmpjpwfmw#tjwkalqgfq>!3!#`foo#nbqdjmkfjdkw>!wkf#nbilqjwz#le!#bojdm>!`fmwfqqfobwfg#wl#wkf#nbmz#gjeefqfmw#Lqwklgl{#@kvq`kpjnjobq#wl#wkf#,=\\t?ojmh#qfo>!ptbp#lmf#le#wkf#vmwjo#kjp#gfbwk~*+*8\\t?,p`qjsw=lwkfq#obmdvbdfp`lnsbqfg#wl#wkfslqwjlmp#le#wkfwkf#Mfwkfqobmgpwkf#nlpw#`lnnlmab`hdqlvmg9vqo+bqdvfg#wkbw#wkfp`qloojmd>!ml!#jm`ovgfg#jm#wkfMlqwk#Bnfqj`bm#wkf#mbnf#le#wkfjmwfqsqfwbwjlmpwkf#wqbgjwjlmbogfufolsnfmw#le#eqfrvfmwoz#vpfgb#`loof`wjlm#leufqz#pjnjobq#wlpvqqlvmgjmd#wkff{bnsof#le#wkjpbojdm>!`fmwfq!=tlvog#kbuf#affmjnbdf\\\\`bswjlm#>bwwb`kfg#wl#wkfpvddfpwjmd#wkbwjm#wkf#elqn#le#jmuloufg#jm#wkfjp#gfqjufg#eqlnmbnfg#bewfq#wkfJmwqlgv`wjlm#wlqfpwqj`wjlmp#lm#pwzof>!tjgwk9#`bm#af#vpfg#wl#wkf#`qfbwjlm#lenlpw#jnslqwbmw#jmelqnbwjlm#bmgqfpvowfg#jm#wkf`loobspf#le#wkfWkjp#nfbmp#wkbwfofnfmwp#le#wkftbp#qfsob`fg#azbmbozpjp#le#wkfjmpsjqbwjlm#elqqfdbqgfg#bp#wkfnlpw#pv``fppevohmltm#bp#%rvlw8b#`lnsqfkfmpjufKjpwlqz#le#wkf#tfqf#`lmpjgfqfgqfwvqmfg#wl#wkfbqf#qfefqqfg#wlVmplvq`fg#jnbdf=\\t\\n?gju#`obpp>!`lmpjpwp#le#wkfpwlsSqlsbdbwjlmjmwfqfpw#jm#wkfbubjobajojwz#lebssfbqp#wl#kbuffof`wqlnbdmfwj`fmbaofPfquj`fp+evm`wjlm#le#wkfJw#jp#jnslqwbmw?,p`qjsw=?,gju=evm`wjlm+*xubq#qfobwjuf#wl#wkfbp#b#qfpvow#le#wkf#slpjwjlm#leElq#f{bnsof/#jm#nfwklg>!slpw!#tbp#elooltfg#az%bns8ngbpk8#wkfwkf#bssoj`bwjlmip!=?,p`qjsw=\\x0E\\tvo=?,gju=?,gju=bewfq#wkf#gfbwktjwk#qfpsf`w#wlpwzof>!sbggjmd9jp#sbqwj`vobqozgjpsobz9jmojmf8#wzsf>!pvanjw!#jp#gjujgfg#jmwl\\bTA\\nzk#+\\x0BBl\\bQ\\x7F*qfpslmpbajojgbgbgnjmjpwqb`j/_mjmwfqmb`jlmbofp`lqqfpslmgjfmwf\\fHe\\fHF\\fHC\\fIg\\fH{\\fHF\\fIn\\fH\\\\\\fIa\\fHY\\fHU\\fHB\\fHR\\fH\\\\\\fIk\\fH^\\fIg\\fH{\\fIg\\fHn\\fHv\\fIm\\fHD\\fHR\\fHY\\fH^\\fIk\\fHy\\fHS\\fHD\\fHT\\fH\\\\\\fHy\\fHR\\fH\\\\\\fHF\\fIm\\fH^\\fHS\\fHT\\fHz\\fIg\\fHp\\fIk\\fHn\\fHv\\fHR\\fHU\\fHS\\fHc\\fHA\\fIk\\fHp\\fIk\\fHn\\fHZ\\fHR\\fHB\\fHS\\fH^\\fHU\\fHB\\fHR\\fH\\\\\\fIl\\fHp\\fHR\\fH{\\fH\\\\\\fHO\\fH@\\fHD\\fHR\\fHD\\fIk\\fHy\\fIm\\fHB\\fHR\\fH\\\\\\fH@\\fIa\\fH^\\fIe\\fH{\\fHB\\fHR\\fH^\\fHS\\fHy\\fHB\\fHU\\fHS\\fH^\\fHR\\fHF\\fIo\\fH[\\fIa\\fHL\\fH@\\fHN\\fHP\\fHH\\fIk\\fHA\\fHR\\fHp\\fHF\\fHR\\fHy\\fIa\\fH^\\fHS\\fHy\\fHs\\fIa\\fH\\\\\\fIk\\fHD\\fHz\\fHS\\fH^\\fHR\\fHG\\fHJ\\fI`\\fH\\\\\\fHR\\fHD\\fHB\\fHR\\fHB\\fH^\\fIk\\fHB\\fHH\\fHJ\\fHR\\fHD\\fH@\\fHR\\fHp\\fHR\\fH\\\\\\fHY\\fHS\\fHy\\fHR\\fHT\\fHy\\fIa\\fHC\\fIg\\fHn\\fHv\\fHR\\fHU\\fHH\\fIk\\fHF\\fHU\\fIm\\fHm\\fHv\\fH@\\fHH\\fHR\\fHC\\fHR\\fHT\\fHn\\fHY\\fHR\\fHJ\\fHJ\\fIk\\fHz\\fHD\\fIk\\fHF\\fHS\\fHw\\fH^\\fIk\\fHY\\fHS\\fHZ\\fIk\\fH[\\fH\\\\\\fHR\\fHp\\fIa\\fHC\\fHe\\fHH\\fIa\\fHH\\fH\\\\\\fHB\\fIm\\fHn\\fH@\\fHd\\fHJ\\fIg\\fHD\\fIg\\fHn\\fHe\\fHF\\fHy\\fH\\\\\\fHO\\fHF\\fHN\\fHP\\fIk\\fHn\\fHT\\fIa\\fHI\\fHS\\fHH\\fHG\\fHS\\fH^\\fIa\\fHB\\fHB\\fIm\\fHz\\fIa\\fHC\\fHi\\fHv\\fIa\\fHw\\fHR\\fHw\\fIn\\fHs\\fHH\\fIl\\fHT\\fHn\\fH{\\fIl\\fHH\\fHp\\fHR\\fHc\\fH{\\fHR\\fHY\\fHS\\fHA\\fHR\\fH{\\fHt\\fHO\\fIa\\fHs\\fIk\\fHJ\\fIn\\fHT\\fH\\\\\\fIk\\fHJ\\fHS\\fHD\\fIg\\fHn\\fHU\\fHH\\fIa\\fHC\\fHR\\fHT\\fIk\\fHy\\fIa\\fHT\\fH{\\fHR\\fHn\\fHK\\fIl\\fHY\\fHS\\fHZ\\fIa\\fHY\\fH\\\\\\fHR\\fHH\\fIk\\fHn\\fHJ\\fId\\fHs\\fIa\\fHT\\fHD\\fHy\\fIa\\fHZ\\fHR\\fHT\\fHR\\fHB\\fHD\\fIk\\fHi\\fHJ\\fHR\\fH^\\fHH\\fH@\\fHS\\fHp\\fH^\\fIl\\fHF\\fIm\\fH\\\\\\fIn\\fH[\\fHU\\fHS\\fHn\\fHJ\\fIl\\fHB\\fHS\\fHH\\fIa\\fH\\\\\\fHy\\fHY\\fHS\\fHH\\fHR\\fH\\\\\\fIm\\fHF\\fHC\\fIk\\fHT\\fIa\\fHI\\fHR\\fHD\\fHy\\fH\\\\\\fIg\\fHM\\fHP\\fHB\\fIm\\fHy\\fIa\\fHH\\fHC\\fIg\\fHp\\fHD\\fHR\\fHy\\fIo\\fHF\\fHC\\fHR\\fHF\\fIg\\fHT\\fIa\\fHs\\fHt\\fH\\\\\\fIk\\fH^\\fIn\\fHy\\fHR\\fH\\\\\\fIa\\fHC\\fHY\\fHS\\fHv\\fHR\\fH\\\\\\fHT\\fIn\\fHv\\fHD\\fHR\\fHB\\fIn\\fH^\\fIa\\fHC\\fHJ\\fIk\\fHz\\fIk\\fHn\\fHU\\fHB\\fIk\\fHZ\\fHR\\fHT\\fIa\\fHy\\fIn\\fH^\\fHB\\fId\\fHn\\fHD\\fIk\\fHH\\fId\\fHC\\fHR\\fH\\\\\\fHp\\fHS\\fHT\\fHy\\fIkqpp({no!#wjwof>!.wzsf!#`lmwfmw>!wjwof!#`lmwfmw>!bw#wkf#pbnf#wjnf-ip!=?,p`qjsw=\\t?!#nfwklg>!slpw!#?,psbm=?,b=?,oj=ufqwj`bo.bojdm9w,irvfqz-njm-ip!=-`oj`h+evm`wjlm+#pwzof>!sbggjmd.~*+*8\\t?,p`qjsw=\\t?,psbm=?b#kqfe>!?b#kqfe>!kwws9,,*8#qfwvqm#ebopf8wf{w.gf`lqbwjlm9#p`qloojmd>!ml!#alqgfq.`loobspf9bppl`jbwfg#tjwk#Abkbpb#JmglmfpjbFmdojpk#obmdvbdf?wf{w#{no9psb`f>-dje!#alqgfq>!3!?,algz=\\t?,kwno=\\tlufqeolt9kjggfm8jnd#pq`>!kwws9,,bggFufmwOjpwfmfqqfpslmpjaof#elq#p-ip!=?,p`qjsw=\\t,ebuj`lm-j`l!#,=lsfqbwjmd#pzpwfn!#pwzof>!tjgwk92wbqdfw>!\\\\aobmh!=Pwbwf#Vmjufqpjwzwf{w.bojdm9ofew8\\tgl`vnfmw-tqjwf+/#jm`ovgjmd#wkf#bqlvmg#wkf#tlqog*8\\x0E\\t?,p`qjsw=\\x0E\\t?!#pwzof>!kfjdkw98lufqeolt9kjggfmnlqf#jmelqnbwjlmbm#jmwfqmbwjlmbob#nfnafq#le#wkf#lmf#le#wkf#ejqpw`bm#af#elvmg#jm#?,gju=\\t\\n\\n?,gju=\\tgjpsobz9#mlmf8!=!#,=\\t?ojmh#qfo>!\\t##+evm`wjlm+*#xwkf#26wk#`fmwvqz-sqfufmwGfebvow+obqdf#mvnafq#le#Azybmwjmf#Fnsjqf-isd\\x7Fwkvna\\x7Fofew\\x7Fubpw#nbilqjwz#lenbilqjwz#le#wkf##bojdm>!`fmwfq!=Vmjufqpjwz#Sqfppglnjmbwfg#az#wkfPf`lmg#Tlqog#Tbqgjpwqjavwjlm#le#pwzof>!slpjwjlm9wkf#qfpw#le#wkf#`kbqb`wfqjyfg#az#qfo>!mleloolt!=gfqjufp#eqln#wkfqbwkfq#wkbm#wkf#b#`lnajmbwjlm#lepwzof>!tjgwk9233Fmdojpk.psfbhjmd`lnsvwfq#p`jfm`falqgfq>!3!#bow>!wkf#f{jpwfm`f#leGfnl`qbwj`#Sbqwz!#pwzof>!nbqdjm.Elq#wkjp#qfbplm/-ip!=?,p`qjsw=\\t\\npAzWbdMbnf+p*X3^ip!=?,p`qjsw=\\x0E\\t?-ip!=?,p`qjsw=\\x0E\\tojmh#qfo>!j`lm!#$#bow>$$#`obpp>$elqnbwjlm#le#wkfufqpjlmp#le#wkf#?,b=?,gju=?,gju=,sbdf=\\t##?sbdf=\\t?gju#`obpp>!`lmwaf`bnf#wkf#ejqpwabkbpb#Jmglmfpjbfmdojpk#+pjnsof*\"y\"W\"W\"[\"Q\"U\"V\"@=i=l<^<\\\\=n=m<V<T<V<R<P<S<\\\\<Q<T<T=c<^<W=c<Y=n=m=c<x<R<]<\\\\<^<T=n=`=k<Y<W<R<^<Y<V<\\\\=l<\\\\<[<^<T=n<T=c<t<Q=n<Y=l<Q<Y=n<r=n<^<Y=n<T=n=`<Q<\\\\<S=l<T<P<Y=l<T<Q=n<Y=l<Q<Y=n<V<R=n<R=l<R<_<R=m=n=l<\\\\<Q<T=j=g<V<\\\\=k<Y=m=n<^<Y=o=m<W<R<^<T=c=i<S=l<R<]<W<Y<P=g<S<R<W=o=k<T=n=`=c<^<W=c=b=n=m=c<Q<\\\\<T<]<R<W<Y<Y<V<R<P<S<\\\\<Q<T=c<^<Q<T<P<\\\\<Q<T<Y=m=l<Y<X=m=n<^<\\\\4K5h5i5d4K4Z5f4U4K5h4]4J5f4_5f4E4K5h4K5j4F5n4K5h5i4X4K4]5o4K4F5o4K5h4_5f4K4]4K4F4K5h5i5o4F5d4D4E4K5h4_4U5d4C5f4E4K4A4Y4K4J5f4K4F4K5h4U4K5h5i5f4E4K5h4Y5d4F5f4K4F4K5h4K5j4F4]5j4F4K5h4F4Y4K5i5f5i4K5h4I4_5h4K5i5f4K5h5i4X4K4]5o4E4K5h5i4]4J5f4K4Fqlalwp!#`lmwfmw>!?gju#jg>!ellwfq!=wkf#Vmjwfg#Pwbwfp?jnd#pq`>!kwws9,,-isd\\x7Fqjdkw\\x7Fwkvna\\x7F-ip!=?,p`qjsw=\\x0E\\t?ol`bwjlm-sqlwl`loeqbnfalqgfq>!3!#p!#,=\\t?nfwb#mbnf>!?,b=?,gju=?,gju=?elmw.tfjdkw9alog8%rvlw8#bmg#%rvlw8gfsfmgjmd#lm#wkf#nbqdjm938sbggjmd9!#qfo>!mleloolt!#Sqfpjgfmw#le#wkf#wtfmwjfwk#`fmwvqzfujpjlm=\\t##?,sbdfJmwfqmfw#F{solqfqb-bpzm`#>#wqvf8\\x0E\\tjmelqnbwjlm#balvw?gju#jg>!kfbgfq!=!#b`wjlm>!kwws9,,?b#kqfe>!kwwsp9,,?gju#jg>!`lmwfmw!?,gju=\\x0E\\t?,gju=\\x0E\\t?gfqjufg#eqln#wkf#?jnd#pq`>$kwws9,,b``lqgjmd#wl#wkf#\\t?,algz=\\t?,kwno=\\tpwzof>!elmw.pjyf9p`qjsw#obmdvbdf>!Bqjbo/#Kfoufwj`b/?,b=?psbm#`obpp>!?,p`qjsw=?p`qjsw#slojwj`bo#sbqwjfpwg=?,wq=?,wbaof=?kqfe>!kwws9,,ttt-jmwfqsqfwbwjlm#leqfo>!pwzofpkffw!#gl`vnfmw-tqjwf+$?`kbqpfw>!vwe.;!=\\tafdjmmjmd#le#wkf#qfufbofg#wkbw#wkfwfofujpjlm#pfqjfp!#qfo>!mleloolt!=#wbqdfw>!\\\\aobmh!=`objnjmd#wkbw#wkfkwws&0B&1E&1Ettt-nbmjefpwbwjlmp#leSqjnf#Njmjpwfq#lejmeovfm`fg#az#wkf`obpp>!`ofbqej{!=,gju=\\x0E\\t?,gju=\\x0E\\t\\x0E\\twkqff.gjnfmpjlmbo@kvq`k#le#Fmdobmgle#Mlqwk#@bqlojmbprvbqf#hjolnfwqfp-bggFufmwOjpwfmfqgjpwjm`w#eqln#wkf`lnnlmoz#hmltm#bpSklmfwj`#Boskbafwgf`obqfg#wkbw#wkf`lmwqloofg#az#wkfAfmibnjm#Eqbmhojmqlof.sobzjmd#dbnfwkf#Vmjufqpjwz#lejm#Tfpwfqm#Fvqlsfsfqplmbo#`lnsvwfqSqlif`w#Dvwfmafqdqfdbqgofpp#le#wkfkbp#affm#sqlslpfgwldfwkfq#tjwk#wkf=?,oj=?oj#`obpp>!jm#plnf#`lvmwqjfpnjm-ip!=?,p`qjsw=le#wkf#slsvobwjlmleej`jbo#obmdvbdf?jnd#pq`>!jnbdfp,jgfmwjejfg#az#wkfmbwvqbo#qfplvq`fp`obppjej`bwjlm#le`bm#af#`lmpjgfqfgrvbmwvn#nf`kbmj`pMfufqwkfofpp/#wkfnjoojlm#zfbqp#bdl?,algz=\\x0E\\t?,kwno=\\x0E\"y\"W\"W\"[\"Q\"U\"V\"@\\twbhf#bgubmwbdf#lebmg/#b``lqgjmd#wlbwwqjavwfg#wl#wkfNj`qlplew#Tjmgltpwkf#ejqpw#`fmwvqzvmgfq#wkf#`lmwqlogju#`obpp>!kfbgfqpklqwoz#bewfq#wkfmlwbaof#f{`fswjlmwfmp#le#wklvpbmgppfufqbo#gjeefqfmwbqlvmg#wkf#tlqog-qfb`kjmd#njojwbqzjplobwfg#eqln#wkflsslpjwjlm#wl#wkfwkf#Log#WfpwbnfmwBeqj`bm#Bnfqj`bmpjmpfqwfg#jmwl#wkfpfsbqbwf#eqln#wkfnfwqlslojwbm#bqfbnbhfp#jw#slppjaofb`hmltofgdfg#wkbwbqdvbaoz#wkf#nlpwwzsf>!wf{w,`pp!=\\twkf#JmwfqmbwjlmboB``lqgjmd#wl#wkf#sf>!wf{w,`pp!#,=\\t`ljm`jgf#tjwk#wkfwtl.wkjqgp#le#wkfGvqjmd#wkjp#wjnf/gvqjmd#wkf#sfqjlgbmmlvm`fg#wkbw#kfwkf#jmwfqmbwjlmbobmg#nlqf#qf`fmwozafojfufg#wkbw#wkf`lmp`jlvpmfpp#bmgelqnfqoz#hmltm#bppvqqlvmgfg#az#wkfejqpw#bssfbqfg#jml``bpjlmbooz#vpfgslpjwjlm9baplovwf8!#wbqdfw>!\\\\aobmh!#slpjwjlm9qfobwjuf8wf{w.bojdm9`fmwfq8ib{,ojap,irvfqz,2-ab`hdqlvmg.`lolq9 wzsf>!bssoj`bwjlm,bmdvbdf!#`lmwfmw>!?nfwb#kwws.frvju>!Sqjub`z#Sloj`z?,b=f+!&0@p`qjsw#pq`>$!#wbqdfw>!\\\\aobmh!=Lm#wkf#lwkfq#kbmg/-isd\\x7Fwkvna\\x7Fqjdkw\\x7F1?,gju=?gju#`obpp>!?gju#pwzof>!eolbw9mjmfwffmwk#`fmwvqz?,algz=\\x0E\\t?,kwno=\\x0E\\t?jnd#pq`>!kwws9,,p8wf{w.bojdm9`fmwfqelmw.tfjdkw9#alog8#B``lqgjmd#wl#wkf#gjeefqfm`f#afwtffm!#eqbnfalqgfq>!3!#!#pwzof>!slpjwjlm9ojmh#kqfe>!kwws9,,kwno7,ollpf-gwg!=\\tgvqjmd#wkjp#sfqjlg?,wg=?,wq=?,wbaof=`olpfoz#qfobwfg#wlelq#wkf#ejqpw#wjnf8elmw.tfjdkw9alog8jmsvw#wzsf>!wf{w!#?psbm#pwzof>!elmw.lmqfbgzpwbwf`kbmdf\\n?gju#`obpp>!`ofbqgl`vnfmw-ol`bwjlm-#Elq#f{bnsof/#wkf#b#tjgf#ubqjfwz#le#?\"GL@WZSF#kwno=\\x0E\\t?%maps8%maps8%maps8!=?b#kqfe>!kwws9,,pwzof>!eolbw9ofew8`lm`fqmfg#tjwk#wkf>kwws&0B&1E&1Ettt-jm#slsvobq#`vowvqfwzsf>!wf{w,`pp!#,=jw#jp#slppjaof#wl#Kbqubqg#Vmjufqpjwzwzofpkffw!#kqfe>!,wkf#nbjm#`kbqb`wfqL{elqg#Vmjufqpjwz##mbnf>!hfztlqgp!#`pwzof>!wf{w.bojdm9wkf#Vmjwfg#Hjmdglnefgfqbo#dlufqmnfmw?gju#pwzof>!nbqdjm#gfsfmgjmd#lm#wkf#gfp`qjswjlm#le#wkf?gju#`obpp>!kfbgfq-njm-ip!=?,p`qjsw=gfpwqv`wjlm#le#wkfpojdkwoz#gjeefqfmwjm#b``lqgbm`f#tjwkwfof`lnnvmj`bwjlmpjmgj`bwfp#wkbw#wkfpklqwoz#wkfqfbewfqfpsf`jbooz#jm#wkf#Fvqlsfbm#`lvmwqjfpKltfufq/#wkfqf#bqfpq`>!kwws9,,pwbwj`pvddfpwfg#wkbw#wkf!#pq`>!kwws9,,ttt-b#obqdf#mvnafq#le#Wfof`lnnvmj`bwjlmp!#qfo>!mleloolt!#wKloz#Qlnbm#Fnsfqlqbonlpw#f{`ovpjufoz!#alqgfq>!3!#bow>!Pf`qfwbqz#le#Pwbwf`vonjmbwjmd#jm#wkf@JB#Tlqog#Eb`wallhwkf#nlpw#jnslqwbmwbmmjufqpbqz#le#wkfpwzof>!ab`hdqlvmg.?oj=?fn=?b#kqfe>!,wkf#Bwobmwj`#L`fbmpwqj`woz#psfbhjmd/pklqwoz#afelqf#wkfgjeefqfmw#wzsfp#lewkf#Lwwlnbm#Fnsjqf=?jnd#pq`>!kwws9,,Bm#Jmwqlgv`wjlm#wl`lmpfrvfm`f#le#wkfgfsbqwvqf#eqln#wkf@lmefgfqbwf#Pwbwfpjmgjdfmlvp#sflsofpSql`ffgjmdp#le#wkfjmelqnbwjlm#lm#wkfwkflqjfp#kbuf#affmjmuloufnfmw#jm#wkfgjujgfg#jmwl#wkqffbgib`fmw#`lvmwqjfpjp#qfpslmpjaof#elqgjpplovwjlm#le#wkf`loobalqbwjlm#tjwktjgfoz#qfdbqgfg#bpkjp#`lmwfnslqbqjfpelvmgjmd#nfnafq#leGlnjmj`bm#Qfsvaoj`dfmfqbooz#b``fswfgwkf#slppjajojwz#lebqf#bopl#bubjobaofvmgfq#`lmpwqv`wjlmqfpwlqbwjlm#le#wkfwkf#dfmfqbo#svaoj`jp#bonlpw#fmwjqfozsbppfp#wkqlvdk#wkfkbp#affm#pvddfpwfg`lnsvwfq#bmg#ujgflDfqnbmj`#obmdvbdfp#b``lqgjmd#wl#wkf#gjeefqfmw#eqln#wkfpklqwoz#bewfqtbqgpkqfe>!kwwsp9,,ttt-qf`fmw#gfufolsnfmwAlbqg#le#Gjqf`wlqp?gju#`obpp>!pfbq`k\\x7F#?b#kqfe>!kwws9,,Jm#sbqwj`vobq/#wkfNvowjsof#ellwmlwfplq#lwkfq#pvapwbm`fwklvpbmgp#le#zfbqpwqbmpobwjlm#le#wkf?,gju=\\x0E\\t?,gju=\\x0E\\t\\x0E\\t?b#kqfe>!jmgf{-skstbp#fpwbaojpkfg#jmnjm-ip!=?,p`qjsw=\\tsbqwj`jsbwf#jm#wkfb#pwqlmd#jmeovfm`fpwzof>!nbqdjm.wls9qfsqfpfmwfg#az#wkfdqbgvbwfg#eqln#wkfWqbgjwjlmbooz/#wkfFofnfmw+!p`qjsw!*8Kltfufq/#pjm`f#wkf,gju=\\t?,gju=\\t?gju#ofew8#nbqdjm.ofew9sqlwf`wjlm#bdbjmpw38#ufqwj`bo.bojdm9Vmelqwvmbwfoz/#wkfwzsf>!jnbdf,{.j`lm,gju=\\t?gju#`obpp>!#`obpp>!`ofbqej{!=?gju#`obpp>!ellwfq\\n\\n?,gju=\\t\\n\\n?,gju=\\twkf#nlwjlm#sj`wvqf<}=f<W<_<\\\\=l=m<V<T<]=f<W<_<\\\\=l=m<V<T<H<Y<X<Y=l<\\\\=j<T<T<Q<Y=m<V<R<W=`<V<R=m<R<R<]=e<Y<Q<T<Y=m<R<R<]=e<Y<Q<T=c<S=l<R<_=l<\\\\<P<P=g<r=n<S=l<\\\\<^<T=n=`<]<Y=m<S<W<\\\\=n<Q<R<P<\\\\=n<Y=l<T<\\\\<W=g<S<R<[<^<R<W=c<Y=n<S<R=m<W<Y<X<Q<T<Y=l<\\\\<[<W<T=k<Q=g=i<S=l<R<X=o<V=j<T<T<S=l<R<_=l<\\\\<P<P<\\\\<S<R<W<Q<R=m=n=`=b<Q<\\\\=i<R<X<T=n=m=c<T<[<]=l<\\\\<Q<Q<R<Y<Q<\\\\=m<Y<W<Y<Q<T=c<T<[<P<Y<Q<Y<Q<T=c<V<\\\\=n<Y<_<R=l<T<T<|<W<Y<V=m<\\\\<Q<X=l\\fHJ\\fIa\\fHY\\fHR\\fH\\\\\\fHR\\fHB\\fId\\fHD\\fIm\\fHi\\fH^\\fHF\\fIa\\fH\\\\\\fHJ\\fHR\\fHD\\fHA\\fHR\\fH\\\\\\fHH\\fIl\\fHC\\fHi\\fHD\\fIm\\fHJ\\fIk\\fHZ\\fHU\\fHS\\fHD\\fIa\\fHJ\\fIl\\fHk\\fHn\\fHM\\fHS\\fHC\\fHR\\fHJ\\fHS\\fH^\\fIa\\fH^\\fIl\\fHi\\fHK\\fHS\\fHy\\fHR\\fH\\\\\\fHY\\fIl\\fHM\\fHS\\fHC\\fIg\\fHv\\fHS\\fHs\\fIa\\fHL\\fIk\\fHT\\fHB\\fHR\\fHv\\fHR\\fH\\\\\\fHp\\fHn\\fHy\\fIa\\fHZ\\fHD\\fHJ\\fIm\\fHD\\fHS\\fHC\\fHR\\fHF\\fIa\\fH\\\\\\fHC\\fIg\\fH{\\fHi\\fHD\\fIm\\fHT\\fHR\\fH\\\\\\fH}\\fHD\\fH^\\fHR\\fHk\\fHD\\fHF\\fHR\\fH\\\\\\fIa\\fHs\\fIl\\fHZ\\fH\\\\\\fIa\\fHH\\fIg\\fHn\\fH^\\fIg\\fHy\\fHT\\fHA\\fHR\\fHG\\fHP\\fIa\\fH^\\fId\\fHZ\\fHZ\\fH\\\\\\fIa\\fHH\\fIk\\fHn\\fHF\\fIa\\fH\\\\\\fHJ\\fIk\\fHZ\\fHF\\fIa\\fH^\\fIk\\fHC\\fH\\\\\\fHy\\fIk\\fHn\\fHJ\\fIa\\fH\\\\\\fHT\\fIa\\fHI\\fHS\\fHH\\fHS\\fHe\\fHH\\fIa\\fHF\\fHR\\fHJ\\fHe\\fHD\\fIa\\fHU\\fIk\\fHn\\fHv\\fHS\\fHs\\fIa\\fHL\\fHR\\fHC\\fHR\\fHH\\fIa\\fH\\\\\\fHR\\fHp\\fIa\\fHC\\fHR\\fHJ\\fHR\\fHF\\fIm\\fH\\\\\\fHR\\fHD\\fIk\\fHp\\fIg\\fHM\\fHP\\fIk\\fHn\\fHi\\fHD\\fIm\\fHY\\fHR\\fHJ\\fHZ\\fIa\\fH\\\\\\fIk\\fHO\\fIl\\fHZ\\fHS\\fHy\\fIa\\fH[\\fHR\\fHT\\fH\\\\\\fHy\\fHR\\fH\\\\\\fIl\\fHT\\fHn\\fH{\\fIa\\fH\\\\\\fHU\\fHF\\fH\\\\\\fHS\\fHO\\fHR\\fHB\\fH@\\fIa\\fH\\\\\\fHR\\fHn\\fHM\\fH@\\fHv\\fIa\\fHv\\fIg\\fHn\\fHe\\fHF\\fH^\\fH@\\fIa\\fHK\\fHB\\fHn\\fHH\\fIa\\fH\\\\\\fIl\\fHT\\fHn\\fHF\\fH\\\\\\fIa\\fHy\\fHe\\fHB\\fIa\\fHB\\fIl\\fHJ\\fHB\\fHR\\fHK\\fIa\\fHC\\fHB\\fHT\\fHU\\fHR\\fHC\\fHH\\fHR\\fHZ\\fH@\\fIa\\fHJ\\fIg\\fHn\\fHB\\fIl\\fHM\\fHS\\fHC\\fHR\\fHj\\fHd\\fHF\\fIl\\fHc\\fH^\\fHB\\fIg\\fH@\\fHR\\fHk\\fH^\\fHT\\fHn\\fHz\\fIa\\fHC\\fHR\\fHj\\fHF\\fH\\\\\\fIk\\fHZ\\fHD\\fHi\\fHD\\fIm\\fH@\\fHn\\fHK\\fH@\\fHR\\fHp\\fHP\\fHR\\fH\\\\\\fHD\\fHY\\fIl\\fHD\\fHH\\fHB\\fHF\\fIa\\fH\\\\\\fHB\\fIm\\fHz\\fHF\\fIa\\fH\\\\\\fHZ\\fIa\\fHD\\fHF\\fH\\\\\\fHS\\fHY\\fHR\\fH\\\\\\fHD\\fIm\\fHy\\fHT\\fHR\\fHD\\fHT\\fHB\\fH\\\\\\fIa\\fHI\\fHD\\fHj\\fHC\\fIg\\fHp\\fHS\\fHH\\fHT\\fIg\\fHB\\fHY\\fHR\\fH\\\\4K5h5i4X4K4]5o4K4F4K5h5i5j4F4C5f4K4F4K5h5o5i4D5f5d4F4]4K5h5i4X4K5k4C4K4F4U4C4C4K5h4^5d4K4]4U4C4C4K5h4]4C5d4C4K5h4I4_5h4K5i5f4E4K5h5m5d4F5d4X5d4D4K5h5i4_4K4D5n4K4F4K5h5i4U5h5d5i4K4F4K5h5i4_5h4_5h4K4F4K5h4@4]4K5m5f5o4_4K5h4K4_5h4K5i5f4E4K5h4K4F4Y4K5h4K4Fhfztlqgp!#`lmwfmw>!t0-lqd,2:::,{kwno!=?b#wbqdfw>!\\\\aobmh!#wf{w,kwno8#`kbqpfw>!#wbqdfw>!\\\\aobmh!=?wbaof#`foosbggjmd>!bvwl`lnsofwf>!lee!#wf{w.bojdm9#`fmwfq8wl#obpw#ufqpjlm#az#ab`hdqlvmg.`lolq9# !#kqfe>!kwws9,,ttt-,gju=?,gju=?gju#jg>?b#kqfe>! !#`obpp>!!=?jnd#pq`>!kwws9,,`qjsw!#pq`>!kwws9,,\\t?p`qjsw#obmdvbdf>!,,FM!#!kwws9,,ttt-tfm`lgfVQJ@lnslmfmw+!#kqfe>!ibubp`qjsw9?gju#`obpp>!`lmwfmwgl`vnfmw-tqjwf+$?p`slpjwjlm9#baplovwf8p`qjsw#pq`>!kwws9,,#pwzof>!nbqdjm.wls9-njm-ip!=?,p`qjsw=\\t?,gju=\\t?gju#`obpp>!t0-lqd,2:::,{kwno!#\\t\\x0E\\t?,algz=\\x0E\\t?,kwno=gjpwjm`wjlm#afwtffm,!#wbqdfw>!\\\\aobmh!=?ojmh#kqfe>!kwws9,,fm`lgjmd>!vwe.;!<=\\tt-bggFufmwOjpwfmfq<b`wjlm>!kwws9,,ttt-j`lm!#kqfe>!kwws9,,#pwzof>!ab`hdqlvmg9wzsf>!wf{w,`pp!#,=\\tnfwb#sqlsfqwz>!ld9w?jmsvw#wzsf>!wf{w!##pwzof>!wf{w.bojdm9wkf#gfufolsnfmw#le#wzofpkffw!#wzsf>!wfkwno8#`kbqpfw>vwe.;jp#`lmpjgfqfg#wl#afwbaof#tjgwk>!233&!#Jm#bggjwjlm#wl#wkf#`lmwqjavwfg#wl#wkf#gjeefqfm`fp#afwtffmgfufolsnfmw#le#wkf#Jw#jp#jnslqwbmw#wl#?,p`qjsw=\\t\\t?p`qjsw##pwzof>!elmw.pjyf92=?,psbm=?psbm#jg>daOjaqbqz#le#@lmdqfpp?jnd#pq`>!kwws9,,jnFmdojpk#wqbmpobwjlmB`bgfnz#le#P`jfm`fpgju#pwzof>!gjpsobz9`lmpwqv`wjlm#le#wkf-dfwFofnfmwAzJg+jg*jm#`lmivm`wjlm#tjwkFofnfmw+$p`qjsw$*8#?nfwb#sqlsfqwz>!ld9<}=f<W<_<\\\\=l=m<V<T\\t#wzsf>!wf{w!#mbnf>!=Sqjub`z#Sloj`z?,b=bgnjmjpwfqfg#az#wkffmbaofPjmdofQfrvfpwpwzof>%rvlw8nbqdjm9?,gju=?,gju=?,gju=?=?jnd#pq`>!kwws9,,j#pwzof>%rvlw8eolbw9qfefqqfg#wl#bp#wkf#wlwbo#slsvobwjlm#lejm#Tbpkjmdwlm/#G-@-#pwzof>!ab`hdqlvmg.bnlmd#lwkfq#wkjmdp/lqdbmjybwjlm#le#wkfsbqwj`jsbwfg#jm#wkfwkf#jmwqlgv`wjlm#lejgfmwjejfg#tjwk#wkfej`wjlmbo#`kbqb`wfq#L{elqg#Vmjufqpjwz#njpvmgfqpwbmgjmd#leWkfqf#bqf/#kltfufq/pwzofpkffw!#kqfe>!,@lovnajb#Vmjufqpjwzf{sbmgfg#wl#jm`ovgfvpvbooz#qfefqqfg#wljmgj`bwjmd#wkbw#wkfkbuf#pvddfpwfg#wkbwbeejojbwfg#tjwk#wkf`lqqfobwjlm#afwtffmmvnafq#le#gjeefqfmw=?,wg=?,wq=?,wbaof=Qfsvaoj`#le#Jqfobmg\\t?,p`qjsw=\\t?p`qjsw#vmgfq#wkf#jmeovfm`f`lmwqjavwjlm#wl#wkfLeej`jbo#tfapjwf#lekfbgrvbqwfqp#le#wkf`fmwfqfg#bqlvmg#wkfjnsoj`bwjlmp#le#wkfkbuf#affm#gfufolsfgEfgfqbo#Qfsvaoj`#leaf`bnf#jm`qfbpjmdoz`lmwjmvbwjlm#le#wkfMlwf/#kltfufq/#wkbwpjnjobq#wl#wkbw#le#`bsbajojwjfp#le#wkfb``lqgbm`f#tjwk#wkfsbqwj`jsbmwp#jm#wkfevqwkfq#gfufolsnfmwvmgfq#wkf#gjqf`wjlmjp#lewfm#`lmpjgfqfgkjp#zlvmdfq#aqlwkfq?,wg=?,wq=?,wbaof=?b#kwws.frvju>![.VB.skzpj`bo#sqlsfqwjfple#Aqjwjpk#@lovnajbkbp#affm#`qjwj`jyfg+tjwk#wkf#f{`fswjlmrvfpwjlmp#balvw#wkfsbppjmd#wkqlvdk#wkf3!#`foosbggjmd>!3!#wklvpbmgp#le#sflsofqfgjqf`wp#kfqf-#Elqkbuf#`kjogqfm#vmgfq&0F&0@,p`qjsw&0F!**8?b#kqfe>!kwws9,,ttt-?oj=?b#kqfe>!kwws9,,pjwf\\\\mbnf!#`lmwfmw>!wf{w.gf`lqbwjlm9mlmfpwzof>!gjpsobz9#mlmf?nfwb#kwws.frvju>![.mft#Gbwf+*-dfwWjnf+*#wzsf>!jnbdf,{.j`lm!?,psbm=?psbm#`obpp>!obmdvbdf>!ibubp`qjswtjmglt-ol`bwjlm-kqfe?b#kqfe>!ibubp`qjsw9..=\\x0E\\t?p`qjsw#wzsf>!w?b#kqfe>$kwws9,,ttt-klqw`vw#j`lm!#kqfe>!?,gju=\\x0E\\t?gju#`obpp>!?p`qjsw#pq`>!kwws9,,!#qfo>!pwzofpkffw!#w?,gju=\\t?p`qjsw#wzsf>,b=#?b#kqfe>!kwws9,,#booltWqbmpsbqfm`z>![.VB.@lnsbwjaof!#`lmqfobwjlmpkjs#afwtffm\\t?,p`qjsw=\\x0E\\t?p`qjsw#?,b=?,oj=?,vo=?,gju=bppl`jbwfg#tjwk#wkf#sqldqbnnjmd#obmdvbdf?,b=?b#kqfe>!kwws9,,?,b=?,oj=?oj#`obpp>!elqn#b`wjlm>!kwws9,,?gju#pwzof>!gjpsobz9wzsf>!wf{w!#mbnf>!r!?wbaof#tjgwk>!233&!#ab`hdqlvmg.slpjwjlm9!#alqgfq>!3!#tjgwk>!qfo>!pklqw`vw#j`lm!#k5=?vo=?oj=?b#kqfe>!##?nfwb#kwws.frvju>!`pp!#nfgjb>!p`qffm!#qfpslmpjaof#elq#wkf#!#wzsf>!bssoj`bwjlm,!#pwzof>!ab`hdqlvmg.kwno8#`kbqpfw>vwe.;!#booltwqbmpsbqfm`z>!pwzofpkffw!#wzsf>!wf\\x0E\\t?nfwb#kwws.frvju>!=?,psbm=?psbm#`obpp>!3!#`foopsb`jmd>!3!=8\\t?,p`qjsw=\\t?p`qjsw#plnfwjnfp#`boofg#wkfglfp#mlw#mf`fppbqjozElq#nlqf#jmelqnbwjlmbw#wkf#afdjmmjmd#le#?\"GL@WZSF#kwno=?kwnosbqwj`vobqoz#jm#wkf#wzsf>!kjggfm!#mbnf>!ibubp`qjsw9uljg+3*8!feef`wjufmfpp#le#wkf#bvwl`lnsofwf>!lee!#dfmfqbooz#`lmpjgfqfg=?jmsvw#wzsf>!wf{w!#!=?,p`qjsw=\\x0E\\t?p`qjswwkqlvdklvw#wkf#tlqog`lnnlm#njp`lm`fswjlmbppl`jbwjlm#tjwk#wkf?,gju=\\t?,gju=\\t?gju#`gvqjmd#kjp#ojefwjnf/`lqqfpslmgjmd#wl#wkfwzsf>!jnbdf,{.j`lm!#bm#jm`qfbpjmd#mvnafqgjsolnbwj`#qfobwjlmpbqf#lewfm#`lmpjgfqfgnfwb#`kbqpfw>!vwe.;!#?jmsvw#wzsf>!wf{w!#f{bnsofp#jm`ovgf#wkf!=?jnd#pq`>!kwws9,,jsbqwj`jsbwjlm#jm#wkfwkf#fpwbaojpknfmw#le\\t?,gju=\\t?gju#`obpp>!%bns8maps8%bns8maps8wl#gfwfqnjmf#tkfwkfqrvjwf#gjeefqfmw#eqlnnbqhfg#wkf#afdjmmjmdgjpwbm`f#afwtffm#wkf`lmwqjavwjlmp#wl#wkf`lmeoj`w#afwtffm#wkftjgfoz#`lmpjgfqfg#wltbp#lmf#le#wkf#ejqpwtjwk#ubqzjmd#gfdqffpkbuf#psf`vobwfg#wkbw+gl`vnfmw-dfwFofnfmwsbqwj`jsbwjmd#jm#wkflqjdjmbooz#gfufolsfgfwb#`kbqpfw>!vwe.;!=#wzsf>!wf{w,`pp!#,=\\tjmwfq`kbmdfbaoz#tjwknlqf#`olpfoz#qfobwfgpl`jbo#bmg#slojwj`bowkbw#tlvog#lwkfqtjpfsfqsfmgj`vobq#wl#wkfpwzof#wzsf>!wf{w,`ppwzsf>!pvanjw!#mbnf>!ebnjojfp#qfpjgjmd#jmgfufolsjmd#`lvmwqjfp`lnsvwfq#sqldqbnnjmdf`lmlnj`#gfufolsnfmwgfwfqnjmbwjlm#le#wkfelq#nlqf#jmelqnbwjlmlm#pfufqbo#l``bpjlmpslqwvdv/Fp#+Fvqlsfv*<O<V=l<\\\\={<Q=m=`<V<\\\\=o<V=l<\\\\={<Q=m=`<V<\\\\<L<R=m=m<T<U=m<V<R<U<P<\\\\=n<Y=l<T<\\\\<W<R<^<T<Q=h<R=l<P<\\\\=j<T<T=o<S=l<\\\\<^<W<Y<Q<T=c<Q<Y<R<]=i<R<X<T<P<R<T<Q=h<R=l<P<\\\\=j<T=c<t<Q=h<R=l<P<\\\\=j<T=c<L<Y=m<S=o<]<W<T<V<T<V<R<W<T=k<Y=m=n<^<R<T<Q=h<R=l<P<\\\\=j<T=b=n<Y=l=l<T=n<R=l<T<T<X<R=m=n<\\\\=n<R=k<Q<R4K5h5i4F5d4K4@4C5d5j4K5h4K4X4F4]4K5o4K4F4K5h4K5n4F4]4K4A4K4Fkwno8#`kbqpfw>VWE.;!#pfwWjnflvw+evm`wjlm+*gjpsobz9jmojmf.aol`h8?jmsvw#wzsf>!pvanjw!#wzsf#>#$wf{w,ibubp`qj?jnd#pq`>!kwws9,,ttt-!#!kwws9,,ttt-t0-lqd,pklqw`vw#j`lm!#kqfe>!!#bvwl`lnsofwf>!lee!#?,b=?,gju=?gju#`obpp>?,b=?,oj=\\t?oj#`obpp>!`pp!#wzsf>!wf{w,`pp!#?elqn#b`wjlm>!kwws9,,{w,`pp!#kqfe>!kwws9,,ojmh#qfo>!bowfqmbwf!#\\x0E\\t?p`qjsw#wzsf>!wf{w,#lm`oj`h>!ibubp`qjsw9+mft#Gbwf*-dfwWjnf+*~kfjdkw>!2!#tjgwk>!2!#Sflsof$p#Qfsvaoj`#le##?b#kqfe>!kwws9,,ttt-wf{w.gf`lqbwjlm9vmgfqwkf#afdjmmjmd#le#wkf#?,gju=\\t?,gju=\\t?,gju=\\tfpwbaojpknfmw#le#wkf#?,gju=?,gju=?,gju=?,g ujftslqwxnjm.kfjdkw9\\t?p`qjsw#pq`>!kwws9,,lswjlm=?lswjlm#ubovf>lewfm#qfefqqfg#wl#bp#,lswjlm=\\t?lswjlm#ubov?\"GL@WZSF#kwno=\\t?\"..XJmwfqmbwjlmbo#Bjqslqw=\\t?b#kqfe>!kwws9,,ttt?,b=?b#kqfe>!kwws9,,t\\fTL\\fT^\\fTE\\fT^\\fUh\\fT{\\fTN\\roI\\ro|\\roL\\ro{\\roO\\rov\\rot\\nAO\\x05Gx\\bTA\\nzk#+\\x0BUm\\x05Gx*\\fHD\\fHS\\fH\\\\\\fIa\\fHJ\\fIk\\fHZ\\fHM\\fHR\\fHe\\fHD\\fH^\\fIg\\fHM\\fHy\\fIa\\fH[\\fIk\\fHH\\fIa\\fH\\\\\\fHp\\fHR\\fHD\\fHy\\fHR\\fH\\\\\\fIl\\fHT\\fHn\\fH@\\fHn\\fHK\\fHS\\fHH\\fHT\\fIa\\fHI\\fHR\\fHF\\fHD\\fHR\\fHT\\fIa\\fHY\\fIl\\fHy\\fHR\\fH\\\\\\fHT\\fHn\\fHT\\fIa\\fHy\\fH\\\\\\fHO\\fHT\\fHR\\fHB\\fH{\\fIa\\fH\\\\\\fIl\\fHv\\fHS\\fHs\\fIa\\fHL\\fIg\\fHn\\fHY\\fHS\\fHp\\fIa\\fHr\\fHR\\fHD\\fHi\\fHB\\fIk\\fH\\\\\\fHS\\fHy\\fHR\\fHY\\fHS\\fHA\\fHS\\fHD\\fIa\\fHD\\fH{\\fHR\\fHM\\fHS\\fHC\\fHR\\fHm\\fHy\\fIa\\fHC\\fIg\\fHn\\fHy\\fHS\\fHT\\fIm\\fH\\\\\\fHy\\fIa\\fH[\\fHR\\fHF\\fHU\\fIm\\fHm\\fHv\\fHH\\fIl\\fHF\\fIa\\fH\\\\\\fH@\\fHn\\fHK\\fHD\\fHs\\fHS\\fHF\\fIa\\fHF\\fHO\\fIl\\fHy\\fIa\\fH\\\\\\fHS\\fHy\\fIk\\fHs\\fHF\\fIa\\fH\\\\\\fHR\\fH\\\\\\fHn\\fHA\\fHF\\fIa\\fH\\\\\\fHR\\fHF\\fIa\\fHH\\fHB\\fHR\\fH^\\fHS\\fHy\\fIg\\fHn\\fH\\\\\\fHG\\fHP\\fIa\\fHH\\fHR\\fH\\\\\\fHD\\fHS\\fH\\\\\\fIa\\fHB\\fHR\\fHO\\fH^\\fHS\\fHB\\fHS\\fHs\\fIk\\fHMgfp`qjswjlm!#`lmwfmw>!gl`vnfmw-ol`bwjlm-sqlw-dfwFofnfmwpAzWbdMbnf+?\"GL@WZSF#kwno=\\t?kwno#?nfwb#`kbqpfw>!vwe.;!=9vqo!#`lmwfmw>!kwws9,,-`pp!#qfo>!pwzofpkffw!pwzof#wzsf>!wf{w,`pp!=wzsf>!wf{w,`pp!#kqfe>!t0-lqd,2:::,{kwno!#{nowzsf>!wf{w,ibubp`qjsw!#nfwklg>!dfw!#b`wjlm>!ojmh#qfo>!pwzofpkffw!##>#gl`vnfmw-dfwFofnfmwwzsf>!jnbdf,{.j`lm!#,=`foosbggjmd>!3!#`foops-`pp!#wzsf>!wf{w,`pp!#?,b=?,oj=?oj=?b#kqfe>!!#tjgwk>!2!#kfjdkw>!2!!=?b#kqfe>!kwws9,,ttt-pwzof>!gjpsobz9mlmf8!=bowfqmbwf!#wzsf>!bssoj.,,T0@,,GWG#[KWNO#2-3#foopsb`jmd>!3!#`foosbg#wzsf>!kjggfm!#ubovf>!,b=%maps8?psbm#qlof>!p\\t?jmsvw#wzsf>!kjggfm!#obmdvbdf>!IbubP`qjsw!##gl`vnfmw-dfwFofnfmwpAd>!3!#`foopsb`jmd>!3!#zsf>!wf{w,`pp!#nfgjb>!wzsf>$wf{w,ibubp`qjsw$tjwk#wkf#f{`fswjlm#le#zsf>!wf{w,`pp!#qfo>!pw#kfjdkw>!2!#tjgwk>!2!#>$(fm`lgfVQJ@lnslmfmw+?ojmh#qfo>!bowfqmbwf!#\\talgz/#wq/#jmsvw/#wf{wnfwb#mbnf>!qlalwp!#`lmnfwklg>!slpw!#b`wjlm>!=\\t?b#kqfe>!kwws9,,ttt-`pp!#qfo>!pwzofpkffw!#?,gju=?,gju=?gju#`obppobmdvbdf>!ibubp`qjsw!=bqjb.kjggfm>!wqvf!=.[?qjsw!#wzsf>!wf{w,ibubpo>38~*+*8\\t+evm`wjlm+*xab`hdqlvmg.jnbdf9#vqo+,b=?,oj=?oj=?b#kqfe>!k\\n\\n?oj=?b#kqfe>!kwws9,,bwlq!#bqjb.kjggfm>!wqv=#?b#kqfe>!kwws9,,ttt-obmdvbdf>!ibubp`qjsw!#,lswjlm=\\t?lswjlm#ubovf,gju=?,gju=?gju#`obpp>qbwlq!#bqjb.kjggfm>!wqf>+mft#Gbwf*-dfwWjnf+*slqwvdv/Fp#+gl#Aqbpjo*<R=l<_<\\\\<Q<T<[<\\\\=j<T<T<^<R<[<P<R<Z<Q<R=m=n=`<R<]=l<\\\\<[<R<^<\\\\<Q<T=c=l<Y<_<T=m=n=l<\\\\=j<T<T<^<R<[<P<R<Z<Q<R=m=n<T<R<]=c<[<\\\\=n<Y<W=`<Q<\\\\?\"GL@WZSF#kwno#SVAOJ@#!mw.Wzsf!#`lmwfmw>!wf{w,?nfwb#kwws.frvju>!@lmwfqbmpjwjlmbo,,FM!#!kwws9?kwno#{nomp>!kwws9,,ttt.,,T0@,,GWG#[KWNO#2-3#WGWG,{kwno2.wqbmpjwjlmbo,,ttt-t0-lqd,WQ,{kwno2,sf#>#$wf{w,ibubp`qjsw$8?nfwb#mbnf>!gfp`qjswjlmsbqfmwMlgf-jmpfqwAfelqf?jmsvw#wzsf>!kjggfm!#mbip!#wzsf>!wf{w,ibubp`qj+gl`vnfmw*-qfbgz+evm`wjp`qjsw#wzsf>!wf{w,ibubpjnbdf!#`lmwfmw>!kwws9,,VB.@lnsbwjaof!#`lmwfmw>wno8#`kbqpfw>vwe.;!#,=\\tojmh#qfo>!pklqw`vw#j`lm?ojmh#qfo>!pwzofpkffw!#?,p`qjsw=\\t?p`qjsw#wzsf>>#gl`vnfmw-`qfbwfFofnfm?b#wbqdfw>!\\\\aobmh!#kqfe>#gl`vnfmw-dfwFofnfmwpAjmsvw#wzsf>!wf{w!#mbnf>b-wzsf#>#$wf{w,ibubp`qjmsvw#wzsf>!kjggfm!#mbnfkwno8#`kbqpfw>vwe.;!#,=gwg!=\\t?kwno#{nomp>!kwws.,,T0@,,GWG#KWNO#7-32#WfmwpAzWbdMbnf+$p`qjsw$*jmsvw#wzsf>!kjggfm!#mbn?p`qjsw#wzsf>!wf{w,ibubp!#pwzof>!gjpsobz9mlmf8!=gl`vnfmw-dfwFofnfmwAzJg+>gl`vnfmw-`qfbwfFofnfmw+$#wzsf>$wf{w,ibubp`qjsw$jmsvw#wzsf>!wf{w!#mbnf>!g-dfwFofnfmwpAzWbdMbnf+pmj`bo!#kqfe>!kwws9,,ttt-@,,GWG#KWNO#7-32#Wqbmpjw?pwzof#wzsf>!wf{w,`pp!=\\t\\t?pwzof#wzsf>!wf{w,`pp!=jlmbo-gwg!=\\t?kwno#{nomp>kwws.frvju>!@lmwfmw.Wzsfgjmd>!3!#`foopsb`jmd>!3!kwno8#`kbqpfw>vwe.;!#,=\\t#pwzof>!gjpsobz9mlmf8!=??oj=?b#kqfe>!kwws9,,ttt-#wzsf>$wf{w,ibubp`qjsw$=<X<Y=c=n<Y<W=`<Q<R=m=n<T=m<R<R=n<^<Y=n=m=n<^<T<T<S=l<R<T<[<^<R<X=m=n<^<\\\\<]<Y<[<R<S<\\\\=m<Q<R=m=n<T\\fHF\\fIm\\fHT\\fIa\\fHH\\fHS\\fHy\\fHR\\fHy\\fHR\\fHn\\fH{\\fIa\\fH\\\\\\fIk\\fHT\\fHe\\fHD\\fIa\\fHU\\fIg\\fHn\\fHD\\fIk\\fHY\\fHS\\fHK\\fHR\\fHD\\fHT\\fHA\\fHR\\fHG\\fHS\\fHy\\fIa\\fHT\\fHS\\fHn\\fH{\\fHT\\fIm\\fH\\\\\\fHy\\fIa\\fH[\\fHS\\fHH\\fHy\\fIe\\fHF\\fIl\\fH\\\\\\fHR\\fHk\\fHs\\fHY\\fHS\\fHp\\fIa\\fHr\\fHR\\fHF\\fHD\\fHy\\fHR\\fH\\\\\\fIa\\fH\\\\\\fHY\\fHR\\fHd\\fHT\\fHy\\fIa\\fH\\\\\\fHS\\fHC\\fHH\\fHR', \"\\u06F7%\\u018C'T%\\x85'W%\\xD7%O%g%\\xA6&\\u0193%\\u01E5&>&*&'&^&\\x88\\u0178\\u0C3E&\\u01AD&\\u0192&)&^&%&'&\\x82&P&1&\\xB1&3&]&m&u&E&t&C&\\xCF&V&V&/&>&6&\\u0F76\\u177Co&p&@&E&M&P&x&@&F&e&\\xCC&7&:&(&D&0&C&)&.&F&-&1&(&L&F&1\\u025E*\\u03EA\\u21F3&\\u1372&K&;&)&E&H&P&0&?&9&V&\\x81&-&v&a&,&E&)&?&=&'&'&B&\\u0D2E&\\u0503&\\u0316*&*8&%&%&&&%,)&\\x9A&>&\\x86&7&]&F&2&>&J&6&n&2&%&?&\\x8E&2&6&J&g&-&0&,&*&J&*&O&)&6&(&<&B&N&.&P&@&2&.&W&M&%\\u053C\\x84(,(<&,&\\u03DA&\\u18C7&-&,(%&(&%&(\\u013B0&X&D&\\x81&j&'&J&(&.&B&3&Z&R&h&3&E&E&<\\xC6-\\u0360\\u1EF3&%8?&@&,&Z&@&0&J&,&^&x&_&6&C&6&C\\u072C\\u2A25&f&-&-&-&-&,&J&2&8&z&8&C&Y&8&-&d&\\u1E78\\xCC-&7&1&F&7&t&W&7&I&.&.&^&=\\u0F9C\\u19D3&8(>&/&/&\\u077B')'\\u1065')'%@/&0&%\\u043E\\u09C0*&*@&C\\u053D\\u05D4\\u0274\\u05EB4\\u0DD7\\u071A\\u04D16\\u0D84&/\\u0178\\u0303Z&*%\\u0246\\u03FF&\\u0134&1\\xA8\\u04B4\\u0174\", dictionarySizeBits, 'AAAAKKLLKKKKKJJIHHIHHGGFF');\n        flipBuffer(dictionaryData);\n        setData(asReadOnlyBuffer(dictionaryData), dictionarySizeBits);\n    }\n    /* GENERATED CODE END */\n    /**\n     * @param {!number} a\n     * @param {!number} b\n     * @return {!number}\n     */\n    function min(a, b) {\n        return a <= b ? a : b;\n    }\n    /**\n     * @param {!Int8Array} dst\n     * @param {!number} target\n     * @param {!Int8Array} src\n     * @param {!number} start\n     * @param {!number} end\n     * @return {void}\n     */\n    function copyBytes(dst, target, src, start, end) {\n        dst.set(src.slice(start, end), target);\n    }\n    /**\n     * @param {!InputStream|null} src\n     * @param {!Int8Array} dst\n     * @param {!number} offset\n     * @param {!number} length\n     * @return {!number}\n     */\n    function readInput(src, dst, offset, length) {\n        if (src == null)\n            return -1;\n        let /** number */ end = min(src.offset + length, src.data.length);\n        let /** number */ bytesRead = end - src.offset;\n        dst.set(src.data.subarray(src.offset, end), offset);\n        src.offset += bytesRead;\n        return bytesRead;\n    }\n    /**\n     * @param {!InputStream} src\n     * @return {!number}\n     */\n    function closeInput(src) {\n        return 0;\n    }\n    /**\n     * @param {!Int8Array} src\n     * @return {!Int8Array}\n     */\n    function asReadOnlyBuffer(src) {\n        return src;\n    }\n    /**\n     * @param {!Int8Array} src\n     * @return {!number}\n     */\n    function isReadOnly(src) {\n        return 1;\n    }\n    /**\n     * @param {!Int8Array} src\n     * @return {!number}\n     */\n    function isDirect(src) {\n        return 1;\n    }\n    /**\n     * @param {!Int8Array} buffer\n     * @return {void}\n     */\n    function flipBuffer(buffer) {\n        /* no-op */\n    }\n    /**\n     * @param {!string} src\n     * @return {!Int8Array}\n     */\n    function toUsAsciiBytes(src) {\n        let /** !number */ n = src.length;\n        let /** !Int8Array */ result = new Int8Array(n);\n        for (let /** !number */ i = 0; i < n; ++i) {\n            result[i] = src.charCodeAt(i);\n        }\n        return result;\n    }\n    /**\n     * @param {!Int8Array} bytes\n     * @param {Options=} options\n     * @return {!Int8Array}\n     */\n    function decode(bytes, options) {\n        let /** !State */ s = new State();\n        initState(s, new InputStream(bytes));\n        if (options) {\n            let customDictionary = /** @type {?Int8Array} */ options['customDictionary'];\n            if (customDictionary)\n                attachDictionaryChunk(s, customDictionary);\n        }\n        let /** !number */ totalOutput = 0;\n        let /** !Array<!Int8Array> */ chunks = [];\n        while (true) {\n            let /** !Int8Array */ chunk = new Int8Array(16384);\n            chunks.push(chunk);\n            s.output = chunk;\n            s.outputOffset = 0;\n            s.outputLength = 16384;\n            s.outputUsed = 0;\n            decompress(s);\n            totalOutput += s.outputUsed;\n            if (s.outputUsed < 16384)\n                break;\n        }\n        close(s);\n        let /** !Int8Array */ result = new Int8Array(totalOutput);\n        let /** !number */ offset = 0;\n        for (let /** !number */ i = 0; i < chunks.length; ++i) {\n            let /** !Int8Array */ chunk = chunks[i];\n            let /** !number */ end = min(totalOutput, offset + 16384);\n            let /** !number */ len = end - offset;\n            if (len < 16384) {\n                result.set(chunk.subarray(0, len), offset);\n            }\n            else {\n                result.set(chunk, offset);\n            }\n            offset += len;\n        }\n        return result;\n    }\n    return decode;\n};\n/**\n * @type {function(!Int8Array, Options=):!Int8Array}\n */\nexport let BrotliDecode = makeBrotliDecode();\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { Compression } from \"./compression.js\";\nimport { isBrowser, toArrayBuffer } from '@loaders.gl/loader-utils';\nimport { registerJSModules, getJSModule, getJSModuleOrNull } from '@loaders.gl/loader-utils';\n// import brotli from 'brotli';  // https://bundlephobia.com/package/brotli\nimport { BrotliDecode } from \"../brotli/decode.js\";\nimport zlib from 'zlib';\nimport { promisify1 } from '@loaders.gl/loader-utils';\nconst DEFAULT_BROTLI_OPTIONS = {\n    brotli: {\n        mode: 0,\n        quality: 8,\n        lgwin: 22\n    }\n};\n/**\n * brotli compression / decompression\n */\nexport class BrotliCompression extends Compression {\n    name = 'brotli';\n    extensions = ['br'];\n    contentEncodings = ['br'];\n    isSupported = true;\n    options;\n    constructor(options) {\n        super(options);\n        this.options = options;\n        registerJSModules(options?.modules);\n    }\n    /**\n     * brotli is an injectable dependency due to big size\n     * @param options\n     */\n    async preload(modules = {}) {\n        registerJSModules(modules);\n    }\n    async compress(input) {\n        // On Node.js we can use built-in zlib\n        if (!isBrowser && this.options.brotli?.useZlib) {\n            const buffer = await promisify1(zlib.brotliCompress)(input);\n            return toArrayBuffer(buffer);\n        }\n        return this.compressSync(input);\n    }\n    compressSync(input) {\n        // On Node.js we can use built-in zlib\n        if (!isBrowser && this.options.brotli?.useZlib) {\n            const buffer = zlib.brotliCompressSync(input);\n            return toArrayBuffer(buffer);\n        }\n        const brotliOptions = { ...DEFAULT_BROTLI_OPTIONS.brotli, ...this.options?.brotli };\n        const inputArray = new Uint8Array(input);\n        const brotli = getJSModule('brotli', this.name);\n        // @ts-ignore brotli types state that only Buffers are accepted...\n        const outputArray = brotli.compress(inputArray, brotliOptions);\n        return outputArray.buffer;\n    }\n    async decompress(input) {\n        // On Node.js we can use built-in zlib\n        if (!isBrowser && this.options.brotli?.useZlib) {\n            const buffer = await promisify1(zlib.brotliDecompress)(input);\n            return toArrayBuffer(buffer);\n        }\n        return this.decompressSync(input);\n    }\n    decompressSync(input) {\n        // On Node.js we can use built-in zlib\n        if (!isBrowser && this.options.brotli?.useZlib) {\n            const buffer = zlib.brotliDecompressSync(input);\n            return toArrayBuffer(buffer);\n        }\n        const brotliOptions = { ...DEFAULT_BROTLI_OPTIONS.brotli, ...this.options?.brotli };\n        const inputArray = new Uint8Array(input);\n        const brotli = getJSModuleOrNull('brotli');\n        if (brotli) {\n            // @ts-ignore brotli types state that only Buffers are accepted...\n            const outputArray = brotli.decompress(inputArray, brotliOptions);\n            return outputArray.buffer;\n        }\n        const outputArray = BrotliDecode(inputArray, undefined);\n        return outputArray.buffer;\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { Compression } from \"./compression.js\";\nimport { compress, uncompress } from 'snappyjs'; // https://bundlephobia.com/package/snappy\n/**\n * Snappy/zippy compression / decompression\n */\nexport class SnappyCompression extends Compression {\n    name = 'snappy';\n    extensions = [];\n    contentEncodings = [];\n    isSupported = true;\n    options;\n    constructor(options) {\n        super(options);\n        this.options = options || {};\n    }\n    compressSync(input) {\n        // Accepts arrayBuffer - https://github.com/zhipeng-jia/snappyjs#usage\n        return compress(input);\n    }\n    decompressSync(input) {\n        // Accepts arrayBuffer - https://github.com/zhipeng-jia/snappyjs#usage\n        return uncompress(input);\n    }\n}\n", "import { Geometry } from '@luma.gl/engine';\nimport { CompositeLayer, COORDINATE_SYSTEM, log } from '@deck.gl/core';\nimport { PointCloudLayer } from '@deck.gl/layers';\nimport { ScenegraphLayer } from '@deck.gl/mesh-layers';\nimport { default as MeshLayer } from \"../mesh-layer/mesh-layer.js\";\nimport { load } from '@loaders.gl/core';\nimport { Tileset3D, TILE_TYPE } from '@loaders.gl/tiles';\nimport { Tiles3DLoader } from '@loaders.gl/3d-tiles';\nconst SINGLE_DATA = [0];\nconst defaultProps = {\n    getPointColor: { type: 'accessor', value: [0, 0, 0, 255] },\n    pointSize: 1.0,\n    // Disable async data loading (handling it in _loadTileSet)\n    data: '',\n    loader: Tiles3DLoader,\n    onTilesetLoad: { type: 'function', value: tileset3d => { } },\n    onTileLoad: { type: 'function', value: tileHeader => { } },\n    onTileUnload: { type: 'function', value: tileHeader => { } },\n    onTileError: { type: 'function', value: (tile, message, url) => { } },\n    _getMeshColor: { type: 'function', value: tileHeader => [255, 255, 255] }\n};\n/** Render 3d tiles data formatted according to the [3D Tiles Specification](https://www.opengeospatial.org/standards/3DTiles) and [`ESRI I3S`](https://github.com/Esri/i3s-spec) */\nexport default class Tile3DLayer extends CompositeLayer {\n    static { this.defaultProps = defaultProps; }\n    static { this.layerName = 'Tile3DLayer'; }\n    initializeState() {\n        if ('onTileLoadFail' in this.props) {\n            log.removed('onTileLoadFail', 'onTileError')();\n        }\n        // prop verification\n        this.state = {\n            layerMap: {},\n            tileset3d: null,\n            activeViewports: {},\n            lastUpdatedViewports: null\n        };\n    }\n    get isLoaded() {\n        return Boolean(this.state?.tileset3d?.isLoaded() && super.isLoaded);\n    }\n    shouldUpdateState({ changeFlags }) {\n        return changeFlags.somethingChanged;\n    }\n    updateState({ props, oldProps, changeFlags }) {\n        if (props.data && props.data !== oldProps.data) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this._loadTileset(props.data);\n        }\n        if (changeFlags.viewportChanged) {\n            const { activeViewports } = this.state;\n            const viewportsNumber = Object.keys(activeViewports).length;\n            if (viewportsNumber) {\n                this._updateTileset(activeViewports);\n                this.state.lastUpdatedViewports = activeViewports;\n                this.state.activeViewports = {};\n            }\n        }\n        if (changeFlags.propsChanged) {\n            const { layerMap } = this.state;\n            for (const key in layerMap) {\n                layerMap[key].needsUpdate = true;\n            }\n        }\n    }\n    activateViewport(viewport) {\n        const { activeViewports, lastUpdatedViewports } = this.state;\n        this.internalState.viewport = viewport;\n        activeViewports[viewport.id] = viewport;\n        const lastViewport = lastUpdatedViewports?.[viewport.id];\n        if (!lastViewport || !viewport.equals(lastViewport)) {\n            this.setChangeFlags({ viewportChanged: true });\n            this.setNeedsUpdate();\n        }\n    }\n    getPickingInfo({ info, sourceLayer }) {\n        const sourceTile = sourceLayer && sourceLayer.props.tile;\n        if (info.picked) {\n            info.object = sourceTile;\n        }\n        info.sourceTile = sourceTile;\n        return info;\n    }\n    filterSubLayer({ layer, viewport }) {\n        // All sublayers will have a tile prop\n        const { tile } = layer.props;\n        const { id: viewportId } = viewport;\n        return tile.selected && tile.viewportIds.includes(viewportId);\n    }\n    _updateAutoHighlight(info) {\n        const sourceTile = info.sourceTile;\n        const layerCache = this.state.layerMap[sourceTile?.id];\n        if (layerCache && layerCache.layer) {\n            layerCache.layer.updateAutoHighlight(info);\n        }\n    }\n    async _loadTileset(tilesetUrl) {\n        const { loadOptions = {} } = this.props;\n        // TODO: deprecate `loader` in v9.0\n        // @ts-ignore\n        const loaders = this.props.loader || this.props.loaders;\n        const loader = Array.isArray(loaders) ? loaders[0] : loaders;\n        const options = { loadOptions: { ...loadOptions } };\n        let actualTilesetUrl = tilesetUrl;\n        if (loader.preload) {\n            const preloadOptions = await loader.preload(tilesetUrl, loadOptions);\n            if (preloadOptions.url) {\n                actualTilesetUrl = preloadOptions.url;\n            }\n            if (preloadOptions.headers) {\n                options.loadOptions.fetch = {\n                    ...options.loadOptions.fetch,\n                    headers: preloadOptions.headers\n                };\n            }\n            Object.assign(options, preloadOptions);\n        }\n        const tilesetJson = await load(actualTilesetUrl, loader, options.loadOptions);\n        const tileset3d = new Tileset3D(tilesetJson, {\n            onTileLoad: this._onTileLoad.bind(this),\n            onTileUnload: this._onTileUnload.bind(this),\n            onTileError: this.props.onTileError,\n            ...options\n        });\n        this.setState({\n            tileset3d,\n            layerMap: {}\n        });\n        this._updateTileset(this.state.activeViewports);\n        this.props.onTilesetLoad(tileset3d);\n    }\n    _onTileLoad(tileHeader) {\n        const { lastUpdatedViewports } = this.state;\n        this.props.onTileLoad(tileHeader);\n        this._updateTileset(lastUpdatedViewports);\n        this.setNeedsUpdate();\n    }\n    _onTileUnload(tileHeader) {\n        // Was cleaned up from tileset cache. We no longer need to track it.\n        delete this.state.layerMap[tileHeader.id];\n        this.props.onTileUnload(tileHeader);\n    }\n    _updateTileset(viewports) {\n        if (!viewports) {\n            return;\n        }\n        const { tileset3d } = this.state;\n        const { timeline } = this.context;\n        const viewportsNumber = Object.keys(viewports).length;\n        if (!timeline || !viewportsNumber || !tileset3d) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        tileset3d.selectTiles(Object.values(viewports)).then(frameNumber => {\n            const tilesetChanged = this.state.frameNumber !== frameNumber;\n            if (tilesetChanged) {\n                this.setState({ frameNumber });\n            }\n        });\n    }\n    _getSubLayer(tileHeader, oldLayer) {\n        if (!tileHeader.content) {\n            return null;\n        }\n        switch (tileHeader.type) {\n            case TILE_TYPE.POINTCLOUD:\n                return this._makePointCloudLayer(tileHeader, oldLayer);\n            case TILE_TYPE.SCENEGRAPH:\n                return this._make3DModelLayer(tileHeader);\n            case TILE_TYPE.MESH:\n                return this._makeSimpleMeshLayer(tileHeader, oldLayer);\n            default:\n                throw new Error(`Tile3DLayer: Failed to render layer of type ${tileHeader.content.type}`);\n        }\n    }\n    _makePointCloudLayer(tileHeader, oldLayer) {\n        const { attributes, pointCount, constantRGBA, cartographicOrigin, modelMatrix } = tileHeader.content;\n        const { positions, normals, colors } = attributes;\n        if (!positions) {\n            return null;\n        }\n        const data = (oldLayer && oldLayer.props.data) || {\n            header: {\n                vertexCount: pointCount\n            },\n            attributes: {\n                POSITION: positions,\n                NORMAL: normals,\n                COLOR_0: colors\n            }\n        };\n        const { pointSize, getPointColor } = this.props;\n        const SubLayerClass = this.getSubLayerClass('pointcloud', PointCloudLayer);\n        return new SubLayerClass({\n            pointSize\n        }, this.getSubLayerProps({\n            id: 'pointcloud'\n        }), {\n            id: `${this.id}-pointcloud-${tileHeader.id}`,\n            tile: tileHeader,\n            data,\n            coordinateSystem: COORDINATE_SYSTEM.METER_OFFSETS,\n            coordinateOrigin: cartographicOrigin,\n            modelMatrix,\n            getColor: constantRGBA || getPointColor,\n            _offset: 0\n        });\n    }\n    _make3DModelLayer(tileHeader) {\n        const { gltf, instances, cartographicOrigin, modelMatrix } = tileHeader.content;\n        const SubLayerClass = this.getSubLayerClass('scenegraph', ScenegraphLayer);\n        return new SubLayerClass({\n            _lighting: 'pbr'\n        }, this.getSubLayerProps({\n            id: 'scenegraph'\n        }), {\n            id: `${this.id}-scenegraph-${tileHeader.id}`,\n            tile: tileHeader,\n            data: instances || SINGLE_DATA,\n            scenegraph: gltf,\n            coordinateSystem: COORDINATE_SYSTEM.METER_OFFSETS,\n            coordinateOrigin: cartographicOrigin,\n            modelMatrix,\n            getTransformMatrix: instance => instance.modelMatrix,\n            getPosition: [0, 0, 0],\n            _offset: 0\n        });\n    }\n    _makeSimpleMeshLayer(tileHeader, oldLayer) {\n        const content = tileHeader.content;\n        const { attributes, indices, modelMatrix, cartographicOrigin, coordinateSystem = COORDINATE_SYSTEM.METER_OFFSETS, material, featureIds } = content;\n        const { _getMeshColor } = this.props;\n        const geometry = (oldLayer && oldLayer.props.mesh) ||\n            new Geometry({\n                topology: 'triangle-list',\n                attributes: getMeshGeometry(attributes),\n                indices\n            });\n        const SubLayerClass = this.getSubLayerClass('mesh', MeshLayer);\n        return new SubLayerClass(this.getSubLayerProps({\n            id: 'mesh'\n        }), {\n            id: `${this.id}-mesh-${tileHeader.id}`,\n            tile: tileHeader,\n            mesh: geometry,\n            data: SINGLE_DATA,\n            getColor: _getMeshColor(tileHeader),\n            pbrMaterial: material,\n            modelMatrix,\n            coordinateOrigin: cartographicOrigin,\n            coordinateSystem,\n            featureIds,\n            _offset: 0\n        });\n    }\n    renderLayers() {\n        const { tileset3d, layerMap } = this.state;\n        if (!tileset3d) {\n            return null;\n        }\n        // loaders.gl doesn't provide a type for tileset3d.tiles\n        return tileset3d.tiles\n            .map(tile => {\n            const layerCache = (layerMap[tile.id] = layerMap[tile.id] || { tile });\n            let { layer } = layerCache;\n            if (tile.selected) {\n                // render selected tiles\n                if (!layer) {\n                    // create layer\n                    layer = this._getSubLayer(tile);\n                }\n                else if (layerCache.needsUpdate) {\n                    // props have changed, rerender layer\n                    layer = this._getSubLayer(tile, layer);\n                    layerCache.needsUpdate = false;\n                }\n            }\n            layerCache.layer = layer;\n            return layer;\n        })\n            .filter(Boolean);\n    }\n}\nfunction getMeshGeometry(contentAttributes) {\n    const attributes = {};\n    attributes.positions = {\n        ...contentAttributes.positions,\n        value: new Float32Array(contentAttributes.positions.value)\n    };\n    if (contentAttributes.normals) {\n        attributes.normals = contentAttributes.normals;\n    }\n    if (contentAttributes.texCoords) {\n        attributes.texCoords = contentAttributes.texCoords;\n    }\n    if (contentAttributes.colors) {\n        attributes.colors = contentAttributes.colors;\n    }\n    if (contentAttributes.uvRegions) {\n        attributes.uvRegions = contentAttributes.uvRegions;\n    }\n    return attributes;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Copyright (C) 2018-2019 HERE Europe B.V.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nconst QUANTIZED_MESH_HEADER = new Map([\n    ['centerX', Float64Array.BYTES_PER_ELEMENT],\n    ['centerY', Float64Array.BYTES_PER_ELEMENT],\n    ['centerZ', Float64Array.BYTES_PER_ELEMENT],\n    ['minHeight', Float32Array.BYTES_PER_ELEMENT],\n    ['maxHeight', Float32Array.BYTES_PER_ELEMENT],\n    ['boundingSphereCenterX', Float64Array.BYTES_PER_ELEMENT],\n    ['boundingSphereCenterY', Float64Array.BYTES_PER_ELEMENT],\n    ['boundingSphereCenterZ', Float64Array.BYTES_PER_ELEMENT],\n    ['boundingSphereRadius', Float64Array.BYTES_PER_ELEMENT],\n    ['horizonOcclusionPointX', Float64Array.BYTES_PER_ELEMENT],\n    ['horizonOcclusionPointY', Float64Array.BYTES_PER_ELEMENT],\n    ['horizonOcclusionPointZ', Float64Array.BYTES_PER_ELEMENT]\n]);\nfunction decodeZigZag(value) {\n    return (value >> 1) ^ -(value & 1);\n}\nfunction decodeHeader(dataView) {\n    let position = 0;\n    const header = {};\n    for (const [key, bytesCount] of QUANTIZED_MESH_HEADER) {\n        const getter = bytesCount === 8 ? dataView.getFloat64 : dataView.getFloat32;\n        header[key] = getter.call(dataView, position, true);\n        position += bytesCount;\n    }\n    return { header, headerEndPosition: position };\n}\nfunction decodeVertexData(dataView, headerEndPosition) {\n    let position = headerEndPosition;\n    const elementsPerVertex = 3;\n    const vertexCount = dataView.getUint32(position, true);\n    const vertexData = new Uint16Array(vertexCount * elementsPerVertex);\n    position += Uint32Array.BYTES_PER_ELEMENT;\n    const bytesPerArrayElement = Uint16Array.BYTES_PER_ELEMENT;\n    const elementArrayLength = vertexCount * bytesPerArrayElement;\n    const uArrayStartPosition = position;\n    const vArrayStartPosition = uArrayStartPosition + elementArrayLength;\n    const heightArrayStartPosition = vArrayStartPosition + elementArrayLength;\n    let u = 0;\n    let v = 0;\n    let height = 0;\n    for (let i = 0; i < vertexCount; i++) {\n        u += decodeZigZag(dataView.getUint16(uArrayStartPosition + bytesPerArrayElement * i, true));\n        v += decodeZigZag(dataView.getUint16(vArrayStartPosition + bytesPerArrayElement * i, true));\n        height += decodeZigZag(dataView.getUint16(heightArrayStartPosition + bytesPerArrayElement * i, true));\n        vertexData[i] = u;\n        vertexData[i + vertexCount] = v;\n        vertexData[i + vertexCount * 2] = height;\n    }\n    position += elementArrayLength * 3;\n    return { vertexData, vertexDataEndPosition: position };\n}\nfunction decodeIndex(buffer, position, indicesCount, bytesPerIndex, encoded = true) {\n    let indices;\n    if (bytesPerIndex === 2) {\n        indices = new Uint16Array(buffer, position, indicesCount);\n    }\n    else {\n        indices = new Uint32Array(buffer, position, indicesCount);\n    }\n    if (!encoded) {\n        return indices;\n    }\n    let highest = 0;\n    for (let i = 0; i < indices.length; ++i) {\n        const code = indices[i];\n        indices[i] = highest - code;\n        if (code === 0) {\n            ++highest;\n        }\n    }\n    return indices;\n}\nfunction decodeTriangleIndices(dataView, vertexData, vertexDataEndPosition) {\n    let position = vertexDataEndPosition;\n    const elementsPerVertex = 3;\n    const vertexCount = vertexData.length / elementsPerVertex;\n    const bytesPerIndex = vertexCount > 65536 ? Uint32Array.BYTES_PER_ELEMENT : Uint16Array.BYTES_PER_ELEMENT;\n    if (position % bytesPerIndex !== 0) {\n        position += bytesPerIndex - (position % bytesPerIndex);\n    }\n    const triangleCount = dataView.getUint32(position, true);\n    position += Uint32Array.BYTES_PER_ELEMENT;\n    const triangleIndicesCount = triangleCount * 3;\n    const triangleIndices = decodeIndex(dataView.buffer, position, triangleIndicesCount, bytesPerIndex);\n    position += triangleIndicesCount * bytesPerIndex;\n    return {\n        triangleIndicesEndPosition: position,\n        triangleIndices\n    };\n}\nfunction decodeEdgeIndices(dataView, vertexData, triangleIndicesEndPosition) {\n    let position = triangleIndicesEndPosition;\n    const elementsPerVertex = 3;\n    const vertexCount = vertexData.length / elementsPerVertex;\n    const bytesPerIndex = vertexCount > 65536 ? Uint32Array.BYTES_PER_ELEMENT : Uint16Array.BYTES_PER_ELEMENT;\n    const westVertexCount = dataView.getUint32(position, true);\n    position += Uint32Array.BYTES_PER_ELEMENT;\n    const westIndices = decodeIndex(dataView.buffer, position, westVertexCount, bytesPerIndex, false);\n    position += westVertexCount * bytesPerIndex;\n    const southVertexCount = dataView.getUint32(position, true);\n    position += Uint32Array.BYTES_PER_ELEMENT;\n    const southIndices = decodeIndex(dataView.buffer, position, southVertexCount, bytesPerIndex, false);\n    position += southVertexCount * bytesPerIndex;\n    const eastVertexCount = dataView.getUint32(position, true);\n    position += Uint32Array.BYTES_PER_ELEMENT;\n    const eastIndices = decodeIndex(dataView.buffer, position, eastVertexCount, bytesPerIndex, false);\n    position += eastVertexCount * bytesPerIndex;\n    const northVertexCount = dataView.getUint32(position, true);\n    position += Uint32Array.BYTES_PER_ELEMENT;\n    const northIndices = decodeIndex(dataView.buffer, position, northVertexCount, bytesPerIndex, false);\n    position += northVertexCount * bytesPerIndex;\n    return {\n        edgeIndicesEndPosition: position,\n        westIndices,\n        southIndices,\n        eastIndices,\n        northIndices\n    };\n}\nfunction decodeVertexNormalsExtension(extensionDataView) {\n    return new Uint8Array(extensionDataView.buffer, extensionDataView.byteOffset, extensionDataView.byteLength);\n}\nfunction decodeWaterMaskExtension(extensionDataView) {\n    return extensionDataView.buffer.slice(extensionDataView.byteOffset, extensionDataView.byteOffset + extensionDataView.byteLength);\n}\nfunction decodeExtensions(dataView, indicesEndPosition) {\n    const extensions = {};\n    if (dataView.byteLength <= indicesEndPosition) {\n        return { extensions, extensionsEndPosition: indicesEndPosition };\n    }\n    let position = indicesEndPosition;\n    while (position < dataView.byteLength) {\n        const extensionId = dataView.getUint8(position, true);\n        position += Uint8Array.BYTES_PER_ELEMENT;\n        const extensionLength = dataView.getUint32(position, true);\n        position += Uint32Array.BYTES_PER_ELEMENT;\n        const extensionView = new DataView(dataView.buffer, position, extensionLength);\n        switch (extensionId) {\n            case 1: {\n                extensions.vertexNormals = decodeVertexNormalsExtension(extensionView);\n                break;\n            }\n            case 2: {\n                extensions.waterMask = decodeWaterMaskExtension(extensionView);\n                break;\n            }\n            default: {\n                // console.warn(`Unknown extension with id ${extensionId}`)\n            }\n        }\n        position += extensionLength;\n    }\n    return { extensions, extensionsEndPosition: position };\n}\nexport const DECODING_STEPS = {\n    header: 0,\n    vertices: 1,\n    triangleIndices: 2,\n    edgeIndices: 3,\n    extensions: 4\n};\nconst DEFAULT_OPTIONS = {\n    maxDecodingStep: DECODING_STEPS.extensions\n};\nexport default function decode(data, userOptions) {\n    const options = Object.assign({}, DEFAULT_OPTIONS, userOptions);\n    const view = new DataView(data);\n    const { header, headerEndPosition } = decodeHeader(view);\n    if (options.maxDecodingStep < DECODING_STEPS.vertices) {\n        return { header };\n    }\n    const { vertexData, vertexDataEndPosition } = decodeVertexData(view, headerEndPosition);\n    if (options.maxDecodingStep < DECODING_STEPS.triangleIndices) {\n        return { header, vertexData };\n    }\n    const { triangleIndices, triangleIndicesEndPosition } = decodeTriangleIndices(view, vertexData, vertexDataEndPosition);\n    if (options.maxDecodingStep < DECODING_STEPS.edgeIndices) {\n        return { header, vertexData, triangleIndices };\n    }\n    const { westIndices, southIndices, eastIndices, northIndices, edgeIndicesEndPosition } = decodeEdgeIndices(view, vertexData, triangleIndicesEndPosition);\n    if (options.maxDecodingStep < DECODING_STEPS.extensions) {\n        return {\n            header,\n            vertexData,\n            triangleIndices,\n            westIndices,\n            northIndices,\n            eastIndices,\n            southIndices\n        };\n    }\n    const { extensions } = decodeExtensions(view, edgeIndicesEndPosition);\n    return {\n        header,\n        vertexData,\n        triangleIndices,\n        westIndices,\n        northIndices,\n        eastIndices,\n        southIndices,\n        extensions\n    };\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { concatenateTypedArrays } from '@loaders.gl/loader-utils';\n/**\n * Add skirt to existing mesh\n * @param {object} attributes - POSITION and TEXCOOD_0 attributes data\n * @param {any} triangles - indices array of the mesh geometry\n * @param skirtHeight - height of the skirt geometry\n * @param outsideIndices - edge indices from quantized mesh data\n * @returns - geometry data with added skirt\n */\nexport function addSkirt(attributes, triangles, skirtHeight, outsideIndices) {\n    const outsideEdges = outsideIndices\n        ? getOutsideEdgesFromIndices(outsideIndices, attributes.POSITION.value)\n        : getOutsideEdgesFromTriangles(triangles);\n    // 2 new vertices for each outside edge\n    const newPosition = new attributes.POSITION.value.constructor(outsideEdges.length * 6);\n    const newTexcoord0 = new attributes.TEXCOORD_0.value.constructor(outsideEdges.length * 4);\n    // 2 new triangles for each outside edge\n    const newTriangles = new triangles.constructor(outsideEdges.length * 6);\n    for (let i = 0; i < outsideEdges.length; i++) {\n        const edge = outsideEdges[i];\n        updateAttributesForNewEdge({\n            edge,\n            edgeIndex: i,\n            attributes,\n            skirtHeight,\n            newPosition,\n            newTexcoord0,\n            newTriangles\n        });\n    }\n    attributes.POSITION.value = concatenateTypedArrays(attributes.POSITION.value, newPosition);\n    attributes.TEXCOORD_0.value = concatenateTypedArrays(attributes.TEXCOORD_0.value, newTexcoord0);\n    const resultTriangles = triangles instanceof Array\n        ? triangles.concat(newTriangles)\n        : concatenateTypedArrays(triangles, newTriangles);\n    return {\n        attributes,\n        triangles: resultTriangles\n    };\n}\n/**\n * Get geometry edges that located on a border of the mesh\n * @param {any} triangles - indices array of the mesh geometry\n * @returns {number[][]} - outside edges data\n */\nfunction getOutsideEdgesFromTriangles(triangles) {\n    const edges = [];\n    for (let i = 0; i < triangles.length; i += 3) {\n        edges.push([triangles[i], triangles[i + 1]]);\n        edges.push([triangles[i + 1], triangles[i + 2]]);\n        edges.push([triangles[i + 2], triangles[i]]);\n    }\n    edges.sort((a, b) => Math.min(...a) - Math.min(...b) || Math.max(...a) - Math.max(...b));\n    const outsideEdges = [];\n    let index = 0;\n    while (index < edges.length) {\n        if (edges[index][0] === edges[index + 1]?.[1] && edges[index][1] === edges[index + 1]?.[0]) {\n            index += 2;\n        }\n        else {\n            outsideEdges.push(edges[index]);\n            index++;\n        }\n    }\n    return outsideEdges;\n}\n/**\n * Get geometry edges that located on a border of the mesh\n * @param {object} indices - edge indices from quantized mesh data\n * @param {TypedArray} position - position attribute geometry data\n * @returns {number[][]} - outside edges data\n */\nfunction getOutsideEdgesFromIndices(indices, position) {\n    // Sort skirt indices to create adjacent triangles\n    indices.westIndices.sort((a, b) => position[3 * a + 1] - position[3 * b + 1]);\n    // Reverse (b - a) to match triangle winding\n    indices.eastIndices.sort((a, b) => position[3 * b + 1] - position[3 * a + 1]);\n    indices.southIndices.sort((a, b) => position[3 * b] - position[3 * a]);\n    // Reverse (b - a) to match triangle winding\n    indices.northIndices.sort((a, b) => position[3 * a] - position[3 * b]);\n    const edges = [];\n    for (const index in indices) {\n        const indexGroup = indices[index];\n        for (let i = 0; i < indexGroup.length - 1; i++) {\n            edges.push([indexGroup[i], indexGroup[i + 1]]);\n        }\n    }\n    return edges;\n}\n/**\n * Get geometry edges that located on a border of the mesh\n * @param {object} args\n * @param {number[]} args.edge - edge indices in geometry\n * @param {number} args.edgeIndex - edge index in outsideEdges array\n * @param {object} args.attributes - POSITION and TEXCOORD_0 attributes\n * @param {number} args.skirtHeight - height of the skirt geometry\n * @param {TypedArray} args.newPosition - POSITION array for skirt data\n * @param {TypedArray} args.newTexcoord0 - TEXCOORD_0 array for skirt data\n * @param {TypedArray | Array} args.newTriangles - trinagle indices array for skirt data\n * @returns {void}\n */\nfunction updateAttributesForNewEdge({ edge, edgeIndex, attributes, skirtHeight, newPosition, newTexcoord0, newTriangles }) {\n    const positionsLength = attributes.POSITION.value.length;\n    const vertex1Offset = edgeIndex * 2;\n    const vertex2Offset = edgeIndex * 2 + 1;\n    // Define POSITION for new 1st vertex\n    newPosition.set(attributes.POSITION.value.subarray(edge[0] * 3, edge[0] * 3 + 3), vertex1Offset * 3);\n    newPosition[vertex1Offset * 3 + 2] = newPosition[vertex1Offset * 3 + 2] - skirtHeight; // put down elevation on the skirt height\n    // Define POSITION for new 2nd vertex\n    newPosition.set(attributes.POSITION.value.subarray(edge[1] * 3, edge[1] * 3 + 3), vertex2Offset * 3);\n    newPosition[vertex2Offset * 3 + 2] = newPosition[vertex2Offset * 3 + 2] - skirtHeight; // put down elevation on the skirt height\n    // Use same TEXCOORDS for skirt vertices\n    newTexcoord0.set(attributes.TEXCOORD_0.value.subarray(edge[0] * 2, edge[0] * 2 + 2), vertex1Offset * 2);\n    newTexcoord0.set(attributes.TEXCOORD_0.value.subarray(edge[1] * 2, edge[1] * 2 + 2), vertex2Offset * 2);\n    // Define new triangles\n    const triangle1Offset = edgeIndex * 2 * 3;\n    newTriangles[triangle1Offset] = edge[0];\n    newTriangles[triangle1Offset + 1] = positionsLength / 3 + vertex2Offset;\n    newTriangles[triangle1Offset + 2] = edge[1];\n    newTriangles[triangle1Offset + 3] = positionsLength / 3 + vertex2Offset;\n    newTriangles[triangle1Offset + 4] = edge[0];\n    newTriangles[triangle1Offset + 5] = positionsLength / 3 + vertex1Offset;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { getMeshBoundingBox } from '@loaders.gl/schema';\nimport decode, { DECODING_STEPS } from \"./decode-quantized-mesh.js\";\nimport { addSkirt } from \"./helpers/skirt.js\";\nexport function parseQuantizedMesh(arrayBuffer, options = {}) {\n    const { bounds } = options;\n    // Don't parse edge indices or format extensions\n    const { header, vertexData, triangleIndices: originalTriangleIndices, westIndices, northIndices, eastIndices, southIndices } = decode(arrayBuffer, DECODING_STEPS.triangleIndices);\n    let triangleIndices = originalTriangleIndices;\n    let attributes = getMeshAttributes(vertexData, header, bounds);\n    // Compute bounding box before adding skirt so that z values are not skewed\n    // TODO: Find bounding box from header, instead of doing extra pass over\n    // vertices.\n    const boundingBox = getMeshBoundingBox(attributes);\n    if (options?.skirtHeight) {\n        const { attributes: newAttributes, triangles: newTriangles } = addSkirt(attributes, triangleIndices, options.skirtHeight, {\n            westIndices,\n            northIndices,\n            eastIndices,\n            southIndices\n        });\n        attributes = newAttributes;\n        triangleIndices = newTriangles;\n    }\n    return {\n        // Data return by this loader implementation\n        loaderData: {\n            header: {}\n        },\n        header: {\n            // @ts-ignore\n            vertexCount: triangleIndices.length,\n            boundingBox\n        },\n        // TODO\n        schema: undefined,\n        topology: 'triangle-list',\n        mode: 4, // TRIANGLES\n        indices: { value: triangleIndices, size: 1 },\n        attributes\n    };\n}\nfunction getMeshAttributes(vertexData, header, bounds) {\n    const { minHeight, maxHeight } = header;\n    const [minX, minY, maxX, maxY] = bounds || [0, 0, 1, 1];\n    const xScale = maxX - minX;\n    const yScale = maxY - minY;\n    const zScale = maxHeight - minHeight;\n    const nCoords = vertexData.length / 3;\n    // vec3. x, y defined by bounds, z in meters\n    const positions = new Float32Array(nCoords * 3);\n    // vec2. 1 to 1 relationship with position. represents the uv on the texture image. 0,0 to 1,1.\n    const texCoords = new Float32Array(nCoords * 2);\n    // Data is not interleaved; all u, then all v, then all heights\n    for (let i = 0; i < nCoords; i++) {\n        const x = vertexData[i] / 32767;\n        const y = vertexData[i + nCoords] / 32767;\n        const z = vertexData[i + nCoords * 2] / 32767;\n        positions[3 * i + 0] = x * xScale + minX;\n        positions[3 * i + 1] = y * yScale + minY;\n        positions[3 * i + 2] = z * zScale + minHeight;\n        texCoords[2 * i + 0] = x;\n        texCoords[2 * i + 1] = y;\n    }\n    return {\n        POSITION: { value: positions, size: 3 },\n        TEXCOORD_0: { value: texCoords, size: 2 }\n        // TODO: Parse normals if they exist in the file\n        // NORMAL: {}, - optional, but creates the high poly look with lighting\n    };\n}\n", "\nexport default class Martini {\n    constructor(gridSize = 257) {\n        this.gridSize = gridSize;\n        const tileSize = gridSize - 1;\n        if (tileSize & (tileSize - 1)) throw new Error(\n            `Expected grid size to be 2^n+1, got ${gridSize}.`);\n\n        this.numTriangles = tileSize * tileSize * 2 - 2;\n        this.numParentTriangles = this.numTriangles - tileSize * tileSize;\n\n        this.indices = new Uint32Array(this.gridSize * this.gridSize);\n\n        // coordinates for all possible triangles in an RTIN tile\n        this.coords = new Uint16Array(this.numTriangles * 4);\n\n        // get triangle coordinates from its index in an implicit binary tree\n        for (let i = 0; i < this.numTriangles; i++) {\n            let id = i + 2;\n            let ax = 0, ay = 0, bx = 0, by = 0, cx = 0, cy = 0;\n            if (id & 1) {\n                bx = by = cx = tileSize; // bottom-left triangle\n            } else {\n                ax = ay = cy = tileSize; // top-right triangle\n            }\n            while ((id >>= 1) > 1) {\n                const mx = (ax + bx) >> 1;\n                const my = (ay + by) >> 1;\n\n                if (id & 1) { // left half\n                    bx = ax; by = ay;\n                    ax = cx; ay = cy;\n                } else { // right half\n                    ax = bx; ay = by;\n                    bx = cx; by = cy;\n                }\n                cx = mx; cy = my;\n            }\n            const k = i * 4;\n            this.coords[k + 0] = ax;\n            this.coords[k + 1] = ay;\n            this.coords[k + 2] = bx;\n            this.coords[k + 3] = by;\n        }\n    }\n\n    createTile(terrain) {\n        return new Tile(terrain, this);\n    }\n}\n\nclass Tile {\n    constructor(terrain, martini) {\n        const size = martini.gridSize;\n        if (terrain.length !== size * size) throw new Error(\n            `Expected terrain data of length ${size * size} (${size} x ${size}), got ${terrain.length}.`);\n\n        this.terrain = terrain;\n        this.martini = martini;\n        this.errors = new Float32Array(terrain.length);\n        this.update();\n    }\n\n    update() {\n        const {numTriangles, numParentTriangles, coords, gridSize: size} = this.martini;\n        const {terrain, errors} = this;\n\n        // iterate over all possible triangles, starting from the smallest level\n        for (let i = numTriangles - 1; i >= 0; i--) {\n            const k = i * 4;\n            const ax = coords[k + 0];\n            const ay = coords[k + 1];\n            const bx = coords[k + 2];\n            const by = coords[k + 3];\n            const mx = (ax + bx) >> 1;\n            const my = (ay + by) >> 1;\n            const cx = mx + my - ay;\n            const cy = my + ax - mx;\n\n            // calculate error in the middle of the long edge of the triangle\n            const interpolatedHeight = (terrain[ay * size + ax] + terrain[by * size + bx]) / 2;\n            const middleIndex = my * size + mx;\n            const middleError = Math.abs(interpolatedHeight - terrain[middleIndex]);\n\n            errors[middleIndex] = Math.max(errors[middleIndex], middleError);\n\n            if (i < numParentTriangles) { // bigger triangles; accumulate error with children\n                const leftChildIndex = ((ay + cy) >> 1) * size + ((ax + cx) >> 1);\n                const rightChildIndex = ((by + cy) >> 1) * size + ((bx + cx) >> 1);\n                errors[middleIndex] = Math.max(errors[middleIndex], errors[leftChildIndex], errors[rightChildIndex]);\n            }\n        }\n    }\n\n    getMesh(maxError = 0) {\n        const {gridSize: size, indices} = this.martini;\n        const {errors} = this;\n        let numVertices = 0;\n        let numTriangles = 0;\n        const max = size - 1;\n\n        // use an index grid to keep track of vertices that were already used to avoid duplication\n        indices.fill(0);\n\n        // retrieve mesh in two stages that both traverse the error map:\n        // - countElements: find used vertices (and assign each an index), and count triangles (for minimum allocation)\n        // - processTriangle: fill the allocated vertices & triangles typed arrays\n\n        function countElements(ax, ay, bx, by, cx, cy) {\n            const mx = (ax + bx) >> 1;\n            const my = (ay + by) >> 1;\n\n            if (Math.abs(ax - cx) + Math.abs(ay - cy) > 1 && errors[my * size + mx] > maxError) {\n                countElements(cx, cy, ax, ay, mx, my);\n                countElements(bx, by, cx, cy, mx, my);\n            } else {\n                indices[ay * size + ax] = indices[ay * size + ax] || ++numVertices;\n                indices[by * size + bx] = indices[by * size + bx] || ++numVertices;\n                indices[cy * size + cx] = indices[cy * size + cx] || ++numVertices;\n                numTriangles++;\n            }\n        }\n        countElements(0, 0, max, max, max, 0);\n        countElements(max, max, 0, 0, 0, max);\n\n        const vertices = new Uint16Array(numVertices * 2);\n        const triangles = new Uint32Array(numTriangles * 3);\n        let triIndex = 0;\n\n        function processTriangle(ax, ay, bx, by, cx, cy) {\n            const mx = (ax + bx) >> 1;\n            const my = (ay + by) >> 1;\n\n            if (Math.abs(ax - cx) + Math.abs(ay - cy) > 1 && errors[my * size + mx] > maxError) {\n                // triangle doesn't approximate the surface well enough; drill down further\n                processTriangle(cx, cy, ax, ay, mx, my);\n                processTriangle(bx, by, cx, cy, mx, my);\n\n            } else {\n                // add a triangle\n                const a = indices[ay * size + ax] - 1;\n                const b = indices[by * size + bx] - 1;\n                const c = indices[cy * size + cx] - 1;\n\n                vertices[2 * a] = ax;\n                vertices[2 * a + 1] = ay;\n\n                vertices[2 * b] = bx;\n                vertices[2 * b + 1] = by;\n\n                vertices[2 * c] = cx;\n                vertices[2 * c + 1] = cy;\n\n                triangles[triIndex++] = a;\n                triangles[triIndex++] = b;\n                triangles[triIndex++] = c;\n            }\n        }\n        processTriangle(0, 0, max, max, max, 0);\n        processTriangle(max, max, 0, 0, 0, max);\n\n        return {vertices, triangles};\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// ISC License\n// Copyright(c) 2019, Michael Fogleman, Vladimir Agafonkin\n// @ts-nocheck\n/* eslint-disable complexity, max-params, max-statements, max-depth, no-constant-condition */\nexport default class Delatin {\n    constructor(data, width, height = width) {\n        this.data = data; // height data\n        this.width = width;\n        this.height = height;\n        this.coords = []; // vertex coordinates (x, y)\n        this.triangles = []; // mesh triangle indices\n        // additional triangle data\n        this._halfedges = [];\n        this._candidates = [];\n        this._queueIndices = [];\n        this._queue = []; // queue of added triangles\n        this._errors = [];\n        this._rms = [];\n        this._pending = []; // triangles pending addition to queue\n        this._pendingLen = 0;\n        this._rmsSum = 0;\n        const x1 = width - 1;\n        const y1 = height - 1;\n        const p0 = this._addPoint(0, 0);\n        const p1 = this._addPoint(x1, 0);\n        const p2 = this._addPoint(0, y1);\n        const p3 = this._addPoint(x1, y1);\n        // add initial two triangles\n        const t0 = this._addTriangle(p3, p0, p2, -1, -1, -1);\n        this._addTriangle(p0, p3, p1, t0, -1, -1);\n        this._flush();\n    }\n    // refine the mesh until its maximum error gets below the given one\n    run(maxError = 1) {\n        while (this.getMaxError() > maxError) {\n            this.refine();\n        }\n    }\n    // refine the mesh with a single point\n    refine() {\n        this._step();\n        this._flush();\n    }\n    // max error of the current mesh\n    getMaxError() {\n        return this._errors[0];\n    }\n    // root-mean-square deviation of the current mesh\n    getRMSD() {\n        return this._rmsSum > 0 ? Math.sqrt(this._rmsSum / (this.width * this.height)) : 0;\n    }\n    // height value at a given position\n    heightAt(x, y) {\n        return this.data[this.width * y + x];\n    }\n    // rasterize and queue all triangles that got added or updated in _step\n    _flush() {\n        const coords = this.coords;\n        for (let i = 0; i < this._pendingLen; i++) {\n            const t = this._pending[i];\n            // rasterize triangle to find maximum pixel error\n            const a = 2 * this.triangles[t * 3 + 0];\n            const b = 2 * this.triangles[t * 3 + 1];\n            const c = 2 * this.triangles[t * 3 + 2];\n            this._findCandidate(coords[a], coords[a + 1], coords[b], coords[b + 1], coords[c], coords[c + 1], t);\n        }\n        this._pendingLen = 0;\n    }\n    // rasterize a triangle, find its max error, and queue it for processing\n    _findCandidate(p0x, p0y, p1x, p1y, p2x, p2y, t) {\n        // triangle bounding box\n        const minX = Math.min(p0x, p1x, p2x);\n        const minY = Math.min(p0y, p1y, p2y);\n        const maxX = Math.max(p0x, p1x, p2x);\n        const maxY = Math.max(p0y, p1y, p2y);\n        // forward differencing variables\n        let w00 = orient(p1x, p1y, p2x, p2y, minX, minY);\n        let w01 = orient(p2x, p2y, p0x, p0y, minX, minY);\n        let w02 = orient(p0x, p0y, p1x, p1y, minX, minY);\n        const a01 = p1y - p0y;\n        const b01 = p0x - p1x;\n        const a12 = p2y - p1y;\n        const b12 = p1x - p2x;\n        const a20 = p0y - p2y;\n        const b20 = p2x - p0x;\n        // pre-multiplied z values at vertices\n        const a = orient(p0x, p0y, p1x, p1y, p2x, p2y);\n        const z0 = this.heightAt(p0x, p0y) / a;\n        const z1 = this.heightAt(p1x, p1y) / a;\n        const z2 = this.heightAt(p2x, p2y) / a;\n        // iterate over pixels in bounding box\n        let maxError = 0;\n        let mx = 0;\n        let my = 0;\n        let rms = 0;\n        for (let y = minY; y <= maxY; y++) {\n            // compute starting offset\n            let dx = 0;\n            if (w00 < 0 && a12 !== 0) {\n                dx = Math.max(dx, Math.floor(-w00 / a12));\n            }\n            if (w01 < 0 && a20 !== 0) {\n                dx = Math.max(dx, Math.floor(-w01 / a20));\n            }\n            if (w02 < 0 && a01 !== 0) {\n                dx = Math.max(dx, Math.floor(-w02 / a01));\n            }\n            let w0 = w00 + a12 * dx;\n            let w1 = w01 + a20 * dx;\n            let w2 = w02 + a01 * dx;\n            let wasInside = false;\n            for (let x = minX + dx; x <= maxX; x++) {\n                // check if inside triangle\n                if (w0 >= 0 && w1 >= 0 && w2 >= 0) {\n                    wasInside = true;\n                    // compute z using barycentric coordinates\n                    const z = z0 * w0 + z1 * w1 + z2 * w2;\n                    const dz = Math.abs(z - this.heightAt(x, y));\n                    rms += dz * dz;\n                    if (dz > maxError) {\n                        maxError = dz;\n                        mx = x;\n                        my = y;\n                    }\n                }\n                else if (wasInside) {\n                    break;\n                }\n                w0 += a12;\n                w1 += a20;\n                w2 += a01;\n            }\n            w00 += b12;\n            w01 += b20;\n            w02 += b01;\n        }\n        if ((mx === p0x && my === p0y) || (mx === p1x && my === p1y) || (mx === p2x && my === p2y)) {\n            maxError = 0;\n        }\n        // update triangle metadata\n        this._candidates[2 * t] = mx;\n        this._candidates[2 * t + 1] = my;\n        this._rms[t] = rms;\n        // add triangle to priority queue\n        this._queuePush(t, maxError, rms);\n    }\n    // process the next triangle in the queue, splitting it with a new point\n    _step() {\n        // pop triangle with highest error from priority queue\n        const t = this._queuePop();\n        const e0 = t * 3 + 0;\n        const e1 = t * 3 + 1;\n        const e2 = t * 3 + 2;\n        const p0 = this.triangles[e0];\n        const p1 = this.triangles[e1];\n        const p2 = this.triangles[e2];\n        const ax = this.coords[2 * p0];\n        const ay = this.coords[2 * p0 + 1];\n        const bx = this.coords[2 * p1];\n        const by = this.coords[2 * p1 + 1];\n        const cx = this.coords[2 * p2];\n        const cy = this.coords[2 * p2 + 1];\n        const px = this._candidates[2 * t];\n        const py = this._candidates[2 * t + 1];\n        const pn = this._addPoint(px, py);\n        if (orient(ax, ay, bx, by, px, py) === 0) {\n            this._handleCollinear(pn, e0);\n        }\n        else if (orient(bx, by, cx, cy, px, py) === 0) {\n            this._handleCollinear(pn, e1);\n        }\n        else if (orient(cx, cy, ax, ay, px, py) === 0) {\n            this._handleCollinear(pn, e2);\n        }\n        else {\n            const h0 = this._halfedges[e0];\n            const h1 = this._halfedges[e1];\n            const h2 = this._halfedges[e2];\n            const t0 = this._addTriangle(p0, p1, pn, h0, -1, -1, e0);\n            const t1 = this._addTriangle(p1, p2, pn, h1, -1, t0 + 1);\n            const t2 = this._addTriangle(p2, p0, pn, h2, t0 + 2, t1 + 1);\n            this._legalize(t0);\n            this._legalize(t1);\n            this._legalize(t2);\n        }\n    }\n    // add coordinates for a new vertex\n    _addPoint(x, y) {\n        const i = this.coords.length >> 1;\n        this.coords.push(x, y);\n        return i;\n    }\n    // add or update a triangle in the mesh\n    _addTriangle(a, b, c, ab, bc, ca, e = this.triangles.length) {\n        const t = e / 3; // new triangle index\n        // add triangle vertices\n        this.triangles[e + 0] = a;\n        this.triangles[e + 1] = b;\n        this.triangles[e + 2] = c;\n        // add triangle halfedges\n        this._halfedges[e + 0] = ab;\n        this._halfedges[e + 1] = bc;\n        this._halfedges[e + 2] = ca;\n        // link neighboring halfedges\n        if (ab >= 0) {\n            this._halfedges[ab] = e + 0;\n        }\n        if (bc >= 0) {\n            this._halfedges[bc] = e + 1;\n        }\n        if (ca >= 0) {\n            this._halfedges[ca] = e + 2;\n        }\n        // init triangle metadata\n        this._candidates[2 * t + 0] = 0;\n        this._candidates[2 * t + 1] = 0;\n        this._queueIndices[t] = -1;\n        this._rms[t] = 0;\n        // add triangle to pending queue for later rasterization\n        this._pending[this._pendingLen++] = t;\n        // return first halfedge index\n        return e;\n    }\n    _legalize(a) {\n        // if the pair of triangles doesn't satisfy the Delaunay condition\n        // (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n        // then do the same check/flip recursively for the new pair of triangles\n        //\n        //           pl                    pl\n        //          /||\\                  /  \\\n        //       al/ || \\bl            al/    \\a\n        //        /  ||  \\              /      \\\n        //       /  a||b  \\    flip    /___ar___\\\n        //     p0\\   ||   /p1   =>   p0\\---bl---/p1\n        //        \\  ||  /              \\      /\n        //       ar\\ || /br             b\\    /br\n        //          \\||/                  \\  /\n        //           pr                    pr\n        const b = this._halfedges[a];\n        if (b < 0) {\n            return;\n        }\n        const a0 = a - (a % 3);\n        const b0 = b - (b % 3);\n        const al = a0 + ((a + 1) % 3);\n        const ar = a0 + ((a + 2) % 3);\n        const bl = b0 + ((b + 2) % 3);\n        const br = b0 + ((b + 1) % 3);\n        const p0 = this.triangles[ar];\n        const pr = this.triangles[a];\n        const pl = this.triangles[al];\n        const p1 = this.triangles[bl];\n        const coords = this.coords;\n        if (!inCircle(coords[2 * p0], coords[2 * p0 + 1], coords[2 * pr], coords[2 * pr + 1], coords[2 * pl], coords[2 * pl + 1], coords[2 * p1], coords[2 * p1 + 1])) {\n            return;\n        }\n        const hal = this._halfedges[al];\n        const har = this._halfedges[ar];\n        const hbl = this._halfedges[bl];\n        const hbr = this._halfedges[br];\n        this._queueRemove(a0 / 3);\n        this._queueRemove(b0 / 3);\n        const t0 = this._addTriangle(p0, p1, pl, -1, hbl, hal, a0);\n        const t1 = this._addTriangle(p1, p0, pr, t0, har, hbr, b0);\n        this._legalize(t0 + 1);\n        this._legalize(t1 + 2);\n    }\n    // handle a case where new vertex is on the edge of a triangle\n    _handleCollinear(pn, a) {\n        const a0 = a - (a % 3);\n        const al = a0 + ((a + 1) % 3);\n        const ar = a0 + ((a + 2) % 3);\n        const p0 = this.triangles[ar];\n        const pr = this.triangles[a];\n        const pl = this.triangles[al];\n        const hal = this._halfedges[al];\n        const har = this._halfedges[ar];\n        const b = this._halfedges[a];\n        if (b < 0) {\n            const t0 = this._addTriangle(pn, p0, pr, -1, har, -1, a0);\n            const t1 = this._addTriangle(p0, pn, pl, t0, -1, hal);\n            this._legalize(t0 + 1);\n            this._legalize(t1 + 2);\n            return;\n        }\n        const b0 = b - (b % 3);\n        const bl = b0 + ((b + 2) % 3);\n        const br = b0 + ((b + 1) % 3);\n        const p1 = this.triangles[bl];\n        const hbl = this._halfedges[bl];\n        const hbr = this._halfedges[br];\n        this._queueRemove(b0 / 3);\n        const t0 = this._addTriangle(p0, pr, pn, har, -1, -1, a0);\n        const t1 = this._addTriangle(pr, p1, pn, hbr, -1, t0 + 1, b0);\n        const t2 = this._addTriangle(p1, pl, pn, hbl, -1, t1 + 1);\n        const t3 = this._addTriangle(pl, p0, pn, hal, t0 + 2, t2 + 1);\n        this._legalize(t0);\n        this._legalize(t1);\n        this._legalize(t2);\n        this._legalize(t3);\n    }\n    // priority queue methods\n    _queuePush(t, error, rms) {\n        const i = this._queue.length;\n        this._queueIndices[t] = i;\n        this._queue.push(t);\n        this._errors.push(error);\n        this._rmsSum += rms;\n        this._queueUp(i);\n    }\n    _queuePop() {\n        const n = this._queue.length - 1;\n        this._queueSwap(0, n);\n        this._queueDown(0, n);\n        return this._queuePopBack();\n    }\n    _queuePopBack() {\n        const t = this._queue.pop();\n        this._errors.pop();\n        this._rmsSum -= this._rms[t];\n        this._queueIndices[t] = -1;\n        return t;\n    }\n    _queueRemove(t) {\n        const i = this._queueIndices[t];\n        if (i < 0) {\n            const it = this._pending.indexOf(t);\n            if (it !== -1) {\n                this._pending[it] = this._pending[--this._pendingLen];\n            }\n            else {\n                throw new Error('Broken triangulation (something went wrong).');\n            }\n            return;\n        }\n        const n = this._queue.length - 1;\n        if (n !== i) {\n            this._queueSwap(i, n);\n            if (!this._queueDown(i, n)) {\n                this._queueUp(i);\n            }\n        }\n        this._queuePopBack();\n    }\n    _queueLess(i, j) {\n        return this._errors[i] > this._errors[j];\n    }\n    _queueSwap(i, j) {\n        const pi = this._queue[i];\n        const pj = this._queue[j];\n        this._queue[i] = pj;\n        this._queue[j] = pi;\n        this._queueIndices[pi] = j;\n        this._queueIndices[pj] = i;\n        const e = this._errors[i];\n        this._errors[i] = this._errors[j];\n        this._errors[j] = e;\n    }\n    _queueUp(j0) {\n        let j = j0;\n        while (true) {\n            const i = (j - 1) >> 1;\n            if (i === j || !this._queueLess(j, i)) {\n                break;\n            }\n            this._queueSwap(i, j);\n            j = i;\n        }\n    }\n    _queueDown(i0, n) {\n        let i = i0;\n        while (true) {\n            const j1 = 2 * i + 1;\n            if (j1 >= n || j1 < 0) {\n                break;\n            }\n            const j2 = j1 + 1;\n            let j = j1;\n            if (j2 < n && this._queueLess(j2, j1)) {\n                j = j2;\n            }\n            if (!this._queueLess(j, i)) {\n                break;\n            }\n            this._queueSwap(i, j);\n            i = j;\n        }\n        return i > i0;\n    }\n}\nfunction orient(ax, ay, bx, by, cx, cy) {\n    return (bx - cx) * (ay - cy) - (by - cy) * (ax - cx);\n}\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n    return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { getMeshBoundingBox } from '@loaders.gl/schema';\nimport Martini from '@mapbox/martini';\nimport Delatin from \"./delatin/index.js\";\nimport { addSkirt } from \"./helpers/skirt.js\";\n/**\n * Returns generated mesh object from image data\n *\n * @param terrainImage terrain image data\n * @param terrainOptions terrain options\n * @returns mesh object\n */\nexport function makeTerrainMeshFromImage(terrainImage, terrainOptions) {\n    const { meshMaxError, bounds, elevationDecoder } = terrainOptions;\n    const { data, width, height } = terrainImage;\n    let terrain;\n    let mesh;\n    switch (terrainOptions.tesselator) {\n        case 'martini':\n            terrain = getTerrain(data, width, height, elevationDecoder, terrainOptions.tesselator);\n            mesh = getMartiniTileMesh(meshMaxError, width, terrain);\n            break;\n        case 'delatin':\n            terrain = getTerrain(data, width, height, elevationDecoder, terrainOptions.tesselator);\n            mesh = getDelatinTileMesh(meshMaxError, width, height, terrain);\n            break;\n        // auto\n        default:\n            if (width === height && !(height & (width - 1))) {\n                terrain = getTerrain(data, width, height, elevationDecoder, 'martini');\n                mesh = getMartiniTileMesh(meshMaxError, width, terrain);\n            }\n            else {\n                terrain = getTerrain(data, width, height, elevationDecoder, 'delatin');\n                mesh = getDelatinTileMesh(meshMaxError, width, height, terrain);\n            }\n            break;\n    }\n    const { vertices } = mesh;\n    let { triangles } = mesh;\n    let attributes = getMeshAttributes(vertices, terrain, width, height, bounds);\n    // Compute bounding box before adding skirt so that z values are not skewed\n    const boundingBox = getMeshBoundingBox(attributes);\n    if (terrainOptions.skirtHeight) {\n        const { attributes: newAttributes, triangles: newTriangles } = addSkirt(attributes, triangles, terrainOptions.skirtHeight);\n        attributes = newAttributes;\n        triangles = newTriangles;\n    }\n    return {\n        // Data return by this loader implementation\n        loaderData: {\n            header: {}\n        },\n        header: {\n            vertexCount: triangles.length,\n            boundingBox\n        },\n        mode: 4, // TRIANGLES\n        indices: { value: Uint32Array.from(triangles), size: 1 },\n        attributes\n    };\n}\n/**\n * Get Martini generated vertices and triangles\n *\n * @param {number} meshMaxError threshold for simplifying mesh\n * @param {number} width width of the input data\n * @param {number[] | Float32Array} terrain elevation data\n * @returns {{vertices: Uint16Array, triangles: Uint32Array}} vertices and triangles data\n */\nfunction getMartiniTileMesh(meshMaxError, width, terrain) {\n    const gridSize = width + 1;\n    const martini = new Martini(gridSize);\n    const tile = martini.createTile(terrain);\n    const { vertices, triangles } = tile.getMesh(meshMaxError);\n    return { vertices, triangles };\n}\n/**\n * Get Delatin generated vertices and triangles\n *\n * @param {number} meshMaxError threshold for simplifying mesh\n * @param {number} width width of the input data array\n * @param {number} height height of the input data array\n * @param {number[] | Float32Array} terrain elevation data\n * @returns {{vertices: number[], triangles: number[]}} vertices and triangles data\n */\nfunction getDelatinTileMesh(meshMaxError, width, height, terrain) {\n    const tin = new Delatin(terrain, width + 1, height + 1);\n    tin.run(meshMaxError);\n    // @ts-expect-error\n    const { coords, triangles } = tin;\n    const vertices = coords;\n    return { vertices, triangles };\n}\nfunction getTerrain(imageData, width, height, elevationDecoder, tesselator) {\n    const { rScaler, bScaler, gScaler, offset } = elevationDecoder;\n    // From Martini demo\n    // https://observablehq.com/@mourner/martin-real-time-rtin-terrain-mesh\n    const terrain = new Float32Array((width + 1) * (height + 1));\n    // decode terrain values\n    for (let i = 0, y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++, i++) {\n            const k = i * 4;\n            const r = imageData[k + 0];\n            const g = imageData[k + 1];\n            const b = imageData[k + 2];\n            terrain[i + y] = r * rScaler + g * gScaler + b * bScaler + offset;\n        }\n    }\n    if (tesselator === 'martini') {\n        // backfill bottom border\n        for (let i = (width + 1) * width, x = 0; x < width; x++, i++) {\n            terrain[i] = terrain[i - width - 1];\n        }\n        // backfill right border\n        for (let i = height, y = 0; y < height + 1; y++, i += height + 1) {\n            terrain[i] = terrain[i - 1];\n        }\n    }\n    return terrain;\n}\nfunction getMeshAttributes(vertices, terrain, width, height, bounds) {\n    const gridSize = width + 1;\n    const numOfVerticies = vertices.length / 2;\n    // vec3. x, y in pixels, z in meters\n    const positions = new Float32Array(numOfVerticies * 3);\n    // vec2. 1 to 1 relationship with position. represents the uv on the texture image. 0,0 to 1,1.\n    const texCoords = new Float32Array(numOfVerticies * 2);\n    const [minX, minY, maxX, maxY] = bounds || [0, 0, width, height];\n    const xScale = (maxX - minX) / width;\n    const yScale = (maxY - minY) / height;\n    for (let i = 0; i < numOfVerticies; i++) {\n        const x = vertices[i * 2];\n        const y = vertices[i * 2 + 1];\n        const pixelIdx = y * gridSize + x;\n        positions[3 * i + 0] = x * xScale + minX;\n        positions[3 * i + 1] = -y * yScale + maxY;\n        positions[3 * i + 2] = terrain[pixelIdx];\n        texCoords[2 * i + 0] = x / width;\n        texCoords[2 * i + 1] = y / height;\n    }\n    return {\n        POSITION: { value: positions, size: 3 },\n        TEXCOORD_0: { value: texCoords, size: 2 }\n        // NORMAL: {}, - optional, but creates the high poly look with lighting\n    };\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof \"4.2.0-beta.2\" !== 'undefined' ? \"4.2.0-beta.2\" : 'latest';\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { VERSION } from \"./lib/utils/version.js\";\n/**\n * Worker loader for image encoded terrain\n */\nexport const TerrainLoader = {\n    dataType: null,\n    batchType: null,\n    name: 'Terrain',\n    id: 'terrain',\n    module: 'terrain',\n    version: VERSION,\n    worker: true,\n    extensions: ['png', 'pngraw', 'jpg', 'jpeg', 'gif', 'webp', 'bmp'],\n    mimeTypes: ['image/png', 'image/jpeg', 'image/gif', 'image/webp', 'image/bmp'],\n    options: {\n        terrain: {\n            tesselator: 'auto',\n            bounds: undefined,\n            meshMaxError: 10,\n            elevationDecoder: {\n                rScaler: 1,\n                gScaler: 0,\n                bScaler: 0,\n                offset: 0\n            },\n            skirtHeight: undefined\n        }\n    }\n};\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { VERSION } from \"./lib/utils/version.js\";\n/**\n * Worker loader for quantized meshes\n */\nexport const QuantizedMeshLoader = {\n    dataType: null, // Mesh,\n    batchType: null,\n    name: 'Quantized Mesh',\n    id: 'quantized-mesh',\n    module: 'terrain',\n    version: VERSION,\n    worker: true,\n    extensions: ['terrain'],\n    mimeTypes: ['application/vnd.quantized-mesh'],\n    options: {\n        'quantized-mesh': {\n            bounds: [0, 0, 1, 1],\n            skirtHeight: null\n        }\n    }\n};\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { parseFromContext } from '@loaders.gl/loader-utils';\nimport { parseQuantizedMesh } from \"./lib/parse-quantized-mesh.js\";\nimport { makeTerrainMeshFromImage } from \"./lib/parse-terrain.js\";\nimport { TerrainLoader as TerrainWorkerLoader } from \"./terrain-loader.js\";\nimport { QuantizedMeshLoader as QuantizedMeshWorkerLoader } from \"./quantized-mesh-loader.js\";\n// TerrainLoader\nexport { TerrainWorkerLoader };\nexport const TerrainLoader = {\n    ...TerrainWorkerLoader,\n    parse: parseTerrain\n};\nexport async function parseTerrain(arrayBuffer, options, context) {\n    const loadImageOptions = {\n        ...options,\n        mimeType: 'application/x.image',\n        image: { ...options?.image, type: 'data' }\n    };\n    const image = await parseFromContext(arrayBuffer, [], loadImageOptions, context);\n    // Extend function to support additional mesh generation options (square grid or delatin)\n    const terrainOptions = { ...TerrainLoader.options.terrain, ...options?.terrain };\n    // @ts-expect-error sort out image typing asap\n    return makeTerrainMeshFromImage(image, terrainOptions);\n}\n// QuantizedMeshLoader\nexport { QuantizedMeshWorkerLoader };\n/**\n * Loader for quantized meshes\n */\nexport const QuantizedMeshLoader = {\n    ...QuantizedMeshWorkerLoader,\n    parseSync: (arrayBuffer, options) => parseQuantizedMesh(arrayBuffer, options?.['quantized-mesh']),\n    parse: async (arrayBuffer, options) => parseQuantizedMesh(arrayBuffer, options?.['quantized-mesh'])\n};\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { CompositeLayer, log } from '@deck.gl/core';\nimport { SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { TerrainWorkerLoader } from '@loaders.gl/terrain';\nimport TileLayer from \"../tile-layer/tile-layer.js\";\nimport { urlType, getURLFromTemplate } from \"../tileset-2d/index.js\";\nconst DUMMY_DATA = [1];\nconst defaultProps = {\n    ...TileLayer.defaultProps,\n    // Image url that encodes height data\n    elevationData: urlType,\n    // Image url to use as texture\n    texture: { ...urlType, optional: true },\n    // Martini error tolerance in meters, smaller number -> more detailed mesh\n    meshMaxError: { type: 'number', value: 4.0 },\n    // Bounding box of the terrain image, [minX, minY, maxX, maxY] in world coordinates\n    bounds: { type: 'array', value: null, optional: true, compare: true },\n    // Color to use if texture is unavailable\n    color: { type: 'color', value: [255, 255, 255] },\n    // Object to decode height data, from (r, g, b) to height in meters\n    elevationDecoder: {\n        type: 'object',\n        value: {\n            rScaler: 1,\n            gScaler: 0,\n            bScaler: 0,\n            offset: 0\n        }\n    },\n    // Supply url to local terrain worker bundle. Only required if running offline and cannot access CDN.\n    workerUrl: '',\n    // Same as SimpleMeshLayer wireframe\n    wireframe: false,\n    material: true,\n    loaders: [TerrainWorkerLoader]\n};\n// Turns array of templates into a single string to work around shallow change\nfunction urlTemplateToUpdateTrigger(template) {\n    if (Array.isArray(template)) {\n        return template.join(';');\n    }\n    return template || '';\n}\n/** Render mesh surfaces from height map images. */\nexport default class TerrainLayer extends CompositeLayer {\n    static { this.defaultProps = defaultProps; }\n    static { this.layerName = 'TerrainLayer'; }\n    updateState({ props, oldProps }) {\n        const elevationDataChanged = props.elevationData !== oldProps.elevationData;\n        if (elevationDataChanged) {\n            const { elevationData } = props;\n            const isTiled = elevationData &&\n                (Array.isArray(elevationData) ||\n                    (elevationData.includes('{x}') && elevationData.includes('{y}')));\n            this.setState({ isTiled });\n        }\n        // Reloading for single terrain mesh\n        const shouldReload = elevationDataChanged ||\n            props.meshMaxError !== oldProps.meshMaxError ||\n            props.elevationDecoder !== oldProps.elevationDecoder ||\n            props.bounds !== oldProps.bounds;\n        if (!this.state.isTiled && shouldReload) {\n            // When state.isTiled, elevationData cannot be an array\n            const terrain = this.loadTerrain(props);\n            this.setState({ terrain });\n        }\n        // TODO - remove in v9\n        // @ts-ignore\n        if (props.workerUrl) {\n            log.removed('workerUrl', 'loadOptions.terrain.workerUrl')();\n        }\n    }\n    loadTerrain({ elevationData, bounds, elevationDecoder, meshMaxError, signal }) {\n        if (!elevationData) {\n            return null;\n        }\n        let loadOptions = this.getLoadOptions();\n        loadOptions = {\n            ...loadOptions,\n            terrain: {\n                skirtHeight: this.state.isTiled ? meshMaxError * 2 : 0,\n                ...loadOptions?.terrain,\n                bounds,\n                meshMaxError,\n                elevationDecoder\n            }\n        };\n        const { fetch } = this.props;\n        return fetch(elevationData, { propName: 'elevationData', layer: this, loadOptions, signal });\n    }\n    getTiledTerrainData(tile) {\n        const { elevationData, fetch, texture, elevationDecoder, meshMaxError } = this.props;\n        const { viewport } = this.context;\n        const dataUrl = getURLFromTemplate(elevationData, tile);\n        const textureUrl = texture && getURLFromTemplate(texture, tile);\n        const { signal } = tile;\n        let bottomLeft = [0, 0];\n        let topRight = [0, 0];\n        if (viewport.isGeospatial) {\n            const bbox = tile.bbox;\n            bottomLeft = viewport.projectFlat([bbox.west, bbox.south]);\n            topRight = viewport.projectFlat([bbox.east, bbox.north]);\n        }\n        else {\n            const bbox = tile.bbox;\n            bottomLeft = [bbox.left, bbox.bottom];\n            topRight = [bbox.right, bbox.top];\n        }\n        const bounds = [bottomLeft[0], bottomLeft[1], topRight[0], topRight[1]];\n        const terrain = this.loadTerrain({\n            elevationData: dataUrl,\n            bounds,\n            elevationDecoder,\n            meshMaxError,\n            signal\n        });\n        const surface = textureUrl\n            ? // If surface image fails to load, the tile should still be displayed\n                fetch(textureUrl, { propName: 'texture', layer: this, loaders: [], signal }).catch(_ => null)\n            : Promise.resolve(null);\n        return Promise.all([terrain, surface]);\n    }\n    renderSubLayers(props) {\n        const SubLayerClass = this.getSubLayerClass('mesh', SimpleMeshLayer);\n        const { color, wireframe, material } = this.props;\n        const { data } = props;\n        if (!data) {\n            return null;\n        }\n        const [mesh, texture] = data;\n        return new SubLayerClass(props, {\n            data: DUMMY_DATA,\n            mesh,\n            texture,\n            _instanced: false,\n            coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n            getPosition: d => [0, 0, 0],\n            getColor: color,\n            wireframe,\n            material\n        });\n    }\n    // Update zRange of viewport\n    onViewportLoad(tiles) {\n        if (!tiles) {\n            return;\n        }\n        const { zRange } = this.state;\n        const ranges = tiles\n            .map(tile => tile.content)\n            .filter(Boolean)\n            .map(arr => {\n            // @ts-ignore\n            const bounds = arr[0].header.boundingBox;\n            return bounds.map(bound => bound[2]);\n        });\n        if (ranges.length === 0) {\n            return;\n        }\n        const minZ = Math.min(...ranges.map(x => x[0]));\n        const maxZ = Math.max(...ranges.map(x => x[1]));\n        if (!zRange || minZ < zRange[0] || maxZ > zRange[1]) {\n            this.setState({ zRange: [minZ, maxZ] });\n        }\n    }\n    renderLayers() {\n        const { color, material, elevationData, texture, wireframe, meshMaxError, elevationDecoder, tileSize, maxZoom, minZoom, extent, maxRequests, onTileLoad, onTileUnload, onTileError, maxCacheSize, maxCacheByteSize, refinementStrategy } = this.props;\n        if (this.state.isTiled) {\n            return new TileLayer(this.getSubLayerProps({\n                id: 'tiles'\n            }), {\n                getTileData: this.getTiledTerrainData.bind(this),\n                renderSubLayers: this.renderSubLayers.bind(this),\n                updateTriggers: {\n                    getTileData: {\n                        elevationData: urlTemplateToUpdateTrigger(elevationData),\n                        texture: urlTemplateToUpdateTrigger(texture),\n                        meshMaxError,\n                        elevationDecoder\n                    }\n                },\n                onViewportLoad: this.onViewportLoad.bind(this),\n                zRange: this.state.zRange || null,\n                tileSize,\n                maxZoom,\n                minZoom,\n                extent,\n                maxRequests,\n                onTileLoad,\n                onTileUnload,\n                onTileError,\n                maxCacheSize,\n                maxCacheByteSize,\n                refinementStrategy\n            });\n        }\n        if (!elevationData) {\n            return null;\n        }\n        const SubLayerClass = this.getSubLayerClass('mesh', SimpleMeshLayer);\n        return new SubLayerClass(this.getSubLayerProps({\n            id: 'mesh'\n        }), {\n            data: DUMMY_DATA,\n            mesh: this.state.terrain,\n            texture,\n            _instanced: false,\n            getPosition: d => [0, 0, 0],\n            getColor: color,\n            material,\n            wireframe\n        });\n    }\n}\n", "import { project } from '@deck.gl/core';\nimport { glsl } from \"../utils/syntax-tags.js\";\nconst vs = `\nuniform bool brushing_enabled;\nuniform int brushing_target;\nuniform vec2 brushing_mousePos;\nuniform float brushing_radius;\n#ifdef NON_INSTANCED_MODEL\nin vec2 brushingTargets;\n#else\nin vec2 instanceBrushingTargets;\n#endif\nout float brushing_isVisible;\nbool brushing_isPointInRange(vec2 position) {\nif (!brushing_enabled) {\nreturn true;\n}\nvec2 source_commonspace = project_position(position);\nvec2 target_commonspace = project_position(brushing_mousePos);\nfloat distance = length((target_commonspace - source_commonspace) / project_uCommonUnitsPerMeter.xy);\nreturn distance <= brushing_radius;\n}\nbool brushing_arePointsInRange(vec2 sourcePos, vec2 targetPos) {\nreturn brushing_isPointInRange(sourcePos) || brushing_isPointInRange(targetPos);\n}\nvoid brushing_setVisible(bool visible) {\nbrushing_isVisible = float(visible);\n}\n`;\nconst fs = `\nuniform bool brushing_enabled;\nin float brushing_isVisible;\n`;\nconst TARGET = {\n    source: 0,\n    target: 1,\n    custom: 2,\n    source_target: 3\n};\nconst inject = {\n    'vs:DECKGL_FILTER_GL_POSITION': `\nvec2 brushingTarget;\nvec2 brushingSource;\nif (brushing_target == 3) {\nbrushingTarget = geometry.worldPositionAlt.xy;\nbrushingSource = geometry.worldPosition.xy;\n} else if (brushing_target == 0) {\nbrushingTarget = geometry.worldPosition.xy;\n} else if (brushing_target == 1) {\nbrushingTarget = geometry.worldPositionAlt.xy;\n} else {\n#ifdef NON_INSTANCED_MODEL\nbrushingTarget = brushingTargets;\n#else\nbrushingTarget = instanceBrushingTargets;\n#endif\n}\nbool visible;\nif (brushing_target == 3) {\nvisible = brushing_arePointsInRange(brushingSource, brushingTarget);\n} else {\nvisible = brushing_isPointInRange(brushingTarget);\n}\nbrushing_setVisible(visible);\n`,\n    'fs:DECKGL_FILTER_COLOR': `\n    if (brushing_enabled && brushing_isVisible < 0.5) {\n      discard;\n    }\n  `\n};\nexport default {\n    name: 'brushing',\n    dependencies: [project],\n    vs,\n    fs,\n    inject,\n    getUniforms: (opts) => {\n        if (!opts || !('viewport' in opts)) {\n            return {};\n        }\n        const { brushingEnabled = true, brushingRadius = 10000, brushingTarget = 'source', mousePosition, viewport } = opts;\n        return {\n            brushing_enabled: Boolean(brushingEnabled && mousePosition && viewport.containsPixel(mousePosition)),\n            brushing_radius: brushingRadius,\n            brushing_target: TARGET[brushingTarget] || 0,\n            brushing_mousePos: mousePosition\n                ? viewport.unproject([mousePosition.x - viewport.x, mousePosition.y - viewport.y])\n                : [0, 0]\n        };\n    }\n};\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { LayerExtension } from '@deck.gl/core';\nimport shaderModule from \"./shader-module.js\";\nconst defaultProps = {\n    getBrushingTarget: { type: 'accessor', value: [0, 0] },\n    brushingTarget: 'source',\n    brushingEnabled: true,\n    brushingRadius: 10000\n};\n/** Adds GPU-based data brushing functionalities to layers. It allows the layer to show/hide objects based on the current pointer position. */\nexport default class BrushingExtension extends LayerExtension {\n    static { this.defaultProps = defaultProps; }\n    static { this.extensionName = 'BrushingExtension'; }\n    getShaders() {\n        return {\n            modules: [shaderModule]\n        };\n    }\n    initializeState(context, extension) {\n        const attributeManager = this.getAttributeManager();\n        if (attributeManager) {\n            attributeManager.add({\n                brushingTargets: {\n                    size: 2,\n                    accessor: 'getBrushingTarget',\n                    shaderAttributes: {\n                        brushingTargets: {\n                            divisor: 0\n                        },\n                        instanceBrushingTargets: {\n                            divisor: 1\n                        }\n                    }\n                }\n            });\n        }\n        // Trigger redraw when mouse moves\n        const onMouseMove = () => {\n            this.getCurrentLayer()?.setNeedsRedraw();\n        };\n        // TODO - expose this in a better way\n        this.state.onMouseMove = onMouseMove;\n        if (context.deck) {\n            // @ts-expect-error (2446) accessing protected property\n            context.deck.eventManager.on({\n                pointermove: onMouseMove,\n                pointerleave: onMouseMove\n            });\n        }\n    }\n    finalizeState(context, extension) {\n        // Remove event listeners\n        if (context.deck) {\n            const onMouseMove = this.state.onMouseMove;\n            // @ts-expect-error (2446) accessing protected property\n            context.deck.eventManager.off({\n                pointermove: onMouseMove,\n                pointerleave: onMouseMove\n            });\n        }\n    }\n}\n", "import { glsl } from \"../utils/syntax-tags.js\";\n/*\n * data filter shader module\n */\nconst vs = `\nuniform DATAFILTER_TYPE filter_min;\nuniform DATAFILTER_TYPE filter_softMin;\nuniform DATAFILTER_TYPE filter_softMax;\nuniform DATAFILTER_TYPE filter_max;\nuniform bool filter_useSoftMargin;\nuniform bool filter_enabled;\nuniform bool filter_transformSize;\nuniform ivec4 filter_categoryBitMask;\n#ifdef NON_INSTANCED_MODEL\n#define DATAFILTER_ATTRIB filterValues\n#define DATAFILTER_ATTRIB_64LOW filterValues64Low\n#define DATACATEGORY_ATTRIB filterCategoryValues\n#else\n#define DATAFILTER_ATTRIB instanceFilterValues\n#define DATAFILTER_ATTRIB_64LOW instanceFilterValues64Low\n#define DATACATEGORY_ATTRIB instanceFilterCategoryValues\n#endif\nin DATAFILTER_TYPE DATAFILTER_ATTRIB;\n#ifdef DATAFILTER_DOUBLE\nin DATAFILTER_TYPE DATAFILTER_ATTRIB_64LOW;\nuniform DATAFILTER_TYPE filter_min64High;\nuniform DATAFILTER_TYPE filter_max64High;\n#endif\nin DATACATEGORY_TYPE DATACATEGORY_ATTRIB;\nout float dataFilter_value;\nfloat dataFilter_reduceValue(float value) {\nreturn value;\n}\nfloat dataFilter_reduceValue(vec2 value) {\nreturn min(value.x, value.y);\n}\nfloat dataFilter_reduceValue(vec3 value) {\nreturn min(min(value.x, value.y), value.z);\n}\nfloat dataFilter_reduceValue(vec4 value) {\nreturn min(min(value.x, value.y), min(value.z, value.w));\n}\nvoid dataFilter_setValue(DATAFILTER_TYPE valueFromMin, DATAFILTER_TYPE valueFromMax, DATACATEGORY_TYPE category) {\nif (filter_enabled) {\nif (filter_useSoftMargin) {\ndataFilter_value = dataFilter_reduceValue(\nsmoothstep(filter_min, filter_softMin, valueFromMin) *\n(1.0 - smoothstep(filter_softMax, filter_max, valueFromMax))\n);\n} else {\ndataFilter_value = dataFilter_reduceValue(\nstep(filter_min, valueFromMin) * step(valueFromMax, filter_max)\n);\n}\n#if DATACATEGORY_CHANNELS == 1\nint dataFilter_masks = filter_categoryBitMask[int(category / 32.0)];\n#elif DATACATEGORY_CHANNELS == 2\nivec2 dataFilter_masks = ivec2(\nfilter_categoryBitMask[int(category.x / 32.0)],\nfilter_categoryBitMask[int(category.y / 32.0) + 2]\n);\n#elif DATACATEGORY_CHANNELS == 3\nivec3 dataFilter_masks = filter_categoryBitMask.xyz;\n#else\nivec4 dataFilter_masks = filter_categoryBitMask;\n#endif\nDATACATEGORY_TYPE dataFilter_bits = DATACATEGORY_TYPE(dataFilter_masks) / pow(DATACATEGORY_TYPE(2.0), mod(category, 32.0));\ndataFilter_bits = mod(floor(dataFilter_bits), 2.0);\n#if DATACATEGORY_CHANNELS == 1\nif(dataFilter_bits == 0.0) dataFilter_value = 0.0;\n#else\nif(any(equal(dataFilter_bits, DATACATEGORY_TYPE(0.0)))) dataFilter_value = 0.0;\n#endif\n} else {\ndataFilter_value = 1.0;\n}\n}\n`;\nconst fs = `\nuniform bool filter_transformColor;\nin float dataFilter_value;\n`;\n/* eslint-disable camelcase */\nfunction getUniforms(opts) {\n    if (!opts || !('extensions' in opts)) {\n        return {};\n    }\n    const { filterRange = [-1, 1], filterEnabled = true, filterTransformSize = true, filterTransformColor = true } = opts;\n    const filterSoftRange = opts.filterSoftRange || filterRange;\n    return {\n        ...(Number.isFinite(filterRange[0])\n            ? {\n                filter_min: filterRange[0],\n                filter_softMin: filterSoftRange[0],\n                filter_softMax: filterSoftRange[1],\n                filter_max: filterRange[1]\n            }\n            : {\n                filter_min: filterRange.map(r => r[0]),\n                filter_softMin: filterSoftRange.map(r => r[0]),\n                filter_softMax: filterSoftRange.map(r => r[1]),\n                filter_max: filterRange.map(r => r[1])\n            }),\n        filter_enabled: filterEnabled,\n        filter_useSoftMargin: Boolean(opts.filterSoftRange),\n        filter_transformSize: filterEnabled && filterTransformSize,\n        filter_transformColor: filterEnabled && filterTransformColor\n    };\n}\nfunction getUniforms64(opts) {\n    if (!opts || !('extensions' in opts)) {\n        return {};\n    }\n    const uniforms = getUniforms(opts);\n    if (Number.isFinite(uniforms.filter_min)) {\n        const min64High = Math.fround(uniforms.filter_min);\n        uniforms.filter_min -= min64High;\n        uniforms.filter_softMin -= min64High;\n        uniforms.filter_min64High = min64High;\n        const max64High = Math.fround(uniforms.filter_max);\n        uniforms.filter_max -= max64High;\n        uniforms.filter_softMax -= max64High;\n        uniforms.filter_max64High = max64High;\n    }\n    else {\n        const min64High = uniforms.filter_min.map(Math.fround);\n        uniforms.filter_min = uniforms.filter_min.map((x, i) => x - min64High[i]);\n        uniforms.filter_softMin = uniforms.filter_softMin.map((x, i) => x - min64High[i]);\n        uniforms.filter_min64High = min64High;\n        const max64High = uniforms.filter_max.map(Math.fround);\n        uniforms.filter_max = uniforms.filter_max.map((x, i) => x - max64High[i]);\n        uniforms.filter_softMax = uniforms.filter_softMax.map((x, i) => x - max64High[i]);\n        uniforms.filter_max64High = max64High;\n    }\n    return uniforms;\n}\nconst inject = {\n    'vs:#main-start': `\n#ifdef DATAFILTER_DOUBLE\ndataFilter_setValue(\nDATAFILTER_ATTRIB - filter_min64High + DATAFILTER_ATTRIB_64LOW,\nDATAFILTER_ATTRIB - filter_max64High + DATAFILTER_ATTRIB_64LOW,\nDATACATEGORY_ATTRIB\n);\n#else\ndataFilter_setValue(DATAFILTER_ATTRIB, DATAFILTER_ATTRIB, DATACATEGORY_ATTRIB);\n#endif\n`,\n    'vs:#main-end': `\nif (dataFilter_value == 0.0) {\ngl_Position = vec4(0.);\n}\n`,\n    'vs:DECKGL_FILTER_SIZE': `\nif (filter_transformSize) {\nsize = size * dataFilter_value;\n}\n`,\n    'fs:DECKGL_FILTER_COLOR': `\nif (dataFilter_value == 0.0) discard;\nif (filter_transformColor) {\ncolor.a *= dataFilter_value;\n}\n`\n};\nexport const shaderModule = {\n    name: 'data-filter',\n    vs,\n    fs,\n    inject,\n    getUniforms\n};\nexport const shaderModule64 = {\n    name: 'data-filter-fp64',\n    vs,\n    fs,\n    inject,\n    getUniforms: getUniforms64\n};\n", "import { Model } from '@luma.gl/engine';\nimport { GL } from '@luma.gl/constants';\nconst AGGREGATE_VS = `\\\n#version 300 es\n#define SHADER_NAME data-filter-vertex-shader\n\n#ifdef FLOAT_TARGET\n  in float filterIndices;\n  in float filterPrevIndices;\n#else\n  in vec2 filterIndices;\n  in vec2 filterPrevIndices;\n#endif\n\nout vec4 vColor;\nconst float component = 1.0 / 255.0;\n\nvoid main() {\n  #ifdef FLOAT_TARGET\n    dataFilter_value *= float(filterIndices != filterPrevIndices);\n    gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\n    vColor = vec4(0.0, 0.0, 0.0, 1.0);\n  #else\n    // Float texture is not supported: pack result into 4 channels x 256 px x 64px\n    dataFilter_value *= float(filterIndices.x != filterPrevIndices.x);\n    float col = filterIndices.x;\n    float row = filterIndices.y * 4.0;\n    float channel = floor(row);\n    row = fract(row);\n    vColor = component * vec4(bvec4(channel == 0.0, channel == 1.0, channel == 2.0, channel == 3.0));\n    gl_Position = vec4(col * 2.0 - 1.0, row * 2.0 - 1.0, 0.0, 1.0);\n  #endif\n  gl_PointSize = 1.0;\n}\n`;\nconst AGGREGATE_FS = `\\\n#version 300 es\n#define SHADER_NAME data-filter-fragment-shader\nprecision highp float;\n\nin vec4 vColor;\n\nout vec4 fragColor;\n\nvoid main() {\n  if (dataFilter_value < 0.5) {\n    discard;\n  }\n  fragColor = vColor;\n}\n`;\nconst FLOAT_TARGET_FEATURES = [\n    'float32-renderable-webgl', // ability to render to float texture\n    'texture-blend-float-webgl' // ability to blend when rendering to float texture\n];\nexport function supportsFloatTarget(device) {\n    return FLOAT_TARGET_FEATURES.every(feature => device.features.has(feature));\n}\n// A 1x1 framebuffer object that encodes the total count of filtered items\nexport function getFramebuffer(device, useFloatTarget) {\n    if (useFloatTarget) {\n        return device.createFramebuffer({\n            width: 1,\n            height: 1,\n            colorAttachments: [\n                device.createTexture({\n                    format: 'rgba32float',\n                    type: 5126,\n                    mipmaps: false\n                })\n            ]\n        });\n    }\n    return device.createFramebuffer({\n        width: 256,\n        height: 64,\n        colorAttachments: [device.createTexture({ format: 'rgba8unorm', type: 5126, mipmaps: false })]\n    });\n}\n// Increments the counter based on dataFilter_value\nexport function getModel(device, shaderOptions, useFloatTarget) {\n    shaderOptions.defines.NON_INSTANCED_MODEL = 1;\n    if (useFloatTarget) {\n        shaderOptions.defines.FLOAT_TARGET = 1;\n    }\n    return new Model(device, {\n        id: 'data-filter-aggregation-model',\n        vertexCount: 1,\n        isInstanced: false,\n        drawMode: 0,\n        vs: AGGREGATE_VS,\n        fs: AGGREGATE_FS,\n        ...shaderOptions\n    });\n}\nexport const parameters = {\n    blend: true,\n    blendFunc: [1, 1, 1, 1],\n    blendEquation: [32774, 32774],\n    depthTest: false\n};\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { _deepEqual as deepEqual, LayerExtension, log } from '@deck.gl/core';\nimport { shaderModule, shaderModule64 } from \"./shader-module.js\";\nimport * as aggregator from \"./aggregator.js\";\nconst defaultProps = {\n    getFilterValue: { type: 'accessor', value: 0 },\n    getFilterCategory: { type: 'accessor', value: 0 },\n    onFilteredItemsChange: { type: 'function', value: null, optional: true },\n    filterEnabled: true,\n    filterRange: [-1, 1],\n    filterSoftRange: null,\n    filterCategories: [0],\n    filterTransformSize: true,\n    filterTransformColor: true\n};\nconst defaultOptions = {\n    categorySize: 1,\n    filterSize: 1,\n    fp64: false,\n    countItems: false\n};\nconst DATA_TYPE_FROM_SIZE = {\n    1: 'float',\n    2: 'vec2',\n    3: 'vec3',\n    4: 'vec4'\n};\n/** Adds GPU-based data filtering functionalities to layers. It allows the layer to show/hide objects based on user-defined properties. */\nexport default class DataFilterExtension extends LayerExtension {\n    static { this.defaultProps = defaultProps; }\n    static { this.extensionName = 'DataFilterExtension'; }\n    constructor(opts = {}) {\n        super({ ...defaultOptions, ...opts });\n    }\n    getShaders(extension) {\n        const { categorySize, filterSize, fp64 } = extension.opts;\n        return {\n            modules: [fp64 ? shaderModule64 : shaderModule],\n            defines: {\n                DATACATEGORY_TYPE: DATA_TYPE_FROM_SIZE[categorySize],\n                DATACATEGORY_CHANNELS: categorySize,\n                DATAFILTER_TYPE: DATA_TYPE_FROM_SIZE[filterSize],\n                DATAFILTER_DOUBLE: Boolean(fp64)\n            }\n        };\n    }\n    initializeState(context, extension) {\n        const attributeManager = this.getAttributeManager();\n        const { categorySize, filterSize, fp64 } = extension.opts;\n        if (attributeManager) {\n            attributeManager.add({\n                filterValues: {\n                    size: filterSize,\n                    type: fp64 ? 'float64' : 'float32',\n                    accessor: 'getFilterValue',\n                    shaderAttributes: {\n                        filterValues: {\n                            divisor: 0\n                        },\n                        instanceFilterValues: {\n                            divisor: 1\n                        }\n                    }\n                },\n                filterCategoryValues: {\n                    size: categorySize,\n                    accessor: 'getFilterCategory',\n                    transform: categorySize === 1\n                        ? d => extension._getCategoryKey.call(this, d, 0)\n                        : d => d.map((x, i) => extension._getCategoryKey.call(this, x, i)),\n                    shaderAttributes: {\n                        filterCategoryValues: {\n                            divisor: 0\n                        },\n                        instanceFilterCategoryValues: {\n                            divisor: 1\n                        }\n                    }\n                }\n            });\n        }\n        const { device } = this.context;\n        if (attributeManager && extension.opts.countItems) {\n            const useFloatTarget = aggregator.supportsFloatTarget(device);\n            // This attribute is needed for variable-width data, e.g. Path, SolidPolygon, Text\n            // The vertex shader checks if a vertex has the same \"index\" as the previous vertex\n            // so that we only write one count cross multiple vertices of the same object\n            attributeManager.add({\n                filterIndices: {\n                    size: useFloatTarget ? 1 : 2,\n                    vertexOffset: 1,\n                    type: 'unorm8',\n                    accessor: (object, { index }) => {\n                        const i = object && object.__source ? object.__source.index : index;\n                        return useFloatTarget ? (i + 1) % 255 : [(i + 1) % 255, Math.floor(i / 255) % 255];\n                    },\n                    shaderAttributes: {\n                        filterPrevIndices: {\n                            vertexOffset: 0\n                        },\n                        filterIndices: {\n                            vertexOffset: 1\n                        }\n                    }\n                }\n            });\n            const filterFBO = aggregator.getFramebuffer(device, useFloatTarget);\n            const filterModel = aggregator.getModel(device, extension.getShaders.call(this, extension), useFloatTarget);\n            this.setState({ filterFBO, filterModel });\n        }\n    }\n    updateState({ props, oldProps, changeFlags }, extension) {\n        const attributeManager = this.getAttributeManager();\n        const { categorySize } = extension.opts;\n        if (this.state.filterModel) {\n            const filterNeedsUpdate = \n            // attributeManager must be defined for filterModel to be set\n            attributeManager.attributes.filterValues.needsUpdate() ||\n                attributeManager.attributes.filterCategoryValues?.needsUpdate() ||\n                props.filterEnabled !== oldProps.filterEnabled ||\n                props.filterRange !== oldProps.filterRange ||\n                props.filterSoftRange !== oldProps.filterSoftRange ||\n                props.filterCategories !== oldProps.filterCategories;\n            if (filterNeedsUpdate) {\n                this.setState({ filterNeedsUpdate });\n            }\n        }\n        if (attributeManager?.attributes.filterCategoryValues) {\n            // Update bitmask if accessor or selected categories has changed\n            const categoryBitMaskNeedsUpdate = attributeManager.attributes.filterCategoryValues.needsUpdate() ||\n                !deepEqual(props.filterCategories, oldProps.filterCategories, 2);\n            if (categoryBitMaskNeedsUpdate) {\n                this.setState({ categoryBitMaskNeedsUpdate });\n            }\n            // Need to recreate category map if categorySize has changed\n            const resetCategories = changeFlags.dataChanged;\n            if (resetCategories) {\n                this.setState({\n                    categoryMap: Array(categorySize)\n                        .fill(0)\n                        .map(() => ({}))\n                });\n                attributeManager.attributes.filterCategoryValues.setNeedsUpdate('categoryMap');\n            }\n        }\n    }\n    draw(params, extension) {\n        const filterFBO = this.state.filterFBO;\n        const filterModel = this.state.filterModel;\n        const filterNeedsUpdate = this.state.filterNeedsUpdate;\n        const categoryBitMaskNeedsUpdate = this.state.categoryBitMaskNeedsUpdate;\n        const { onFilteredItemsChange } = this.props;\n        if (categoryBitMaskNeedsUpdate) {\n            extension._updateCategoryBitMask.call(this, params, extension);\n        }\n        if (filterNeedsUpdate && onFilteredItemsChange && filterModel) {\n            const { attributes: { filterValues, filterCategoryValues, filterIndices } } = this.getAttributeManager();\n            filterModel.setVertexCount(this.getNumInstances());\n            this.context.device.clearWebGL({ framebuffer: filterFBO, color: [0, 0, 0, 0] });\n            filterModel.updateModuleSettings(params.moduleParameters);\n            // @ts-expect-error filterValue and filterIndices should always have buffer value\n            filterModel.setAttributes({\n                ...filterValues.getValue(),\n                ...filterCategoryValues?.getValue(),\n                ...filterIndices?.getValue()\n            });\n            filterModel.setUniforms(params.uniforms);\n            filterModel.device.withParametersWebGL({\n                framebuffer: filterFBO,\n                // ts-ignore 'readonly' cannot be assigned to the mutable type '[GLBlendEquation, GLBlendEquation]'\n                ...aggregator.parameters,\n                viewport: [0, 0, filterFBO.width, filterFBO.height]\n            }, () => {\n                filterModel.draw(this.context.renderPass);\n            });\n            const color = filterModel.device.readPixelsToArrayWebGL(filterFBO);\n            let count = 0;\n            for (let i = 0; i < color.length; i++) {\n                count += color[i];\n            }\n            onFilteredItemsChange({ id: this.id, count });\n            this.state.filterNeedsUpdate = false;\n        }\n    }\n    finalizeState() {\n        const filterFBO = this.state.filterFBO;\n        const filterModel = this.state.filterModel;\n        // filterFBO.color.delete();\n        filterFBO?.destroy();\n        filterModel?.destroy();\n    }\n    /**\n     * Updates the bitmask used on the GPU to perform the filter based on the\n     * `filterCategories` prop. The mapping between categories and bit in the bitmask\n     * is performed by `_getCategoryKey()`\n     */\n    _updateCategoryBitMask(params, extension) {\n        const { categorySize } = extension.opts;\n        const { filterCategories } = this.props;\n        const categoryBitMask = new Uint32Array([0, 0, 0, 0]);\n        const categoryFilters = (categorySize === 1 ? [filterCategories] : filterCategories);\n        const maxCategories = categorySize === 1 ? 128 : categorySize === 2 ? 64 : 32;\n        for (let c = 0; c < categoryFilters.length; c++) {\n            const categoryFilter = categoryFilters[c];\n            for (const category of categoryFilter) {\n                const key = extension._getCategoryKey.call(this, category, c);\n                if (key < maxCategories) {\n                    const channel = c * (maxCategories / 32) + Math.floor(key / 32);\n                    categoryBitMask[channel] += Math.pow(2, key % 32); // 1 << key fails for key > 30\n                }\n                else {\n                    log.warn(`Exceeded maximum number of categories (${maxCategories})`)();\n                }\n            }\n        }\n        /* eslint-disable-next-line camelcase */\n        params.uniforms.filter_categoryBitMask = categoryBitMask;\n        this.state.categoryBitMaskNeedsUpdate = false;\n    }\n    /**\n     * Returns an index of bit in the bitmask for a given category. If the category has\n     * not yet been assigned a bit, a new one is assigned.\n     */\n    _getCategoryKey(category, channel) {\n        const categoryMap = this.state.categoryMap[channel];\n        if (!(category in categoryMap)) {\n            categoryMap[category] = Object.keys(categoryMap).length;\n        }\n        return categoryMap[category];\n    }\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport default `\\\nconst vec2 WORLD_SCALE_FP64 = vec2(81.4873275756836, 0.0000032873668232014097);\nuniform vec2 project_uViewProjectionMatrixFP64[16];\nvoid mercatorProject_fp64(vec4 lnglat_fp64, out vec2 out_val[2]) {\n#if defined(NVIDIA_FP64_WORKAROUND)\nout_val[0] = sum_fp64(radians_fp64(lnglat_fp64.xy), PI_FP64 * ONE);\n#else\nout_val[0] = sum_fp64(radians_fp64(lnglat_fp64.xy), PI_FP64);\n#endif\nout_val[1] = sum_fp64(PI_FP64,\nlog_fp64(tan_fp64(sum_fp64(PI_4_FP64, radians_fp64(lnglat_fp64.zw) / 2.0))));\nreturn;\n}\nvoid project_position_fp64(vec4 position_fp64, out vec2 out_val[2]) {\nvec2 pos_fp64[2];\nmercatorProject_fp64(position_fp64, pos_fp64);\nout_val[0] = mul_fp64(pos_fp64[0], WORLD_SCALE_FP64);\nout_val[1] = mul_fp64(pos_fp64[1], WORLD_SCALE_FP64);\nreturn;\n}\nvoid project_position_fp64(vec2 position, vec2 position64xyLow, out vec2 out_val[2]) {\nvec4 position64xy = vec4(\nposition.x, position64xyLow.x,\nposition.y, position64xyLow.y);\nproject_position_fp64(position64xy, out_val);\n}\nvec4 project_common_position_to_clipspace_fp64(vec2 vertex_pos_modelspace[4]) {\nvec2 vertex_pos_clipspace[4];\nmat4_vec4_mul_fp64(project_uViewProjectionMatrixFP64, vertex_pos_modelspace,\nvertex_pos_clipspace);\nreturn vec4(\nvertex_pos_clipspace[0].x,\nvertex_pos_clipspace[1].x,\nvertex_pos_clipspace[2].x,\nvertex_pos_clipspace[3].x\n);\n}\nvec4 project_position_to_clipspace(\nvec3 position, vec3 position64xyLow, vec3 offset, out vec4 commonPosition\n) {\nvec2 offset64[4];\nvec4_fp64(vec4(offset, 0.0), offset64);\nfloat z = project_size(position.z);\nvec2 projectedPosition64xy[2];\nproject_position_fp64(position.xy, position64xyLow.xy, projectedPosition64xy);\nvec2 commonPosition64[4];\ncommonPosition64[0] = sum_fp64(offset64[0], projectedPosition64xy[0]);\ncommonPosition64[1] = sum_fp64(offset64[1], projectedPosition64xy[1]);\ncommonPosition64[2] = sum_fp64(offset64[2], vec2(z, 0.0));\ncommonPosition64[3] = vec2(1.0, 0.0);\ncommonPosition = vec4(projectedPosition64xy[0].x, projectedPosition64xy[1].x, z, 1.0);\nreturn project_common_position_to_clipspace_fp64(commonPosition64);\n}\nvec4 project_position_to_clipspace(\nvec3 position, vec3 position64xyLow, vec3 offset\n) {\nvec4 commonPosition;\nreturn project_position_to_clipspace(\nposition, position64xyLow, offset, commonPosition\n);\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* eslint-disable camelcase */\nimport { fp64 } from '@luma.gl/shadertools';\nconst { fp64ify, fp64ifyMatrix4 } = fp64;\nimport { project, _memoize as memoize } from '@deck.gl/core';\nimport project64Shader from \"./project64.glsl.js\";\nexport default {\n    name: 'project64',\n    dependencies: [project, fp64],\n    vs: project64Shader,\n    getUniforms\n};\n// TODO - this module should calculate the 64 bit uniforms\n// It is currently done by project to minimize duplicated work\nconst getMemoizedUniforms = memoize(calculateUniforms);\nfunction getUniforms(opts) {\n    if (opts && 'viewport' in opts) {\n        const { viewProjectionMatrix, scale } = opts.viewport;\n        // We only need to update fp64 uniforms if fp32 projection is being updated\n        return getMemoizedUniforms({ viewProjectionMatrix, scale });\n    }\n    return {};\n}\nfunction calculateUniforms({ viewProjectionMatrix, scale }) {\n    const glViewProjectionMatrixFP64 = fp64ifyMatrix4(viewProjectionMatrix);\n    const scaleFP64 = fp64ify(scale);\n    return {\n        project_uViewProjectionMatrixFP64: glViewProjectionMatrixFP64,\n        project64_uViewProjectionMatrix: glViewProjectionMatrixFP64,\n        project64_uScale: scaleFP64\n    };\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { LayerExtension, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport project64 from \"./project64.js\";\n/** @deprecated Adds the legacy 64-bit precision to geospatial layers. */\nexport default class Fp64Extension extends LayerExtension {\n    static { this.extensionName = 'Fp64Extension'; }\n    getShaders() {\n        const { coordinateSystem } = this.props;\n        if (coordinateSystem !== COORDINATE_SYSTEM.LNGLAT &&\n            coordinateSystem !== COORDINATE_SYSTEM.DEFAULT) {\n            throw new Error('fp64: coordinateSystem must be LNGLAT');\n        }\n        return {\n            modules: [project64]\n        };\n    }\n}\n", "export const dashShaders = {\n    inject: {\n        'vs:#decl': `\nin vec2 instanceDashArrays;\nin float instanceDashOffsets;\nout vec2 vDashArray;\nout float vDashOffset;\n`,\n        'vs:#main-end': `\nvDashArray = instanceDashArrays;\nvDashOffset = instanceDashOffsets / width.x;\n`,\n        'fs:#decl': `\nuniform float dashAlignMode;\nuniform float capType;\nuniform bool dashGapPickable;\nin vec2 vDashArray;\nin float vDashOffset;\n`,\n        // if given position is in the gap part of the dashed line\n        // dashArray.x: solid stroke length, relative to width\n        // dashArray.y: gap length, relative to width\n        // alignMode:\n        // 0 - no adjustment\n        // o----     ----     ----     ---- o----     -o----     ----     o\n        // 1 - stretch to fit, draw half dash at each end for nicer joints\n        // o--    ----    ----    ----    --o--      --o--     ----     --o\n        'fs:#main-start': `\nfloat solidLength = vDashArray.x;\nfloat gapLength = vDashArray.y;\nfloat unitLength = solidLength + gapLength;\nfloat offset;\nif (unitLength > 0.0) {\nif (dashAlignMode == 0.0) {\noffset = vDashOffset;\n} else {\nunitLength = vPathLength / round(vPathLength / unitLength);\noffset = solidLength / 2.0;\n}\nfloat unitOffset = mod(vPathPosition.y + offset, unitLength);\nif (gapLength > 0.0 && unitOffset > solidLength) {\nif (capType <= 0.5) {\nif (!(dashGapPickable && bool(picking.isActive))) {\ndiscard;\n}\n} else {\nfloat distToEnd = length(vec2(\nmin(unitOffset - solidLength, unitLength - unitOffset),\nvPathPosition.x\n));\nif (distToEnd > 1.0) {\nif (!(dashGapPickable && bool(picking.isActive))) {\ndiscard;\n}\n}\n}\n}\n}\n`\n    }\n};\nexport const offsetShaders = {\n    inject: {\n        'vs:#decl': `\nin float instanceOffsets;\n`,\n        'vs:DECKGL_FILTER_SIZE': `\nfloat offsetWidth = abs(instanceOffsets * 2.0) + 1.0;\nsize *= offsetWidth;\n`,\n        'vs:#main-end': `\nfloat offsetWidth = abs(instanceOffsets * 2.0) + 1.0;\nfloat offsetDir = sign(instanceOffsets);\nvPathPosition.x = (vPathPosition.x + offsetDir) * offsetWidth - offsetDir;\nvPathPosition.y *= offsetWidth;\nvPathLength *= offsetWidth;\n`,\n        'fs:#main-start': `\nfloat isInside;\nisInside = step(-1.0, vPathPosition.x) * step(vPathPosition.x, 1.0);\nif (isInside == 0.0) {\ndiscard;\n}\n`\n    }\n};\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { LayerExtension, _mergeShaders as mergeShaders } from '@deck.gl/core';\nimport { vec3 } from '@math.gl/core';\nimport { dashShaders, offsetShaders } from \"./shaders.glsl.js\";\nconst defaultProps = {\n    getDashArray: { type: 'accessor', value: [0, 0] },\n    getOffset: { type: 'accessor', value: 0 },\n    dashJustified: false,\n    dashGapPickable: false\n};\n/** Adds selected features to the `PathLayer` and composite layers that render the `PathLayer`. */\nexport default class PathStyleExtension extends LayerExtension {\n    static { this.defaultProps = defaultProps; }\n    static { this.extensionName = 'PathStyleExtension'; }\n    constructor({ dash = false, offset = false, highPrecisionDash = false } = {}) {\n        super({ dash: dash || highPrecisionDash, offset, highPrecisionDash });\n    }\n    isEnabled(layer) {\n        return 'pathTesselator' in layer.state;\n    }\n    getShaders(extension) {\n        if (!extension.isEnabled(this)) {\n            return null;\n        }\n        // Merge shader injection\n        let result = {};\n        if (extension.opts.dash) {\n            result = mergeShaders(result, dashShaders);\n        }\n        if (extension.opts.offset) {\n            result = mergeShaders(result, offsetShaders);\n        }\n        return result;\n    }\n    initializeState(context, extension) {\n        const attributeManager = this.getAttributeManager();\n        if (!attributeManager || !extension.isEnabled(this)) {\n            // This extension only works with the PathLayer\n            return;\n        }\n        if (extension.opts.dash) {\n            attributeManager.addInstanced({\n                instanceDashArrays: { size: 2, accessor: 'getDashArray' },\n                instanceDashOffsets: extension.opts.highPrecisionDash\n                    ? {\n                        size: 1,\n                        accessor: 'getPath',\n                        transform: extension.getDashOffsets.bind(this)\n                    }\n                    : {\n                        size: 1,\n                        update: attribute => {\n                            attribute.constant = true;\n                            attribute.value = [0];\n                        }\n                    }\n            });\n        }\n        if (extension.opts.offset) {\n            attributeManager.addInstanced({\n                instanceOffsets: { size: 1, accessor: 'getOffset' }\n            });\n        }\n    }\n    updateState(params, extension) {\n        if (!extension.isEnabled(this)) {\n            return;\n        }\n        const uniforms = {};\n        if (extension.opts.dash) {\n            uniforms.dashAlignMode = this.props.dashJustified ? 1 : 0;\n            uniforms.dashGapPickable = Boolean(this.props.dashGapPickable);\n        }\n        this.state.model?.setUniforms(uniforms);\n    }\n    getDashOffsets(path) {\n        const result = [0];\n        const positionSize = this.props.positionFormat === 'XY' ? 2 : 3;\n        const isNested = Array.isArray(path[0]);\n        const geometrySize = isNested ? path.length : path.length / positionSize;\n        let p;\n        let prevP;\n        for (let i = 0; i < geometrySize - 1; i++) {\n            p = isNested ? path[i] : path.slice(i * positionSize, i * positionSize + positionSize);\n            p = this.projectPosition(p);\n            if (i > 0) {\n                result[i] = result[i - 1] + vec3.dist(prevP, p);\n            }\n            prevP = p;\n        }\n        result[geometrySize - 1] = 0;\n        return result;\n    }\n}\n", "import { project, fp64LowPart } from '@deck.gl/core';\nimport { glsl } from \"../utils/syntax-tags.js\";\n/*\n * fill pattern shader module\n */\nconst patternVs = `\n#ifdef NON_INSTANCED_MODEL\n#define FILL_PATTERN_FRAME_ATTRIB fillPatternFrames\n#define FILL_PATTERN_SCALE_ATTRIB fillPatternScales\n#define FILL_PATTERN_OFFSET_ATTRIB fillPatternOffsets\n#else\n#define FILL_PATTERN_FRAME_ATTRIB instanceFillPatternFrames\n#define FILL_PATTERN_SCALE_ATTRIB instanceFillPatternScales\n#define FILL_PATTERN_OFFSET_ATTRIB instanceFillPatternOffsets\n#endif\nin vec4 FILL_PATTERN_FRAME_ATTRIB;\nin float FILL_PATTERN_SCALE_ATTRIB;\nin vec2 FILL_PATTERN_OFFSET_ATTRIB;\nuniform bool fill_patternEnabled;\nuniform vec2 fill_patternTextureSize;\nout vec2 fill_uv;\nout vec4 fill_patternBounds;\nout vec4 fill_patternPlacement;\n`;\nconst patternFs = `\nuniform bool fill_patternEnabled;\nuniform bool fill_patternMask;\nuniform sampler2D fill_patternTexture;\nuniform vec2 fill_uvCoordinateOrigin;\nuniform vec2 fill_uvCoordinateOrigin64Low;\nin vec4 fill_patternBounds;\nin vec4 fill_patternPlacement;\nin vec2 fill_uv;\nconst float FILL_UV_SCALE = 512.0 / 40000000.0;\n`;\nconst inject = {\n    'vs:DECKGL_FILTER_GL_POSITION': `\nfill_uv = geometry.position.xy;\n`,\n    'vs:DECKGL_FILTER_COLOR': `\nif (fill_patternEnabled) {\nfill_patternBounds = FILL_PATTERN_FRAME_ATTRIB / vec4(fill_patternTextureSize, fill_patternTextureSize);\nfill_patternPlacement.xy = FILL_PATTERN_OFFSET_ATTRIB;\nfill_patternPlacement.zw = FILL_PATTERN_SCALE_ATTRIB * FILL_PATTERN_FRAME_ATTRIB.zw;\n}\n`,\n    'fs:DECKGL_FILTER_COLOR': `\nif (fill_patternEnabled) {\nvec2 scale = FILL_UV_SCALE * fill_patternPlacement.zw;\nvec2 patternUV = mod(mod(fill_uvCoordinateOrigin, scale) + fill_uvCoordinateOrigin64Low + fill_uv, scale) / scale;\npatternUV = mod(fill_patternPlacement.xy + patternUV, 1.0);\nvec2 texCoords = fill_patternBounds.xy + fill_patternBounds.zw * patternUV;\nvec4 patternColor = texture(fill_patternTexture, texCoords);\ncolor.a *= patternColor.a;\nif (!fill_patternMask) {\ncolor.rgb = patternColor.rgb;\n}\n}\n`\n};\n/* eslint-disable camelcase */\nfunction getPatternUniforms(opts, uniforms) {\n    if (!opts) {\n        return {};\n    }\n    if ('fillPatternTexture' in opts) {\n        const { fillPatternTexture } = opts;\n        return {\n            fill_patternTexture: fillPatternTexture,\n            fill_patternTextureSize: [fillPatternTexture.width, fillPatternTexture.height]\n        };\n    }\n    if ('viewport' in opts) {\n        const { fillPatternMask = true, fillPatternEnabled = true } = opts;\n        const { project_uCommonOrigin: coordinateOriginCommon } = uniforms;\n        const coordinateOriginCommon64Low = [\n            fp64LowPart(coordinateOriginCommon[0]),\n            fp64LowPart(coordinateOriginCommon[1])\n        ];\n        return {\n            fill_uvCoordinateOrigin: coordinateOriginCommon.slice(0, 2),\n            fill_uvCoordinateOrigin64Low: coordinateOriginCommon64Low,\n            fill_patternMask: fillPatternMask,\n            fill_patternEnabled: fillPatternEnabled\n        };\n    }\n    return {};\n}\nexport const patternShaders = {\n    name: 'fill-pattern',\n    vs: patternVs,\n    fs: patternFs,\n    inject,\n    dependencies: [project],\n    getUniforms: getPatternUniforms\n};\n", "import { LayerExtension } from '@deck.gl/core';\nimport { patternShaders } from \"./shader-module.js\";\nconst defaultProps = {\n    fillPatternEnabled: true,\n    fillPatternAtlas: {\n        type: 'image',\n        value: null,\n        async: true,\n        parameters: { lodMaxClamp: 0 }\n    },\n    fillPatternMapping: { type: 'object', value: {}, async: true },\n    fillPatternMask: true,\n    getFillPattern: { type: 'accessor', value: d => d.pattern },\n    getFillPatternScale: { type: 'accessor', value: 1 },\n    getFillPatternOffset: { type: 'accessor', value: [0, 0] }\n};\n/** Adds selected features to layers that render a \"fill\", such as the `PolygonLayer` and `ScatterplotLayer`. */\nexport default class FillStyleExtension extends LayerExtension {\n    static { this.defaultProps = defaultProps; }\n    static { this.extensionName = 'FillStyleExtension'; }\n    constructor({ pattern = false } = {}) {\n        super({ pattern });\n    }\n    isEnabled(layer) {\n        return layer.getAttributeManager() !== null && !('pathTesselator' in layer.state);\n    }\n    getShaders(extension) {\n        if (!extension.isEnabled(this)) {\n            return null;\n        }\n        return {\n            modules: [extension.opts.pattern && patternShaders].filter(Boolean)\n        };\n    }\n    initializeState(context, extension) {\n        if (!extension.isEnabled(this)) {\n            return;\n        }\n        const attributeManager = this.getAttributeManager();\n        if (extension.opts.pattern) {\n            attributeManager.add({\n                fillPatternFrames: {\n                    size: 4,\n                    accessor: 'getFillPattern',\n                    transform: extension.getPatternFrame.bind(this),\n                    shaderAttributes: {\n                        fillPatternFrames: {\n                            divisor: 0\n                        },\n                        instanceFillPatternFrames: {\n                            divisor: 1\n                        }\n                    }\n                },\n                fillPatternScales: {\n                    size: 1,\n                    accessor: 'getFillPatternScale',\n                    defaultValue: 1,\n                    shaderAttributes: {\n                        fillPatternScales: {\n                            divisor: 0\n                        },\n                        instanceFillPatternScales: {\n                            divisor: 1\n                        }\n                    }\n                },\n                fillPatternOffsets: {\n                    size: 2,\n                    accessor: 'getFillPatternOffset',\n                    shaderAttributes: {\n                        fillPatternOffsets: {\n                            divisor: 0\n                        },\n                        instanceFillPatternOffsets: {\n                            divisor: 1\n                        }\n                    }\n                }\n            });\n        }\n        this.setState({\n            emptyTexture: this.context.device.createTexture({\n                data: new Uint8Array(4),\n                width: 1,\n                height: 1\n            })\n        });\n    }\n    updateState({ props, oldProps }, extension) {\n        if (!extension.isEnabled(this)) {\n            return;\n        }\n        if (props.fillPatternMapping && props.fillPatternMapping !== oldProps.fillPatternMapping) {\n            this.getAttributeManager().invalidate('getFillPattern');\n        }\n    }\n    draw(params, extension) {\n        if (!extension.isEnabled(this)) {\n            return;\n        }\n        const { fillPatternAtlas } = this.props;\n        this.setModuleParameters({\n            fillPatternTexture: fillPatternAtlas || this.state.emptyTexture\n        });\n    }\n    finalizeState() {\n        const emptyTexture = this.state.emptyTexture;\n        emptyTexture?.delete();\n    }\n    getPatternFrame(name) {\n        const { fillPatternMapping } = this.getCurrentLayer().props;\n        const def = fillPatternMapping && fillPatternMapping[name];\n        return def ? [def.x, def.y, def.width, def.height] : [0, 0, 0, 0];\n    }\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { LayerExtension } from '@deck.gl/core';\nimport { glsl } from \"../utils/syntax-tags.js\";\nconst defaultProps = {\n    clipBounds: [0, 0, 1, 1],\n    clipByInstance: undefined\n};\nconst shaderFunction = `\nuniform vec4 clip_bounds;\nbool clip_isInBounds(vec2 position) {\nreturn position.x >= clip_bounds[0] && position.y >= clip_bounds[1] && position.x < clip_bounds[2] && position.y < clip_bounds[3];\n}\n`;\n/*\n * The vertex-shader version clips geometries by their anchor position\n * e.g. ScatterplotLayer - show if the center of a circle is within bounds\n */\nconst shaderModuleVs = {\n    name: 'clip-vs',\n    vs: shaderFunction\n};\nconst injectionVs = {\n    'vs:#decl': `\nout float clip_isVisible;\n`,\n    'vs:DECKGL_FILTER_GL_POSITION': `\nclip_isVisible = float(clip_isInBounds(geometry.worldPosition.xy));\n`,\n    'fs:#decl': `\nin float clip_isVisible;\n`,\n    'fs:DECKGL_FILTER_COLOR': `\nif (clip_isVisible < 0.5) discard;\n`\n};\n/*\n * The fragment-shader version clips pixels at the bounds\n * e.g. PolygonLayer - show the part of the polygon that intersect with the bounds\n */\nconst shaderModuleFs = {\n    name: 'clip-fs',\n    fs: shaderFunction\n};\nconst injectionFs = {\n    'vs:#decl': `\nout vec2 clip_commonPosition;\n`,\n    'vs:DECKGL_FILTER_GL_POSITION': `\nclip_commonPosition = geometry.position.xy;\n`,\n    'fs:#decl': `\nin vec2 clip_commonPosition;\n`,\n    'fs:DECKGL_FILTER_COLOR': `\nif (!clip_isInBounds(clip_commonPosition)) discard;\n`\n};\n/** Adds support for clipping rendered layers by rectangular bounds. */\nexport default class ClipExtension extends LayerExtension {\n    static { this.defaultProps = defaultProps; }\n    static { this.extensionName = 'ClipExtension'; }\n    getShaders() {\n        // If `clipByInstance: true`, the entire object is shown/hidden based on its anchor position (done by vertex shader)\n        // Otherwise, the object is trimmed by the clip bounds (done by fragment shader)\n        // Default behavior: consider a layer instanced if it has attribute `instancePositions`\n        let clipByInstance = 'instancePositions' in this.getAttributeManager().attributes;\n        // Users can override by setting the `clipByInstance` prop\n        if (this.props.clipByInstance !== undefined) {\n            clipByInstance = Boolean(this.props.clipByInstance);\n        }\n        this.state.clipByInstance = clipByInstance;\n        return clipByInstance\n            ? {\n                modules: [shaderModuleVs],\n                inject: injectionVs\n            }\n            : {\n                modules: [shaderModuleFs],\n                inject: injectionFs\n            };\n    }\n    /* eslint-disable camelcase */\n    draw({ uniforms }) {\n        const { clipBounds } = this.props;\n        if (this.state.clipByInstance) {\n            uniforms.clip_bounds = clipBounds;\n        }\n        else {\n            const corner0 = this.projectPosition([clipBounds[0], clipBounds[1], 0]);\n            const corner1 = this.projectPosition([clipBounds[2], clipBounds[3], 0]);\n            uniforms.clip_bounds = [\n                Math.min(corner0[0], corner1[0]),\n                Math.min(corner0[1], corner1[1]),\n                Math.max(corner0[0], corner1[0]),\n                Math.max(corner0[1], corner1[1])\n            ];\n        }\n    }\n}\n", "import { project } from '@deck.gl/core';\nimport { glsl } from \"../utils/syntax-tags.js\";\nconst vs = `\n#ifdef NON_INSTANCED_MODEL\nin float collisionPriorities;\n#else\nin float instanceCollisionPriorities;\n#endif\nuniform sampler2D collision_texture;\nuniform bool collision_sort;\nuniform bool collision_enabled;\nvec2 collision_getCoords(vec4 position) {\nvec4 collision_clipspace = project_common_position_to_clipspace(position);\nreturn (1.0 + collision_clipspace.xy / collision_clipspace.w) / 2.0;\n}\nfloat collision_match(vec2 tex, vec3 pickingColor) {\nvec4 collision_pickingColor = texture(collision_texture, tex);\nfloat delta = dot(abs(collision_pickingColor.rgb - pickingColor), vec3(1.0));\nfloat e = 0.001;\nreturn step(delta, e);\n}\nfloat collision_isVisible(vec2 texCoords, vec3 pickingColor) {\nif (!collision_enabled) {\nreturn 1.0;\n}\nconst int N = 2;\nfloat accumulator = 0.0;\nvec2 step = vec2(1.0 / project_uViewportSize);\nconst float floatN = float(N);\nvec2 delta = -floatN * step;\nfor(int i = -N; i <= N; i++) {\ndelta.x = -step.x * floatN;\nfor(int j = -N; j <= N; j++) {\naccumulator += collision_match(texCoords + delta, pickingColor);\ndelta.x += step.x;\n}\ndelta.y += step.y;\n}\nfloat W = 2.0 * floatN + 1.0;\nreturn pow(accumulator / (W * W), 2.2);\n}\n`;\nconst inject = {\n    'vs:#decl': `\nfloat collision_fade = 1.0;\n`,\n    'vs:DECKGL_FILTER_GL_POSITION': `\nif (collision_sort) {\n#ifdef NON_INSTANCED_MODEL\nfloat collisionPriority = collisionPriorities;\n#else\nfloat collisionPriority = instanceCollisionPriorities;\n#endif\nposition.z = -0.001 * collisionPriority * position.w;\n}\nif (collision_enabled) {\nvec4 collision_common_position = project_position(vec4(geometry.worldPosition, 1.0));\nvec2 collision_texCoords = collision_getCoords(collision_common_position);\ncollision_fade = collision_isVisible(collision_texCoords, geometry.pickingColor / 255.0);\nif (collision_fade < 0.0001) {\nposition = vec4(0.0, 0.0, 2.0, 1.0);\n}\n}\n`,\n    'vs:DECKGL_FILTER_COLOR': `\ncolor.a *= collision_fade;\n`\n};\nconst getCollisionUniforms = (opts, uniforms) => {\n    if (!opts || !('dummyCollisionMap' in opts)) {\n        return {};\n    }\n    const { collisionFBO, drawToCollisionMap, dummyCollisionMap } = opts;\n    return {\n        collision_sort: Boolean(drawToCollisionMap),\n        // @ts-ignore (v9 not sure why this isn't allowed now)\n        collision_texture: !drawToCollisionMap && collisionFBO ? collisionFBO.colorAttachments[0] : dummyCollisionMap\n    };\n};\n// @ts-expect-error\nexport default {\n    name: 'collision',\n    dependencies: [project],\n    vs,\n    inject,\n    getUniforms: getCollisionUniforms\n};\n", "import { _LayersPass as LayersPass } from '@deck.gl/core';\nexport default class CollisionFilterPass extends LayersPass {\n    renderCollisionMap(target, options) {\n        const padding = 1;\n        const clearColor = [0, 0, 0, 0];\n        const scissorRect = [padding, padding, target.width - 2 * padding, target.height - 2 * padding];\n        this.render({ ...options, clearColor, scissorRect, target, pass: 'collision' });\n    }\n    getLayerParameters(layer, layerIndex, viewport) {\n        return { ...layer.props.parameters, blend: false, depthRange: [0, 1], depthTest: true };\n    }\n    getModuleParameters() {\n        // Draw picking colors into collision FBO\n        return {\n            drawToCollisionMap: true,\n            picking: {\n                isActive: 1,\n                isAttribute: false\n            },\n            lightSources: {}\n        };\n    }\n}\n", "import { equals } from '@math.gl/core';\nimport { _deepEqual as deepEqual } from '@deck.gl/core';\nimport CollisionFilterPass from \"./collision-filter-pass.js\";\n// Factor by which to downscale Collision FBO relative to canvas\nconst DOWNSCALE = 2;\nexport default class CollisionFilterEffect {\n    constructor() {\n        this.id = 'collision-filter-effect';\n        this.props = null;\n        this.useInPicking = true;\n        this.order = 1;\n        this.channels = {};\n        this.collisionFBOs = {};\n    }\n    setup(context) {\n        this.context = context;\n        const { device } = context;\n        this.dummyCollisionMap = device.createTexture({ width: 1, height: 1 });\n        this.collisionFilterPass = new CollisionFilterPass(device, { id: 'default-collision-filter' });\n    }\n    preRender({ effects: allEffects, layers, layerFilter, viewports, onViewportActive, views, isPicking, preRenderStats = {} }) {\n        // This can only be called in preRender() after setup() where context is populated\n        const { device } = this.context;\n        if (isPicking) {\n            // Do not update on picking pass\n            return;\n        }\n        const collisionLayers = layers.filter(\n        // @ts-ignore\n        ({ props: { visible, collisionEnabled } }) => visible && collisionEnabled);\n        if (collisionLayers.length === 0) {\n            this.channels = {};\n            return;\n        }\n        // Detect if mask has rendered. TODO: better dependency system for Effects\n        const effects = allEffects?.filter(e => e.useInPicking && preRenderStats[e.id]);\n        const maskEffectRendered = preRenderStats['mask-effect']?.didRender;\n        // Collect layers to render\n        const channels = this._groupByCollisionGroup(device, collisionLayers);\n        const viewport = viewports[0];\n        const viewportChanged = !this.lastViewport || !this.lastViewport.equals(viewport) || maskEffectRendered;\n        // Resize framebuffers to match canvas\n        for (const collisionGroup in channels) {\n            const collisionFBO = this.collisionFBOs[collisionGroup];\n            const renderInfo = channels[collisionGroup];\n            // @ts-expect-error TODO - assuming WebGL context\n            const [width, height] = device.canvasContext.getPixelSize();\n            collisionFBO.resize({\n                width: width / DOWNSCALE,\n                height: height / DOWNSCALE\n            });\n            this._render(renderInfo, {\n                effects,\n                layerFilter,\n                onViewportActive,\n                views,\n                viewport,\n                viewportChanged\n            });\n        }\n        // debugFBO(this.collisionFBOs[Object.keys(channels)[0]], {minimap: true});\n    }\n    _render(renderInfo, { effects, layerFilter, onViewportActive, views, viewport, viewportChanged }) {\n        const { collisionGroup } = renderInfo;\n        const oldRenderInfo = this.channels[collisionGroup];\n        if (!oldRenderInfo) {\n            return;\n        }\n        const needsRender = viewportChanged ||\n            // If render info is new\n            renderInfo === oldRenderInfo ||\n            // If sublayers have changed\n            !deepEqual(oldRenderInfo.layers, renderInfo.layers, 1) ||\n            // If a sublayer's bounds have been updated\n            renderInfo.layerBounds.some((b, i) => !equals(b, oldRenderInfo.layerBounds[i])) ||\n            // If a sublayer's isLoaded state has been updated\n            renderInfo.allLayersLoaded !== oldRenderInfo.allLayersLoaded ||\n            // Some prop is in transition\n            renderInfo.layers.some(layer => layer.props.transitions);\n        this.channels[collisionGroup] = renderInfo;\n        if (needsRender) {\n            this.lastViewport = viewport;\n            const collisionFBO = this.collisionFBOs[collisionGroup];\n            // Rerender collision FBO\n            this.collisionFilterPass.renderCollisionMap(collisionFBO, {\n                pass: 'collision-filter',\n                isPicking: true,\n                layers: renderInfo.layers,\n                effects,\n                layerFilter,\n                viewports: viewport ? [viewport] : [],\n                onViewportActive,\n                views,\n                moduleParameters: {\n                    // To avoid feedback loop forming between Framebuffer and active Texture.\n                    dummyCollisionMap: this.dummyCollisionMap,\n                    // @ts-expect-error TODO - assuming WebGL context\n                    devicePixelRatio: collisionFBO.device.canvasContext.getDevicePixelRatio() / DOWNSCALE\n                }\n            });\n        }\n    }\n    /**\n     * Group layers by collisionGroup\n     * Returns a map from collisionGroup to render info\n     */\n    _groupByCollisionGroup(device, collisionLayers) {\n        const channelMap = {};\n        for (const layer of collisionLayers) {\n            const { collisionGroup } = layer.props;\n            let channelInfo = channelMap[collisionGroup];\n            if (!channelInfo) {\n                channelInfo = { collisionGroup, layers: [], layerBounds: [], allLayersLoaded: true };\n                channelMap[collisionGroup] = channelInfo;\n            }\n            channelInfo.layers.push(layer);\n            channelInfo.layerBounds.push(layer.getBounds());\n            if (!layer.isLoaded) {\n                channelInfo.allLayersLoaded = false;\n            }\n        }\n        // Create any new passes and remove any old ones\n        for (const collisionGroup of Object.keys(channelMap)) {\n            if (!this.collisionFBOs[collisionGroup]) {\n                this.createFBO(device, collisionGroup);\n            }\n            if (!this.channels[collisionGroup]) {\n                this.channels[collisionGroup] = channelMap[collisionGroup];\n            }\n        }\n        for (const collisionGroup of Object.keys(this.collisionFBOs)) {\n            if (!channelMap[collisionGroup]) {\n                this.destroyFBO(collisionGroup);\n            }\n        }\n        return channelMap;\n    }\n    getModuleParameters(layer) {\n        const { collisionGroup } = layer.props;\n        const { collisionFBOs, dummyCollisionMap } = this;\n        return { collisionFBO: collisionFBOs[collisionGroup], dummyCollisionMap: dummyCollisionMap };\n    }\n    cleanup() {\n        if (this.dummyCollisionMap) {\n            this.dummyCollisionMap.delete();\n            this.dummyCollisionMap = undefined;\n        }\n        this.channels = {};\n        for (const collisionGroup of Object.keys(this.collisionFBOs)) {\n            this.destroyFBO(collisionGroup);\n        }\n        this.collisionFBOs = {};\n        this.lastViewport = undefined;\n    }\n    createFBO(device, collisionGroup) {\n        // @ts-expect-error\n        const { width, height } = device.gl.canvas;\n        const collisionMap = device.createTexture({\n            format: 'rgba8unorm',\n            width,\n            height,\n            sampler: {\n                minFilter: 'nearest',\n                magFilter: 'nearest',\n                addressModeU: 'clamp-to-edge',\n                addressModeV: 'clamp-to-edge'\n            }\n        });\n        // @ts-ignore\n        const depthStencilAttachment = device.createTexture({\n            format: 'depth16unorm',\n            width,\n            height,\n            mipmaps: false,\n            // TODO fix getWebGLTextureParameters() in luma to avoid passing deprecated parameters\n            dataFormat: 6402, // gl.DEPTH_COMPONENT\n            type: 5125 // gl.UNSIGNED_INT\n        });\n        this.collisionFBOs[collisionGroup] = device.createFramebuffer({\n            id: `collision-${collisionGroup}`,\n            width,\n            height,\n            colorAttachments: [collisionMap],\n            depthStencilAttachment\n        });\n    }\n    destroyFBO(collisionGroup) {\n        const fbo = this.collisionFBOs[collisionGroup];\n        fbo.colorAttachments[0]?.destroy();\n        fbo.depthStencilAttachment?.destroy();\n        fbo.destroy();\n        delete this.collisionFBOs[collisionGroup];\n    }\n}\n", "import { LayerExtension } from '@deck.gl/core';\nimport collision from \"./shader-module.js\";\nimport CollisionFilterEffect from \"./collision-filter-effect.js\";\nconst defaultProps = {\n    getCollisionPriority: { type: 'accessor', value: 0 },\n    collisionEnabled: true,\n    collisionGroup: { type: 'string', value: 'default' },\n    collisionTestProps: {}\n};\n/** Allows layers to hide overlapping objects. */\nexport default class CollisionFilterExtension extends LayerExtension {\n    static { this.defaultProps = defaultProps; }\n    static { this.extensionName = 'CollisionFilterExtension'; }\n    getShaders() {\n        return { modules: [collision] };\n    }\n    /* eslint-disable camelcase */\n    draw({ uniforms, context, moduleParameters }) {\n        const { collisionEnabled } = this.props;\n        const { collisionFBO, drawToCollisionMap } = moduleParameters;\n        const enabled = collisionEnabled && Boolean(collisionFBO);\n        uniforms.collision_enabled = enabled;\n        if (drawToCollisionMap) {\n            // Override any props with those defined in collisionTestProps\n            // @ts-ignore\n            this.props = this.clone(this.props.collisionTestProps).props;\n        }\n    }\n    initializeState(context, extension) {\n        if (this.getAttributeManager() === null) {\n            return;\n        }\n        this.context.deck?._addDefaultEffect(new CollisionFilterEffect());\n        const attributeManager = this.getAttributeManager();\n        attributeManager.add({\n            collisionPriorities: {\n                size: 1,\n                accessor: 'getCollisionPriority',\n                shaderAttributes: {\n                    collisionPriorities: { divisor: 0 },\n                    instanceCollisionPriorities: { divisor: 1 }\n                }\n            }\n        });\n    }\n    getNeedsPickingBuffer() {\n        return this.props.collisionEnabled;\n    }\n}\n", "import { project } from '@deck.gl/core';\nimport { glsl } from \"../utils/syntax-tags.js\";\nconst vs = `\nuniform vec4 mask_bounds;\nuniform bool mask_maskByInstance;\nvec2 mask_getCoords(vec4 position) {\nreturn (position.xy - mask_bounds.xy) / (mask_bounds.zw - mask_bounds.xy);\n}\n`;\nconst fs = `\nuniform sampler2D mask_texture;\nuniform int mask_channel;\nuniform bool mask_enabled;\nuniform bool mask_inverted;\nbool mask_isInBounds(vec2 texCoords) {\nif (!mask_enabled) {\nreturn true;\n}\nvec4 maskColor = texture(mask_texture, texCoords);\nfloat maskValue = 1.0;\nif (mask_channel == 0) {\nmaskValue = maskColor.r;\n} else if (mask_channel == 1) {\nmaskValue = maskColor.g;\n} else if (mask_channel == 2) {\nmaskValue = maskColor.b;\n} else if (mask_channel == 3) {\nmaskValue = maskColor.a;\n}\nif (mask_inverted) {\nreturn maskValue >= 0.5;\n} else {\nreturn maskValue < 0.5;\n}\n}\n`;\nconst inject = {\n    'vs:#decl': `\nout vec2 mask_texCoords;\n`,\n    'vs:#main-end': `\nvec4 mask_common_position;\nif (mask_maskByInstance) {\nmask_common_position = project_position(vec4(geometry.worldPosition, 1.0));\n} else {\nmask_common_position = geometry.position;\n}\nmask_texCoords = mask_getCoords(mask_common_position);\n`,\n    'fs:#decl': `\nin vec2 mask_texCoords;\n`,\n    'fs:#main-start': `\nif (mask_enabled) {\nbool mask = mask_isInBounds(mask_texCoords);\nfragColor = texture(mask_texture, mask_texCoords);\nif (!mask) discard;\n}\n`\n};\n/* eslint-disable camelcase */\nconst getMaskUniforms = (opts) => {\n    if (opts && 'maskMap' in opts) {\n        return {\n            mask_texture: opts.maskMap\n        };\n    }\n    return {};\n};\nexport default {\n    name: 'mask',\n    dependencies: [project],\n    vs,\n    fs,\n    inject,\n    getUniforms: getMaskUniforms\n};\n", "import { _LayersPass as LayersPass } from '@deck.gl/core';\nconst MASK_BLENDING = {\n    blendColorOperation: 'subtract',\n    blendColorSrcFactor: 'zero',\n    blendColorDstFactor: 'one',\n    blendAlphaOperation: 'subtract',\n    blendAlphaSrcFactor: 'zero',\n    blendAlphaDstFactor: 'one'\n};\nexport default class MaskPass extends LayersPass {\n    constructor(device, props) {\n        super(device, props);\n        const { mapSize = 2048 } = props;\n        this.maskMap = device.createTexture({\n            format: 'rgba8unorm',\n            width: mapSize,\n            height: mapSize,\n            sampler: {\n                minFilter: 'linear',\n                magFilter: 'linear',\n                addressModeU: 'clamp-to-edge',\n                addressModeV: 'clamp-to-edge'\n            }\n        });\n        this.fbo = device.createFramebuffer({\n            id: 'maskmap',\n            width: mapSize,\n            height: mapSize,\n            colorAttachments: [this.maskMap]\n        });\n    }\n    render(options) {\n        const colorMask = 2 ** options.channel;\n        const clearColor = [255, 255, 255, 255];\n        super.render({ ...options, clearColor, colorMask, target: this.fbo, pass: 'mask' });\n    }\n    getLayerParameters(layer, layerIndex, viewport) {\n        return {\n            ...layer.props.parameters,\n            blend: true,\n            depthTest: false,\n            ...MASK_BLENDING\n        };\n    }\n    shouldDrawLayer(layer) {\n        return layer.props.operation.includes('mask');\n    }\n    delete() {\n        this.fbo.delete();\n        this.maskMap.delete();\n    }\n}\n", "import { WebMercatorViewport, OrthographicViewport } from '@deck.gl/core';\n/*\n * Compute the union of bounds from multiple layers\n * Returns bounds in CARTESIAN coordinates\n */\nexport function joinLayerBounds(\n/** The layers to combine */\nlayers, \n/** A Viewport instance that is used to determine the type of the view */\nviewport) {\n    // Join the bounds of layer data\n    const bounds = [Infinity, Infinity, -Infinity, -Infinity];\n    for (const layer of layers) {\n        const layerBounds = layer.getBounds();\n        if (layerBounds) {\n            const bottomLeftCommon = layer.projectPosition(layerBounds[0], { viewport, autoOffset: false });\n            const topRightCommon = layer.projectPosition(layerBounds[1], { viewport, autoOffset: false });\n            bounds[0] = Math.min(bounds[0], bottomLeftCommon[0]);\n            bounds[1] = Math.min(bounds[1], bottomLeftCommon[1]);\n            bounds[2] = Math.max(bounds[2], topRightCommon[0]);\n            bounds[3] = Math.max(bounds[3], topRightCommon[1]);\n        }\n    }\n    if (Number.isFinite(bounds[0])) {\n        return bounds;\n    }\n    return null;\n}\nconst MAX_VIEWPORT_SIZE = 2048;\n/** Construct a viewport that just covers the target bounds. Used for rendering to common space indexed texture. */\nexport function makeViewport(opts) {\n    const { bounds, viewport, border = 0 } = opts;\n    const { isGeospatial } = viewport;\n    if (bounds[2] <= bounds[0] || bounds[3] <= bounds[1]) {\n        return null;\n    }\n    const centerWorld = viewport.unprojectPosition([\n        (bounds[0] + bounds[2]) / 2,\n        (bounds[1] + bounds[3]) / 2,\n        0\n    ]);\n    let { width, height, zoom } = opts;\n    if (zoom === undefined) {\n        // Use width and height to determine zoom\n        width = width - border * 2;\n        height = height - border * 2;\n        const scale = Math.min(width / (bounds[2] - bounds[0]), height / (bounds[3] - bounds[1]));\n        zoom = Math.min(Math.log2(scale), 20);\n    }\n    else if (!width || !height) {\n        // Use zoom to determine width and height\n        const scale = 2 ** zoom;\n        width = Math.round(Math.abs(bounds[2] - bounds[0]) * scale);\n        height = Math.round(Math.abs(bounds[3] - bounds[1]) * scale);\n        const maxSize = MAX_VIEWPORT_SIZE - border * 2;\n        if (width > maxSize || height > maxSize) {\n            const r = maxSize / Math.max(width, height);\n            width = Math.round(width * r);\n            height = Math.round(height * r);\n            zoom += Math.log2(r);\n        }\n    }\n    // TODO - find a more generic way to construct this viewport\n    // Geospatial viewports may not be web-mercator\n    return isGeospatial\n        ? new WebMercatorViewport({\n            id: viewport.id,\n            x: border,\n            y: border,\n            width,\n            height,\n            longitude: centerWorld[0],\n            latitude: centerWorld[1],\n            zoom,\n            orthographic: true\n        })\n        : new OrthographicViewport({\n            id: viewport.id,\n            x: border,\n            y: border,\n            width,\n            height,\n            target: centerWorld,\n            zoom,\n            flipY: false\n        });\n}\n/** Returns viewport bounds in CARTESIAN coordinates */\nexport function getViewportBounds(viewport, zRange) {\n    // Viewport bounds in world coordinates\n    let viewportBoundsWorld;\n    if (zRange && zRange.length === 2) {\n        const [minZ, maxZ] = zRange;\n        const bounds0 = viewport.getBounds({ z: minZ });\n        const bounds1 = viewport.getBounds({ z: maxZ });\n        viewportBoundsWorld = [\n            Math.min(bounds0[0], bounds1[0]),\n            Math.min(bounds0[1], bounds1[1]),\n            Math.max(bounds0[2], bounds1[2]),\n            Math.max(bounds0[3], bounds1[3])\n        ];\n    }\n    else {\n        viewportBoundsWorld = viewport.getBounds();\n    }\n    // Viewport bounds in cartesian coordinates\n    const viewportBottomLeftCommon = viewport.projectPosition(viewportBoundsWorld.slice(0, 2));\n    const viewportTopRightCommon = viewport.projectPosition(viewportBoundsWorld.slice(2, 4));\n    return [\n        viewportBottomLeftCommon[0],\n        viewportBottomLeftCommon[1],\n        viewportTopRightCommon[0],\n        viewportTopRightCommon[1]\n    ];\n}\n/*\n * Determine the common space bounds that best cover the given data for the given viewport\n * Returns bounds in CARTESIAN coordinates\n */\nexport function getRenderBounds(layerBounds, viewport, zRange) {\n    if (!layerBounds) {\n        return [0, 0, 1, 1];\n    }\n    const viewportBounds = getViewportBounds(viewport, zRange);\n    // Expand viewport bounds by 2X. Heurestically chosen to avoid masking\n    // errors when mask is partially out of view\n    const paddedBounds = doubleBounds(viewportBounds);\n    // When bounds of the layers are smaller than the viewport bounds simply use\n    // mask bounds, so as to maximize resolution & avoid rerenders\n    if (layerBounds[2] - layerBounds[0] <= paddedBounds[2] - paddedBounds[0] &&\n        layerBounds[3] - layerBounds[1] <= paddedBounds[3] - paddedBounds[1]) {\n        return layerBounds;\n    }\n    // As viewport shrinks, to avoid pixelation along mask edges\n    // we need to reduce the bounds and only render the visible portion\n    // of the mask.\n    // We pad the viewport bounds to capture the section\n    // of the mask just outside the viewport to correctly maskByInstance.\n    // Intersect mask & padded viewport bounds\n    return [\n        Math.max(layerBounds[0], paddedBounds[0]),\n        Math.max(layerBounds[1], paddedBounds[1]),\n        Math.min(layerBounds[2], paddedBounds[2]),\n        Math.min(layerBounds[3], paddedBounds[3])\n    ];\n}\nfunction doubleBounds(bounds) {\n    const dx = bounds[2] - bounds[0];\n    const dy = bounds[3] - bounds[1];\n    const centerX = (bounds[0] + bounds[2]) / 2;\n    const centerY = (bounds[1] + bounds[3]) / 2;\n    return [centerX - dx, centerY - dy, centerX + dx, centerY + dy];\n}\n", "import { log } from '@deck.gl/core';\nimport { equals } from '@math.gl/core';\nimport MaskPass from \"./mask-pass.js\";\nimport { joinLayerBounds, getRenderBounds, makeViewport } from \"../utils/projection-utils.js\";\n// Class to manage mask effect\nexport default class MaskEffect {\n    constructor() {\n        this.id = 'mask-effect';\n        this.props = null;\n        this.useInPicking = true;\n        this.order = 0;\n        this.channels = [];\n        this.masks = null;\n    }\n    setup({ device }) {\n        this.dummyMaskMap = device.createTexture({\n            width: 1,\n            height: 1\n        });\n        this.maskPass = new MaskPass(device, { id: 'default-mask' });\n        this.maskMap = this.maskPass.maskMap;\n    }\n    preRender({ layers, layerFilter, viewports, onViewportActive, views, isPicking }) {\n        let didRender = false;\n        if (isPicking) {\n            // Do not update on picking pass\n            return { didRender };\n        }\n        const maskLayers = layers.filter(l => l.props.visible && l.props.operation.includes('mask'));\n        if (maskLayers.length === 0) {\n            this.masks = null;\n            this.channels.length = 0;\n            return { didRender };\n        }\n        this.masks = {};\n        // Map layers to channels\n        const channelMap = this._sortMaskChannels(maskLayers);\n        // TODO - support multiple views\n        const viewport = viewports[0];\n        const viewportChanged = !this.lastViewport || !this.lastViewport.equals(viewport);\n        if (viewport.resolution !== undefined) {\n            log.warn('MaskExtension is not supported in GlobeView')();\n            return { didRender };\n        }\n        for (const maskId in channelMap) {\n            const result = this._renderChannel(channelMap[maskId], {\n                layerFilter,\n                onViewportActive,\n                views,\n                viewport,\n                viewportChanged\n            });\n            didRender ||= result;\n        }\n        // debugFBO(this.maskMap, {opaque: true});\n        return { didRender };\n    }\n    /* eslint-disable-next-line complexity */\n    _renderChannel(channelInfo, { layerFilter, onViewportActive, views, viewport, viewportChanged }) {\n        let didRender = false;\n        const oldChannelInfo = this.channels[channelInfo.index];\n        if (!oldChannelInfo) {\n            return didRender;\n        }\n        const maskChanged = \n        // If a channel is new\n        channelInfo === oldChannelInfo ||\n            // If sublayers have changed\n            channelInfo.layers.length !== oldChannelInfo.layers.length ||\n            channelInfo.layers.some((layer, i) => \n            // Layer instance is updated\n            // Layer props might have changed\n            // Undetermined props could have an effect on the output geometry of a mask layer,\n            // for example getRadius+updateTriggers, radiusScale, modelMatrix\n            layer !== oldChannelInfo.layers[i] ||\n                // Some prop is in transition\n                layer.props.transitions) ||\n            // If a sublayer's positions have been updated, the cached bounds will change shallowly\n            channelInfo.layerBounds.some((b, i) => b !== oldChannelInfo.layerBounds[i]);\n        channelInfo.bounds = oldChannelInfo.bounds;\n        channelInfo.maskBounds = oldChannelInfo.maskBounds;\n        this.channels[channelInfo.index] = channelInfo;\n        if (maskChanged || viewportChanged) {\n            // Recalculate mask bounds\n            this.lastViewport = viewport;\n            const layerBounds = joinLayerBounds(channelInfo.layers, viewport);\n            channelInfo.bounds = layerBounds && getRenderBounds(layerBounds, viewport);\n            if (maskChanged || !equals(channelInfo.bounds, oldChannelInfo.bounds)) {\n                // Rerender mask FBO\n                const { maskPass, maskMap } = this;\n                const maskViewport = layerBounds &&\n                    makeViewport({\n                        bounds: channelInfo.bounds,\n                        viewport,\n                        width: maskMap.width,\n                        height: maskMap.height,\n                        border: 1\n                    });\n                channelInfo.maskBounds = maskViewport ? maskViewport.getBounds() : [0, 0, 1, 1];\n                // @ts-ignore (2532) This method is only called from preRender where maskPass is defined\n                maskPass.render({\n                    pass: 'mask',\n                    channel: channelInfo.index,\n                    layers: channelInfo.layers,\n                    layerFilter,\n                    viewports: maskViewport ? [maskViewport] : [],\n                    onViewportActive,\n                    views,\n                    moduleParameters: {\n                        devicePixelRatio: 1\n                    }\n                });\n                didRender = true;\n            }\n        }\n        // @ts-ignore (2532) This method is only called from preRender where masks is defined\n        this.masks[channelInfo.id] = {\n            index: channelInfo.index,\n            bounds: channelInfo.maskBounds,\n            coordinateOrigin: channelInfo.coordinateOrigin,\n            coordinateSystem: channelInfo.coordinateSystem\n        };\n        return didRender;\n    }\n    /**\n     * Find a channel to render each mask into\n     * If a maskId already exists, diff and update the existing channel\n     * Otherwise replace a removed mask\n     * Otherwise create a new channel\n     * Returns a map from mask layer id to channel info\n     */\n    _sortMaskChannels(maskLayers) {\n        const channelMap = {};\n        let channelCount = 0;\n        for (const layer of maskLayers) {\n            const { id } = layer.root;\n            let channelInfo = channelMap[id];\n            if (!channelInfo) {\n                if (++channelCount > 4) {\n                    log.warn('Too many mask layers. The max supported is 4')();\n                    continue; // eslint-disable-line no-continue\n                }\n                channelInfo = {\n                    id,\n                    index: this.channels.findIndex(c => c?.id === id),\n                    layers: [],\n                    layerBounds: [],\n                    coordinateOrigin: layer.root.props.coordinateOrigin,\n                    coordinateSystem: layer.root.props.coordinateSystem\n                };\n                channelMap[id] = channelInfo;\n            }\n            channelInfo.layers.push(layer);\n            channelInfo.layerBounds.push(layer.getBounds());\n        }\n        for (let i = 0; i < 4; i++) {\n            const channelInfo = this.channels[i];\n            if (!channelInfo || !(channelInfo.id in channelMap)) {\n                // The mask id at this channel no longer exists\n                this.channels[i] = null;\n            }\n        }\n        for (const maskId in channelMap) {\n            const channelInfo = channelMap[maskId];\n            if (channelInfo.index < 0) {\n                channelInfo.index = this.channels.findIndex(c => !c);\n                this.channels[channelInfo.index] = channelInfo;\n            }\n        }\n        return channelMap;\n    }\n    getModuleParameters() {\n        return {\n            maskMap: this.masks ? this.maskMap : this.dummyMaskMap,\n            maskChannels: this.masks\n        };\n    }\n    cleanup() {\n        if (this.dummyMaskMap) {\n            this.dummyMaskMap.delete();\n            this.dummyMaskMap = undefined;\n        }\n        if (this.maskPass) {\n            this.maskPass.delete();\n            this.maskPass = undefined;\n            this.maskMap = undefined;\n        }\n        this.lastViewport = undefined;\n        this.masks = null;\n        this.channels.length = 0;\n    }\n}\n", "import { COORDINATE_SYSTEM, LayerExtension, log } from '@deck.gl/core';\nimport mask from \"./shader-module.js\";\nimport MaskEffect from \"./mask-effect.js\";\nconst defaultProps = {\n    maskId: '',\n    maskByInstance: undefined,\n    maskInverted: false\n};\n/** Allows layers to show/hide objects by a geofence. */\nexport default class MaskExtension extends LayerExtension {\n    static { this.defaultProps = defaultProps; }\n    static { this.extensionName = 'MaskExtension'; }\n    initializeState() {\n        this.context.deck?._addDefaultEffect(new MaskEffect());\n    }\n    getShaders() {\n        // Infer by geometry if 'maskByInstance' prop isn't explictly set\n        let maskByInstance = 'instancePositions' in this.getAttributeManager().attributes;\n        // Users can override by setting the `maskByInstance` prop\n        if (this.props.maskByInstance !== undefined) {\n            maskByInstance = Boolean(this.props.maskByInstance);\n        }\n        this.state.maskByInstance = maskByInstance;\n        return {\n            modules: [mask]\n        };\n    }\n    /* eslint-disable camelcase */\n    draw({ uniforms, context, moduleParameters }) {\n        uniforms.mask_maskByInstance = this.state.maskByInstance;\n        const { maskId, maskInverted } = this.props;\n        const { maskChannels } = moduleParameters;\n        const { viewport } = context;\n        if (maskChannels && maskChannels[maskId]) {\n            const { index, bounds, coordinateOrigin: fromCoordinateOrigin } = maskChannels[maskId];\n            let { coordinateSystem: fromCoordinateSystem } = maskChannels[maskId];\n            uniforms.mask_enabled = true;\n            uniforms.mask_channel = index;\n            uniforms.mask_inverted = maskInverted;\n            if (fromCoordinateSystem === COORDINATE_SYSTEM.DEFAULT) {\n                fromCoordinateSystem = viewport.isGeospatial\n                    ? COORDINATE_SYSTEM.LNGLAT\n                    : COORDINATE_SYSTEM.CARTESIAN;\n            }\n            const opts = { modelMatrix: null, fromCoordinateOrigin, fromCoordinateSystem };\n            const bl = this.projectPosition([bounds[0], bounds[1], 0], opts);\n            const tr = this.projectPosition([bounds[2], bounds[3], 0], opts);\n            uniforms.mask_bounds = [bl[0], bl[1], tr[0], tr[1]];\n        }\n        else {\n            if (maskId) {\n                log.warn(`Could not find a mask layer with id: ${maskId}`)();\n            }\n            uniforms.mask_enabled = false;\n        }\n    }\n}\n", "/* eslint-disable camelcase */\nimport { project } from '@deck.gl/core';\nimport { glsl } from \"../utils/syntax-tags.js\";\n/** A model can have one of the following modes */\nexport const TERRAIN_MODE = {\n    NONE: 0,\n    /** A terrain layer rendering encoded ground elevation into the height map */\n    WRITE_HEIGHT_MAP: 1,\n    /** An offset layer reading encoded ground elevation from the height map */\n    USE_HEIGHT_MAP: 2,\n    /** A terrain layer rendering to screen, using the cover fbo overlaid with its own texture */\n    USE_COVER: 3,\n    /** A terrain layer rendering to screen, using the cover fbo as texture */\n    USE_COVER_ONLY: 4,\n    /** Draped layer is rendered into a texture, and never to screen */\n    SKIP: 5\n};\nconst TERRAIN_MODE_CONSTANTS = Object.keys(TERRAIN_MODE)\n    .map(key => `const float TERRAIN_MODE_${key} = ${TERRAIN_MODE[key]}.0;`)\n    .join('\\n');\n// @ts-expect-error\nexport const terrainModule = {\n    name: 'terrain',\n    dependencies: [project],\n    inject: {\n        'vs:#decl': `\nuniform float terrain_mode;\nuniform sampler2D terrain_map;\nuniform vec4 terrain_bounds;\nout vec3 commonPos;\n` + TERRAIN_MODE_CONSTANTS,\n        'vs:#main-start': `\nif (terrain_mode == TERRAIN_MODE_SKIP) {\ngl_Position = vec4(0.0);\nreturn;\n}\n`,\n        'vs:DECKGL_FILTER_GL_POSITION': `\ncommonPos = geometry.position.xyz;\nif (terrain_mode == TERRAIN_MODE_WRITE_HEIGHT_MAP) {\nvec2 texCoords = (commonPos.xy - terrain_bounds.xy) / terrain_bounds.zw;\nposition = vec4(texCoords * 2.0 - 1.0, 0.0, 1.0);\ncommonPos.z += project_uCommonOrigin.z;\n}\nif (terrain_mode == TERRAIN_MODE_USE_HEIGHT_MAP) {\nvec3 anchor = geometry.worldPosition;\nanchor.z = 0.0;\nvec3 anchorCommon = project_position(anchor);\nvec2 texCoords = (anchorCommon.xy - terrain_bounds.xy) / terrain_bounds.zw;\nif (texCoords.x >= 0.0 && texCoords.y >= 0.0 && texCoords.x <= 1.0 && texCoords.y <= 1.0) {\nfloat terrainZ = texture(terrain_map, texCoords).r;\ngeometry.position.z += terrainZ;\nposition = project_common_position_to_clipspace(geometry.position);\n}\n}\n`,\n        'fs:#decl': `\nuniform float terrain_mode;\nuniform sampler2D terrain_map;\nuniform vec4 terrain_bounds;\nin vec3 commonPos;\n` + TERRAIN_MODE_CONSTANTS,\n        'fs:#main-start': `\nif (terrain_mode == TERRAIN_MODE_WRITE_HEIGHT_MAP) {\nfragColor = vec4(commonPos.z, 0.0, 0.0, 1.0);\nreturn;\n}\n`,\n        'fs:DECKGL_FILTER_COLOR': `\nif ((terrain_mode == TERRAIN_MODE_USE_COVER) || (terrain_mode == TERRAIN_MODE_USE_COVER_ONLY)) {\nvec2 texCoords = (commonPos.xy - terrain_bounds.xy) / terrain_bounds.zw;\nvec4 pixel = texture(terrain_map, texCoords);\nif (terrain_mode == TERRAIN_MODE_USE_COVER_ONLY) {\ncolor = pixel;\n} else {\ncolor = pixel + color * (1.0 - pixel.a);\n}\nreturn;\n}\n`\n    },\n    // eslint-disable-next-line complexity\n    getUniforms: (opts = {}, uniforms) => {\n        if ('dummyHeightMap' in opts) {\n            const { drawToTerrainHeightMap, heightMap, heightMapBounds, dummyHeightMap, terrainCover, useTerrainHeightMap, terrainSkipRender } = opts;\n            const { project_uCommonOrigin } = uniforms;\n            let mode = terrainSkipRender ? TERRAIN_MODE.SKIP : TERRAIN_MODE.NONE;\n            // height map if case USE_HEIGHT_MAP, terrain cover if USE_COVER, otherwise empty\n            let sampler = dummyHeightMap;\n            // height map bounds if case USE_HEIGHT_MAP, terrain cover bounds if USE_COVER, otherwise null\n            let bounds = null;\n            if (drawToTerrainHeightMap) {\n                mode = TERRAIN_MODE.WRITE_HEIGHT_MAP;\n                bounds = heightMapBounds;\n            }\n            else if (useTerrainHeightMap && heightMap) {\n                mode = TERRAIN_MODE.USE_HEIGHT_MAP;\n                sampler = heightMap;\n                bounds = heightMapBounds;\n            }\n            else if (terrainCover) {\n                // This is a terrain layer\n                const isPicking = opts.picking?.isActive;\n                const fbo = isPicking\n                    ? terrainCover.getPickingFramebuffer()\n                    : terrainCover.getRenderFramebuffer();\n                sampler = fbo?.colorAttachments[0].texture;\n                if (isPicking) {\n                    // Never render the layer itself in picking pass\n                    mode = TERRAIN_MODE.SKIP;\n                }\n                if (sampler) {\n                    mode = mode === TERRAIN_MODE.SKIP ? TERRAIN_MODE.USE_COVER_ONLY : TERRAIN_MODE.USE_COVER;\n                    bounds = terrainCover.bounds;\n                }\n                else {\n                    sampler = dummyHeightMap;\n                }\n            }\n            /* eslint-disable camelcase */\n            return {\n                terrain_mode: mode,\n                terrain_map: sampler,\n                // Convert bounds to the common space, as [minX, minY, width, height]\n                terrain_bounds: bounds\n                    ? [\n                        bounds[0] - project_uCommonOrigin[0],\n                        bounds[1] - project_uCommonOrigin[1],\n                        bounds[2] - bounds[0],\n                        bounds[3] - bounds[1]\n                    ]\n                    : [0, 0, 0, 0]\n            };\n        }\n        return null;\n    }\n};\n", "import { GL } from '@luma.gl/constants';\nexport function createRenderTarget(device, opts) {\n    return device.createFramebuffer({\n        id: opts.id,\n        colorAttachments: [\n            device.createTexture({\n                id: opts.id,\n                ...(opts.float && {\n                    format: 'rgba32float',\n                    type: 5126\n                }),\n                mipmaps: false,\n                sampler: opts.interpolate === false\n                    ? {\n                        minFilter: 'nearest',\n                        magFilter: 'nearest'\n                    }\n                    : {\n                        minFilter: 'linear',\n                        magFilter: 'linear'\n                    }\n            })\n        ]\n    });\n}\n", "import { createRenderTarget } from \"./utils.js\";\nimport { joinLayerBounds, makeViewport, getRenderBounds } from \"../utils/projection-utils.js\";\n/**\n * Manages the lifecycle of the terrain cover (draped textures over a terrain mesh).\n * One terrain cover is created for each unique terrain layer (primitive layer with operation:terrain).\n * It is updated when the terrain source layer's mesh changes or when any of the terrainDrawMode:drape\n * layers requires redraw.\n * During the draw call of a terrain layer, the drape texture is overlaid on top of the layer's own color.\n */\nexport class TerrainCover {\n    constructor(targetLayer) {\n        this.isDirty = true;\n        /** Viewport used to draw into the texture */\n        this.renderViewport = null;\n        /** Bounds of the terrain cover texture, in cartesian space */\n        this.bounds = null;\n        this.layers = [];\n        /** Cached version of targetLayer.getBounds() */\n        this.targetBounds = null;\n        /** targetBounds in cartesian space */\n        this.targetBoundsCommon = null;\n        this.targetLayer = targetLayer;\n        this.tile = getTile(targetLayer);\n    }\n    get id() {\n        return this.targetLayer.id;\n    }\n    /** returns true if the target layer is still in use (i.e. not finalized) */\n    get isActive() {\n        return Boolean(this.targetLayer.getCurrentLayer());\n    }\n    shouldUpdate({ targetLayer, viewport, layers, layerNeedsRedraw }) {\n        if (targetLayer) {\n            this.targetLayer = targetLayer;\n        }\n        const sizeChanged = viewport ? this._updateViewport(viewport) : false;\n        let layersChanged = layers ? this._updateLayers(layers) : false;\n        if (layerNeedsRedraw) {\n            for (const id of this.layers) {\n                if (layerNeedsRedraw[id]) {\n                    layersChanged = true;\n                    // console.log('layer needs redraw', id);\n                    break;\n                }\n            }\n        }\n        return layersChanged || sizeChanged;\n    }\n    /** Compare layers with the last version. Only rerender if necessary. */\n    _updateLayers(layers) {\n        let needsRedraw = false;\n        layers = this.tile ? getIntersectingLayers(this.tile, layers) : layers;\n        if (layers.length !== this.layers.length) {\n            needsRedraw = true;\n            // console.log('layers count changed', this.layers.length, '>>', layers.length);\n        }\n        else {\n            for (let i = 0; i < layers.length; i++) {\n                const id = layers[i].id;\n                if (id !== this.layers[i]) {\n                    needsRedraw = true;\n                    // console.log('layer added/removed', id);\n                    break;\n                }\n            }\n        }\n        if (needsRedraw) {\n            this.layers = layers.map(layer => layer.id);\n        }\n        return needsRedraw;\n    }\n    /** Compare viewport and terrain bounds with the last version. Only rerender if necesary. */\n    _updateViewport(viewport) {\n        const targetLayer = this.targetLayer;\n        let shouldRedraw = false;\n        if (this.tile && 'boundingBox' in this.tile) {\n            if (!this.targetBounds) {\n                shouldRedraw = true;\n                this.targetBounds = this.tile.boundingBox;\n                const bottomLeftCommon = viewport.projectPosition(this.targetBounds[0]);\n                const topRightCommon = viewport.projectPosition(this.targetBounds[1]);\n                this.targetBoundsCommon = [\n                    bottomLeftCommon[0],\n                    bottomLeftCommon[1],\n                    topRightCommon[0],\n                    topRightCommon[1]\n                ];\n            }\n        }\n        else if (this.targetBounds !== targetLayer.getBounds()) {\n            // console.log('bounds changed', this.bounds, '>>', newBounds);\n            shouldRedraw = true;\n            this.targetBounds = targetLayer.getBounds();\n            this.targetBoundsCommon = joinLayerBounds([targetLayer], viewport);\n        }\n        if (!this.targetBoundsCommon) {\n            return false;\n        }\n        const newZoom = Math.ceil(viewport.zoom + 0.5);\n        // If the terrain layer is bound to a tile, always render a texture that cover the whole tile.\n        // Otherwise, use the smaller of layer bounds and the viewport bounds.\n        if (this.tile) {\n            this.bounds = this.targetBoundsCommon;\n        }\n        else {\n            const oldZoom = this.renderViewport?.zoom;\n            shouldRedraw = shouldRedraw || newZoom !== oldZoom;\n            const newBounds = getRenderBounds(this.targetBoundsCommon, viewport);\n            const oldBounds = this.bounds;\n            shouldRedraw = shouldRedraw || !oldBounds || newBounds.some((x, i) => x !== oldBounds[i]);\n            this.bounds = newBounds;\n        }\n        if (shouldRedraw) {\n            this.renderViewport = makeViewport({\n                bounds: this.bounds,\n                zoom: newZoom,\n                viewport\n            });\n        }\n        return shouldRedraw;\n    }\n    getRenderFramebuffer() {\n        if (!this.renderViewport || this.layers.length === 0) {\n            return null;\n        }\n        if (!this.fbo) {\n            this.fbo = createRenderTarget(this.targetLayer.context.device, { id: this.id });\n        }\n        return this.fbo;\n    }\n    getPickingFramebuffer() {\n        if (!this.renderViewport || (this.layers.length === 0 && !this.targetLayer.props.pickable)) {\n            return null;\n        }\n        if (!this.pickingFbo) {\n            this.pickingFbo = createRenderTarget(this.targetLayer.context.device, {\n                id: `${this.id}-picking`,\n                interpolate: false\n            });\n        }\n        return this.pickingFbo;\n    }\n    filterLayers(layers) {\n        return layers.filter(({ id }) => this.layers.includes(id));\n    }\n    delete() {\n        const { fbo, pickingFbo } = this;\n        if (fbo) {\n            fbo.colorAttachments[0].destroy();\n            fbo.destroy();\n        }\n        if (pickingFbo) {\n            pickingFbo.colorAttachments[0].destroy();\n            pickingFbo.destroy();\n        }\n    }\n}\n/**\n * Remove layers that do not overlap with the current terrain cover.\n * This implementation only has effect when a TileLayer is overlaid on top of a TileLayer\n */\nfunction getIntersectingLayers(sourceTile, layers) {\n    return layers.filter(layer => {\n        const tile = getTile(layer);\n        if (tile) {\n            return intersect(sourceTile.boundingBox, tile.boundingBox);\n        }\n        return true;\n    });\n}\n/** If layer is the descendent of a TileLayer, return the corresponding tile. */\nfunction getTile(layer) {\n    while (layer) {\n        // @ts-expect-error tile may not exist\n        const { tile } = layer.props;\n        if (tile) {\n            return tile;\n        }\n        layer = layer.parent;\n    }\n    return null;\n}\nfunction intersect(b1, b2) {\n    if (b1 && b2) {\n        return b1[0][0] < b2[1][0] && b2[0][0] < b1[1][0] && b1[0][1] < b2[1][1] && b2[0][1] < b1[1][1];\n    }\n    return false;\n}\n", "import { _LayersPass as LayersPass } from '@deck.gl/core';\nconst TERRAIN_BLENDING = {\n    blendColorOperation: 'max',\n    blendColorSrcFactor: 'one',\n    blendColorDstFactor: 'one',\n    blendAlphaOperation: 'max',\n    blendAlphaSrcFactor: 'one',\n    blendAlphaDstFactor: 'one'\n};\n/** Renders textures used by the TerrainEffect render pass */\nexport class TerrainPass extends LayersPass {\n    getRenderableLayers(viewport, opts) {\n        const { layers } = opts;\n        const result = [];\n        const drawParamsByIndex = this._getDrawLayerParams(viewport, opts, true);\n        for (let i = 0; i < layers.length; i++) {\n            const layer = layers[i];\n            if (!layer.isComposite && drawParamsByIndex[i].shouldDrawLayer) {\n                result.push(layer);\n            }\n        }\n        return result;\n    }\n    renderHeightMap(heightMap, opts) {\n        // console.log('Updating height map')\n        const target = heightMap.getRenderFramebuffer();\n        const viewport = heightMap.renderViewport;\n        if (!target || !viewport) {\n            return;\n        }\n        target.resize(viewport);\n        this.render({\n            ...opts,\n            target,\n            pass: 'terrain-height-map',\n            layers: opts.layers,\n            viewports: [viewport],\n            effects: [],\n            clearColor: [0, 0, 0, 0]\n        });\n    }\n    renderTerrainCover(terrainCover, opts) {\n        // console.log('Updating terrain cover ' + terrainCover.id)\n        const target = terrainCover.getRenderFramebuffer();\n        const viewport = terrainCover.renderViewport;\n        if (!target || !viewport) {\n            return;\n        }\n        const layers = terrainCover.filterLayers(opts.layers);\n        target.resize(viewport);\n        this.render({\n            ...opts,\n            target,\n            pass: `terrain-cover-${terrainCover.id}`,\n            layers,\n            effects: [],\n            viewports: [viewport],\n            clearColor: [0, 0, 0, 0]\n        });\n    }\n    getLayerParameters(layer, layerIndex, viewport) {\n        return {\n            ...layer.props.parameters,\n            blend: true,\n            depthTest: false,\n            ...(layer.props.operation.includes('terrain') && TERRAIN_BLENDING)\n        };\n    }\n}\n", "import { _PickLayersPass as PickLayersPass } from '@deck.gl/core';\n/** Renders textures used by the TerrainEffect picking pass */\nexport class TerrainPickingPass extends PickLayersPass {\n    constructor() {\n        super(...arguments);\n        /** Save layer index for use when drawing to terrain cover.\n         * When a terrain cover's picking buffer is rendered,\n         * we need to make sure each layer receives a consistent index (encoded in the alpha channel)\n         * so that a picked color can be decoded back to the correct layer.\n         * Updated in getRenderableLayers which is called in TerrainEffect.preRender\n         */\n        this.drawParameters = {};\n    }\n    getRenderableLayers(viewport, opts) {\n        const { layers } = opts;\n        const result = [];\n        this.drawParameters = {};\n        this._resetColorEncoder(opts.pickZ);\n        const drawParamsByIndex = this._getDrawLayerParams(viewport, opts);\n        for (let i = 0; i < layers.length; i++) {\n            const layer = layers[i];\n            if (!layer.isComposite && drawParamsByIndex[i].shouldDrawLayer) {\n                result.push(layer);\n                this.drawParameters[layer.id] = drawParamsByIndex[i].layerParameters;\n            }\n        }\n        return result;\n    }\n    renderTerrainCover(terrainCover, opts) {\n        // console.log('Updating terrain cover for picking ' + terrainCover.id)\n        const target = terrainCover.getPickingFramebuffer();\n        const viewport = terrainCover.renderViewport;\n        if (!target || !viewport) {\n            return;\n        }\n        const layers = terrainCover.filterLayers(opts.layers);\n        const terrainLayer = terrainCover.targetLayer;\n        if (terrainLayer.props.pickable) {\n            layers.unshift(terrainLayer);\n        }\n        target.resize(viewport);\n        this.render({\n            ...opts,\n            pickingFBO: target,\n            pass: `terrain-cover-picking-${terrainCover.id}`,\n            layers,\n            effects: [],\n            viewports: [viewport],\n            // Disable the default culling because TileLayer would cull sublayers based on the screen viewport,\n            // not the viewport of the terrain cover. Culling is already done by `terrainCover.filterLayers`\n            cullRect: undefined,\n            deviceRect: viewport,\n            pickZ: false\n        });\n    }\n    getLayerParameters(layer, layerIndex, viewport) {\n        let parameters;\n        if (this.drawParameters[layer.id]) {\n            parameters = this.drawParameters[layer.id];\n        }\n        else {\n            parameters = super.getLayerParameters(layer, layerIndex, viewport);\n            parameters.blend = true;\n        }\n        return { ...parameters, depthTest: false };\n    }\n}\n", "import { joinLayerBounds, getRenderBounds, makeViewport } from \"../utils/projection-utils.js\";\nimport { createRenderTarget } from \"./utils.js\";\nconst MAP_MAX_SIZE = 2048;\n/**\n * Manages the lifecycle of the height map (a framebuffer that encodes elevation).\n * One instance of height map is is shared across all layers. It is updated when the viewport changes\n * or when some terrain source layer's data changes.\n * During the draw call of any terrainDrawMode:offset layers,\n * the vertex shader reads from this framebuffer to retrieve its z offset.\n */\nexport class HeightMapBuilder {\n    static isSupported(device) {\n        return device.isTextureFormatRenderable('rgba32float');\n    }\n    constructor(device) {\n        /** Viewport used to draw into the texture */\n        this.renderViewport = null;\n        /** Bounds of the height map texture, in cartesian space */\n        this.bounds = null;\n        /** Last rendered layers */\n        this.layers = [];\n        /** Last layer.getBounds() */\n        this.layersBounds = [];\n        /** The union of layersBounds in cartesian space */\n        this.layersBoundsCommon = null;\n        this.lastViewport = null;\n        this.device = device;\n    }\n    /** Returns the height map framebuffer for read/write access.\n     * Returns null when the texture is invalid.\n     */\n    getRenderFramebuffer() {\n        if (!this.renderViewport) {\n            return null;\n        }\n        if (!this.fbo) {\n            this.fbo = createRenderTarget(this.device, { id: 'height-map', float: true });\n        }\n        return this.fbo;\n    }\n    /** Called every render cycle to check if the framebuffer needs update */\n    shouldUpdate({ layers, viewport }) {\n        const layersChanged = layers.length !== this.layers.length ||\n            layers.some((layer, i) => \n            // Layer instance is updated\n            // Layer props might have changed\n            // Undetermined props could have an effect on the output geometry of a terrain source,\n            // for example getElevation+updateTriggers, elevationScale, modelMatrix\n            layer !== this.layers[i] ||\n                // Some prop is in transition\n                layer.props.transitions ||\n                // Layer's geometry bounds have changed\n                layer.getBounds() !== this.layersBounds[i]);\n        if (layersChanged) {\n            // Recalculate cached bounds\n            this.layers = layers;\n            this.layersBounds = layers.map(layer => layer.getBounds());\n            this.layersBoundsCommon = joinLayerBounds(layers, viewport);\n        }\n        const viewportChanged = !this.lastViewport || !viewport.equals(this.lastViewport);\n        if (!this.layersBoundsCommon) {\n            this.renderViewport = null;\n        }\n        else if (layersChanged || viewportChanged) {\n            const bounds = getRenderBounds(this.layersBoundsCommon, viewport);\n            if (bounds[2] <= bounds[0] || bounds[3] <= bounds[1]) {\n                this.renderViewport = null;\n                return false;\n            }\n            this.bounds = bounds;\n            this.lastViewport = viewport;\n            const scale = viewport.scale;\n            const pixelWidth = (bounds[2] - bounds[0]) * scale;\n            const pixelHeight = (bounds[3] - bounds[1]) * scale;\n            this.renderViewport =\n                pixelWidth > 0 || pixelHeight > 0\n                    ? makeViewport({\n                        // It's not important whether the geometry is visible in this viewport, because\n                        // vertices will not use the standard project_to_clipspace in the DRAW_TO_HEIGHT_MAP shader\n                        // However the viewport must have the same center and zoom as the screen viewport\n                        // So that projection uniforms used for calculating z are the same\n                        bounds: [\n                            viewport.center[0] - 1,\n                            viewport.center[1] - 1,\n                            viewport.center[0] + 1,\n                            viewport.center[1] + 1\n                        ],\n                        zoom: viewport.zoom,\n                        width: Math.min(pixelWidth, MAP_MAX_SIZE),\n                        height: Math.min(pixelHeight, MAP_MAX_SIZE),\n                        viewport\n                    })\n                    : null;\n            return true;\n        }\n        return false;\n    }\n    delete() {\n        if (this.fbo) {\n            this.fbo.colorAttachments[0].delete();\n            this.fbo.delete();\n        }\n    }\n}\n", "import { log } from '@deck.gl/core';\nimport { terrainModule } from \"./shader-module.js\";\nimport { TerrainCover } from \"./terrain-cover.js\";\nimport { TerrainPass } from \"./terrain-pass.js\";\nimport { TerrainPickingPass } from \"./terrain-picking-pass.js\";\nimport { HeightMapBuilder } from \"./height-map-builder.js\";\n/** Class to manage terrain effect */\nexport class TerrainEffect {\n    constructor() {\n        this.id = 'terrain-effect';\n        this.props = null;\n        this.useInPicking = true;\n        /** true if picking in the current pass */\n        this.isPicking = false;\n        /** true if should use in the current pass */\n        this.isDrapingEnabled = false;\n        /** One texture for each primitive terrain layer, into which the draped layers render */\n        this.terrainCovers = new Map();\n    }\n    setup({ device, deck }) {\n        this.dummyHeightMap = device.createTexture({\n            width: 1,\n            height: 1,\n            data: new Uint8Array([0, 0, 0, 0])\n        });\n        this.terrainPass = new TerrainPass(device, { id: 'terrain' });\n        this.terrainPickingPass = new TerrainPickingPass(device, { id: 'terrain-picking' });\n        if (HeightMapBuilder.isSupported(device)) {\n            this.heightMap = new HeightMapBuilder(device);\n        }\n        else {\n            log.warn('Terrain offset mode is not supported by this browser')();\n        }\n        deck._addDefaultShaderModule(terrainModule);\n    }\n    preRender(opts) {\n        // @ts-expect-error pickZ only defined in picking pass\n        if (opts.pickZ) {\n            // Do not update if picking attributes\n            this.isDrapingEnabled = false;\n            return;\n        }\n        const { viewports } = opts;\n        const isPicking = opts.pass.startsWith('picking');\n        this.isPicking = isPicking;\n        this.isDrapingEnabled = true;\n        // TODO - support multiple views?\n        const viewport = viewports[0];\n        const layers = (isPicking ? this.terrainPickingPass : this.terrainPass).getRenderableLayers(viewport, opts);\n        const terrainLayers = layers.filter(l => l.props.operation.includes('terrain'));\n        if (terrainLayers.length === 0) {\n            return;\n        }\n        if (!isPicking) {\n            const offsetLayers = layers.filter(l => l.state.terrainDrawMode === 'offset');\n            if (offsetLayers.length > 0) {\n                this._updateHeightMap(terrainLayers, viewport, opts);\n            }\n        }\n        const drapeLayers = layers.filter(l => l.state.terrainDrawMode === 'drape');\n        this._updateTerrainCovers(terrainLayers, drapeLayers, viewport, opts);\n    }\n    getModuleParameters(layer) {\n        const { terrainDrawMode } = layer.state;\n        return {\n            heightMap: this.heightMap?.getRenderFramebuffer()?.colorAttachments[0].texture || null,\n            heightMapBounds: this.heightMap?.bounds,\n            dummyHeightMap: this.dummyHeightMap,\n            terrainCover: this.isDrapingEnabled ? this.terrainCovers.get(layer.id) : null,\n            useTerrainHeightMap: terrainDrawMode === 'offset',\n            terrainSkipRender: terrainDrawMode === 'drape' || !layer.props.operation.includes('draw')\n        };\n    }\n    cleanup({ deck }) {\n        if (this.dummyHeightMap) {\n            this.dummyHeightMap.delete();\n            this.dummyHeightMap = undefined;\n        }\n        if (this.heightMap) {\n            this.heightMap.delete();\n            this.heightMap = undefined;\n        }\n        for (const terrainCover of this.terrainCovers.values()) {\n            terrainCover.delete();\n        }\n        this.terrainCovers.clear();\n        deck._removeDefaultShaderModule(terrainModule);\n    }\n    _updateHeightMap(terrainLayers, viewport, opts) {\n        if (!this.heightMap) {\n            // Not supported\n            return;\n        }\n        const shouldUpdate = this.heightMap.shouldUpdate({ layers: terrainLayers, viewport });\n        if (!shouldUpdate) {\n            return;\n        }\n        this.terrainPass.renderHeightMap(this.heightMap, {\n            ...opts,\n            layers: terrainLayers,\n            moduleParameters: {\n                heightMapBounds: this.heightMap.bounds,\n                dummyHeightMap: this.dummyHeightMap,\n                devicePixelRatio: 1,\n                drawToTerrainHeightMap: true\n            }\n        });\n    }\n    _updateTerrainCovers(terrainLayers, drapeLayers, viewport, opts) {\n        // Mark a terrain cover as dirty if one of the drape layers needs redraw\n        const layerNeedsRedraw = {};\n        for (const layer of drapeLayers) {\n            if (layer.state.terrainCoverNeedsRedraw) {\n                layerNeedsRedraw[layer.id] = true;\n                layer.state.terrainCoverNeedsRedraw = false;\n            }\n        }\n        for (const terrainCover of this.terrainCovers.values()) {\n            terrainCover.isDirty = terrainCover.isDirty || terrainCover.shouldUpdate({ layerNeedsRedraw });\n        }\n        for (const layer of terrainLayers) {\n            this._updateTerrainCover(layer, drapeLayers, viewport, opts);\n        }\n        if (!this.isPicking) {\n            this._pruneTerrainCovers();\n        }\n    }\n    _updateTerrainCover(terrainLayer, drapeLayers, viewport, opts) {\n        const renderPass = this.isPicking ? this.terrainPickingPass : this.terrainPass;\n        let terrainCover = this.terrainCovers.get(terrainLayer.id);\n        if (!terrainCover) {\n            terrainCover = new TerrainCover(terrainLayer);\n            this.terrainCovers.set(terrainLayer.id, terrainCover);\n        }\n        try {\n            const isDirty = terrainCover.shouldUpdate({\n                targetLayer: terrainLayer,\n                viewport,\n                layers: drapeLayers\n            });\n            if (this.isPicking || terrainCover.isDirty || isDirty) {\n                renderPass.renderTerrainCover(terrainCover, {\n                    ...opts,\n                    layers: drapeLayers,\n                    moduleParameters: {\n                        dummyHeightMap: this.dummyHeightMap,\n                        terrainSkipRender: false,\n                        devicePixelRatio: 1\n                    }\n                });\n                if (!this.isPicking) {\n                    // IsDirty refers to the normal fbo, not the picking fbo.\n                    // Only mark it as not dirty if the normal fbo was updated.\n                    terrainCover.isDirty = false;\n                }\n            }\n        }\n        catch (err) {\n            terrainLayer.raiseError(err, `Error rendering terrain cover ${terrainCover.id}`);\n        }\n    }\n    _pruneTerrainCovers() {\n        /** Prune the cache, remove textures for layers that have been removed */\n        const idsToRemove = [];\n        for (const [id, terrainCover] of this.terrainCovers) {\n            if (!terrainCover.isActive) {\n                idsToRemove.push(id);\n            }\n        }\n        for (const id of idsToRemove) {\n            this.terrainCovers.delete(id);\n        }\n    }\n}\n", "import { LayerExtension } from '@deck.gl/core';\nimport { TerrainEffect } from \"./terrain-effect.js\";\nimport { terrainModule } from \"./shader-module.js\";\nconst defaultProps = {\n    terrainDrawMode: undefined\n};\n/** Allows layers to show/hide objects by a geofence. */\nexport default class TerrainExtension extends LayerExtension {\n    static { this.defaultProps = defaultProps; }\n    static { this.extensionName = 'TerrainExtension'; }\n    getShaders() {\n        return {\n            modules: [terrainModule]\n        };\n    }\n    initializeState() {\n        this.context.deck?._addDefaultEffect(new TerrainEffect());\n    }\n    updateState(params) {\n        const { props, oldProps } = params;\n        if (this.state.terrainDrawMode &&\n            props.terrainDrawMode === oldProps.terrainDrawMode &&\n            // @ts-ignore `extruded` may not exist in props\n            props.extruded === oldProps.extruded) {\n            return;\n        }\n        let { terrainDrawMode } = props;\n        if (!terrainDrawMode) {\n            // props.extruded is used as an indication that the layer is 2.5D\n            // @ts-ignore `extruded` may not exist in props\n            const is3d = this.props.extruded;\n            const attributes = this.getAttributeManager()?.attributes;\n            const hasAnchor = attributes && 'instancePositions' in attributes;\n            terrainDrawMode = is3d || hasAnchor ? 'offset' : 'drape';\n        }\n        this.setState({ terrainDrawMode });\n    }\n    onNeedsRedraw() {\n        const state = this.state;\n        if (state.terrainDrawMode === 'drape') {\n            state.terrainCoverNeedsRedraw = true;\n        }\n    }\n}\n", "/* eslint-disable indent */\nimport { earcut } from '@math.gl/polygon';\n/**\n * Convert binary features to flat binary arrays. Similar to\n * `geojsonToBinary` helper function, except that it expects\n * a binary representation of the feature data, which enables\n * 2X-3X speed increase in parse speed, compared to using\n * geoJSON. See `binary-vector-tile/VectorTileFeature` for\n * data format detais\n *\n * @param features\n * @param geometryInfo\n * @param options\n * @returns filled arrays\n */\nexport function flatGeojsonToBinary(features, geometryInfo, options) {\n    const propArrayTypes = extractNumericPropTypes(features);\n    const numericPropKeys = Object.keys(propArrayTypes).filter((k) => propArrayTypes[k] !== Array);\n    return fillArrays(features, {\n        propArrayTypes,\n        ...geometryInfo\n    }, {\n        numericPropKeys: (options && options.numericPropKeys) || numericPropKeys,\n        PositionDataType: options ? options.PositionDataType : Float32Array,\n        triangulate: options ? options.triangulate : true\n    });\n}\nexport const TEST_EXPORTS = {\n    extractNumericPropTypes\n};\n/**\n * Extracts properties that are always numeric\n *\n * @param features\n * @returns object with numeric types\n */\nfunction extractNumericPropTypes(features) {\n    const propArrayTypes = {};\n    for (const feature of features) {\n        if (feature.properties) {\n            for (const key in feature.properties) {\n                // If property has not been seen before, or if property has been numeric\n                // in all previous features, check if numeric in this feature\n                // If not numeric, Array is stored to prevent rechecking in the future\n                // Additionally, detects if 64 bit precision is required\n                const val = feature.properties[key];\n                propArrayTypes[key] = deduceArrayType(val, propArrayTypes[key]);\n            }\n        }\n    }\n    return propArrayTypes;\n}\n/**\n * Fills coordinates into pre-allocated typed arrays\n *\n * @param features\n * @param geometryInfo\n * @param options\n * @returns an accessor object with value and size keys\n */\n// eslint-disable-next-line complexity, max-statements\nfunction fillArrays(features, geometryInfo, options) {\n    const { pointPositionsCount, pointFeaturesCount, linePositionsCount, linePathsCount, lineFeaturesCount, polygonPositionsCount, polygonObjectsCount, polygonRingsCount, polygonFeaturesCount, propArrayTypes, coordLength } = geometryInfo;\n    const { numericPropKeys = [], PositionDataType = Float32Array, triangulate = true } = options;\n    const hasGlobalId = features[0] && 'id' in features[0];\n    const GlobalFeatureIdsDataType = features.length > 65535 ? Uint32Array : Uint16Array;\n    const points = {\n        type: 'Point',\n        positions: new PositionDataType(pointPositionsCount * coordLength),\n        globalFeatureIds: new GlobalFeatureIdsDataType(pointPositionsCount),\n        featureIds: pointFeaturesCount > 65535\n            ? new Uint32Array(pointPositionsCount)\n            : new Uint16Array(pointPositionsCount),\n        numericProps: {},\n        properties: [],\n        fields: []\n    };\n    const lines = {\n        type: 'LineString',\n        pathIndices: linePositionsCount > 65535\n            ? new Uint32Array(linePathsCount + 1)\n            : new Uint16Array(linePathsCount + 1),\n        positions: new PositionDataType(linePositionsCount * coordLength),\n        globalFeatureIds: new GlobalFeatureIdsDataType(linePositionsCount),\n        featureIds: lineFeaturesCount > 65535\n            ? new Uint32Array(linePositionsCount)\n            : new Uint16Array(linePositionsCount),\n        numericProps: {},\n        properties: [],\n        fields: []\n    };\n    const polygons = {\n        type: 'Polygon',\n        polygonIndices: polygonPositionsCount > 65535\n            ? new Uint32Array(polygonObjectsCount + 1)\n            : new Uint16Array(polygonObjectsCount + 1),\n        primitivePolygonIndices: polygonPositionsCount > 65535\n            ? new Uint32Array(polygonRingsCount + 1)\n            : new Uint16Array(polygonRingsCount + 1),\n        positions: new PositionDataType(polygonPositionsCount * coordLength),\n        globalFeatureIds: new GlobalFeatureIdsDataType(polygonPositionsCount),\n        featureIds: polygonFeaturesCount > 65535\n            ? new Uint32Array(polygonPositionsCount)\n            : new Uint16Array(polygonPositionsCount),\n        numericProps: {},\n        properties: [],\n        fields: []\n    };\n    if (triangulate) {\n        polygons.triangles = [];\n    }\n    // Instantiate numeric properties arrays; one value per vertex\n    for (const object of [points, lines, polygons]) {\n        for (const propName of numericPropKeys) {\n            // If property has been numeric in all previous features in which the property existed, check\n            // if numeric in this feature\n            const T = propArrayTypes[propName];\n            object.numericProps[propName] = new T(object.positions.length / coordLength);\n        }\n    }\n    // Set last element of path/polygon indices as positions length\n    lines.pathIndices[linePathsCount] = linePositionsCount;\n    polygons.polygonIndices[polygonObjectsCount] = polygonPositionsCount;\n    polygons.primitivePolygonIndices[polygonRingsCount] = polygonPositionsCount;\n    const indexMap = {\n        pointPosition: 0,\n        pointFeature: 0,\n        linePosition: 0,\n        linePath: 0,\n        lineFeature: 0,\n        polygonPosition: 0,\n        polygonObject: 0,\n        polygonRing: 0,\n        polygonFeature: 0,\n        feature: 0\n    };\n    for (const feature of features) {\n        const geometry = feature.geometry;\n        const properties = feature.properties || {};\n        switch (geometry.type) {\n            case 'Point':\n                handlePoint(geometry, points, indexMap, coordLength, properties);\n                points.properties.push(keepStringProperties(properties, numericPropKeys));\n                if (hasGlobalId) {\n                    points.fields.push({ id: feature.id });\n                }\n                indexMap.pointFeature++;\n                break;\n            case 'LineString':\n                handleLineString(geometry, lines, indexMap, coordLength, properties);\n                lines.properties.push(keepStringProperties(properties, numericPropKeys));\n                if (hasGlobalId) {\n                    lines.fields.push({ id: feature.id });\n                }\n                indexMap.lineFeature++;\n                break;\n            case 'Polygon':\n                handlePolygon(geometry, polygons, indexMap, coordLength, properties);\n                polygons.properties.push(keepStringProperties(properties, numericPropKeys));\n                if (hasGlobalId) {\n                    polygons.fields.push({ id: feature.id });\n                }\n                indexMap.polygonFeature++;\n                break;\n            default:\n                throw new Error('Invalid geometry type');\n        }\n        indexMap.feature++;\n    }\n    // Wrap each array in an accessor object with value and size keys\n    return makeAccessorObjects(points, lines, polygons, coordLength);\n}\n/**\n * Fills (Multi)Point coordinates into points object of arrays\n *\n * @param geometry\n * @param points\n * @param indexMap\n * @param coordLength\n * @param properties\n */\nfunction handlePoint(geometry, points, indexMap, coordLength, properties) {\n    points.positions.set(geometry.data, indexMap.pointPosition * coordLength);\n    const nPositions = geometry.data.length / coordLength;\n    fillNumericProperties(points, properties, indexMap.pointPosition, nPositions);\n    points.globalFeatureIds.fill(indexMap.feature, indexMap.pointPosition, indexMap.pointPosition + nPositions);\n    points.featureIds.fill(indexMap.pointFeature, indexMap.pointPosition, indexMap.pointPosition + nPositions);\n    indexMap.pointPosition += nPositions;\n}\n/**\n * Fills (Multi)LineString coordinates into lines object of arrays\n *\n * @param geometry\n * @param lines\n * @param indexMap\n * @param coordLength\n * @param properties\n */\nfunction handleLineString(geometry, lines, indexMap, coordLength, properties) {\n    lines.positions.set(geometry.data, indexMap.linePosition * coordLength);\n    const nPositions = geometry.data.length / coordLength;\n    fillNumericProperties(lines, properties, indexMap.linePosition, nPositions);\n    lines.globalFeatureIds.fill(indexMap.feature, indexMap.linePosition, indexMap.linePosition + nPositions);\n    lines.featureIds.fill(indexMap.lineFeature, indexMap.linePosition, indexMap.linePosition + nPositions);\n    for (let i = 0, il = geometry.indices.length; i < il; ++i) {\n        // Extract range of data we are working with, defined by start\n        // and end indices (these index into the geometry.data array)\n        const start = geometry.indices[i];\n        const end = i === il - 1\n            ? geometry.data.length // last line, so read to end of data\n            : geometry.indices[i + 1]; // start index for next line\n        lines.pathIndices[indexMap.linePath++] = indexMap.linePosition;\n        indexMap.linePosition += (end - start) / coordLength;\n    }\n}\n/**\n * Fills (Multi)Polygon coordinates into polygons object of arrays\n *\n * @param geometry\n * @param polygons\n * @param indexMap\n * @param coordLength\n * @param properties\n */\nfunction handlePolygon(geometry, polygons, indexMap, coordLength, properties) {\n    polygons.positions.set(geometry.data, indexMap.polygonPosition * coordLength);\n    const nPositions = geometry.data.length / coordLength;\n    fillNumericProperties(polygons, properties, indexMap.polygonPosition, nPositions);\n    polygons.globalFeatureIds.fill(indexMap.feature, indexMap.polygonPosition, indexMap.polygonPosition + nPositions);\n    polygons.featureIds.fill(indexMap.polygonFeature, indexMap.polygonPosition, indexMap.polygonPosition + nPositions);\n    // Unlike Point & LineString geometry.indices is a 2D array\n    for (let l = 0, ll = geometry.indices.length; l < ll; ++l) {\n        const startPosition = indexMap.polygonPosition;\n        polygons.polygonIndices[indexMap.polygonObject++] = startPosition;\n        const areas = geometry.areas[l];\n        const indices = geometry.indices[l];\n        const nextIndices = geometry.indices[l + 1];\n        for (let i = 0, il = indices.length; i < il; ++i) {\n            const start = indices[i];\n            const end = i === il - 1\n                ? // last line, so either read to:\n                    nextIndices === undefined\n                        ? geometry.data.length // end of data (no next indices)\n                        : nextIndices[0] // start of first line in nextIndices\n                : indices[i + 1]; // start index for next line\n            polygons.primitivePolygonIndices[indexMap.polygonRing++] = indexMap.polygonPosition;\n            indexMap.polygonPosition += (end - start) / coordLength;\n        }\n        const endPosition = indexMap.polygonPosition;\n        triangulatePolygon(polygons, areas, indices, { startPosition, endPosition, coordLength });\n    }\n}\n/**\n * Triangulate polygon using earcut\n *\n * @param polygons\n * @param areas\n * @param indices\n * @param param3\n */\nfunction triangulatePolygon(polygons, areas, indices, { startPosition, endPosition, coordLength }) {\n    if (!polygons.triangles) {\n        return;\n    }\n    const start = startPosition * coordLength;\n    const end = endPosition * coordLength;\n    // Extract positions and holes for just this polygon\n    const polygonPositions = polygons.positions.subarray(start, end);\n    // Holes are referenced relative to outer polygon\n    const offset = indices[0];\n    const holes = indices.slice(1).map((n) => (n - offset) / coordLength);\n    // Compute triangulation\n    const triangles = earcut(polygonPositions, holes, coordLength, areas);\n    // Indices returned by triangulation are relative to start\n    // of polygon, so we need to offset\n    for (let t = 0, tl = triangles.length; t < tl; ++t) {\n        polygons.triangles.push(startPosition + triangles[t]);\n    }\n}\n/**\n * Wraps an object containing array into accessors\n *\n * @param obj\n * @param size\n */\nfunction wrapProps(obj, size) {\n    const returnObj = {};\n    for (const key in obj) {\n        returnObj[key] = { value: obj[key], size };\n    }\n    return returnObj;\n}\n/**\n * Wrap each array in an accessor object with value and size keys\n *\n * @param points\n * @param lines\n * @param polygons\n * @param coordLength\n * @returns object\n */\nfunction makeAccessorObjects(points, lines, polygons, coordLength) {\n    const binaryFeatures = {\n        shape: 'binary-feature-collection',\n        points: {\n            ...points,\n            positions: { value: points.positions, size: coordLength },\n            globalFeatureIds: { value: points.globalFeatureIds, size: 1 },\n            featureIds: { value: points.featureIds, size: 1 },\n            numericProps: wrapProps(points.numericProps, 1)\n        },\n        lines: {\n            ...lines,\n            positions: { value: lines.positions, size: coordLength },\n            pathIndices: { value: lines.pathIndices, size: 1 },\n            globalFeatureIds: { value: lines.globalFeatureIds, size: 1 },\n            featureIds: { value: lines.featureIds, size: 1 },\n            numericProps: wrapProps(lines.numericProps, 1)\n        },\n        polygons: {\n            ...polygons,\n            positions: { value: polygons.positions, size: coordLength },\n            polygonIndices: { value: polygons.polygonIndices, size: 1 },\n            primitivePolygonIndices: { value: polygons.primitivePolygonIndices, size: 1 },\n            globalFeatureIds: { value: polygons.globalFeatureIds, size: 1 },\n            featureIds: { value: polygons.featureIds, size: 1 },\n            numericProps: wrapProps(polygons.numericProps, 1)\n        } // triangles not expected\n    };\n    if (binaryFeatures.polygons && polygons.triangles) {\n        binaryFeatures.polygons.triangles = { value: new Uint32Array(polygons.triangles), size: 1 };\n    }\n    return binaryFeatures;\n}\n/**\n * Add numeric properties to object\n *\n * @param object\n * @param properties\n * @param index\n * @param length\n */\nfunction fillNumericProperties(object, properties, index, length) {\n    for (const numericPropName in object.numericProps) {\n        if (numericPropName in properties) {\n            const value = properties[numericPropName];\n            object.numericProps[numericPropName].fill(value, index, index + length);\n        }\n    }\n}\n/**\n * Keep string properties in object\n *\n * @param properties\n * @param numericKeys\n * @returns object\n */\nfunction keepStringProperties(properties, numericKeys) {\n    const props = {};\n    for (const key in properties) {\n        if (!numericKeys.includes(key)) {\n            props[key] = properties[key];\n        }\n    }\n    return props;\n}\n/**\n *\n * Deduce correct array constructor to use for a given value\n *\n * @param x value to test\n * @param constructor previous constructor deduced\n * @returns PropArrayConstructor\n */\nfunction deduceArrayType(x, constructor) {\n    if (constructor === Array || !Number.isFinite(x)) {\n        return Array;\n    }\n    // If this or previous value required 64bits use Float64Array\n    return constructor === Float64Array || Math.fround(x) !== x ? Float64Array : Float32Array;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n * Convert binary geometry representation to GeoJSON\n * @param data   geometry data in binary representation\n * @param options\n * @param options.type  Input data type: Point, LineString, or Polygon\n * @param options.featureId  Global feature id. If specified, only a single feature is extracted\n * @return GeoJSON objects\n */\nexport function binaryToGeojson(data, options) {\n    const globalFeatureId = options?.globalFeatureId;\n    if (globalFeatureId !== undefined) {\n        return getSingleFeature(data, globalFeatureId);\n    }\n    return parseFeatures(data, options?.type);\n}\n/**\n * Return a single feature from a binary geometry representation as GeoJSON\n * @param data   geometry data in binary representation\n * @return GeoJSON feature\n */\nfunction getSingleFeature(data, globalFeatureId) {\n    const dataArray = normalizeInput(data);\n    for (const data of dataArray) {\n        let lastIndex = 0;\n        let lastValue = data.featureIds.value[0];\n        // Scan through data until we find matching feature\n        for (let i = 0; i < data.featureIds.value.length; i++) {\n            const currValue = data.featureIds.value[i];\n            if (currValue === lastValue) {\n                // eslint-disable-next-line no-continue\n                continue;\n            }\n            if (globalFeatureId === data.globalFeatureIds.value[lastIndex]) {\n                return parseFeature(data, lastIndex, i);\n            }\n            lastIndex = i;\n            lastValue = currValue;\n        }\n        if (globalFeatureId === data.globalFeatureIds.value[lastIndex]) {\n            return parseFeature(data, lastIndex, data.featureIds.value.length);\n        }\n    }\n    throw new Error(`featureId:${globalFeatureId} not found`);\n}\nfunction parseFeatures(data, type) {\n    const dataArray = normalizeInput(data, type);\n    return parseFeatureCollection(dataArray);\n}\n/** Parse input binary data and return a valid GeoJSON geometry object */\nexport function binaryToGeometry(data, startIndex, endIndex) {\n    switch (data.type) {\n        case 'Point':\n            return pointToGeoJson(data, startIndex, endIndex);\n        case 'LineString':\n            return lineStringToGeoJson(data, startIndex, endIndex);\n        case 'Polygon':\n            return polygonToGeoJson(data, startIndex, endIndex);\n        default:\n            const unexpectedInput = data;\n            throw new Error(`Unsupported geometry type: ${unexpectedInput?.type}`);\n    }\n}\n// Normalize features\n// Return an array of data objects, each of which have a type key\nfunction normalizeInput(data, type) {\n    const features = [];\n    if (data.points) {\n        data.points.type = 'Point';\n        features.push(data.points);\n    }\n    if (data.lines) {\n        data.lines.type = 'LineString';\n        features.push(data.lines);\n    }\n    if (data.polygons) {\n        data.polygons.type = 'Polygon';\n        features.push(data.polygons);\n    }\n    return features;\n}\n/** Parse input binary data and return an array of GeoJSON Features */\nfunction parseFeatureCollection(dataArray) {\n    const features = [];\n    for (const data of dataArray) {\n        if (data.featureIds.value.length === 0) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        let lastIndex = 0;\n        let lastValue = data.featureIds.value[0];\n        // Need to deduce start, end indices of each feature\n        for (let i = 0; i < data.featureIds.value.length; i++) {\n            const currValue = data.featureIds.value[i];\n            if (currValue === lastValue) {\n                // eslint-disable-next-line no-continue\n                continue;\n            }\n            features.push(parseFeature(data, lastIndex, i));\n            lastIndex = i;\n            lastValue = currValue;\n        }\n        // Last feature\n        features.push(parseFeature(data, lastIndex, data.featureIds.value.length));\n    }\n    return features;\n}\n/** Parse input binary data and return a single GeoJSON Feature */\nfunction parseFeature(data, startIndex, endIndex) {\n    const geometry = binaryToGeometry(data, startIndex, endIndex);\n    const properties = parseProperties(data, startIndex, endIndex);\n    const fields = parseFields(data, startIndex, endIndex);\n    return { type: 'Feature', geometry, properties, ...fields };\n}\n/** Parse input binary data and return an object of fields */\nfunction parseFields(data, startIndex = 0, endIndex) {\n    return data.fields && data.fields[data.featureIds.value[startIndex]];\n}\n/** Parse input binary data and return an object of properties */\nfunction parseProperties(data, startIndex = 0, endIndex) {\n    const properties = Object.assign({}, data.properties[data.featureIds.value[startIndex]]);\n    for (const key in data.numericProps) {\n        properties[key] = data.numericProps[key].value[startIndex];\n    }\n    return properties;\n}\n/** Parse binary data of type Polygon */\nfunction polygonToGeoJson(data, startIndex = -Infinity, endIndex = Infinity) {\n    const { positions } = data;\n    const polygonIndices = data.polygonIndices.value.filter((x) => x >= startIndex && x <= endIndex);\n    const primitivePolygonIndices = data.primitivePolygonIndices.value.filter((x) => x >= startIndex && x <= endIndex);\n    const multi = polygonIndices.length > 2;\n    // Polygon\n    if (!multi) {\n        const coordinates = [];\n        for (let i = 0; i < primitivePolygonIndices.length - 1; i++) {\n            const startRingIndex = primitivePolygonIndices[i];\n            const endRingIndex = primitivePolygonIndices[i + 1];\n            const ringCoordinates = ringToGeoJson(positions, startRingIndex, endRingIndex);\n            coordinates.push(ringCoordinates);\n        }\n        return { type: 'Polygon', coordinates };\n    }\n    // MultiPolygon\n    const coordinates = [];\n    for (let i = 0; i < polygonIndices.length - 1; i++) {\n        const startPolygonIndex = polygonIndices[i];\n        const endPolygonIndex = polygonIndices[i + 1];\n        const polygonCoordinates = polygonToGeoJson(data, startPolygonIndex, endPolygonIndex).coordinates;\n        coordinates.push(polygonCoordinates);\n    }\n    return { type: 'MultiPolygon', coordinates };\n}\n/** Parse binary data of type LineString */\nfunction lineStringToGeoJson(data, startIndex = -Infinity, endIndex = Infinity) {\n    const { positions } = data;\n    const pathIndices = data.pathIndices.value.filter((x) => x >= startIndex && x <= endIndex);\n    const multi = pathIndices.length > 2;\n    if (!multi) {\n        const coordinates = ringToGeoJson(positions, pathIndices[0], pathIndices[1]);\n        return { type: 'LineString', coordinates };\n    }\n    const coordinates = [];\n    for (let i = 0; i < pathIndices.length - 1; i++) {\n        const ringCoordinates = ringToGeoJson(positions, pathIndices[i], pathIndices[i + 1]);\n        coordinates.push(ringCoordinates);\n    }\n    return { type: 'MultiLineString', coordinates };\n}\n/** Parse binary data of type Point */\nfunction pointToGeoJson(data, startIndex, endIndex) {\n    const { positions } = data;\n    const coordinates = ringToGeoJson(positions, startIndex, endIndex);\n    const multi = coordinates.length > 1;\n    if (multi) {\n        return { type: 'MultiPoint', coordinates };\n    }\n    return { type: 'Point', coordinates: coordinates[0] };\n}\n/**\n * Parse a linear ring of positions to a GeoJSON linear ring\n *\n * @param positions Positions TypedArray\n * @param startIndex Start index to include in ring\n * @param endIndex End index to include in ring\n * @returns GeoJSON ring\n */\nfunction ringToGeoJson(positions, startIndex, endIndex) {\n    startIndex = startIndex || 0;\n    endIndex = endIndex || positions.value.length / positions.size;\n    const ringCoordinates = [];\n    for (let j = startIndex; j < endIndex; j++) {\n        const coord = Array();\n        for (let k = j * positions.size; k < (j + 1) * positions.size; k++) {\n            coord.push(Number(positions.value[k]));\n        }\n        ringCoordinates.push(coord);\n    }\n    return ringCoordinates;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { flatGeojsonToBinary } from '@loaders.gl/gis';\nimport Protobuf from 'pbf';\nimport { VectorTile } from \"./mapbox-vector-tile/vector-tile.js\";\nimport { BinaryVectorTile } from \"./binary-vector-tile/vector-tile.js\";\n/**\n * Parse MVT arrayBuffer and return GeoJSON.\n *\n * @param arrayBuffer A MVT arrayBuffer\n * @param options\n * @returns A GeoJSON geometry object or a binary representation\n */\nexport function parseMVT(arrayBuffer, options) {\n    const mvtOptions = normalizeOptions(options);\n    const shape = options?.gis?.format || options?.mvt?.shape || options?.shape;\n    switch (shape) {\n        case 'columnar-table': // binary + some JS arrays\n            return { shape: 'columnar-table', data: parseToBinary(arrayBuffer, mvtOptions) };\n        case 'geojson-table': {\n            const table = {\n                shape: 'geojson-table',\n                type: 'FeatureCollection',\n                features: parseToGeojsonFeatures(arrayBuffer, mvtOptions)\n            };\n            return table;\n        }\n        case 'geojson':\n            return parseToGeojsonFeatures(arrayBuffer, mvtOptions);\n        case 'binary-geometry':\n            return parseToBinary(arrayBuffer, mvtOptions);\n        case 'binary':\n            return parseToBinary(arrayBuffer, mvtOptions);\n        default:\n            throw new Error(shape || 'undefined shape');\n    }\n}\nfunction parseToBinary(arrayBuffer, options) {\n    const [flatGeoJsonFeatures, geometryInfo] = parseToFlatGeoJson(arrayBuffer, options);\n    const binaryData = flatGeojsonToBinary(flatGeoJsonFeatures, geometryInfo);\n    // Add the original byteLength (as a reasonable approximation of the size of the binary data)\n    // TODO decide where to store extra fields like byteLength (header etc) and document\n    // @ts-ignore\n    binaryData.byteLength = arrayBuffer.byteLength;\n    return binaryData;\n}\nfunction parseToFlatGeoJson(arrayBuffer, options) {\n    const features = [];\n    const geometryInfo = {\n        coordLength: 2,\n        pointPositionsCount: 0,\n        pointFeaturesCount: 0,\n        linePositionsCount: 0,\n        linePathsCount: 0,\n        lineFeaturesCount: 0,\n        polygonPositionsCount: 0,\n        polygonObjectsCount: 0,\n        polygonRingsCount: 0,\n        polygonFeaturesCount: 0\n    };\n    if (arrayBuffer.byteLength <= 0) {\n        return [features, geometryInfo];\n    }\n    const tile = new BinaryVectorTile(new Protobuf(arrayBuffer));\n    const selectedLayers = options && Array.isArray(options.layers) ? options.layers : Object.keys(tile.layers);\n    selectedLayers.forEach((layerName) => {\n        const vectorTileLayer = tile.layers[layerName];\n        if (!vectorTileLayer) {\n            return;\n        }\n        for (let i = 0; i < vectorTileLayer.length; i++) {\n            const vectorTileFeature = vectorTileLayer.feature(i, geometryInfo);\n            const decodedFeature = getDecodedFeatureBinary(vectorTileFeature, options, layerName);\n            features.push(decodedFeature);\n        }\n    });\n    return [features, geometryInfo];\n}\nfunction parseToGeojsonFeatures(arrayBuffer, options) {\n    if (arrayBuffer.byteLength <= 0) {\n        return [];\n    }\n    const features = [];\n    const tile = new VectorTile(new Protobuf(arrayBuffer));\n    const selectedLayers = Array.isArray(options.layers) ? options.layers : Object.keys(tile.layers);\n    selectedLayers.forEach((layerName) => {\n        const vectorTileLayer = tile.layers[layerName];\n        if (!vectorTileLayer) {\n            return;\n        }\n        for (let i = 0; i < vectorTileLayer.length; i++) {\n            const vectorTileFeature = vectorTileLayer.feature(i);\n            const decodedFeature = getDecodedFeature(vectorTileFeature, options, layerName);\n            features.push(decodedFeature);\n        }\n    });\n    return features;\n}\nfunction normalizeOptions(options) {\n    if (!options?.mvt) {\n        throw new Error('mvt options required');\n    }\n    // Validate\n    const wgs84Coordinates = options.mvt?.coordinates === 'wgs84';\n    const { tileIndex } = options.mvt;\n    const hasTileIndex = tileIndex &&\n        Number.isFinite(tileIndex.x) &&\n        Number.isFinite(tileIndex.y) &&\n        Number.isFinite(tileIndex.z);\n    if (wgs84Coordinates && !hasTileIndex) {\n        throw new Error('MVT Loader: WGS84 coordinates need tileIndex property');\n    }\n    return options.mvt;\n}\n/**\n * @param feature\n * @param options\n * @returns decoded feature\n */\nfunction getDecodedFeature(feature, options, layerName) {\n    const decodedFeature = feature.toGeoJSON(\n    // @ts-expect-error What is going on here?\n    options.coordinates === 'wgs84' ? options.tileIndex : transformToLocalCoordinates);\n    // Add layer name to GeoJSON properties\n    if (options.layerProperty) {\n        decodedFeature.properties[options.layerProperty] = layerName;\n    }\n    return decodedFeature;\n}\n/**\n * @param feature\n * @param options\n * @returns decoded binary feature\n */\nfunction getDecodedFeatureBinary(feature, options, layerName) {\n    const decodedFeature = feature.toBinaryCoordinates(\n    // @ts-expect-error\n    options.coordinates === 'wgs84' ? options.tileIndex : transformToLocalCoordinatesBinary);\n    // Add layer name to GeoJSON properties\n    if (options.layerProperty && decodedFeature.properties) {\n        decodedFeature.properties[options.layerProperty] = layerName;\n    }\n    return decodedFeature;\n}\n/**\n * @param line\n * @param feature\n */\nfunction transformToLocalCoordinates(line, feature) {\n    // This function transforms local coordinates in a\n    // [0 - bufferSize, this.extent + bufferSize] range to a\n    // [0 - (bufferSize / this.extent), 1 + (bufferSize / this.extent)] range.\n    // The resulting extent would be 1.\n    const { extent } = feature;\n    for (let i = 0; i < line.length; i++) {\n        const p = line[i];\n        p[0] /= extent;\n        p[1] /= extent;\n    }\n}\nfunction transformToLocalCoordinatesBinary(data, feature) {\n    // For the binary code path, the feature data is just\n    // one big flat array, so we just divide each value\n    const { extent } = feature;\n    for (let i = 0, il = data.length; i < il; ++i) {\n        data[i] /= extent;\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\n/**\n * Classifies an array of rings into polygons with outer rings and holes\n * @param rings\n * @returns polygons\n */\nexport function classifyRings(rings) {\n    const len = rings.length;\n    if (len <= 1)\n        return [rings];\n    const polygons = [];\n    let polygon;\n    let ccw;\n    for (let i = 0; i < len; i++) {\n        const area = signedArea(rings[i]);\n        if (area === 0)\n            continue; // eslint-disable-line no-continue\n        if (ccw === undefined)\n            ccw = area < 0;\n        if (ccw === area < 0) {\n            if (polygon)\n                polygons.push(polygon);\n            polygon = [rings[i]];\n        }\n        else if (polygon)\n            polygon.push(rings[i]);\n    }\n    if (polygon)\n        polygons.push(polygon);\n    return polygons;\n}\n/**\n *\n * @param ring\n * @returns sum\n */\nexport function signedArea(ring) {\n    let sum = 0;\n    for (let i = 0, j = ring.length - 1, p1, p2; i < ring.length; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2[0] - p1[0]) * (p1[1] + p2[1]);\n    }\n    return sum;\n}\n/**\n *\n * @param tag\n * @param feature\n * @param pbf\n */\nexport function readFeature(tag, feature, pbf) {\n    if (feature && pbf) {\n        if (tag === 1)\n            feature.id = pbf.readVarint();\n        else if (tag === 2)\n            readTag(pbf, feature);\n        else if (tag === 3)\n            feature.type = pbf.readVarint();\n        else if (tag === 4)\n            feature._geometry = pbf.pos;\n    }\n}\n/**\n *\n * @param pbf\n * @param feature\n */\nexport function readTag(pbf, feature) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n        const key = feature._keys[pbf.readVarint()];\n        const value = feature._values[pbf.readVarint()];\n        feature.properties[key] = value;\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { readFeature, classifyRings } from \"../../helpers/mapbox-util-functions.js\";\nexport class VectorTileFeature {\n    properties;\n    extent;\n    type;\n    id;\n    _pbf;\n    _geometry;\n    _keys;\n    _values;\n    static get types() {\n        return ['Unknown', 'Point', 'LineString', 'Polygon'];\n    }\n    constructor(pbf, end, extent, keys, values) {\n        // Public\n        this.properties = {};\n        this.extent = extent;\n        this.type = 0;\n        this.id = null;\n        // Private\n        this._pbf = pbf;\n        this._geometry = -1;\n        this._keys = keys;\n        this._values = values;\n        pbf.readFields(readFeature, this, end);\n    }\n    // eslint-disable-next-line complexity, max-statements\n    loadGeometry() {\n        const pbf = this._pbf;\n        pbf.pos = this._geometry;\n        const end = pbf.readVarint() + pbf.pos;\n        let cmd = 1;\n        let length = 0;\n        let x = 0;\n        let y = 0;\n        const lines = [];\n        let line;\n        while (pbf.pos < end) {\n            if (length <= 0) {\n                const cmdLen = pbf.readVarint();\n                cmd = cmdLen & 0x7;\n                length = cmdLen >> 3;\n            }\n            length--;\n            if (cmd === 1 || cmd === 2) {\n                x += pbf.readSVarint();\n                y += pbf.readSVarint();\n                if (cmd === 1) {\n                    // moveTo\n                    if (line)\n                        lines.push(line);\n                    line = [];\n                }\n                if (line)\n                    line.push([x, y]);\n            }\n            else if (cmd === 7) {\n                // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n                if (line) {\n                    line.push(line[0].slice()); // closePolygon\n                }\n            }\n            else {\n                throw new Error(`unknown command ${cmd}`);\n            }\n        }\n        if (line)\n            lines.push(line);\n        return lines;\n    }\n    // eslint-disable-next-line max-statements\n    bbox() {\n        const pbf = this._pbf;\n        pbf.pos = this._geometry;\n        const end = pbf.readVarint() + pbf.pos;\n        let cmd = 1;\n        let length = 0;\n        let x = 0;\n        let y = 0;\n        let x1 = Infinity;\n        let x2 = -Infinity;\n        let y1 = Infinity;\n        let y2 = -Infinity;\n        while (pbf.pos < end) {\n            if (length <= 0) {\n                const cmdLen = pbf.readVarint();\n                cmd = cmdLen & 0x7;\n                length = cmdLen >> 3;\n            }\n            length--;\n            if (cmd === 1 || cmd === 2) {\n                x += pbf.readSVarint();\n                y += pbf.readSVarint();\n                if (x < x1)\n                    x1 = x;\n                if (x > x2)\n                    x2 = x;\n                if (y < y1)\n                    y1 = y;\n                if (y > y2)\n                    y2 = y;\n            }\n            else if (cmd !== 7) {\n                throw new Error(`unknown command ${cmd}`);\n            }\n        }\n        return [x1, y1, x2, y2];\n    }\n    _toGeoJSON(transform) {\n        let coords = this.loadGeometry();\n        let type = VectorTileFeature.types[this.type];\n        let i;\n        let j;\n        // eslint-disable-next-line default-case\n        switch (this.type) {\n            case 1:\n                const points = [];\n                for (i = 0; i < coords.length; i++) {\n                    points[i] = coords[i][0];\n                }\n                coords = points;\n                transform(coords, this);\n                break;\n            case 2:\n                for (i = 0; i < coords.length; i++) {\n                    transform(coords[i], this);\n                }\n                break;\n            case 3:\n                coords = classifyRings(coords);\n                for (i = 0; i < coords.length; i++) {\n                    for (j = 0; j < coords[i].length; j++) {\n                        transform(coords[i][j], this);\n                    }\n                }\n                break;\n        }\n        if (coords.length === 1) {\n            coords = coords[0];\n        }\n        else {\n            type = `Multi${type}`;\n        }\n        const result = {\n            type: 'Feature',\n            geometry: {\n                type,\n                coordinates: coords\n            },\n            properties: this.properties\n        };\n        if (this.id !== null) {\n            result.id = this.id;\n        }\n        return result;\n    }\n    toGeoJSON(options) {\n        if (typeof options === 'function') {\n            return this._toGeoJSON(options);\n        }\n        const { x, y, z } = options;\n        const size = this.extent * Math.pow(2, z);\n        const x0 = this.extent * x;\n        const y0 = this.extent * y;\n        function project(line) {\n            for (let j = 0; j < line.length; j++) {\n                const p = line[j];\n                p[0] = ((p[0] + x0) * 360) / size - 180;\n                const y2 = 180 - ((p[1] + y0) * 360) / size;\n                p[1] = (360 / Math.PI) * Math.atan(Math.exp((y2 * Math.PI) / 180)) - 90;\n            }\n        }\n        return this._toGeoJSON(project);\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { VectorTileFeature } from \"./vector-tile-feature.js\";\nexport class VectorTileLayer {\n    version;\n    name;\n    extent;\n    length;\n    _pbf;\n    _keys;\n    _values;\n    _features;\n    constructor(pbf, end) {\n        // Public\n        this.version = 1;\n        this.name = '';\n        this.extent = 4096;\n        this.length = 0;\n        // Private\n        this._pbf = pbf;\n        this._keys = [];\n        this._values = [];\n        this._features = [];\n        pbf.readFields(readLayer, this, end);\n        this.length = this._features.length;\n    }\n    /**\n     * return feature `i` from this layer as a `VectorTileFeature`\n     * @param index\n     * @returns feature\n     */\n    feature(i) {\n        if (i < 0 || i >= this._features.length) {\n            throw new Error('feature index out of bounds');\n        }\n        this._pbf.pos = this._features[i];\n        const end = this._pbf.readVarint() + this._pbf.pos;\n        return new VectorTileFeature(this._pbf, end, this.extent, this._keys, this._values);\n    }\n}\n/**\n *\n * @param tag\n * @param layer\n * @param pbf\n */\nfunction readLayer(tag, layer, pbf) {\n    if (layer && pbf) {\n        if (tag === 15)\n            layer.version = pbf.readVarint();\n        else if (tag === 1)\n            layer.name = pbf.readString();\n        else if (tag === 5)\n            layer.extent = pbf.readVarint();\n        else if (tag === 2)\n            layer._features.push(pbf.pos);\n        else if (tag === 3)\n            layer._keys.push(pbf.readString());\n        else if (tag === 4)\n            layer._values.push(readValueMessage(pbf));\n    }\n}\n/**\n *\n * @param pbf\n * @returns value\n */\nfunction readValueMessage(pbf) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n        const tag = pbf.readVarint() >> 3;\n        value =\n            tag === 1\n                ? pbf.readString()\n                : tag === 2\n                    ? pbf.readFloat()\n                    : tag === 3\n                        ? pbf.readDouble()\n                        : tag === 4\n                            ? pbf.readVarint64()\n                            : tag === 5\n                                ? pbf.readVarint()\n                                : tag === 6\n                                    ? pbf.readSVarint()\n                                    : tag === 7\n                                        ? pbf.readBoolean()\n                                        : null;\n    }\n    return value;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\n// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\nimport { VectorTileLayer } from \"./vector-tile-layer.js\";\nexport class VectorTile {\n    layers;\n    constructor(pbf, end) {\n        this.layers = pbf.readFields(readTile, {}, end);\n    }\n}\n/**\n *\n * @param tag\n * @param layers\n * @param pbf\n */\nfunction readTile(tag, layers, pbf) {\n    if (tag === 3) {\n        if (pbf) {\n            const layer = new VectorTileLayer(pbf, pbf.readVarint() + pbf.pos);\n            if (layer.length && layers) {\n                layers[layer.name] = layer;\n            }\n        }\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { getPolygonSignedArea } from '@math.gl/polygon';\n/**\n * Classifies an array of rings into polygons with outer rings and holes\n * The function also detects holes which have zero area and\n * removes them. In doing so it modifies the input\n * `geom.data` array to remove the unneeded data\n *\n * @param geometry\n * @returns object\n */\n// eslint-disable-next-line max-statements\nexport function classifyRings(geom) {\n    const len = geom.indices.length;\n    const type = 'Polygon';\n    if (len <= 1) {\n        return {\n            type,\n            data: geom.data,\n            areas: [[getPolygonSignedArea(geom.data)]],\n            indices: [geom.indices]\n        };\n    }\n    const areas = [];\n    const polygons = [];\n    let ringAreas = [];\n    let polygon = [];\n    let ccw;\n    let offset = 0;\n    for (let endIndex, i = 0, startIndex; i < len; i++) {\n        startIndex = geom.indices[i] - offset;\n        endIndex = geom.indices[i + 1] - offset || geom.data.length;\n        const shape = geom.data.slice(startIndex, endIndex);\n        const area = getPolygonSignedArea(shape);\n        if (area === 0) {\n            // This polygon has no area, so remove it from the shape\n            // Remove the section from the data array\n            const before = geom.data.slice(0, startIndex);\n            const after = geom.data.slice(endIndex);\n            geom.data = before.concat(after);\n            // Need to offset any remaining indices as we have\n            // modified the data buffer\n            offset += endIndex - startIndex;\n            // Do not add this index to the output and process next shape\n            continue; // eslint-disable-line no-continue\n        }\n        if (ccw === undefined)\n            ccw = area < 0;\n        if (ccw === area < 0) {\n            if (polygon.length) {\n                areas.push(ringAreas);\n                polygons.push(polygon);\n            }\n            polygon = [startIndex];\n            ringAreas = [area];\n        }\n        else {\n            ringAreas.push(area);\n            polygon.push(startIndex);\n        }\n    }\n    if (ringAreas)\n        areas.push(ringAreas);\n    if (polygon.length)\n        polygons.push(polygon);\n    return { type, areas, indices: polygons, data: geom.data };\n}\n/**\n *\n * @param data\n * @param x0\n * @param y0\n * @param size\n */\nexport function project(data, x0, y0, size) {\n    for (let j = 0, jl = data.length; j < jl; j += 2) {\n        data[j] = ((data[j] + x0) * 360) / size - 180;\n        const y2 = 180 - ((data[j + 1] + y0) * 360) / size;\n        data[j + 1] = (360 / Math.PI) * Math.atan(Math.exp((y2 * Math.PI) / 180)) - 90;\n    }\n}\n/**\n * All code below is unchanged from the original Mapbox implemenation\n *\n * @param tag\n * @param feature\n * @param pbf\n */\nexport function readFeature(tag, feature, pbf) {\n    if (feature && pbf) {\n        if (tag === 1)\n            feature.id = pbf.readVarint();\n        else if (tag === 2)\n            readTag(pbf, feature);\n        else if (tag === 3)\n            feature.type = pbf.readVarint();\n        else if (tag === 4)\n            feature._geometry = pbf.pos;\n    }\n}\n/**\n * @param pbf\n * @param feature\n */\nexport function readTag(pbf, feature) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n        const key = feature._keys[pbf.readVarint()];\n        const value = feature._values[pbf.readVarint()];\n        feature.properties[key] = value;\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { classifyRings, project, readFeature } from \"../../helpers/binary-util-functions.js\";\n// Reduce GC by reusing variables\nlet endPos;\nlet cmd;\nlet cmdLen;\nlet length;\nlet x;\nlet y;\nlet i;\nexport const TEST_EXPORTS = {\n    classifyRings\n};\nexport class BinaryVectorTileFeature {\n    properties;\n    extent;\n    type;\n    id;\n    _pbf;\n    _geometry;\n    _keys;\n    _values;\n    _geometryInfo;\n    // eslint-disable-next-line max-params\n    constructor(pbf, end, extent, keys, values, geometryInfo) {\n        // Public\n        this.properties = {};\n        this.extent = extent;\n        this.type = 0;\n        this.id = null;\n        // Private\n        this._pbf = pbf;\n        this._geometry = -1;\n        this._keys = keys;\n        this._values = values;\n        this._geometryInfo = geometryInfo;\n        pbf.readFields(readFeature, this, end);\n    }\n    // eslint-disable-next-line complexity, max-statements\n    loadGeometry() {\n        const pbf = this._pbf;\n        pbf.pos = this._geometry;\n        endPos = pbf.readVarint() + pbf.pos;\n        cmd = 1;\n        length = 0;\n        x = 0;\n        y = 0;\n        i = 0;\n        // Note: I attempted to replace the `data` array with a\n        // Float32Array, but performance was worse, both using\n        // `set()` and direct index access. Also, we cannot\n        // know how large the buffer should be, so it would\n        // increase memory usage\n        const indices = []; // Indices where geometries start\n        const data = []; // Flat array of coordinate data\n        while (pbf.pos < endPos) {\n            if (length <= 0) {\n                cmdLen = pbf.readVarint();\n                cmd = cmdLen & 0x7;\n                length = cmdLen >> 3;\n            }\n            length--;\n            if (cmd === 1 || cmd === 2) {\n                x += pbf.readSVarint();\n                y += pbf.readSVarint();\n                if (cmd === 1) {\n                    // New line\n                    indices.push(i);\n                }\n                data.push(x, y);\n                i += 2;\n            }\n            else if (cmd === 7) {\n                // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n                if (i > 0) {\n                    const start = indices[indices.length - 1]; // start index of polygon\n                    data.push(data[start], data[start + 1]); // closePolygon\n                    i += 2;\n                }\n            }\n            else {\n                throw new Error(`unknown command ${cmd}`);\n            }\n        }\n        return { data, indices };\n    }\n    /**\n     *\n     * @param transform\n     * @returns result\n     */\n    _toBinaryCoordinates(transform) {\n        // Expands the protobuf data to an intermediate Flat GeoJSON\n        // data format, which maps closely to the binary data buffers.\n        // It is similar to GeoJSON, but rather than storing the coordinates\n        // in multidimensional arrays, we have a 1D `data` with all the\n        // coordinates, and then index into this using the `indices`\n        // parameter, e.g.\n        //\n        // geometry: {\n        //   type: 'Point', data: [1,2], indices: [0]\n        // }\n        // geometry: {\n        //   type: 'LineString', data: [1,2,3,4,...], indices: [0]\n        // }\n        // geometry: {\n        //   type: 'Polygon', data: [1,2,3,4,...], indices: [[0, 2]]\n        // }\n        // Thus the indices member lets us look up the relevant range\n        // from the data array.\n        // The Multi* versions of the above types share the same data\n        // structure, just with multiple elements in the indices array\n        const geom = this.loadGeometry();\n        let geometry;\n        // Apply the supplied transformation to data\n        transform(geom.data, this);\n        const coordLength = 2;\n        // eslint-disable-next-line default-case\n        switch (this.type) {\n            case 1: // Point\n                this._geometryInfo.pointFeaturesCount++;\n                this._geometryInfo.pointPositionsCount += geom.indices.length;\n                geometry = { type: 'Point', ...geom };\n                break;\n            case 2: // LineString\n                this._geometryInfo.lineFeaturesCount++;\n                this._geometryInfo.linePathsCount += geom.indices.length;\n                this._geometryInfo.linePositionsCount += geom.data.length / coordLength;\n                geometry = { type: 'LineString', ...geom };\n                break;\n            case 3: // Polygon\n                geometry = classifyRings(geom);\n                // Unlike Point & LineString geom.indices is a 2D array, thanks\n                // to the classifyRings method\n                this._geometryInfo.polygonFeaturesCount++;\n                this._geometryInfo.polygonObjectsCount += geometry.indices.length;\n                for (const indices of geometry.indices) {\n                    this._geometryInfo.polygonRingsCount += indices.length;\n                }\n                this._geometryInfo.polygonPositionsCount += geometry.data.length / coordLength;\n                break;\n            default:\n                throw new Error(`Invalid geometry type: ${this.type}`);\n        }\n        const result = { type: 'Feature', geometry, properties: this.properties };\n        if (this.id !== null) {\n            result.id = this.id;\n        }\n        return result;\n    }\n    toBinaryCoordinates(options) {\n        if (typeof options === 'function') {\n            return this._toBinaryCoordinates(options);\n        }\n        const { x, y, z } = options;\n        const size = this.extent * Math.pow(2, z);\n        const x0 = this.extent * x;\n        const y0 = this.extent * y;\n        return this._toBinaryCoordinates((data) => project(data, x0, y0, size));\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\n/* eslint-disable indent */\n// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\nimport { BinaryVectorTileFeature } from \"./vector-tile-feature.js\";\nexport class BinaryVectorTileLayer {\n    version;\n    name;\n    extent;\n    length;\n    _pbf;\n    _keys;\n    _values;\n    _features;\n    constructor(pbf, end) {\n        // Public\n        this.version = 1;\n        this.name = '';\n        this.extent = 4096;\n        this.length = 0;\n        // Private\n        this._pbf = pbf;\n        this._keys = [];\n        this._values = [];\n        this._features = [];\n        pbf.readFields(readLayer, this, end);\n        this.length = this._features.length;\n    }\n    /**\n     * return feature `i` from this layer as a `BinaryVectorTileFeature`\n     *\n     * @param index\n     * @param geometryInfo\n     * @returns {BinaryVectorTileFeature}\n     */\n    feature(i, geometryInfo) {\n        if (i < 0 || i >= this._features.length) {\n            throw new Error('feature index out of bounds');\n        }\n        this._pbf.pos = this._features[i];\n        const end = this._pbf.readVarint() + this._pbf.pos;\n        return new BinaryVectorTileFeature(this._pbf, end, this.extent, this._keys, this._values, geometryInfo);\n    }\n}\n/**\n *\n * @param tag\n * @param layer\n * @param pbf\n */\nfunction readLayer(tag, layer, pbf) {\n    if (layer && pbf) {\n        if (tag === 15)\n            layer.version = pbf.readVarint();\n        else if (tag === 1)\n            layer.name = pbf.readString();\n        else if (tag === 5)\n            layer.extent = pbf.readVarint();\n        else if (tag === 2)\n            layer._features.push(pbf.pos);\n        else if (tag === 3)\n            layer._keys.push(pbf.readString());\n        else if (tag === 4)\n            layer._values.push(readValueMessage(pbf));\n    }\n}\n/**\n *\n * @param pbf\n * @returns value\n */\nfunction readValueMessage(pbf) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n        const tag = pbf.readVarint() >> 3;\n        value =\n            tag === 1\n                ? pbf.readString()\n                : tag === 2\n                    ? pbf.readFloat()\n                    : tag === 3\n                        ? pbf.readDouble()\n                        : tag === 4\n                            ? pbf.readVarint64()\n                            : tag === 5\n                                ? pbf.readVarint()\n                                : tag === 6\n                                    ? pbf.readSVarint()\n                                    : tag === 7\n                                        ? pbf.readBoolean()\n                                        : null;\n    }\n    return value;\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\n// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\nimport { BinaryVectorTileLayer } from \"./vector-tile-layer.js\";\nexport class BinaryVectorTile {\n    layers;\n    constructor(pbf, end) {\n        this.layers = pbf.readFields(readTile, {}, end);\n    }\n}\n/**\n *\n * @param tag\n * @param layers\n * @param pbf\n */\nfunction readTile(tag, layers, pbf) {\n    if (tag === 3) {\n        if (pbf) {\n            const layer = new BinaryVectorTileLayer(pbf, pbf.readVarint() + pbf.pos);\n            if (layer.length && layers) {\n                layers[layer.name] = layer;\n            }\n        }\n    }\n}\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright vis.gl contributors\nimport { parseMVT } from \"./lib/parse-mvt.js\";\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof \"4.2.0-beta.2\" !== 'undefined' ? \"4.2.0-beta.2\" : 'latest';\n/**\n * Worker loader for the Mapbox Vector Tile format\n */\nexport const MVTWorkerLoader = {\n    dataType: null,\n    batchType: null,\n    name: 'Mapbox Vector Tile',\n    id: 'mvt',\n    module: 'mvt',\n    version: VERSION,\n    // Note: ArcGIS uses '.pbf' extension and 'application/octet-stream'\n    extensions: ['mvt', 'pbf'],\n    mimeTypes: [\n        // https://www.iana.org/assignments/media-types/application/vnd.mapbox-vector-tile\n        'application/vnd.mapbox-vector-tile',\n        'application/x-protobuf'\n        // 'application/octet-stream'\n    ],\n    worker: true,\n    category: 'geometry',\n    options: {\n        mvt: {\n            shape: 'geojson',\n            coordinates: 'local',\n            layerProperty: 'layerName',\n            layers: undefined,\n            tileIndex: null\n        }\n    }\n};\n/**\n * Loader for the Mapbox Vector Tile format\n */\nexport const MVTLoader = {\n    ...MVTWorkerLoader,\n    parse: async (arrayBuffer, options) => parseMVT(arrayBuffer, options),\n    parseSync: parseMVT,\n    binary: true\n};\n", "// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { DataSource, resolvePath } from '@loaders.gl/loader-utils';\nimport { ImageLoader, getBinaryImageMetadata } from '@loaders.gl/images';\nimport { MVTLoader, TileJSONLoader } from '@loaders.gl/mvt';\n/**\n * MVT data source for Mapbox Vector Tiles v1.\n */\n/**\n * A PMTiles data source\n * @note Can be either a raster or vector tile source depending on the contents of the PMTiles file.\n */\nexport class MVTSource extends DataSource {\n    props;\n    url;\n    metadataUrl = null;\n    data;\n    schema = 'tms';\n    metadata;\n    extension;\n    mimeType = null;\n    constructor(props) {\n        super(props);\n        this.props = props;\n        this.url = resolvePath(props.url);\n        this.metadataUrl =\n            props.metadataUrl === undefined ? `${this.url}/tilejson.json` : props.metadataUrl;\n        this.extension = props.extension || '.png';\n        this.data = this.url;\n        this.getTileData = this.getTileData.bind(this);\n        this.metadata = this.getMetadata();\n        if (isURLTemplate(this.url)) {\n            this.schema = 'template';\n        }\n    }\n    // @ts-ignore - Metadata type misalignment\n    async getMetadata() {\n        if (!this.metadataUrl) {\n            return null;\n        }\n        let response;\n        try {\n            // Annoyingly, on CORS errors, fetch doesn't use the response status/ok mechanism but instead throws\n            // CORS errors are common when requesting an unavailable sub resource such as a metadata file or an unavailable tile)\n            response = await this.fetch(this.metadataUrl);\n        }\n        catch (error) {\n            // eslint-disable-next-line no-console\n            console.error(error.message);\n            return null;\n        }\n        if (!response.ok) {\n            // eslint-disable-next-line no-console\n            console.error(response.statusText);\n            return null;\n        }\n        const tileJSON = await response.text();\n        const metadata = TileJSONLoader.parseTextSync?.(tileJSON) || null;\n        // TODO add metadata attributions\n        // metadata.attributions = [...this.props.attributions, ...(metadata.attributions || [])];\n        // if (metadata?.mimeType) {\n        //   this.mimeType = metadata?.tileMIMEType;\n        // }\n        return metadata;\n    }\n    getTileMIMEType() {\n        return this.mimeType;\n    }\n    async getTile(tileParams) {\n        const { x, y, zoom: z } = tileParams;\n        const tileUrl = this.getTileURL(x, y, z);\n        const response = await this.fetch(tileUrl);\n        if (!response.ok) {\n            return null;\n        }\n        const arrayBuffer = await response.arrayBuffer();\n        return arrayBuffer;\n    }\n    // Tile Source interface implementation: deck.gl compatible API\n    // TODO - currently only handles image tiles, not vector tiles\n    async getTileData(tileParams) {\n        const { x, y, z } = tileParams.index;\n        // const metadata = await this.metadata;\n        // mimeType = metadata?.tileMIMEType || 'application/vnd.mapbox-vector-tile';\n        const arrayBuffer = await this.getTile({ x, y, zoom: z, layers: [] });\n        if (arrayBuffer === null) {\n            return null;\n        }\n        const imageMetadata = getBinaryImageMetadata(arrayBuffer);\n        this.mimeType =\n            this.mimeType || imageMetadata?.mimeType || 'application/vnd.mapbox-vector-tile';\n        switch (this.mimeType) {\n            case 'application/vnd.mapbox-vector-tile':\n                return await this._parseVectorTile(arrayBuffer, { x, y, zoom: z, layers: [] });\n            default:\n                return await this._parseImageTile(arrayBuffer);\n        }\n    }\n    // ImageTileSource interface implementation\n    async getImageTile(tileParams) {\n        const arrayBuffer = await this.getTile(tileParams);\n        return arrayBuffer ? this._parseImageTile(arrayBuffer) : null;\n    }\n    async _parseImageTile(arrayBuffer) {\n        return await ImageLoader.parse(arrayBuffer, this.loadOptions);\n    }\n    // VectorTileSource interface implementation\n    async getVectorTile(tileParams) {\n        const arrayBuffer = await this.getTile(tileParams);\n        return arrayBuffer ? this._parseVectorTile(arrayBuffer, tileParams) : null;\n    }\n    async _parseVectorTile(arrayBuffer, tileParams) {\n        const loadOptions = {\n            shape: 'geojson-table',\n            mvt: {\n                coordinates: 'wgs84',\n                tileIndex: { x: tileParams.x, y: tileParams.y, z: tileParams.zoom },\n                ...this.loadOptions?.mvt\n            },\n            ...this.loadOptions\n        };\n        return await MVTLoader.parse(arrayBuffer, loadOptions);\n    }\n    getMetadataUrl() {\n        return this.metadataUrl;\n    }\n    getTileURL(x, y, z) {\n        switch (this.schema) {\n            case 'xyz':\n                return `${this.url}/${x}/${y}/${z}${this.extension}`;\n            case 'tms':\n                return `${this.url}/${z}/${x}/${y}${this.extension}`;\n            case 'template':\n                return getURLFromTemplate(this.url, x, y, z, '0');\n            default:\n                throw new Error(this.schema);\n        }\n    }\n}\nexport function isURLTemplate(s) {\n    return /(?=.*{z})(?=.*{x})(?=.*({y}|{-y}))|(?=.*{x})(?=.*({y}|{-y})(?=.*{z}))/.test(s);\n}\nconst xRegex = new RegExp('{x}', 'g');\nconst yRegex = new RegExp('{y}', 'g');\nconst zRegex = new RegExp('{z}', 'g');\n/**\n * Get a URL from a URL template\n * @note copied from deck.gl/modules/geo-layers/src/tileset-2d/utils.ts\n * @param template - URL template\n * @param x - tile x coordinate\n * @param y - tile y coordinate\n * @param z - tile z coordinate\n * @param id - tile id\n * @returns URL\n */\nexport function getURLFromTemplate(template, x, y, z, id = '0') {\n    if (Array.isArray(template)) {\n        const i = stringHash(id) % template.length;\n        template = template[i];\n    }\n    let url = template;\n    url = url.replace(xRegex, String(x));\n    url = url.replace(yRegex, String(y));\n    url = url.replace(zRegex, String(z));\n    // Back-compatible support for {-y}\n    if (Number.isInteger(y) && Number.isInteger(z)) {\n        url = url.replace(/\\{-y\\}/g, String(Math.pow(2, z) - y - 1));\n    }\n    return url;\n}\nfunction stringHash(s) {\n    return Math.abs(s.split('').reduce((a, b) => ((a << 5) - a + b.charCodeAt(0)) | 0, 0));\n}\n", "import { lerp } from '@math.gl/core';\nconst availableTransformations = {\n    Point,\n    MultiPoint,\n    LineString,\n    MultiLineString,\n    Polygon,\n    MultiPolygon\n};\nfunction Point([pointX, pointY], [nw, se], viewport) {\n    const x = lerp(nw[0], se[0], pointX);\n    const y = lerp(nw[1], se[1], pointY);\n    return viewport.unprojectFlat([x, y]);\n}\nfunction getPoints(geometry, bbox, viewport) {\n    return geometry.map(g => Point(g, bbox, viewport));\n}\nfunction MultiPoint(multiPoint, bbox, viewport) {\n    return getPoints(multiPoint, bbox, viewport);\n}\nfunction LineString(line, bbox, viewport) {\n    return getPoints(line, bbox, viewport);\n}\nfunction MultiLineString(multiLineString, bbox, viewport) {\n    return multiLineString.map(lineString => LineString(lineString, bbox, viewport));\n}\nfunction Polygon(polygon, bbox, viewport) {\n    return polygon.map(polygonRing => getPoints(polygonRing, bbox, viewport));\n}\nfunction MultiPolygon(multiPolygon, bbox, viewport) {\n    return multiPolygon.map(polygon => Polygon(polygon, bbox, viewport));\n}\nexport function transform(geometry, bbox, viewport) {\n    const nw = viewport.projectFlat([bbox.west, bbox.north]);\n    const se = viewport.projectFlat([bbox.east, bbox.south]);\n    const projectedBbox = [nw, se];\n    return {\n        ...geometry,\n        coordinates: availableTransformations[geometry.type](geometry.coordinates, projectedBbox, viewport)\n    };\n}\n", "const GEOM_TYPES = ['points', 'lines', 'polygons'];\n/**\n * Return the index of feature (numericProps or featureIds) for given feature id\n * Example: findIndexBinary(data, 'id', 33) will return the index in the array of numericProps\n * of the feature 33.\n */\nexport default function findIndexBinary(data, // The data in binary format\nuniqueIdProperty, // Name of the unique id property\nfeatureId, // feature id to find\nlayerName // the layer to search in\n) {\n    for (const gt of GEOM_TYPES) {\n        const index = data[gt] && findIndexByType(data[gt], uniqueIdProperty, featureId, layerName);\n        if (index >= 0) {\n            return index;\n        }\n    }\n    return -1;\n}\nfunction findIndexByType(geomData, uniqueIdProperty, featureId, layerName) {\n    const featureIds = geomData.featureIds.value;\n    if (!featureIds.length) {\n        return -1;\n    }\n    let startFeatureIndex = 0;\n    let endFeatureIndex = featureIds[featureIds.length - 1] + 1;\n    if (layerName) {\n        const layerRange = getLayerRange(geomData, layerName);\n        if (layerRange) {\n            startFeatureIndex = layerRange[0];\n            endFeatureIndex = layerRange[1] + 1;\n        }\n        else {\n            return -1;\n        }\n    }\n    // Look for the uniqueIdProperty\n    let featureIndex = -1;\n    if (uniqueIdProperty in geomData.numericProps) {\n        const vertexIndex = geomData.numericProps[uniqueIdProperty].value.findIndex((x, i) => x === featureId && featureIds[i] >= startFeatureIndex && featureIds[i] < endFeatureIndex);\n        return vertexIndex >= 0 ? geomData.globalFeatureIds.value[vertexIndex] : -1;\n    }\n    else if (uniqueIdProperty) {\n        featureIndex = findIndex(geomData.properties, elem => elem[uniqueIdProperty] === featureId, startFeatureIndex, endFeatureIndex);\n    }\n    else if (geomData.fields) {\n        featureIndex = findIndex(geomData.fields, (elem) => elem.id === featureId, startFeatureIndex, endFeatureIndex);\n    }\n    return featureIndex >= 0 ? getGlobalFeatureId(geomData, featureIndex) : -1;\n}\n// Returns [firstFeatureIndex, lastFeatureIndex]\n// MVTLoader parses tiles layer-by-layer, so each layer is a continuous range\nfunction getLayerRange(geomData, layerName) {\n    if (!geomData.__layers) {\n        // Cache a map from properties.layerName to index ranges\n        const layerNames = {};\n        const { properties } = geomData;\n        for (let i = 0; i < properties.length; i++) {\n            const { layerName: key } = properties[i];\n            if (!key) {\n                // ignore\n            }\n            else if (layerNames[key]) {\n                layerNames[key][1] = i;\n            }\n            else {\n                layerNames[key] = [i, i];\n            }\n        }\n        geomData.__layers = layerNames;\n    }\n    return geomData.__layers[layerName];\n}\n// Returns global feature id\nfunction getGlobalFeatureId(geomData, featureIndex) {\n    if (!geomData.__ids) {\n        // Cache a map from featureId to globalFeatureId\n        const result = [];\n        const featureIds = geomData.featureIds.value;\n        const globalFeatureIds = geomData.globalFeatureIds.value;\n        for (let i = 0; i < featureIds.length; i++) {\n            result[featureIds[i]] = globalFeatureIds[i];\n        }\n        geomData.__ids = result;\n    }\n    return geomData.__ids[featureIndex];\n}\n// Like array.findIndex, but only search within a range\nfunction findIndex(array, predicate, startIndex, endIndex) {\n    for (let i = startIndex; i < endIndex; i++) {\n        if (predicate(array[i], i)) {\n            return i;\n        }\n    }\n    return -1;\n}\n", "import { log, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { GeoJsonLayer } from '@deck.gl/layers';\nimport { ClipExtension } from '@deck.gl/extensions';\nimport { Matrix4 } from '@math.gl/core';\nimport { MVTWorkerLoader } from '@loaders.gl/mvt';\nimport { binaryToGeojson } from '@loaders.gl/gis';\nimport { transform } from \"./coordinate-transform.js\";\nimport findIndexBinary from \"./find-index-binary.js\";\nimport TileLayer from \"../tile-layer/tile-layer.js\";\nimport { urlType, getURLFromTemplate, isGeoBoundingBox, isURLTemplate } from \"../tileset-2d/index.js\";\nconst WORLD_SIZE = 512;\nconst defaultProps = {\n    ...GeoJsonLayer.defaultProps,\n    data: urlType,\n    onDataLoad: { type: 'function', value: null, optional: true, compare: false },\n    uniqueIdProperty: '',\n    highlightedFeatureId: null,\n    loaders: [MVTWorkerLoader],\n    binary: true\n};\n/** Render data formatted as [Mapbox Vector Tiles](https://docs.mapbox.com/vector-tiles/specification/). */\nexport default class MVTLayer extends TileLayer {\n    static { this.layerName = 'MVTLayer'; }\n    static { this.defaultProps = defaultProps; }\n    initializeState() {\n        super.initializeState();\n        // GlobeView doesn't work well with binary data\n        const binary = this.context.viewport.resolution !== undefined ? false : this.props.binary;\n        this.setState({\n            binary,\n            data: null,\n            tileJSON: null,\n            hoveredFeatureId: null,\n            hoveredFeatureLayerName: null\n        });\n    }\n    get isLoaded() {\n        return Boolean(this.state?.data && super.isLoaded);\n    }\n    updateState({ props, oldProps, context, changeFlags }) {\n        if (changeFlags.dataChanged) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this._updateTileData();\n        }\n        if (this.state?.data) {\n            super.updateState({ props, oldProps, context, changeFlags });\n            this._setWGS84PropertyForTiles();\n        }\n        const { highlightColor } = props;\n        if (highlightColor !== oldProps.highlightColor && Array.isArray(highlightColor)) {\n            this.setState({ highlightColor });\n        }\n    }\n    /* eslint-disable complexity */\n    async _updateTileData() {\n        let data = this.props.data;\n        let tileJSON = null;\n        if (typeof data === 'string' && !isURLTemplate(data)) {\n            const { onDataLoad, fetch } = this.props;\n            this.setState({ data: null, tileJSON: null });\n            try {\n                tileJSON = await fetch(data, { propName: 'data', layer: this, loaders: [] });\n            }\n            catch (error) {\n                this.raiseError(error, 'loading TileJSON');\n                data = null;\n            }\n            if (onDataLoad) {\n                onDataLoad(tileJSON, { propName: 'data', layer: this });\n            }\n        }\n        else if (data && typeof data === 'object' && 'tilejson' in data) {\n            tileJSON = data;\n        }\n        if (tileJSON) {\n            data = tileJSON.tiles;\n        }\n        this.setState({ data, tileJSON });\n    }\n    _getTilesetOptions() {\n        const opts = super._getTilesetOptions();\n        const tileJSON = this.state.tileJSON;\n        const { minZoom, maxZoom } = this.props;\n        if (tileJSON) {\n            if (Number.isFinite(tileJSON.minzoom) && tileJSON.minzoom > minZoom) {\n                opts.minZoom = tileJSON.minzoom;\n            }\n            if (Number.isFinite(tileJSON.maxzoom) &&\n                (!Number.isFinite(maxZoom) || tileJSON.maxzoom < maxZoom)) {\n                opts.maxZoom = tileJSON.maxzoom;\n            }\n        }\n        return opts;\n    }\n    /* eslint-disable complexity */\n    renderLayers() {\n        if (!this.state?.data)\n            return null;\n        return super.renderLayers();\n    }\n    getTileData(loadProps) {\n        const { data, binary } = this.state;\n        const { index, signal } = loadProps;\n        const url = getURLFromTemplate(data, loadProps);\n        if (!url) {\n            return Promise.reject('Invalid URL');\n        }\n        let loadOptions = this.getLoadOptions();\n        const { fetch } = this.props;\n        loadOptions = {\n            ...loadOptions,\n            mimeType: 'application/x-protobuf',\n            mvt: {\n                ...loadOptions?.mvt,\n                coordinates: this.context.viewport.resolution ? 'wgs84' : 'local',\n                tileIndex: index\n                // Local worker debug\n                // workerUrl: `modules/mvt/dist/mvt-loader.worker.js`\n                // Set worker to null to skip web workers\n                // workerUrl: null\n            },\n            gis: binary ? { format: 'binary' } : {}\n        };\n        return fetch(url, { propName: 'data', layer: this, loadOptions, signal });\n    }\n    renderSubLayers(props) {\n        const { x, y, z } = props.tile.index;\n        const worldScale = Math.pow(2, z);\n        const xScale = WORLD_SIZE / worldScale;\n        const yScale = -xScale;\n        const xOffset = (WORLD_SIZE * x) / worldScale;\n        const yOffset = WORLD_SIZE * (1 - y / worldScale);\n        const modelMatrix = new Matrix4().scale([xScale, yScale, 1]);\n        props.autoHighlight = false;\n        if (!this.context.viewport.resolution) {\n            props.modelMatrix = modelMatrix;\n            props.coordinateOrigin = [xOffset, yOffset, 0];\n            props.coordinateSystem = COORDINATE_SYSTEM.CARTESIAN;\n            props.extensions = [...(props.extensions || []), new ClipExtension()];\n        }\n        const subLayers = super.renderSubLayers(props);\n        if (this.state.binary && !(subLayers instanceof GeoJsonLayer)) {\n            log.warn('renderSubLayers() must return GeoJsonLayer when using binary:true')();\n        }\n        return subLayers;\n    }\n    _updateAutoHighlight(info) {\n        const { uniqueIdProperty } = this.props;\n        const { hoveredFeatureId, hoveredFeatureLayerName } = this.state;\n        const hoveredFeature = info.object;\n        let newHoveredFeatureId = null;\n        let newHoveredFeatureLayerName = null;\n        if (hoveredFeature) {\n            newHoveredFeatureId = getFeatureUniqueId(hoveredFeature, uniqueIdProperty);\n            newHoveredFeatureLayerName = getFeatureLayerName(hoveredFeature);\n        }\n        let { highlightColor } = this.props;\n        if (typeof highlightColor === 'function') {\n            highlightColor = highlightColor(info);\n        }\n        if (hoveredFeatureId !== newHoveredFeatureId ||\n            hoveredFeatureLayerName !== newHoveredFeatureLayerName) {\n            this.setState({\n                highlightColor,\n                hoveredFeatureId: newHoveredFeatureId,\n                hoveredFeatureLayerName: newHoveredFeatureLayerName\n            });\n        }\n    }\n    getPickingInfo(params) {\n        const info = super.getPickingInfo(params);\n        const isWGS84 = Boolean(this.context.viewport.resolution);\n        if (this.state.binary && info.index !== -1) {\n            const { data } = params.sourceLayer.props;\n            info.object = binaryToGeojson(data, {\n                globalFeatureId: info.index\n            });\n        }\n        if (info.object && !isWGS84) {\n            info.object = transformTileCoordsToWGS84(info.object, info.tile.bbox, // eslint-disable-line\n            this.context.viewport);\n        }\n        return info;\n    }\n    getSubLayerPropsByTile(tile) {\n        return {\n            highlightedObjectIndex: this.getHighlightedObjectIndex(tile),\n            highlightColor: this.state.highlightColor\n        };\n    }\n    getHighlightedObjectIndex(tile) {\n        const { hoveredFeatureId, hoveredFeatureLayerName, binary } = this.state;\n        const { uniqueIdProperty, highlightedFeatureId } = this.props;\n        const data = tile.content;\n        const isHighlighted = isFeatureIdDefined(highlightedFeatureId);\n        const isFeatureIdPresent = isFeatureIdDefined(hoveredFeatureId) || isHighlighted;\n        if (!isFeatureIdPresent) {\n            return -1;\n        }\n        const featureIdToHighlight = isHighlighted ? highlightedFeatureId : hoveredFeatureId;\n        // Iterable data\n        if (Array.isArray(data)) {\n            return data.findIndex(feature => {\n                const isMatchingId = getFeatureUniqueId(feature, uniqueIdProperty) === featureIdToHighlight;\n                const isMatchingLayer = isHighlighted || getFeatureLayerName(feature) === hoveredFeatureLayerName;\n                return isMatchingId && isMatchingLayer;\n            });\n            // Non-iterable data\n        }\n        else if (data && binary) {\n            // Get the feature index of the selected item to highlight\n            return findIndexBinary(data, uniqueIdProperty, featureIdToHighlight, isHighlighted ? '' : hoveredFeatureLayerName);\n        }\n        return -1;\n    }\n    _pickObjects(maxObjects) {\n        const { deck, viewport } = this.context;\n        const width = viewport.width;\n        const height = viewport.height;\n        const x = viewport.x;\n        const y = viewport.y;\n        const layerIds = [this.id];\n        return deck.pickObjects({ x, y, width, height, layerIds, maxObjects });\n    }\n    /** Get the rendered features in the current viewport. */\n    getRenderedFeatures(maxFeatures = null) {\n        const features = this._pickObjects(maxFeatures);\n        const featureCache = new Set();\n        const renderedFeatures = [];\n        for (const f of features) {\n            const featureId = getFeatureUniqueId(f.object, this.props.uniqueIdProperty);\n            if (featureId === undefined) {\n                // we have no id for the feature, we just add to the list\n                renderedFeatures.push(f.object);\n            }\n            else if (!featureCache.has(featureId)) {\n                // Add removing duplicates\n                featureCache.add(featureId);\n                renderedFeatures.push(f.object);\n            }\n        }\n        return renderedFeatures;\n    }\n    _setWGS84PropertyForTiles() {\n        const propName = 'dataInWGS84';\n        const tileset = this.state.tileset;\n        // @ts-expect-error selectedTiles are always initialized when tile is being processed\n        tileset.selectedTiles.forEach((tile) => {\n            if (!tile.hasOwnProperty(propName)) {\n                // eslint-disable-next-line accessor-pairs\n                Object.defineProperty(tile, propName, {\n                    get: () => {\n                        // Still loading or encountered an error\n                        if (!tile.content) {\n                            return null;\n                        }\n                        if (this.state.binary && Array.isArray(tile.content) && !tile.content.length) {\n                            // TODO: @loaders.gl/mvt returns [] when no content. It should return a valid empty binary.\n                            // https://github.com/visgl/loaders.gl/pull/1137\n                            return [];\n                        }\n                        const { bbox } = tile;\n                        if (tile._contentWGS84 === undefined && isGeoBoundingBox(bbox)) {\n                            // Create a cache to transform only once\n                            const content = this.state.binary ? binaryToGeojson(tile.content) : tile.content;\n                            tile._contentWGS84 = content.map(feature => transformTileCoordsToWGS84(feature, bbox, this.context.viewport));\n                        }\n                        return tile._contentWGS84;\n                    }\n                });\n            }\n        });\n    }\n}\nfunction getFeatureUniqueId(feature, uniqueIdProperty) {\n    if (feature.properties && uniqueIdProperty) {\n        return feature.properties[uniqueIdProperty];\n    }\n    if ('id' in feature) {\n        return feature.id;\n    }\n    return undefined;\n}\nfunction getFeatureLayerName(feature) {\n    return feature.properties?.layerName || null;\n}\nfunction isFeatureIdDefined(value) {\n    return value !== undefined && value !== null && value !== '';\n}\nfunction transformTileCoordsToWGS84(object, bbox, viewport) {\n    const feature = {\n        ...object,\n        geometry: {\n            type: object.geometry.type\n        }\n    };\n    // eslint-disable-next-line accessor-pairs\n    Object.defineProperty(feature.geometry, 'coordinates', {\n        get: () => {\n            const wgs84Geom = transform(object.geometry, bbox, viewport);\n            return wgs84Geom.coordinates;\n        }\n    });\n    return feature;\n}\n", "const BASE32_CODES = '0123456789bcdefghjkmnpqrstuvwxyz';\nconst BASE32_CODES_DICT = {};\nfor (let i = 0; i < BASE32_CODES.length; i++) {\n    BASE32_CODES_DICT[BASE32_CODES.charAt(i)] = i;\n}\nconst MIN_LAT = -90;\nconst MAX_LAT = 90;\nconst MIN_LON = -180;\nconst MAX_LON = 180;\n// Adapted from ngeohash decode_bbox\nexport function getGeohashBounds(geohash) {\n    let isLon = true;\n    let maxLat = MAX_LAT;\n    let minLat = MIN_LAT;\n    let maxLon = MAX_LON;\n    let minLon = MIN_LON;\n    let mid;\n    let hashValue = 0;\n    for (let i = 0, l = geohash.length; i < l; i++) {\n        const code = geohash[i].toLowerCase();\n        hashValue = BASE32_CODES_DICT[code];\n        for (let bits = 4; bits >= 0; bits--) {\n            const bit = (hashValue >> bits) & 1;\n            if (isLon) {\n                mid = (maxLon + minLon) / 2;\n                if (bit === 1) {\n                    minLon = mid;\n                }\n                else {\n                    maxLon = mid;\n                }\n            }\n            else {\n                mid = (maxLat + minLat) / 2;\n                if (bit === 1) {\n                    minLat = mid;\n                }\n                else {\n                    maxLat = mid;\n                }\n            }\n            isLon = !isLon;\n        }\n    }\n    return [minLat, minLon, maxLat, maxLon];\n}\nexport function getGeohashPolygon(geohash) {\n    const [s, w, n, e] = getGeohashBounds(geohash);\n    return [e, n, e, s, w, s, w, n, e, n];\n}\n", "import GeoCellLayer from \"../geo-cell-layer/GeoCellLayer.js\";\nimport { getGeohashPolygon } from \"./geohash-utils.js\";\nconst defaultProps = {\n    getGeohash: { type: 'accessor', value: (d) => d.geohash }\n};\n/** Render filled and/or stroked polygons based on the [Geohash](https://en.wikipedia.org/wiki/Geohash) geospatial indexing system. */\nexport default class GeohashLayer extends GeoCellLayer {\n    static { this.layerName = 'GeohashLayer'; }\n    static { this.defaultProps = defaultProps; }\n    indexToBounds() {\n        const { data, getGeohash } = this.props;\n        return {\n            data,\n            _normalize: false,\n            positionFormat: 'XY',\n            getPolygon: (x, objectInfo) => getGeohashPolygon(getGeohash(x, objectInfo))\n        };\n    }\n}\n"],
  "mappings": "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AO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,MAAM;AAAA,EACN,KAAK;AAAA,EACL,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,KAAK;AAAA,EACL,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA,EACL,KAAK;AAAA,EACL,MAAM;AAAA,EACN,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OA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AA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,gBAAAA,GAAE,IAAD,IAAO;AAAMA,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AAA,EAC/B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA,EAC7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wBAAwB;AAAA;AAAA,EAE7B,KAAK,wB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,WAAY,YAAY,YAAY,YAAY,WAAY,YAAY,YAAY,YAAY,WAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,UAAY,YAAY,YAAY,YAAY,WAAY,YAAY,YAAY,YAAY,WAAY,YAAY,YAAY,YAAY,WAAY,YAAY,YAAY,YAAY,WAAY,YAAY,YAAY,YAAY,SAAU;;;ACE9hG,IAAM,eAAe,WAAW,GAAG,GAAY,YAAY,YAAY,WAAY,YAAY,WAAY,WAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,WAAY,YAAY,YAAY,UAAY,YAAY,WAAY,WAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,WAAY,YAAY,YAAY,WAAY,YAAY,WAAY,WAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,WAAY,YAAY,YAAY,WAAY,YAAY,UAAY,WAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,WAAY,WAAY,YAAY,WAAY,YAAY,YAAY,WAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,WAAY,WAAY,YAAY,WAAY,YAAY,YAAY,WAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,WAAY,WAAY,YAAY,WAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,WAAY,WAAY,YAAY,YAAY,YAAY,YAAY,WAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,WAAY,YAAY,YAAY,WAAY,YAAY,YAAY,WAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,WAAY,YAAY,YAAY,WAAY,YAAY,WAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,WAAY,YAAY,YAAY,YAAY,YAAY,WAAY,WAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,YAAY,WAAY,YAAY,YAAY,WAAY,YAAY,WAAY,WAAY,YAAY,YAAY,WAAY,WAAY,YAAY,UAAY,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",
  "names": ["earcut", "linkedList", "x", "y", "eliminateHoles", "i", "earcutLinked", "signedArea", "insertNode", "equals", "removeNode", "filterPoints", "p", "area", "indexCurve", "isEarHashed", "isEar", "cureLocalIntersections", "splitEarcut", "a", "b", "c", "pointInTriangle", "zOrder", "n", "intersects", "locallyInside", "isValidDiagonal", "splitPolygon", "getLeftmost", "compareX", "eliminateHole", "findHoleBridge", "sectorContainsSector", "sortLinked", "e", "intersectsPolygon", "middleInside", "r", "sign", "onSegment", "a2", "b2", "a", "i", "defaultOptions", "i", "t", "defaultOptions", "val", "val", "i", "entityName", "val", "name", "toNumber", "sign", "toNumber", "_", "i", "val", "result", "entityName", "compress", "i", "val", "i", "attStr", "defaultOptions", "a", "val", "i", "name", "global", "Long", "isLong", "INT_CACHE", "UINT_CACHE", "fromInt", "cache", "fromBits", "fromNumber", "UZERO", "ZERO", "TWO_PWR_64_DBL", "MAX_UNSIGNED_VALUE", "TWO_PWR_63_DBL", "MIN_VALUE", "MAX_VALUE", "TWO_PWR_32_DBL", "pow_dbl", "fromString", "p", "i", "fromValue", "val", "TWO_PWR_16_DBL", "TWO_PWR_24_DBL", "TWO_PWR_24", "ONE", "UONE", "NEG_ONE", "LongPrototype", "toInt", "toNumber", "toString", "getHighBits", "getHighBitsUnsigned", "getLowBits", "getLowBitsUnsigned", "getNumBitsAbs", "isZero", "isNegative", "isPositive", "isOdd", "isEven", "equals", "notEquals", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual", "compare", "negate", "add", "subtract", "multiply", "divide", "modulo", "not", "and", "or", "xor", "shiftLeft", "shiftRight", "shiftRightUnsigned", "toSigned", "toUnsigned", "e", "s", "a", "o", "r", "t", "l", "n", "i", "c", "p", "f", "_", "b", "y", "x", "h", "U", "u", "d", "m", "p", "i", "l", "s", "length", "c", "n", "f", "n", "c", "n", "t", "i", "f", "s", "b", "p", "n", "wrap", "val", "c", "c2", "i", "require_deflate", "toString", "wrap", "copy", "n", "require_inflate", "c", "toString", "pako", "_", "length", "i", "c", "val", "length", "i", "uncompress", "length", "compress", "e", "i", "s", "c", "val", "b", "length", "i", "l", "s", "p", "lsb", "c", "x", "i", "p", "i", "defaultProps", "x", "i", "x", "y", "DEFAULT_COLOR", "defaultProps", "x", "y", "DEFAULT_COLOR", "defaultProps", "x", "DEFAULT_COLOR", "defaultProps", "x", "i", "DEFAULT_COLOR", "defaultProps", "x", "area", "i", "i", "x", "y", "i", "area", "equals", "p", "a", "b", "c", "n", "e", "r", "a2", "b2", "i", "a", "b", "t", "i", "p", "a", "b", "scratchPoint", "i", "p", "x", "y", "normalize", "i", "p", "i", "a", "DEFAULT_COLOR", "defaultProps", "x", "i", "p", "defaultProps", "length", "i", "p", "i", "DEFAULT_COLOR", "defaultProps", "i", "import_earcut", "i", "area", "o", "x", "y", "n", "p", "earcut", "fp64", "isCut", "i", "x", "y", "DEFAULT_COLOR", "defaultProps", "f", "ATTRIBUTE_TRANSITION", "i", "i", "defaultProps", "f", "p", "i", "x", "feature", "i", "DEFAULT_BUFFER", "defaultProps", "x", "y", "x", "a", "i", "f", "length", "s", "r", "nextPowOfTwo", "buildMapping", "x", "i", "y", "char", "length", "i", "buildMapping", "defaultProps", "x", "DEFAULT_COLOR", "defaultProps", "x", "y", "i", "_", "feature", "i", "point", "f", "defaultProps", "f", "feature", "e", "name", "FastXMLParser", "VERSION", "testXMLFile", "parseTextSync", "_", "defaultValue", "name", "_", "n", "e", "s", "VERSION", "testXMLFile", "parameters", "parameters", "parameters", "defaultProps", "x", "y", "defaultProps", "defaultProps", "x", "y", "Long", "n", "point", "i", "val", "t", "import_long", "Long", "i", "defaultProps", "x", "x", "y", "i", "n", "e", "s", "defaultProps", "x", "transform", "e", "s", "point", "scratchVector", "scratchVector2", "point", "scratchPoint", "transform", "quaternion", "point", "scratchNormal", "assert", "point", "a", "b", "c", "scratchPoint", "intersect", "assert", "scratchPlaneNormal", "i", "p", "c", "s", "t", "scratchVector2", "scratchVector3", "length", "p", "TILE_SIZE", "x", "y", "cullingVolume", "project", "p", "TILE_SIZE", "i", "modelMatrix", "s", "a", "b", "getBoundingBox", "x", "y", "n", "memoize", "a", "b", "i", "memoize", "modelMatrix", "x", "y", "i", "defaultProps", "modelMatrix", "fetch", "defaultProps", "libh3", "Module", "moduleOverrides", "key", "hasOwnProperty", "arguments_", "scriptDirectory", "locateFile", "path", "readAsync", "document", "currentScript", "src", "indexOf", "substr", "lastIndexOf", "url", "onload", "onerror", "xhr", "XMLHttpRequest", "open", "responseType", "xhr_onload", "status", "response", "data", "tryParseAsDataURI", "buffer", "send", "out", "console", "log", "bind", "err", "warn", "tempRet0", "setTempRet0", "value", "getTempRet0", "GLOBAL_BASE", "setValue", "ptr", "type", "noSafe", "charAt", "length", "HEAP8", "HEAP16", "HEAP32", "tempI64", "tempDouble", "Math_abs", "Math_min", "Math_floor", "Math_ceil", "HEAPF32", "HEAPF64", "abort", "getValue", "ABORT", "assert", "condition", "text", "getCFunc", "ident", "func", "ccall", "returnType", "argTypes", "args", "opts", "toC", "str", "ret", "undefined", "len", "stackAlloc", "stringToUTF8", "arr", "writeArrayToMemory", "convertReturnValue", "UTF8ToString", "Boolean", "cArgs", "stack", "i", "converter", "stackSave", "apply", "stackRestore", "cwrap", "numericArgs", "every", "numericRet", "arguments", "UTF8Decoder", "TextDecoder", "UTF8ArrayToString", "u8Array", "idx", "maxBytesToRead", "endIdx", "endPtr", "subarray", "decode", "u0", "String", "fromCharCode", "u1", "u2", "ch", "HEAPU8", "stringToUTF8Array", "outU8Array", "outIdx", "maxBytesToWrite", "startIdx", "u", "charCodeAt", "outPtr", "UTF16Decoder", "array", "set", "alignUp", "x", "multiple", "HEAPU16", "HEAPU32", "updateGlobalBufferAndViews", "buf", "Int8Array", "Int16Array", "Int32Array", "Uint8Array", "Uint16Array", "Uint32Array", "Float32Array", "Float64Array", "DYNAMIC_BASE", "DYNAMICTOP_PTR", "INITIAL_TOTAL_MEMORY", "ArrayBuffer", "byteLength", "callRuntimeCallbacks", "callbacks", "callback", "shift", "arg", "__ATPRERUN__", "__ATINIT__", "__ATMAIN__", "__ATPOSTRUN__", "preRun", "addOnPreRun", "initRuntime", "preMain", "postRun", "addOnPostRun", "cb", "unshift", "Math", "abs", "ceil", "floor", "min", "runDependencies", "runDependencyWatcher", "dependenciesFulfilled", "addRunDependency", "id", "removeRunDependency", "clearInterval", "memoryInitializer", "dataURIPrefix", "isDataURI", "filename", "prototype", "startsWith", "tempDoublePtr", "demangle", "demangleAll", "regex", "replace", "y", "jsStackTrace", "Error", "e", "toString", "stackTrace", "js", "___assert_fail", "line", "_emscripten_get_heap_size", "_emscripten_memcpy_big", "dest", "num", "___setErrNo", "abortOnCannotGrowMemory", "requestedSize", "emscripten_realloc_buffer", "size", "newBuffer", "_emscripten_replace_memory", "_emscripten_resize_heap", "oldSize", "PAGE_MULTIPLE", "LIMIT", "MIN_TOTAL_MEMORY", "newSize", "max", "replacement", "decodeBase64", "atob", "input", "keyStr", "output", "chr1", "chr2", "chr3", "enc1", "enc2", "enc3", "enc4", "intArrayFromBase64", "s", "decoded", "bytes", "_", "slice", "asmGlobalArg", "asmLibraryArg", "asm", "global", "env", "a", "b", "c", "d", "f", "o", "g", "p", "q", "r", "sqrt", "pow", "t", "cos", "sin", "v", "tan", "w", "acos", "asin", "atan", "z", "atan2", "A", "B", "imul", "C", "D", "E", "clz32", "G", "H", "I", "J", "K", "L", "M", "h", "N", "T", "W", "X", "Y", "Z", "$", "ic", "rd", "ld", "aa", "ba", "j", "k", "ca", "Bd", "da", "kd", "jd", "l", "m", "n", "xb", "ea", "td", "sd", "Sa", "vd", "Fb", "Lb", "wd", "Hb", "ma", "sa", "Jb", "Gb", "na", "fa", "ga", "ha", "Ec", "za", "ia", "F", "Aa", "md", "Mb", "ja", "Fc", "Pb", "Gc", "ka", "_c", "Qb", "dd", "cd", "bd", "$c", "la", "ad", "qc", "rc", "ed", "tc", "sc", "oa", "pa", "qa", "ra", "ta", "ua", "va", "wa", "xa", "ya", "Ub", "ac", "xd", "yd", "Ba", "Ca", "Da", "Ea", "Fa", "Ga", "Ha", "Ia", "Ja", "hd", "Ka", "La", "Ma", "Na", "Oa", "Pa", "Qa", "Ra", "Ta", "Ua", "Va", "Wa", "Xa", "Ya", "Za", "_a", "$a", "vb", "ab", "bb", "db", "ub", "eb", "fb", "gb", "Uc", "Ob", "qb", "mb", "hb", "ib", "jb", "Zb", "cc", "Tc", "Sc", "kb", "Pc", "dc", "lb", "nb", "ob", "Qc", "pb", "rb", "Rc", "sb", "tb", "wb", "Cc", "pd", "yb", "Xb", "Yb", "zb", "Ab", "Bb", "Ad", "Cb", "Db", "Eb", "Ib", "Kb", "Nb", "Rb", "Sb", "Tb", "Vb", "Wb", "_b", "$b", "bc", "ec", "fc", "gc", "hc", "jc", "kc", "lc", "mc", "nc", "oc", "pc", "uc", "vc", "wc", "xc", "yc", "zc", "Ac", "Bc", "zd", "ud", "Dc", "Hc", "Ic", "Jc", "Kc", "Lc", "Mc", "Nc", "Oc", "Vc", "Wc", "Xc", "Yc", "Zc", "fd", "gd", "Cd", "Dd", "nd", "od", "qd", "___divdi3", "___muldi3", "___remdi3", "___uremdi3", "_areNeighborCells", "_bitshift64Ashr", "_bitshift64Lshr", "_bitshift64Shl", "_calloc", "_cellAreaKm2", "_cellAreaM2", "_cellAreaRads2", "_cellToBoundary", "_cellToCenterChild", "_cellToChildPos", "_cellToChildren", "_cellToChildrenSize", "_cellToLatLng", "_cellToLocalIj", "_cellToParent", "_cellToVertex", "_cellToVertexes", "_cellsToDirectedEdge", "_cellsToLinkedMultiPolygon", "_childPosToCell", "_compactCells", "_destroyLinkedMultiPolygon", "_directedEdgeToBoundary", "_directedEdgeToCells", "_edgeLengthKm", "_edgeLengthM", "_edgeLengthRads", "_free", "_getBaseCellNumber", "_getDirectedEdgeDestination", "_getDirectedEdgeOrigin", "_getHexagonAreaAvgKm2", "_getHexagonAreaAvgM2", "_getHexagonEdgeLengthAvgKm", "_getHexagonEdgeLengthAvgM", "_getIcosahedronFaces", "_getNumCells", "_getPentagons", "_getRes0Cells", "_getResolution", "_greatCircleDistanceKm", "_greatCircleDistanceM", "_greatCircleDistanceRads", "_gridDisk", "_gridDiskDistances", "_gridDistance", "_gridPathCells", "_gridPathCellsSize", "_gridRingUnsafe", "_i64Add", "_i64Subtract", "_isPentagon", "_isResClassIII", "_isValidCell", "_isValidDirectedEdge", "_isValidVertex", "_latLngToCell", "_llvm_maxnum_f64", "_llvm_minnum_f64", "_llvm_round_f64", "_localIjToCell", "_malloc", "_maxFaceCount", "_maxGridDiskSize", "_maxPolygonToCellsSize", "_memcpy", "_memset", "_originToDirectedEdges", "_pentagonCount", "_polygonToCells", "_readInt64AsDoubleFromPointer", "_res0CellCount", "_round", "_sbrk", "_sizeOfCellBoundary", "_sizeOfCoordIJ", "_sizeOfGeoLoop", "_sizeOfGeoPolygon", "_sizeOfH3Index", "_sizeOfLatLng", "_sizeOfLinkedGeoPolygon", "_uncompactCells", "_uncompactCellsSize", "_vertexToLatLng", "establishStackSpace", "applyMemoryInitializer", "doBrowserLoad", "memoryInitializerBytes", "useRequest", "request", "setTimeout", "addEventListener", "calledRun", "runCaller", "run", "doRun", "what", "pop", "const", "NUMBER", "H3_ERROR", "BOOLEAN", "H3_LOWER", "H3_UPPER", "RESOLUTION", "POINTER", "E_SUCCESS", "E_FAILED", "E_DOMAIN", "E_LATLNG_DOMAIN", "E_RES_DOMAIN", "E_CELL_INVALID", "E_DIR_EDGE_INVALID", "E_UNDIR_EDGE_INVALID", "E_VERTEX_INVALID", "E_PENTAGON", "E_DUPLICATE_INPUT", "E_NOT_NEIGHBORS", "E_RES_MISMATCH", "E_MEMORY_ALLOC", "E_MEMORY_BOUNDS", "E_OPTION_INVALID", "H3_ERROR_MSGS", "E_UNKNOWN_UNIT", "E_ARRAY_LENGTH", "E_NULL_INDEX", "JS_ERROR_MESSAGES", "UNKNOWN_ERROR_MSG", "createError", "messages", "errCode", "meta", "hasValue", "code", "H3LibraryError", "JSBindingError", "throwIfError", "H3", "BINDINGS", "forEach", "def", "BASE_16", "const", "SZ_INT", "SZ_PTR", "SZ_DBL", "SZ_INT64", "SZ_H3INDEX", "H3", "sizeOfH3Index", "SZ_LATLNG", "sizeOfLatLng", "SZ_CELLBOUNDARY", "sizeOfCellBoundary", "SZ_GEOPOLYGON", "sizeOfGeoPolygon", "SZ_GEOLOOP", "sizeOfGeoLoop", "SZ_LINKED_GEOPOLYGON", "sizeOfLinkedGeoPolygon", "SZ_COORDIJ", "sizeOfCoordIJ", "UNITS", "m", "m2", "km", "km2", "rads", "rads2", "validateRes", "res", "Math", "floor", "H3LibraryError", "E_RES_DOMAIN", "validateH3Index", "h3Index", "JSBindingError", "E_NULL_INDEX", "MAX_JS_ARRAY_LENGTH", "pow", "const", "INVALID_HEXIDECIMAL_CHAR", "h3IndexToSplitLong", "h3Index", "Array", "isArray", "length", "Number", "isInteger", "test", "upper", "parseInt", "substring", "BASE_16", "lower", "hexFrom32Bit", "num", "toString", "tempStr", "zeroPad", "topNum", "splitLongToH3Index", "fullLen", "numStr", "numZeroes", "outStr", "i", "UPPER_BIT_DIVISOR", "Math", "pow", "readH3IndexFromPointer", "cAddress", "offset", "lower", "C", "getValue", "SZ_H3INDEX", "upper", "SZ_INT", "splitLongToH3Index", "readDoubleFromPointer", "cAddress", "offset", "C", "getValue", "SZ_DBL", "readInt64AsDoubleFromPointer", "H3", "storeH3Index", "h3Index", "HEAPU32", "set", "h3IndexToSplitLong", "SZ_INT", "storeArrayOfH3Indexes", "cAddress", "hexagons", "count", "length", "i", "storeH3Index", "readSingleCoord", "cAddress", "radsToDegs", "C", "getValue", "readLatLng", "SZ_DBL", "readLatLngGeoJson", "readCellBoundary", "cellBoundary", "geoJsonCoords", "closedLoop", "numVerts", "vertsPos", "out", "readCoord", "i", "push", "readMultiPolygon", "polygon", "formatAsGeoJson", "output", "loops", "loop", "coords", "coord", "SZ_PTR", "isPentagon", "h3Index", "h3IndexToSplitLong", "lower", "upper", "Boolean", "H3", "getResolution", "h3Index", "h3IndexToSplitLong", "lower", "upper", "H3", "isValidCell", "latLngToCell", "lat", "lng", "res", "latLng", "C", "_malloc", "SZ_LATLNG", "HEAPF64", "set", "map", "degsToRads", "SZ_DBL", "SZ_H3INDEX", "throwIfError", "validateH3Index", "readH3IndexFromPointer", "_free", "cellToLatLng", "readLatLng", "cellToBoundary", "formatAsGeoJson", "cellBoundary", "SZ_CELLBOUNDARY", "readCellBoundary", "cellsToMultiPolygon", "h3Indexes", "formatAsGeoJson", "length", "indexCount", "set", "C", "_calloc", "SZ_H3INDEX", "storeArrayOfH3Indexes", "polygon", "SZ_LINKED_GEOPOLYGON", "throwIfError", "H3", "cellsToLinkedMultiPolygon", "readMultiPolygon", "destroyLinkedMultiPolygon", "_free", "gridDistance", "origin", "destination", "h3IndexToSplitLong", "oLower", "oUpper", "dLower", "dUpper", "countPtr", "C", "_malloc", "SZ_INT64", "throwIfError", "H3", "readInt64AsDoubleFromPointer", "_free", "getHexagonEdgeLengthAvg", "res", "unit", "validateRes", "out", "C", "_malloc", "SZ_DBL", "UNITS", "m", "throwIfError", "H3", "getHexagonEdgeLengthAvgM", "km", "getHexagonEdgeLengthAvgKm", "JSBindingError", "E_UNKNOWN_UNIT", "readDoubleFromPointer", "_free", "degsToRads", "deg", "Math", "PI", "radsToDegs", "rad", "i", "defaultProps", "x", "p", "forwardProps", "defaultProps", "getScale", "i", "DEFAULT_COLOR", "defaultProps", "x", "GLEnum", "define", "parameters", "VERSION", "NUL", "Uint8Array", "KTX2_ID", "KTX2SupercompressionScheme", "KTX2DataFormatType", "KTX2DataFormatModel", "KTX2DataFormatPrimaries", "KTX2DataFormatTransfer", "KTX2DataFormatFlags", "KTX2DataFormatChannelETC1S", "KTX2DataFormatChannelUASTC", "KTX2Container", "constructor", "this", "NONE", "vendorId", "descriptorType", "BASICFORMAT", "versionNumber", "descriptorBlockSize", "colorModel", "UNSPECIFIED", "colorPrimaries", "SRGB", "transferFunction", "flags", "ALPHA_STRAIGHT", "texelBlockDimension", "x", "y", "z", "w", "bytesPlane", "samples", "BufferReader", "data", "byteOffset", "byteLength", "littleEndian", "_dataView", "DataView", "buffer", "_littleEndian", "_offset", "_nextUint8", "value", "getUint8", "_nextUint16", "getUint16", "_nextUint32", "getUint32", "_nextUint64", "_skip", "bytes", "_scan", "maxByteLength", "term", "text", "decodeText", "buffer", "TextDecoder", "decode", "Buffer", "from", "toString", "result", "read", "data", "id", "Uint8Array", "buffer", "byteOffset", "KTX2_ID", "length", "Error", "container", "KTX2Container", "headerByteLength", "Uint32Array", "BYTES_PER_ELEMENT", "headerReader", "BufferReader", "vkFormat", "_nextUint32", "typeSize", "pixelWidth", "pixelHeight", "pixelDepth", "layerCount", "faceCount", "levelCount", "supercompressionScheme", "dfdByteOffset", "dfdByteLength", "kvdByteOffset", "kvdByteLength", "sgdByteOffset", "_nextUint64", "sgdByteLength", "levelReader", "i", "levels", "push", "levelData", "uncompressedByteLength", "dfdReader", "dfd", "vendorId", "_skip", "_nextUint16", "descriptorType", "versionNumber", "descriptorBlockSize", "colorModel", "_nextUint8", "colorPrimaries", "transferFunction", "flags", "texelBlockDimension", "x", "y", "z", "w", "bytesPlane", "samples", "numSamples", "bitOffset", "bitLength", "channelID", "samplePosition", "sampleLower", "sampleUpper", "dataFormatDescriptor", "kvdReader", "_offset", "keyValueByteLength", "keyData", "_scan", "key", "decodeText", "valueData", "byteLength", "keyValue", "match", "sgdReader", "endpointCount", "selectorCount", "endpointsByteLength", "selectorsByteLength", "tablesByteLength", "extendedByteLength", "imageDescs", "imageFlags", "rgbSliceByteOffset", "rgbSliceByteLength", "alphaSliceByteOffset", "alphaSliceByteLength", "endpointsByteOffset", "selectorsByteOffset", "tablesByteOffset", "extendedByteOffset", "endpointsData", "selectorsData", "tablesData", "extendedData", "globalData", "i", "format", "VERSION", "assert", "VERSION", "a", "b", "VERSION", "name", "length", "i", "t", "assert", "parameters", "i", "GLEnum", "assert", "ATTRIBUTE_TYPE_TO_COMPONENTS", "ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY", "length", "assert", "i", "assert", "length", "result", "i", "name", "assert", "n", "ATTRIBUTE_TYPE_TO_COMPONENTS", "ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY", "ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE", "length", "c", "decode", "name", "name", "decode", "isArray", "i", "decode", "name", "name", "decode", "decodePropertyTextures", "decodePropertyTables", "findPropertyTableByClass", "processPropertyTable", "getPropertyDataFromBinarySource", "getArrayOffsetsForProperty", "getStringOffsetsForProperty", "getPropertyDataNumeric", "isArray", "VERSION", "assert", "decode", "name", "decode", "wasm", "i", "name", "decode", "name", "name", "name", "preprocess", "name", "preprocess", "decode", "name", "preprocess", "VERSION", "VERSION", "transform", "i", "DracoLoader", "name", "name", "preprocess", "decode", "DracoLoader", "decode", "name", "name", "scratchVector", "decode", "i", "length", "decode", "encode", "name", "name", "decode", "encode", "assert", "decode", "encode", "name", "name", "decode", "encode", "decode", "encode", "name", "name", "decode", "encode", "preprocess", "preprocess", "assert", "i", "fetch", "VERSION", "parse", "COMPONENTS", "BYTES", "DEFAULT_SAMPLER_PARAMETERS", "assert", "i", "DEFAULT_COLOR", "defaultProps", "x", "name", "defaultProps", "x", "scratchVector", "scratchVector2", "scratchVector3", "assert", "sign", "scratchVector", "scratchVector", "scratchNormal", "scratchPosition", "x", "y", "assert", "point", "assert", "modelMatrix", "scratchVector", "scratchPosition", "cameraPositionCartesian", "a", "b", "i", "point", "WGS84_RADIUS_X", "WGS84_RADIUS_Y", "WGS84_RADIUS_Z", "scratchVector", "TILE_REFINEMENT", "TILE_TYPE", "TILESET_TYPE", "LOD_METRIC_TYPE", "x", "transform", "assert", "quaternion", "y", "point", "scratchMatrix", "scratchCenter", "scratchPosition", "length", "assert", "stack", "b", "a", "scratchVector", "defined", "x", "cullingVolume", "a", "b", "id", "t", "DEFAULT_PROPS", "t", "x", "stack", "VERSION", "assert", "getMagicString", "GL", "name", "length", "assert", "scratchVector2", "scratchVector3", "x", "y", "assert", "GL", "i", "i", "x", "length", "assert", "defined", "x", "i", "stack", "defined", "x", "y", "assert", "name", "SIZEOF_UINT32", "i", "GL", "scratchNormal", "i", "GL", "GL", "scratchPosition", "i", "GL", "DracoLoader", "fetch", "GL", "GL", "i", "modelMatrix", "parse3DTile", "getMagicString", "VERSION", "e", "Long", "c", "cache", "p", "i", "val", "equals", "b", "x", "FACE_BITS", "MAX_LEVEL", "POS_BITS", "RADIAN_TO_DEGREE", "point", "i", "val", "rotateAndFlipQuadrant", "t", "IJToST", "singleSTtoUV", "STToUV", "FaceUVToXYZ", "XYZToLngLat", "x", "y", "RADIAN_TO_DEGREE", "rotateAndFlipQuadrant", "n", "point", "MAX_RESOLUTION", "i", "IJToST", "STToUV", "FaceUVToXYZ", "XYZToLngLat", "getS2QuadKey", "i", "a", "b", "point", "x", "y", "getRefine", "getTileType", "stack", "VERSION", "parse", "assert", "import_jszip", "signature", "signature", "signature", "ZIP_HEADER_FIELDS", "signature", "identity", "wasm", "wasm", "l", "i", "identity", "x", "n", "b", "i", "s", "n", "data", "val", "p", "length", "c", "sizeBits", "a", "b", "decode", "import_zlib", "defaultProps", "modelMatrix", "i", "decodeExtensions", "DEFAULT_OPTIONS", "decode", "i", "a", "b", "decode", "i", "x", "y", "i", "a", "b", "c", "x", "y", "i", "t", "a", "b", "c", "t2", "e", "t0", "t1", "n", "getMeshAttributes", "i", "y", "x", "r", "b", "VERSION", "VERSION", "VERSION", "TerrainLoader", "QuantizedMeshLoader", "defaultProps", "fetch", "_", "x", "vs", "fs", "defaultProps", "vs", "fs", "r", "x", "i", "inject", "feature", "defaultProps", "fp64", "x", "i", "c", "getUniforms", "defaultProps", "isNested", "p", "i", "inject", "defaultProps", "name", "defaultProps", "vs", "inject", "shader_module_default", "e", "b", "i", "defaultProps", "shader_module_default", "vs", "fs", "inject", "shader_module_default", "r", "l", "i", "b", "c", "defaultProps", "shader_module_default", "i", "x", "intersect", "i", "i", "parameters", "i", "l", "defaultProps", "feature", "val", "i", "l", "n", "t", "length", "x", "data", "i", "x", "coordinates", "i", "area", "feature", "cmd", "length", "x", "y", "cmdLen", "x2", "y2", "transform", "i", "project", "p", "i", "classifyRings", "i", "area", "readFeature", "feature", "readTag", "i", "readFeature", "i", "transform", "classifyRings", "x", "y", "readLayer", "i", "readValueMessage", "readTile", "Protobuf", "i", "feature", "p", "VERSION", "Polygon", "x", "y", "lineString", "x", "i", "defaultProps", "fetch", "x", "y", "modelMatrix", "isWGS84", "feature", "f", "i", "l", "s", "n", "e", "defaultProps", "x"]
}
