{
  "version": 3,
  "sources": ["index.js", "log.js", "utils/local-storage.js", "utils/formatters.js", "utils/color.js", "utils/autobind.js", "utils/assert.js", "utils/hi-res-timestamp.js", "init.js"],
  "sourcesContent": ["import { Log } from \"./log.js\";\n// DEFAULT EXPORT IS A LOG INSTANCE\nexport default new Log({ id: '@probe.gl/log' });\n// LOGGING\nexport { Log } from \"./log.js\";\nexport { COLOR } from \"./utils/color.js\";\n// UTILITIES\nexport { addColor } from \"./utils/color.js\";\nexport { leftPad, rightPad } from \"./utils/formatters.js\";\nexport { autobind } from \"./utils/autobind.js\";\nexport { LocalStorage } from \"./utils/local-storage.js\";\nexport { getHiResTimestamp } from \"./utils/hi-res-timestamp.js\";\nimport \"./init.js\";\n", "// probe.gl, MIT license\n/* eslint-disable no-console */\nimport { VERSION, isBrowser } from '@probe.gl/env';\nimport { LocalStorage } from \"./utils/local-storage.js\";\nimport { formatTime, leftPad } from \"./utils/formatters.js\";\nimport { addColor } from \"./utils/color.js\";\nimport { autobind } from \"./utils/autobind.js\";\nimport assert from \"./utils/assert.js\";\nimport { getHiResTimestamp } from \"./utils/hi-res-timestamp.js\";\n// Instrumentation in other packages may override console methods, so preserve them here\nconst originalConsole = {\n    debug: isBrowser() ? console.debug || console.log : console.log,\n    log: console.log,\n    info: console.info,\n    warn: console.warn,\n    error: console.error\n};\nconst DEFAULT_LOG_CONFIGURATION = {\n    enabled: true,\n    level: 0\n};\nfunction noop() { } // eslint-disable-line @typescript-eslint/no-empty-function\nconst cache = {};\nconst ONCE = { once: true };\n/** A console wrapper */\nexport class Log {\n    constructor({ id } = { id: '' }) {\n        this.VERSION = VERSION;\n        this._startTs = getHiResTimestamp();\n        this._deltaTs = getHiResTimestamp();\n        this.userData = {};\n        // TODO - fix support from throttling groups\n        this.LOG_THROTTLE_TIMEOUT = 0; // Time before throttled messages are logged again\n        this.id = id;\n        this.userData = {};\n        this._storage = new LocalStorage(`__probe-${this.id}__`, DEFAULT_LOG_CONFIGURATION);\n        this.timeStamp(`${this.id} started`);\n        autobind(this);\n        Object.seal(this);\n    }\n    set level(newLevel) {\n        this.setLevel(newLevel);\n    }\n    get level() {\n        return this.getLevel();\n    }\n    isEnabled() {\n        return this._storage.config.enabled;\n    }\n    getLevel() {\n        return this._storage.config.level;\n    }\n    /** @return milliseconds, with fractions */\n    getTotal() {\n        return Number((getHiResTimestamp() - this._startTs).toPrecision(10));\n    }\n    /** @return milliseconds, with fractions */\n    getDelta() {\n        return Number((getHiResTimestamp() - this._deltaTs).toPrecision(10));\n    }\n    /** @deprecated use logLevel */\n    set priority(newPriority) {\n        this.level = newPriority;\n    }\n    /** @deprecated use logLevel */\n    get priority() {\n        return this.level;\n    }\n    /** @deprecated use logLevel */\n    getPriority() {\n        return this.level;\n    }\n    // Configure\n    enable(enabled = true) {\n        this._storage.setConfiguration({ enabled });\n        return this;\n    }\n    setLevel(level) {\n        this._storage.setConfiguration({ level });\n        return this;\n    }\n    /** return the current status of the setting */\n    get(setting) {\n        return this._storage.config[setting];\n    }\n    // update the status of the setting\n    set(setting, value) {\n        this._storage.setConfiguration({ [setting]: value });\n    }\n    /** Logs the current settings as a table */\n    settings() {\n        if (console.table) {\n            console.table(this._storage.config);\n        }\n        else {\n            console.log(this._storage.config);\n        }\n    }\n    // Unconditional logging\n    assert(condition, message) {\n        if (!condition) {\n            throw new Error(message || 'Assertion failed');\n        }\n    }\n    warn(message) {\n        return this._getLogFunction(0, message, originalConsole.warn, arguments, ONCE);\n    }\n    error(message) {\n        return this._getLogFunction(0, message, originalConsole.error, arguments);\n    }\n    /** Print a deprecation warning */\n    deprecated(oldUsage, newUsage) {\n        return this.warn(`\\`${oldUsage}\\` is deprecated and will be removed \\\nin a later version. Use \\`${newUsage}\\` instead`);\n    }\n    /** Print a removal warning */\n    removed(oldUsage, newUsage) {\n        return this.error(`\\`${oldUsage}\\` has been removed. Use \\`${newUsage}\\` instead`);\n    }\n    probe(logLevel, message) {\n        return this._getLogFunction(logLevel, message, originalConsole.log, arguments, {\n            time: true,\n            once: true\n        });\n    }\n    log(logLevel, message) {\n        return this._getLogFunction(logLevel, message, originalConsole.debug, arguments);\n    }\n    info(logLevel, message) {\n        return this._getLogFunction(logLevel, message, console.info, arguments);\n    }\n    once(logLevel, message) {\n        return this._getLogFunction(logLevel, message, originalConsole.debug || originalConsole.info, arguments, ONCE);\n    }\n    /** Logs an object as a table */\n    table(logLevel, table, columns) {\n        if (table) {\n            return this._getLogFunction(logLevel, table, console.table || noop, (columns && [columns]), {\n                tag: getTableHeader(table)\n            });\n        }\n        return noop;\n    }\n    time(logLevel, message) {\n        return this._getLogFunction(logLevel, message, console.time ? console.time : console.info);\n    }\n    timeEnd(logLevel, message) {\n        return this._getLogFunction(logLevel, message, console.timeEnd ? console.timeEnd : console.info);\n    }\n    timeStamp(logLevel, message) {\n        return this._getLogFunction(logLevel, message, console.timeStamp || noop);\n    }\n    group(logLevel, message, opts = { collapsed: false }) {\n        const options = normalizeArguments({ logLevel, message, opts });\n        const { collapsed } = opts;\n        // @ts-expect-error\n        options.method = (collapsed ? console.groupCollapsed : console.group) || console.info;\n        return this._getLogFunction(options);\n    }\n    groupCollapsed(logLevel, message, opts = {}) {\n        return this.group(logLevel, message, Object.assign({}, opts, { collapsed: true }));\n    }\n    groupEnd(logLevel) {\n        return this._getLogFunction(logLevel, '', console.groupEnd || noop);\n    }\n    // EXPERIMENTAL\n    withGroup(logLevel, message, func) {\n        this.group(logLevel, message)();\n        try {\n            func();\n        }\n        finally {\n            this.groupEnd(logLevel)();\n        }\n    }\n    trace() {\n        if (console.trace) {\n            console.trace();\n        }\n    }\n    // PRIVATE METHODS\n    /** Deduces log level from a variety of arguments */\n    _shouldLog(logLevel) {\n        return this.isEnabled() && this.getLevel() >= normalizeLogLevel(logLevel);\n    }\n    _getLogFunction(logLevel, message, method, args, opts) {\n        if (this._shouldLog(logLevel)) {\n            // normalized opts + timings\n            opts = normalizeArguments({ logLevel, message, args, opts });\n            method = method || opts.method;\n            assert(method);\n            opts.total = this.getTotal();\n            opts.delta = this.getDelta();\n            // reset delta timer\n            this._deltaTs = getHiResTimestamp();\n            const tag = opts.tag || opts.message;\n            if (opts.once && tag) {\n                if (!cache[tag]) {\n                    cache[tag] = getHiResTimestamp();\n                }\n                else {\n                    return noop;\n                }\n            }\n            // TODO - Make throttling work with groups\n            // if (opts.nothrottle || !throttle(tag, this.LOG_THROTTLE_TIMEOUT)) {\n            //   return noop;\n            // }\n            message = decorateMessage(this.id, opts.message, opts);\n            // Bind console function so that it can be called after being returned\n            return method.bind(console, message, ...opts.args);\n        }\n        return noop;\n    }\n}\nLog.VERSION = VERSION;\n/**\n * Get logLevel from first argument:\n * - log(logLevel, message, args) => logLevel\n * - log(message, args) => 0\n * - log({logLevel, ...}, message, args) => logLevel\n * - log({logLevel, message, args}) => logLevel\n */\nfunction normalizeLogLevel(logLevel) {\n    if (!logLevel) {\n        return 0;\n    }\n    let resolvedLevel;\n    switch (typeof logLevel) {\n        case 'number':\n            resolvedLevel = logLevel;\n            break;\n        case 'object':\n            // Backward compatibility\n            // TODO - deprecate `priority`\n            // @ts-expect-error\n            resolvedLevel = logLevel.logLevel || logLevel.priority || 0;\n            break;\n        default:\n            return 0;\n    }\n    // 'log level must be a number'\n    assert(Number.isFinite(resolvedLevel) && resolvedLevel >= 0);\n    return resolvedLevel;\n}\n/**\n * \"Normalizes\" the various argument patterns into an object with known types\n * - log(logLevel, message, args) => {logLevel, message, args}\n * - log(message, args) => {logLevel: 0, message, args}\n * - log({logLevel, ...}, message, args) => {logLevel, message, args}\n * - log({logLevel, message, args}) => {logLevel, message, args}\n */\nexport function normalizeArguments(opts) {\n    const { logLevel, message } = opts;\n    opts.logLevel = normalizeLogLevel(logLevel);\n    // We use `arguments` instead of rest parameters (...args) because IE\n    // does not support the syntax. Rest parameters is transpiled to code with\n    // perf impact. Doing it here instead avoids constructing args when logging is\n    // disabled.\n    // TODO - remove when/if IE support is dropped\n    const args = opts.args ? Array.from(opts.args) : [];\n    // args should only contain arguments that appear after `message`\n    // eslint-disable-next-line no-empty\n    while (args.length && args.shift() !== message) { }\n    switch (typeof logLevel) {\n        case 'string':\n        case 'function':\n            if (message !== undefined) {\n                args.unshift(message);\n            }\n            opts.message = logLevel;\n            break;\n        case 'object':\n            Object.assign(opts, logLevel);\n            break;\n        default:\n    }\n    // Resolve functions into strings by calling them\n    if (typeof opts.message === 'function') {\n        opts.message = opts.message();\n    }\n    const messageType = typeof opts.message;\n    // 'log message must be a string' or object\n    assert(messageType === 'string' || messageType === 'object');\n    // original opts + normalized opts + opts arg + fixed up message\n    return Object.assign(opts, { args }, opts.opts);\n}\nfunction decorateMessage(id, message, opts) {\n    if (typeof message === 'string') {\n        const time = opts.time ? leftPad(formatTime(opts.total)) : '';\n        message = opts.time ? `${id}: ${time}  ${message}` : `${id}: ${message}`;\n        message = addColor(message, opts.color, opts.background);\n    }\n    return message;\n}\nfunction getTableHeader(table) {\n    for (const key in table) {\n        for (const title in table[key]) {\n            return title || 'untitled';\n        }\n    }\n    return 'empty';\n}\n", "// probe.gl, MIT license\nfunction getStorage(type) {\n    try {\n        const storage = window[type];\n        const x = '__storage_test__';\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return storage;\n    }\n    catch (e) {\n        return null;\n    }\n}\n// Store keys in local storage via simple interface\nexport class LocalStorage {\n    constructor(id, defaultConfig, type = 'sessionStorage') {\n        this.storage = getStorage(type);\n        this.id = id;\n        this.config = defaultConfig;\n        this._loadConfiguration();\n    }\n    getConfiguration() {\n        return this.config;\n    }\n    setConfiguration(configuration) {\n        Object.assign(this.config, configuration);\n        if (this.storage) {\n            const serialized = JSON.stringify(this.config);\n            this.storage.setItem(this.id, serialized);\n        }\n    }\n    // Get config from persistent store, if available\n    _loadConfiguration() {\n        let configuration = {};\n        if (this.storage) {\n            const serializedConfiguration = this.storage.getItem(this.id);\n            configuration = serializedConfiguration ? JSON.parse(serializedConfiguration) : {};\n        }\n        Object.assign(this.config, configuration);\n        return this;\n    }\n}\n", "// probe.gl, MIT license\n/**\n * Format time\n */\nexport function formatTime(ms) {\n    let formatted;\n    if (ms < 10) {\n        formatted = `${ms.toFixed(2)}ms`;\n    }\n    else if (ms < 100) {\n        formatted = `${ms.toFixed(1)}ms`;\n    }\n    else if (ms < 1000) {\n        formatted = `${ms.toFixed(0)}ms`;\n    }\n    else {\n        formatted = `${(ms / 1000).toFixed(2)}s`;\n    }\n    return formatted;\n}\nexport function leftPad(string, length = 8) {\n    const padLength = Math.max(length - string.length, 0);\n    return `${' '.repeat(padLength)}${string}`;\n}\nexport function rightPad(string, length = 8) {\n    const padLength = Math.max(length - string.length, 0);\n    return `${string}${' '.repeat(padLength)}`;\n}\nexport function formatValue(v, options = {}) {\n    const EPSILON = 1e-16;\n    const { isInteger = false } = options;\n    if (Array.isArray(v) || ArrayBuffer.isView(v)) {\n        return formatArrayValue(v, options);\n    }\n    if (!Number.isFinite(v)) {\n        return String(v);\n    }\n    // @ts-expect-error\n    if (Math.abs(v) < EPSILON) {\n        return isInteger ? '0' : '0.';\n    }\n    if (isInteger) {\n        // @ts-expect-error\n        return v.toFixed(0);\n    }\n    // @ts-expect-error\n    if (Math.abs(v) > 100 && Math.abs(v) < 10000) {\n        // @ts-expect-error\n        return v.toFixed(0);\n    }\n    // @ts-expect-error\n    const string = v.toPrecision(2);\n    const decimal = string.indexOf('.0');\n    return decimal === string.length - 2 ? string.slice(0, -1) : string;\n}\n/** Helper to formatValue */\nfunction formatArrayValue(v, options) {\n    const { maxElts = 16, size = 1 } = options;\n    let string = '[';\n    for (let i = 0; i < v.length && i < maxElts; ++i) {\n        if (i > 0) {\n            string += `,${i % size === 0 ? ' ' : ''}`;\n        }\n        string += formatValue(v[i], options);\n    }\n    const terminator = v.length > maxElts ? '...' : ']';\n    return `${string}${terminator}`;\n}\n", "import { isBrowser } from '@probe.gl/env';\nexport var COLOR;\n(function (COLOR) {\n    COLOR[COLOR[\"BLACK\"] = 30] = \"BLACK\";\n    COLOR[COLOR[\"RED\"] = 31] = \"RED\";\n    COLOR[COLOR[\"GREEN\"] = 32] = \"GREEN\";\n    COLOR[COLOR[\"YELLOW\"] = 33] = \"YELLOW\";\n    COLOR[COLOR[\"BLUE\"] = 34] = \"BLUE\";\n    COLOR[COLOR[\"MAGENTA\"] = 35] = \"MAGENTA\";\n    COLOR[COLOR[\"CYAN\"] = 36] = \"CYAN\";\n    COLOR[COLOR[\"WHITE\"] = 37] = \"WHITE\";\n    COLOR[COLOR[\"BRIGHT_BLACK\"] = 90] = \"BRIGHT_BLACK\";\n    COLOR[COLOR[\"BRIGHT_RED\"] = 91] = \"BRIGHT_RED\";\n    COLOR[COLOR[\"BRIGHT_GREEN\"] = 92] = \"BRIGHT_GREEN\";\n    COLOR[COLOR[\"BRIGHT_YELLOW\"] = 93] = \"BRIGHT_YELLOW\";\n    COLOR[COLOR[\"BRIGHT_BLUE\"] = 94] = \"BRIGHT_BLUE\";\n    COLOR[COLOR[\"BRIGHT_MAGENTA\"] = 95] = \"BRIGHT_MAGENTA\";\n    COLOR[COLOR[\"BRIGHT_CYAN\"] = 96] = \"BRIGHT_CYAN\";\n    COLOR[COLOR[\"BRIGHT_WHITE\"] = 97] = \"BRIGHT_WHITE\";\n})(COLOR || (COLOR = {}));\nconst BACKGROUND_INCREMENT = 10;\nfunction getColor(color) {\n    if (typeof color !== 'string') {\n        return color;\n    }\n    color = color.toUpperCase();\n    return COLOR[color] || COLOR.WHITE;\n}\nexport function addColor(string, color, background) {\n    if (!isBrowser && typeof string === 'string') {\n        if (color) {\n            const colorCode = getColor(color);\n            string = `\\u001b[${colorCode}m${string}\\u001b[39m`;\n        }\n        if (background) {\n            // background colors values are +10\n            const colorCode = getColor(background);\n            string = `\\u001b[${colorCode + BACKGROUND_INCREMENT}m${string}\\u001b[49m`;\n        }\n    }\n    return string;\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/**\n * Binds the \"this\" argument of all functions on a class instance to the instance\n * @param obj - class instance (typically a react component)\n */\nexport function autobind(obj, predefined = ['constructor']) {\n    const proto = Object.getPrototypeOf(obj);\n    const propNames = Object.getOwnPropertyNames(proto);\n    const object = obj;\n    for (const key of propNames) {\n        const value = object[key];\n        if (typeof value === 'function') {\n            if (!predefined.find(name => key === name)) {\n                object[key] = value.bind(obj);\n            }\n        }\n    }\n}\n", "export default function assert(condition, message) {\n    if (!condition) {\n        throw new Error(message || 'Assertion failed');\n    }\n}\n", "// probe.gl, MIT license\nimport { window, process, isBrowser } from '@probe.gl/env';\n/** Get best timer available. */\nexport function getHiResTimestamp() {\n    let timestamp;\n    if (isBrowser() && window.performance) {\n        timestamp = window?.performance?.now?.();\n    }\n    else if ('hrtime' in process) {\n        // @ts-ignore\n        const timeParts = process?.hrtime?.();\n        timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n    }\n    else {\n        timestamp = Date.now();\n    }\n    return timestamp;\n}\n", "// @ts-nocheck\n/* eslint-disable */\nglobalThis.probe = {};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACEA,IAAAA,cAAmC;;;ACDnC,SAAS,WAAW,MAAM;AACtB,MAAI;AACA,UAAM,UAAU,OAAO,IAAI;AAC3B,UAAM,IAAI;AACV,YAAQ,QAAQ,GAAG,CAAC;AACpB,YAAQ,WAAW,CAAC;AACpB,WAAO;AAAA,EACX,SACO,GAAP;AACI,WAAO;AAAA,EACX;AACJ;AAEO,IAAM,eAAN,MAAmB;AAAA,EACtB,YAAY,IAAI,eAAe,OAAO,kBAAkB;AACpD,SAAK,UAAU,WAAW,IAAI;AAC9B,SAAK,KAAK;AACV,SAAK,SAAS;AACd,SAAK,mBAAmB;AAAA,EAC5B;AAAA,EACA,mBAAmB;AACf,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,iBAAiB,eAAe;AAC5B,WAAO,OAAO,KAAK,QAAQ,aAAa;AACxC,QAAI,KAAK,SAAS;AACd,YAAM,aAAa,KAAK,UAAU,KAAK,MAAM;AAC7C,WAAK,QAAQ,QAAQ,KAAK,IAAI,UAAU;AAAA,IAC5C;AAAA,EACJ;AAAA;AAAA,EAEA,qBAAqB;AACjB,QAAI,gBAAgB,CAAC;AACrB,QAAI,KAAK,SAAS;AACd,YAAM,0BAA0B,KAAK,QAAQ,QAAQ,KAAK,EAAE;AAC5D,sBAAgB,0BAA0B,KAAK,MAAM,uBAAuB,IAAI,CAAC;AAAA,IACrF;AACA,WAAO,OAAO,KAAK,QAAQ,aAAa;AACxC,WAAO;AAAA,EACX;AACJ;;;ACrCO,SAAS,WAAW,IAAI;AAC3B,MAAI;AACJ,MAAI,KAAK,IAAI;AACT,gBAAY,GAAG,GAAG,QAAQ,CAAC;AAAA,EAC/B,WACS,KAAK,KAAK;AACf,gBAAY,GAAG,GAAG,QAAQ,CAAC;AAAA,EAC/B,WACS,KAAK,KAAM;AAChB,gBAAY,GAAG,GAAG,QAAQ,CAAC;AAAA,EAC/B,OACK;AACD,gBAAY,IAAI,KAAK,KAAM,QAAQ,CAAC;AAAA,EACxC;AACA,SAAO;AACX;AACO,SAAS,QAAQ,QAAQ,SAAS,GAAG;AACxC,QAAM,YAAY,KAAK,IAAI,SAAS,OAAO,QAAQ,CAAC;AACpD,SAAO,GAAG,IAAI,OAAO,SAAS,IAAI;AACtC;AACO,SAAS,SAAS,QAAQ,SAAS,GAAG;AACzC,QAAM,YAAY,KAAK,IAAI,SAAS,OAAO,QAAQ,CAAC;AACpD,SAAO,GAAG,SAAS,IAAI,OAAO,SAAS;AAC3C;;;AC3BA,iBAA0B;AACnB,IAAI;AAAA,CACV,SAAUC,QAAO;AACd,EAAAA,OAAMA,OAAM,OAAO,IAAI,EAAE,IAAI;AAC7B,EAAAA,OAAMA,OAAM,KAAK,IAAI,EAAE,IAAI;AAC3B,EAAAA,OAAMA,OAAM,OAAO,IAAI,EAAE,IAAI;AAC7B,EAAAA,OAAMA,OAAM,QAAQ,IAAI,EAAE,IAAI;AAC9B,EAAAA,OAAMA,OAAM,MAAM,IAAI,EAAE,IAAI;AAC5B,EAAAA,OAAMA,OAAM,SAAS,IAAI,EAAE,IAAI;AAC/B,EAAAA,OAAMA,OAAM,MAAM,IAAI,EAAE,IAAI;AAC5B,EAAAA,OAAMA,OAAM,OAAO,IAAI,EAAE,IAAI;AAC7B,EAAAA,OAAMA,OAAM,cAAc,IAAI,EAAE,IAAI;AACpC,EAAAA,OAAMA,OAAM,YAAY,IAAI,EAAE,IAAI;AAClC,EAAAA,OAAMA,OAAM,cAAc,IAAI,EAAE,IAAI;AACpC,EAAAA,OAAMA,OAAM,eAAe,IAAI,EAAE,IAAI;AACrC,EAAAA,OAAMA,OAAM,aAAa,IAAI,EAAE,IAAI;AACnC,EAAAA,OAAMA,OAAM,gBAAgB,IAAI,EAAE,IAAI;AACtC,EAAAA,OAAMA,OAAM,aAAa,IAAI,EAAE,IAAI;AACnC,EAAAA,OAAMA,OAAM,cAAc,IAAI,EAAE,IAAI;AACxC,GAAG,UAAU,QAAQ,CAAC,EAAE;AACxB,IAAM,uBAAuB;AAC7B,SAAS,SAAS,OAAO;AACrB,MAAI,OAAO,UAAU,UAAU;AAC3B,WAAO;AAAA,EACX;AACA,UAAQ,MAAM,YAAY;AAC1B,SAAO,MAAM,KAAK,KAAK,MAAM;AACjC;AACO,SAAS,SAAS,QAAQ,OAAO,YAAY;AAChD,MAAI,CAAC,wBAAa,OAAO,WAAW,UAAU;AAC1C,QAAI,OAAO;AACP,YAAM,YAAY,SAAS,KAAK;AAChC,eAAS,QAAU,aAAa;AAAA,IACpC;AACA,QAAI,YAAY;AAEZ,YAAM,YAAY,SAAS,UAAU;AACrC,eAAS,QAAU,YAAY,wBAAwB;AAAA,IAC3D;AAAA,EACJ;AACA,SAAO;AACX;;;AClBO,SAAS,SAAS,KAAK,aAAa,CAAC,aAAa,GAAG;AACxD,QAAM,QAAQ,OAAO,eAAe,GAAG;AACvC,QAAM,YAAY,OAAO,oBAAoB,KAAK;AAClD,QAAM,SAAS;AACf,aAAW,OAAO,WAAW;AACzB,UAAM,QAAQ,OAAO,GAAG;AACxB,QAAI,OAAO,UAAU,YAAY;AAC7B,UAAI,CAAC,WAAW,KAAK,UAAQ,QAAQ,IAAI,GAAG;AACxC,eAAO,GAAG,IAAI,MAAM,KAAK,GAAG;AAAA,MAChC;AAAA,IACJ;AAAA,EACJ;AACJ;;;ACnCe,SAAR,OAAwB,WAAW,SAAS;AAC/C,MAAI,CAAC,WAAW;AACZ,UAAM,IAAI,MAAM,WAAW,kBAAkB;AAAA,EACjD;AACJ;;;ACHA,IAAAC,cAA2C;AAEpC,SAAS,oBAAoB;AAHpC;AAII,MAAI;AACJ,UAAI,uBAAU,KAAK,mBAAO,aAAa;AACnC,iBAAY,2DAAQ,gBAAR,mBAAqB,QAArB;AAAA,EAChB,WACS,YAAY,qBAAS;AAE1B,UAAM,aAAY,sDAAS,WAAT;AAClB,gBAAY,UAAU,CAAC,IAAI,MAAO,UAAU,CAAC,IAAI;AAAA,EACrD,OACK;AACD,gBAAY,KAAK,IAAI;AAAA,EACzB;AACA,SAAO;AACX;;;ANPA,IAAM,kBAAkB;AAAA,EACpB,WAAO,uBAAU,IAAI,QAAQ,SAAS,QAAQ,MAAM,QAAQ;AAAA,EAC5D,KAAK,QAAQ;AAAA,EACb,MAAM,QAAQ;AAAA,EACd,MAAM,QAAQ;AAAA,EACd,OAAO,QAAQ;AACnB;AACA,IAAM,4BAA4B;AAAA,EAC9B,SAAS;AAAA,EACT,OAAO;AACX;AACA,SAAS,OAAO;AAAE;AAClB,IAAM,QAAQ,CAAC;AACf,IAAM,OAAO,EAAE,MAAM,KAAK;AAEnB,IAAM,MAAN,MAAU;AAAA,EACb,YAAY,EAAE,GAAG,IAAI,EAAE,IAAI,GAAG,GAAG;AAC7B,SAAK,UAAU;AACf,SAAK,WAAW,kBAAkB;AAClC,SAAK,WAAW,kBAAkB;AAClC,SAAK,WAAW,CAAC;AAEjB,SAAK,uBAAuB;AAC5B,SAAK,KAAK;AACV,SAAK,WAAW,CAAC;AACjB,SAAK,WAAW,IAAI,aAAa,WAAW,KAAK,QAAQ,yBAAyB;AAClF,SAAK,UAAU,GAAG,KAAK,YAAY;AACnC,aAAS,IAAI;AACb,WAAO,KAAK,IAAI;AAAA,EACpB;AAAA,EACA,IAAI,MAAM,UAAU;AAChB,SAAK,SAAS,QAAQ;AAAA,EAC1B;AAAA,EACA,IAAI,QAAQ;AACR,WAAO,KAAK,SAAS;AAAA,EACzB;AAAA,EACA,YAAY;AACR,WAAO,KAAK,SAAS,OAAO;AAAA,EAChC;AAAA,EACA,WAAW;AACP,WAAO,KAAK,SAAS,OAAO;AAAA,EAChC;AAAA;AAAA,EAEA,WAAW;AACP,WAAO,QAAQ,kBAAkB,IAAI,KAAK,UAAU,YAAY,EAAE,CAAC;AAAA,EACvE;AAAA;AAAA,EAEA,WAAW;AACP,WAAO,QAAQ,kBAAkB,IAAI,KAAK,UAAU,YAAY,EAAE,CAAC;AAAA,EACvE;AAAA;AAAA,EAEA,IAAI,SAAS,aAAa;AACtB,SAAK,QAAQ;AAAA,EACjB;AAAA;AAAA,EAEA,IAAI,WAAW;AACX,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA,EAEA,cAAc;AACV,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA,EAEA,OAAO,UAAU,MAAM;AACnB,SAAK,SAAS,iBAAiB,EAAE,QAAQ,CAAC;AAC1C,WAAO;AAAA,EACX;AAAA,EACA,SAAS,OAAO;AACZ,SAAK,SAAS,iBAAiB,EAAE,MAAM,CAAC;AACxC,WAAO;AAAA,EACX;AAAA;AAAA,EAEA,IAAI,SAAS;AACT,WAAO,KAAK,SAAS,OAAO,OAAO;AAAA,EACvC;AAAA;AAAA,EAEA,IAAI,SAAS,OAAO;AAChB,SAAK,SAAS,iBAAiB,EAAE,CAAC,OAAO,GAAG,MAAM,CAAC;AAAA,EACvD;AAAA;AAAA,EAEA,WAAW;AACP,QAAI,QAAQ,OAAO;AACf,cAAQ,MAAM,KAAK,SAAS,MAAM;AAAA,IACtC,OACK;AACD,cAAQ,IAAI,KAAK,SAAS,MAAM;AAAA,IACpC;AAAA,EACJ;AAAA;AAAA,EAEA,OAAO,WAAW,SAAS;AACvB,QAAI,CAAC,WAAW;AACZ,YAAM,IAAI,MAAM,WAAW,kBAAkB;AAAA,IACjD;AAAA,EACJ;AAAA,EACA,KAAK,SAAS;AACV,WAAO,KAAK,gBAAgB,GAAG,SAAS,gBAAgB,MAAM,WAAW,IAAI;AAAA,EACjF;AAAA,EACA,MAAM,SAAS;AACX,WAAO,KAAK,gBAAgB,GAAG,SAAS,gBAAgB,OAAO,SAAS;AAAA,EAC5E;AAAA;AAAA,EAEA,WAAW,UAAU,UAAU;AAC3B,WAAO,KAAK,KAAK,KAAK,0EACF,oBAAoB;AAAA,EAC5C;AAAA;AAAA,EAEA,QAAQ,UAAU,UAAU;AACxB,WAAO,KAAK,MAAM,KAAK,sCAAsC,oBAAoB;AAAA,EACrF;AAAA,EACA,MAAM,UAAU,SAAS;AACrB,WAAO,KAAK,gBAAgB,UAAU,SAAS,gBAAgB,KAAK,WAAW;AAAA,MAC3E,MAAM;AAAA,MACN,MAAM;AAAA,IACV,CAAC;AAAA,EACL;AAAA,EACA,IAAI,UAAU,SAAS;AACnB,WAAO,KAAK,gBAAgB,UAAU,SAAS,gBAAgB,OAAO,SAAS;AAAA,EACnF;AAAA,EACA,KAAK,UAAU,SAAS;AACpB,WAAO,KAAK,gBAAgB,UAAU,SAAS,QAAQ,MAAM,SAAS;AAAA,EAC1E;AAAA,EACA,KAAK,UAAU,SAAS;AACpB,WAAO,KAAK,gBAAgB,UAAU,SAAS,gBAAgB,SAAS,gBAAgB,MAAM,WAAW,IAAI;AAAA,EACjH;AAAA;AAAA,EAEA,MAAM,UAAU,OAAO,SAAS;AAC5B,QAAI,OAAO;AACP,aAAO,KAAK,gBAAgB,UAAU,OAAO,QAAQ,SAAS,MAAO,WAAW,CAAC,OAAO,GAAI;AAAA,QACxF,KAAK,eAAe,KAAK;AAAA,MAC7B,CAAC;AAAA,IACL;AACA,WAAO;AAAA,EACX;AAAA,EACA,KAAK,UAAU,SAAS;AACpB,WAAO,KAAK,gBAAgB,UAAU,SAAS,QAAQ,OAAO,QAAQ,OAAO,QAAQ,IAAI;AAAA,EAC7F;AAAA,EACA,QAAQ,UAAU,SAAS;AACvB,WAAO,KAAK,gBAAgB,UAAU,SAAS,QAAQ,UAAU,QAAQ,UAAU,QAAQ,IAAI;AAAA,EACnG;AAAA,EACA,UAAU,UAAU,SAAS;AACzB,WAAO,KAAK,gBAAgB,UAAU,SAAS,QAAQ,aAAa,IAAI;AAAA,EAC5E;AAAA,EACA,MAAM,UAAU,SAAS,OAAO,EAAE,WAAW,MAAM,GAAG;AAClD,UAAM,UAAU,mBAAmB,EAAE,UAAU,SAAS,KAAK,CAAC;AAC9D,UAAM,EAAE,UAAU,IAAI;AAEtB,YAAQ,UAAU,YAAY,QAAQ,iBAAiB,QAAQ,UAAU,QAAQ;AACjF,WAAO,KAAK,gBAAgB,OAAO;AAAA,EACvC;AAAA,EACA,eAAe,UAAU,SAAS,OAAO,CAAC,GAAG;AACzC,WAAO,KAAK,MAAM,UAAU,SAAS,OAAO,OAAO,CAAC,GAAG,MAAM,EAAE,WAAW,KAAK,CAAC,CAAC;AAAA,EACrF;AAAA,EACA,SAAS,UAAU;AACf,WAAO,KAAK,gBAAgB,UAAU,IAAI,QAAQ,YAAY,IAAI;AAAA,EACtE;AAAA;AAAA,EAEA,UAAU,UAAU,SAAS,MAAM;AAC/B,SAAK,MAAM,UAAU,OAAO,EAAE;AAC9B,QAAI;AACA,WAAK;AAAA,IACT,UACA;AACI,WAAK,SAAS,QAAQ,EAAE;AAAA,IAC5B;AAAA,EACJ;AAAA,EACA,QAAQ;AACJ,QAAI,QAAQ,OAAO;AACf,cAAQ,MAAM;AAAA,IAClB;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,WAAW,UAAU;AACjB,WAAO,KAAK,UAAU,KAAK,KAAK,SAAS,KAAK,kBAAkB,QAAQ;AAAA,EAC5E;AAAA,EACA,gBAAgB,UAAU,SAAS,QAAQ,MAAM,MAAM;AACnD,QAAI,KAAK,WAAW,QAAQ,GAAG;AAE3B,aAAO,mBAAmB,EAAE,UAAU,SAAS,MAAM,KAAK,CAAC;AAC3D,eAAS,UAAU,KAAK;AACxB,aAAO,MAAM;AACb,WAAK,QAAQ,KAAK,SAAS;AAC3B,WAAK,QAAQ,KAAK,SAAS;AAE3B,WAAK,WAAW,kBAAkB;AAClC,YAAM,MAAM,KAAK,OAAO,KAAK;AAC7B,UAAI,KAAK,QAAQ,KAAK;AAClB,YAAI,CAAC,MAAM,GAAG,GAAG;AACb,gBAAM,GAAG,IAAI,kBAAkB;AAAA,QACnC,OACK;AACD,iBAAO;AAAA,QACX;AAAA,MACJ;AAKA,gBAAU,gBAAgB,KAAK,IAAI,KAAK,SAAS,IAAI;AAErD,aAAO,OAAO,KAAK,SAAS,SAAS,GAAG,KAAK,IAAI;AAAA,IACrD;AACA,WAAO;AAAA,EACX;AACJ;AACA,IAAI,UAAU;AAQd,SAAS,kBAAkB,UAAU;AACjC,MAAI,CAAC,UAAU;AACX,WAAO;AAAA,EACX;AACA,MAAI;AACJ,UAAQ,OAAO,UAAU;AAAA,IACrB,KAAK;AACD,sBAAgB;AAChB;AAAA,IACJ,KAAK;AAID,sBAAgB,SAAS,YAAY,SAAS,YAAY;AAC1D;AAAA,IACJ;AACI,aAAO;AAAA,EACf;AAEA,SAAO,OAAO,SAAS,aAAa,KAAK,iBAAiB,CAAC;AAC3D,SAAO;AACX;AAQO,SAAS,mBAAmB,MAAM;AACrC,QAAM,EAAE,UAAU,QAAQ,IAAI;AAC9B,OAAK,WAAW,kBAAkB,QAAQ;AAM1C,QAAM,OAAO,KAAK,OAAO,MAAM,KAAK,KAAK,IAAI,IAAI,CAAC;AAGlD,SAAO,KAAK,UAAU,KAAK,MAAM,MAAM,SAAS;AAAA,EAAE;AAClD,UAAQ,OAAO,UAAU;AAAA,IACrB,KAAK;AAAA,IACL,KAAK;AACD,UAAI,YAAY,QAAW;AACvB,aAAK,QAAQ,OAAO;AAAA,MACxB;AACA,WAAK,UAAU;AACf;AAAA,IACJ,KAAK;AACD,aAAO,OAAO,MAAM,QAAQ;AAC5B;AAAA,IACJ;AAAA,EACJ;AAEA,MAAI,OAAO,KAAK,YAAY,YAAY;AACpC,SAAK,UAAU,KAAK,QAAQ;AAAA,EAChC;AACA,QAAM,cAAc,OAAO,KAAK;AAEhC,SAAO,gBAAgB,YAAY,gBAAgB,QAAQ;AAE3D,SAAO,OAAO,OAAO,MAAM,EAAE,KAAK,GAAG,KAAK,IAAI;AAClD;AACA,SAAS,gBAAgB,IAAI,SAAS,MAAM;AACxC,MAAI,OAAO,YAAY,UAAU;AAC7B,UAAM,OAAO,KAAK,OAAO,QAAQ,WAAW,KAAK,KAAK,CAAC,IAAI;AAC3D,cAAU,KAAK,OAAO,GAAG,OAAO,SAAS,YAAY,GAAG,OAAO;AAC/D,cAAU,SAAS,SAAS,KAAK,OAAO,KAAK,UAAU;AAAA,EAC3D;AACA,SAAO;AACX;AACA,SAAS,eAAe,OAAO;AAC3B,aAAW,OAAO,OAAO;AACrB,eAAW,SAAS,MAAM,GAAG,GAAG;AAC5B,aAAO,SAAS;AAAA,IACpB;AAAA,EACJ;AACA,SAAO;AACX;;;AO5SA,WAAW,QAAQ,CAAC;;;ARApB,IAAO,eAAQ,IAAI,IAAI,EAAE,IAAI,gBAAgB,CAAC;",
  "names": ["import_env", "COLOR", "import_env"]
}
