export type { TypedArray, BigTypedArray, TypedArrayConstructor, BigTypedArrayConstructor, NumberArray, ArrayType, AnyArray } from "./types/types.js";
export type { Schema, Field, DataType, SchemaMetadata, FieldMetadata } from "./types/schema.js";
export type { Batch } from "./types/batch.js";
export type { Table, RowTable, ArrayRowTable, ObjectRowTable, GeoJSONTable, ColumnarTable, ArrowTable, Tables } from "./types/category-table.js";
export type { TableBatch, ArrayRowTableBatch, ObjectRowTableBatch, GeoJSONTableBatch, ColumnarTableBatch, ArrowTableBatch } from "./types/category-table.js";
export { TableBatchBuilder } from "./lib/table/batches/table-batch-builder.js";
export type { TableBatchAggregator } from "./lib/table/batches/table-batch-aggregator.js";
export { RowTableBatchAggregator } from "./lib/table/batches/row-table-batch-aggregator.js";
export { ColumnarTableBatchAggregator } from "./lib/table/batches/columnar-table-batch-aggregator.js";
export { isTable, getTableLength, getTableNumCols, getTableCell, getTableRowShape, getTableColumnIndex, getTableColumnName, getTableRowAsObject, getTableRowAsArray, makeRowIterator, makeArrayRowIterator, makeObjectRowIterator } from "./lib/table/simple-table/table-accessors.js";
export { ArrowLikeTable } from "./lib/table/arrow-api/arrow-like-table.js";
export { makeTableFromData } from "./lib/table/simple-table/make-table.js";
export { makeTableFromBatches, makeBatchFromTable } from "./lib/table/simple-table/make-table-from-batches.js";
export { convertTable } from "./lib/table/simple-table/convert-table.js";
export { deduceTableSchema } from "./lib/table/simple-table/table-schema.js";
export { convertToObjectRow, convertToArrayRow } from "./lib/table/simple-table/row-utils.js";
export { getDataTypeFromArray } from "./lib/table/simple-table/data-type.js";
export type { MeshTable, MeshArrowTable, Mesh, MeshGeometry, MeshAttribute, MeshAttributes } from "./types/category-mesh.js";
export { getMeshSize, getMeshBoundingBox } from "./lib/mesh/mesh-utils.js";
export { deduceMeshSchema, deduceMeshField, makeMeshAttributeMetadata } from "./lib/mesh/deduce-mesh-schema.js";
export type { TextureLevel, GPUTextureFormat } from "./types/category-texture.js";
export type { ImageDataType, ImageType, ImageTypeEnum } from "./types/category-image.js";
export type { GeoJSON, Feature, FeatureCollection, Geometry, Position, GeoJsonProperties, Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon, GeometryCollection } from "./types/category-gis.js";
export type { GeojsonGeometryInfo } from "./types/category-gis.js";
export type { FlatFeature, FlatIndexedGeometry, FlatGeometry, FlatGeometryType, FlatPoint, FlatLineString, FlatPolygon } from "./types/category-gis.js";
export type { BinaryGeometryType, BinaryGeometry, BinaryPointGeometry, BinaryLineGeometry, BinaryPolygonGeometry, BinaryAttribute } from "./types/category-gis.js";
export type { BinaryFeatureCollection, BinaryFeature, BinaryPointFeature, BinaryLineFeature, BinaryPolygonFeature } from "./types/category-gis.js";
export { Schema as ArrowLikeSchema, Field as ArrowLikeField, DataType as ArrowLikeDataType, Null, Binary, Bool, Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64, Float, Float16, Float32, Float64, Utf8, Date, DateDay, DateMillisecond, Time, TimeMillisecond, TimeSecond, Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond, Interval, IntervalDayTime, IntervalYearMonth, FixedSizeList, Struct } from "./lib/table/arrow-api/index.js";
export { getTypeInfo } from "./lib/table/arrow-api/get-type-info.js";
export { default as AsyncQueue } from "./lib/utils/async-queue.js";
//# sourceMappingURL=index.d.ts.map