import { TileReader } from "./carto-raster-tile.js";
import { parsePbf } from "./tile-loader-utils.js";
import { getWorkerUrl } from "../../utils.js";
const VERSION = typeof "9.0.6" !== 'undefined' ? "9.0.6" : 'latest';
const id = 'cartoRasterTile';
const DEFAULT_OPTIONS = {
    cartoRasterTile: {
        workerUrl: getWorkerUrl(id, VERSION)
    }
};
const CartoRasterTileLoader = {
    name: 'CARTO Raster Tile',
    version: VERSION,
    id,
    module: 'carto',
    extensions: ['pbf'],
    mimeTypes: ['application/vnd.carto-raster-tile'],
    category: 'geometry',
    parse: async (arrayBuffer, options) => parseCartoRasterTile(arrayBuffer, options),
    parseSync: parseCartoRasterTile,
    worker: true,
    options: DEFAULT_OPTIONS
};
function parseCartoRasterTile(arrayBuffer, options) {
    if (!arrayBuffer)
        return null;
    const { bands, blockSize } = parsePbf(arrayBuffer, TileReader);
    const numericProps = {};
    for (let i = 0; i < bands.length; i++) {
        const { name, data } = bands[i];
        numericProps[name] = data;
    }
    return { blockSize, cells: { numericProps, properties: [] } };
}
export default CartoRasterTileLoader;
