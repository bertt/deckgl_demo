import { CompositeLayer } from '@deck.gl/core';
import RasterLayer from "./raster-layer.js";
import QuadbinTileset2D from "./quadbin-tileset-2d.js";
import SpatialIndexTileLayer from "./spatial-index-tile-layer.js";
import { injectAccessToken, TilejsonPropType } from "./utils.js";
import { DEFAULT_TILE_SIZE } from "../constants.js";
export const renderSubLayers = props => {
    const tileIndex = props.tile?.index?.q;
    if (!tileIndex)
        return null;
    return new RasterLayer(props, { tileIndex });
};
const defaultProps = {
    data: TilejsonPropType,
    tileSize: DEFAULT_TILE_SIZE
};
export default class RasterTileLayer extends CompositeLayer {
    static { this.layerName = 'RasterTileLayer'; }
    static { this.defaultProps = defaultProps; }
    getLoadOptions() {
        const loadOptions = super.getLoadOptions() || {};
        const tileJSON = this.props.data;
        injectAccessToken(loadOptions, tileJSON.accessToken);
        return loadOptions;
    }
    renderLayers() {
        const tileJSON = this.props.data;
        if (!tileJSON)
            return null;
        const { tiles: data, minzoom: minZoom, maxzoom: maxZoom } = tileJSON;
        return [
            // @ts-ignore
            new SpatialIndexTileLayer(this.props, {
                id: `raster-tile-layer-${this.props.id}`,
                data,
                // TODO: Tileset2D should be generic over TileIndex type
                TilesetClass: QuadbinTileset2D,
                renderSubLayers,
                minZoom,
                maxZoom,
                loadOptions: this.getLoadOptions()
            })
        ];
    }
}
