import type { Device, Framebuffer, Texture } from '@luma.gl/core';
import { Layer, _LayersPass as LayersPass, LayersPassRenderOptions, Viewport } from '@deck.gl/core';
type MaskPassRenderOptions = LayersPassRenderOptions & {
    /** The channel to render into, 0:red, 1:green, 2:blue, 3:alpha */
    channel: 0 | 1 | 2 | 3;
};
export default class MaskPass extends LayersPass {
    maskMap: Texture;
    fbo: Framebuffer;
    constructor(device: Device, props: {
        id: string;
        mapSize?: number;
    });
    render(options: MaskPassRenderOptions): void;
    protected getLayerParameters(layer: Layer<{}>, layerIndex: number, viewport: Viewport): {
        cullMode?: import("@luma.gl/core").CullMode | undefined;
        frontFace?: import("@luma.gl/core").FrontFace | undefined;
        depthBias?: number | undefined;
        depthBiasSlopeScale?: number | undefined;
        depthBiasClamp?: number | undefined;
        unclippedDepth?: boolean | undefined;
        provokingVertex?: "first" | "last" | undefined;
        polygonMode?: "fill" | "line" | undefined;
        polygonOffsetLine?: boolean | undefined;
        clipDistance0?: boolean | undefined;
        clipDistance1?: boolean | undefined;
        clipDistance2?: boolean | undefined;
        clipDistance3?: boolean | undefined;
        clipDistance4?: boolean | undefined;
        clipDistance5?: boolean | undefined;
        clipDistance6?: boolean | undefined;
        clipDistance7?: boolean | undefined;
        topology?: import("@luma.gl/core").PrimitiveTopology | undefined;
        stripIndexFormat?: import("@luma.gl/core").IndexFormat | undefined;
        depthWriteEnabled?: boolean | undefined;
        depthCompare?: import("@luma.gl/core").CompareFunction | undefined;
        depthFormat?: import("@luma.gl/core").DepthStencilTextureFormat | undefined;
        stencilReadMask?: number | undefined;
        stencilWriteMask?: number | undefined;
        stencilCompare?: import("@luma.gl/core").CompareFunction | undefined;
        stencilPassOperation?: import("@luma.gl/core").StencilOperation | undefined;
        stencilFailOperation?: import("@luma.gl/core").StencilOperation | undefined;
        stencilDepthFailOperation?: import("@luma.gl/core").StencilOperation | undefined;
        blendColorOperation?: import("@luma.gl/core").BlendOperation | undefined;
        blendColorSrcFactor?: import("@luma.gl/core").BlendFactor | undefined;
        blendColorDstFactor?: import("@luma.gl/core").BlendFactor | undefined;
        blendAlphaOperation?: import("@luma.gl/core").BlendOperation | undefined;
        blendAlphaSrcFactor?: import("@luma.gl/core").BlendFactor | undefined;
        blendAlphaDstFactor?: import("@luma.gl/core").BlendFactor | undefined;
        colorMask?: number | undefined;
        sampleCount?: number | undefined;
        sampleMask?: number | undefined;
        sampleAlphaToCoverageEnabled?: boolean | undefined;
        blend: boolean;
        depthTest: boolean;
    };
    shouldDrawLayer(layer: any): any;
    delete(): void;
}
export {};
//# sourceMappingURL=mask-pass.d.ts.map