import { Texture } from '@luma.gl/core';
import { Model } from '@luma.gl/engine';
import { Layer, LayerProps, UpdateParameters, DefaultProps } from '@deck.gl/core';
import type { _ScreenGridLayerProps } from "./screen-grid-layer.js";
import { ShaderModule } from '@luma.gl/shadertools';
/** All properties supported by ScreenGridCellLayer. */
export type ScreenGridCellLayerProps<DataT = unknown> = _ScreenGridCellLayerProps<DataT> & LayerProps;
/** Proprties added by ScreenGridCellLayer. */
export type _ScreenGridCellLayerProps<DataT> = _ScreenGridLayerProps<DataT> & {
    maxTexture: Texture;
};
export default class ScreenGridCellLayer<DataT = any, ExtraPropsT extends {} = {}> extends Layer<ExtraPropsT & Required<_ScreenGridCellLayerProps<DataT>>> {
    static layerName: string;
    static defaultProps: DefaultProps<ScreenGridCellLayerProps<unknown>>;
    state: {
        model?: Model;
    };
    getShaders(): {
        vs: string;
        fs: string;
        modules: ShaderModule[];
    };
    initializeState(): void;
    shouldUpdateState({ changeFlags }: {
        changeFlags: any;
    }): any;
    updateState(params: UpdateParameters<this>): void;
    draw({ uniforms }: {
        uniforms: any;
    }): void;
    calculateInstancePositions(attribute: any, { numInstances }: {
        numInstances: any;
    }): void;
    _getModel(): Model;
    _shouldUseMinMax(): boolean;
    _updateUniforms(oldProps: any, props: any, changeFlags: any): void;
}
//# sourceMappingURL=screen-grid-cell-layer.d.ts.map