import { Layer, LayerProps, DefaultProps } from '@deck.gl/core';
import { Model } from '@luma.gl/engine';
import { Buffer } from '@luma.gl/core';
import type { _GPUGridLayerProps } from "./gpu-grid-layer.js";
type _GPUGridCellLayerProps = _GPUGridLayerProps<any> & {
    cellSize: number;
    offset: number[];
    coverage: number;
    extruded: boolean;
    elevationScale: number;
    elevationRange: [number, number];
    gridSize: number[];
    gridOrigin: number[];
    gridOffset: number[];
    colorMaxMinBuffer: Buffer;
    elevationMaxMinBuffer: Buffer;
};
export default class GPUGridCellLayer extends Layer<_GPUGridCellLayerProps> {
    static layerName: string;
    static defaultProps: DefaultProps<_GPUGridLayerProps<any> & {
        cellSize: number;
        offset: number[];
        coverage: number;
        extruded: boolean;
        elevationScale: number;
        elevationRange: [number, number];
        gridSize: number[];
        gridOrigin: number[];
        gridOffset: number[];
        colorMaxMinBuffer: Buffer;
        elevationMaxMinBuffer: Buffer;
    } & LayerProps>;
    state: {
        model?: Model;
    };
    getShaders(): any;
    initializeState(): void;
    _getModel(): Model;
    draw({ uniforms }: {
        uniforms: any;
    }): void;
    bindUniformBuffers(colorMaxMinBuffer: any, elevationMaxMinBuffer: any): void;
    unbindUniformBuffers(colorMaxMinBuffer: any, elevationMaxMinBuffer: any): void;
    getDomainUniforms(): Record<string, any>;
    private _setupUniformBuffer;
}
export {};
//# sourceMappingURL=gpu-grid-cell-layer.d.ts.map