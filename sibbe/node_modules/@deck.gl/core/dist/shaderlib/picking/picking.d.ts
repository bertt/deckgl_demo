declare const _default: {
    defaultUniforms: {
        useFloatColors: boolean;
        isActive?: boolean | undefined;
        isAttribute?: boolean | undefined;
        isHighlightActive?: boolean | undefined;
        highlightedObjectColor?: import("@math.gl/types").NumericArray | undefined;
        highlightColor?: import("@math.gl/types").NumericArray | undefined;
    };
    inject: {
        'vs:DECKGL_FILTER_GL_POSITION': string;
        'vs:DECKGL_FILTER_COLOR': string;
        'fs:DECKGL_FILTER_COLOR': {
            order: number;
            injection: string;
        };
    };
    props?: Required<import("@luma.gl/shadertools").PickingProps> | undefined;
    uniforms?: import("@luma.gl/shadertools/dist/modules/engine/picking/picking").PickingUniforms | undefined;
    name: string;
    fs?: string | undefined;
    vs?: string | undefined;
    uniformTypes?: Record<keyof import("@luma.gl/shadertools/dist/modules/engine/picking/picking").PickingUniforms, import("@luma.gl/shadertools/dist/types").UniformFormat> | undefined;
    uniformPropTypes?: Record<keyof import("@luma.gl/shadertools/dist/modules/engine/picking/picking").PickingUniforms, import("@luma.gl/shadertools/dist/lib/shader-module/shader-module").UniformInfo> | undefined;
    getUniforms?: ((settings?: any, prevUniforms?: any) => Record<string, import("@luma.gl/shadertools/dist/lib/shader-module/shader-module").UniformValue>) | undefined;
    bindings?: Record<never, {
        location: number;
        type: "sampler" | "uniforms" | "texture";
    }> | undefined;
    defines?: Record<string, string | number> | undefined;
    dependencies?: import("@luma.gl/shadertools").ShaderModule<any, any, {}>[] | undefined;
    deprecations?: import("@luma.gl/shadertools/dist/lib/shader-module/shader-module").ShaderModuleDeprecation[] | undefined;
    normalized?: boolean | undefined;
};
export default _default;
//# sourceMappingURL=picking.d.ts.map