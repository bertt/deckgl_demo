import type { NumberArray } from '@math.gl/types';
import { ShaderModule } from "../../../lib/shader-module/shader-module.js";
/** Lighting helper types */
export type Light = AmbientLight | PointLight | DirectionalLight;
export type AmbientLight = {
    type: 'ambient';
    color?: Readonly<NumberArray>;
    intensity?: number;
};
export type PointLight = {
    type: 'point';
    position: Readonly<NumberArray>;
    color?: Readonly<NumberArray>;
    intensity?: number;
    attenuation?: number;
};
export type DirectionalLight = {
    type: 'directional';
    position: Readonly<NumberArray>;
    direction: Readonly<NumberArray>;
    color?: Readonly<NumberArray>;
    intensity?: number;
};
export type LightingProps = {
    enabled?: boolean;
    lights?: Light[];
    /** @deprecated */
    ambientLight?: AmbientLight;
    /** @deprecated */
    pointLights?: PointLight[];
    /** @deprecated */
    directionalLights?: DirectionalLight[];
};
export type LightingUniforms = {
    enabled: number;
    ambientLightColor: Readonly<NumberArray>;
    numberOfLights: number;
    lightType: number;
    lightColor: Readonly<NumberArray>;
    lightPosition: Readonly<NumberArray>;
    lightDirection: Readonly<NumberArray>;
    lightAttenuation: Readonly<NumberArray>;
};
/** UBO ready lighting module */
export declare const lighting: ShaderModule<LightingProps, LightingUniforms>;
//# sourceMappingURL=lighting-uniforms.d.ts.map