export type PhongLightingProps = {
    ambient?: number;
    diffuse?: number;
    shininess?: number;
    specularColor?: [number, number, number];
};
declare function getUniforms(opts?: {
    material?: PhongLightingProps;
}): Record<string, any>;
export declare const gouraudLighting: {
    name: string;
    dependencies: {
        name: string;
        vs: string;
        fs: string;
        getUniforms: (opts?: import("../lights/lights").LightsOptions) => Record<string, any>;
        defines: {
            MAX_LIGHTS: number;
        };
    }[];
    vs: string;
    defines: {
        LIGHTING_VERTEX: number;
    };
    getUniforms: typeof getUniforms;
};
export declare const phongLighting: {
    name: string;
    dependencies: {
        name: string;
        vs: string;
        fs: string;
        getUniforms: (opts?: import("../lights/lights").LightsOptions) => Record<string, any>;
        defines: {
            MAX_LIGHTS: number;
        };
    }[];
    fs: string;
    defines: {
        LIGHTING_FRAGMENT: number;
    };
    getUniforms: typeof getUniforms;
};
export {};
//# sourceMappingURL=phong-lighting.d.ts.map