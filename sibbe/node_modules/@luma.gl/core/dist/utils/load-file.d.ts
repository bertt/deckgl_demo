/**
 * Set a relative path prefix
 */
export declare function setPathPrefix(prefix: string): void;
/**
 * Reads raw file data. Respects setPathPrefix.
 */
export declare function loadFile(url: string, options?: {
    dataType?: 'text' | 'arrayBuffer';
} & RequestInit): Promise<any>;
/**
 * Loads ImageBitmap asynchronously. Respects setPathPrefix.
 * image.crossOrigin can be set via opts.crossOrigin, default to 'anonymous'
 * @returns a promise tracking the load
 */
export declare function loadImageBitmap(url: string, opts?: {
    crossOrigin?: string;
}): Promise<ImageBitmap>;
/**
 * Loads image asynchronously. Respects setPathPrefix.
 * image.crossOrigin can be set via opts.crossOrigin, default to 'anonymous'
 * @returns a promise tracking the load
 * @deprecated Use `loadImageBitmap()` unless you are supporting old versions of Safari.
 */
export declare function loadImage(url: string, opts?: {
    crossOrigin?: string;
}): Promise<HTMLImageElement>;
/**
 * Load a script (identified by an url). When the url returns, the
 * content of this file is added into a new script element, attached to the DOM (body element)
 * @param scriptUrl defines the url of the script to laod
 * @param scriptId defines the id of the script element
 */
export declare function loadScript(scriptUrl: string, scriptId?: string): Promise<Event>;
//# sourceMappingURL=load-file.d.ts.map