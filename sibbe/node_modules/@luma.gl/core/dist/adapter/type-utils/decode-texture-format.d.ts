import { TextureFormat } from "../types/texture-formats.js";
import { VertexType } from "../types/vertex-formats.js";
export type DecodedTextureFormat = {
    format: 'r' | 'rg' | 'rgb' | 'rgba';
    components: 1 | 2 | 3 | 4;
    dataType?: VertexType;
    srgb: boolean;
    webgl: boolean;
    unsized: boolean;
    byteLength: number;
    integer: boolean;
    signed: boolean;
    normalized: boolean;
};
/**
 * Returns true if a texture format is GPU compressed
 */
export declare function isTextureFormatCompressed(textureFormat: TextureFormat): boolean;
/**
 * Decodes a vertex format, returning type, components, byte length and flags (integer, signed, normalized)
 */
export declare function decodeTextureFormat(format: TextureFormat): DecodedTextureFormat;
//# sourceMappingURL=decode-texture-format.d.ts.map