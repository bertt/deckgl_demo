// luma.gl
// SPDX-License-Identifier: MIT
// Copyright (c) vis.gl contributors
// import {Binding} from '../types/shader-layout';
import { Resource } from "./resource.js";
/**
 * A RenderPass instance is a required parameter to all draw calls.
 *
 * It holds a combination of
 * - render targets (specified via a framebuffer)
 * - clear colors, read/write, discard information for the framebuffer attachments
 * - a couple of mutable parameters ()
 */
export class RenderPass extends Resource {
    /** Default properties for RenderPass */
    static defaultProps = {
        ...Resource.defaultProps,
        framebuffer: null,
        parameters: undefined,
        clearColor: [0, 0, 0, 0],
        clearDepth: 1,
        clearStencil: 0,
        depthReadOnly: false,
        stencilReadOnly: false,
        discard: false,
        occlusionQuerySet: undefined,
        timestampQuerySet: undefined,
        beginTimestampIndex: undefined,
        endTimestampIndex: undefined
    };
    get [Symbol.toStringTag]() {
        return 'RenderPass';
    }
    constructor(device, props) {
        super(device, props, RenderPass.defaultProps);
    }
}
