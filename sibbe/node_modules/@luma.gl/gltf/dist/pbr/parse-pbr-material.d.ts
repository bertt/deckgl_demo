import type { Device, Texture, Binding, Parameters } from '@luma.gl/core';
import { PBREnvironment } from "./pbr-environment.js";
export type ParsePBRMaterialOptions = {
    /** Debug PBR shader */
    pbrDebug?: boolean;
    /** Enable lights */
    lights?: any;
    /** Use tangents */
    useTangents?: boolean;
    /** provide an image based (texture cube) lighting environment */
    imageBasedLightingEnvironment?: PBREnvironment;
};
export type ParsedPBRMaterial = {
    readonly defines: Record<string, number | boolean>;
    readonly bindings: Record<string, Binding>;
    readonly uniforms: Record<string, any>;
    readonly parameters: Parameters;
    readonly glParameters: Record<string, any>;
    /** List of all generated textures, makes it easy to destroy them later */
    readonly generatedTextures: Texture[];
};
/**
 * Parses a GLTF material definition into uniforms and parameters for the PBR shader module
 */
export declare function parsePBRMaterial(device: Device, material: any, attributes: Record<string, any>, options: ParsePBRMaterialOptions): ParsedPBRMaterial;
//# sourceMappingURL=parse-pbr-material.d.ts.map