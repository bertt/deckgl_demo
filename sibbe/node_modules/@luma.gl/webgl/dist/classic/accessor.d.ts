import { Buffer, AccessorObject } from '@luma.gl/core';
import { GL } from '@luma.gl/constants';
declare const DEFAULT_ACCESSOR_VALUES: {
    offset: number;
    stride: number;
    type: GL;
    size: number;
    divisor: number;
    normalized: boolean;
    integer: boolean;
};
export declare class Accessor implements AccessorObject {
    offset?: number;
    stride?: number;
    type?: number;
    size?: number;
    divisor?: number;
    normalized?: boolean;
    integer?: boolean;
    buffer?: Buffer;
    index?: number;
    static getBytesPerElement(accessor: Accessor | AccessorObject): number;
    static getBytesPerVertex(accessor: AccessorObject): number;
    static resolve(...accessors: AccessorObject[]): Accessor;
    constructor(...accessors: AccessorObject[]);
    toString(): string;
    get BYTES_PER_ELEMENT(): number;
    get BYTES_PER_VERTEX(): number;
    _assign(props?: AccessorObject): this;
}
export { DEFAULT_ACCESSOR_VALUES };
//# sourceMappingURL=accessor.d.ts.map