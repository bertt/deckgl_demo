/**
 * Initialize WebGL state caching on a context
 * can be called multiple times to enable/disable
 *
 * @note After calling this function, context state will be cached
 * gl.state.push() and gl.state.pop() will be available for saving,
 * temporarily modifying, and then restoring state.
 */
export declare function trackContextState(gl: WebGL2RenderingContext, options?: {
    enable?: boolean;
    copyState?: boolean;
    log?: any;
}): WebGL2RenderingContext;
/**
 * Saves current WebGL context state onto an internal per-context stack
 */
export declare function pushContextState(gl: WebGL2RenderingContext): void;
/**
 * Restores previously saved WebGL context state
 */
export declare function popContextState(gl: WebGL2RenderingContext): void;
//# sourceMappingURL=track-context-state.d.ts.map