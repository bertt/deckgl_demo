import type { CopyBufferToBufferOptions, CopyBufferToTextureOptions, CopyTextureToBufferOptions, CopyTextureToTextureOptions } from '@luma.gl/core';
import { CommandBuffer } from '@luma.gl/core';
import { GL } from '@luma.gl/constants';
import { WebGLDevice } from "../webgl-device.js";
type CopyBufferToBufferCommand = {
    name: 'copy-buffer-to-buffer';
    options: CopyBufferToBufferOptions;
};
type CopyBufferToTextureCommand = {
    name: 'copy-buffer-to-texture';
    options: CopyBufferToTextureOptions;
};
type CopyTextureToBufferCommand = {
    name: 'copy-texture-to-buffer';
    options: CopyTextureToBufferOptions;
};
type CopyTextureToTextureCommand = {
    name: 'copy-texture-to-texture';
    options: CopyTextureToTextureOptions;
};
type Command = CopyBufferToBufferCommand | CopyBufferToTextureCommand | CopyTextureToBufferCommand | CopyTextureToTextureCommand;
export declare class WEBGLCommandBuffer extends CommandBuffer {
    device: WebGLDevice;
    commands: Command[];
    constructor(device: WebGLDevice);
    submitCommands(commands?: Command[]): void;
}
export declare function glFormatToComponents(format: any): 1 | 2 | 3 | 4;
export declare function glTypeToBytes(type: GL): 1 | 2 | 4;
export {};
//# sourceMappingURL=webgl-command-buffer.d.ts.map